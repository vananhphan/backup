[{"createdAt":"2025-05-03T06:49:20.162Z","updatedAt":"2025-08-19T01:36:09.709Z","id":"vTN9y2dLXqTiDfPT","name":"V1 ocal RAG AI Agent","active":false,"isArchived":false,"nodes":[{"parameters":{},"id":"99b30fd7-b36c-44ba-9daa-408585aaaee9","name":"Postgres Chat Memory","type":"@n8n/n8n-nodes-langchain.memoryPostgresChat","typeVersion":1.1,"position":[1040,560],"credentials":{"postgres":{"id":"iN7fO2CgatVwq73z","name":"Postgres account"}}},{"parameters":{"model":"llama3.1:latest","options":{}},"id":"c7632a7c-2661-492e-bd6f-aab994818998","name":"Ollama Chat Model","type":"@n8n/n8n-nodes-langchain.lmChatOllama","typeVersion":1,"position":[920,560],"credentials":{"ollamaApi":{"id":"SyWYISdp9guZoNay","name":"Ollama account"}}},{"parameters":{"model":"llama3.1:latest","options":{}},"id":"73d773a4-5c72-4af3-a52d-144f0e417823","name":"Ollama Model","type":"@n8n/n8n-nodes-langchain.lmOllama","typeVersion":1,"position":[1960,500],"credentials":{"ollamaApi":{"id":"SyWYISdp9guZoNay","name":"Ollama account"}}},{"parameters":{"name":"documents","topK":3},"id":"3f882fa7-c8ed-4531-b236-a34c16c55838","name":"Vector Store Tool","type":"@n8n/n8n-nodes-langchain.toolVectorStore","typeVersion":1,"position":[1740,340]},{"parameters":{"model":"nomic-embed-text:latest"},"id":"3a8e3fa0-3997-4bce-985c-975fb5ad4013","name":"Embeddings Ollama","type":"@n8n/n8n-nodes-langchain.embeddingsOllama","typeVersion":1,"position":[1840,600],"credentials":{"ollamaApi":{"id":"SyWYISdp9guZoNay","name":"Ollama account"}}},{"parameters":{"pollTimes":{"item":[{"mode":"everyMinute"}]},"triggerOn":"specificFolder","folderToWatch":{"__rl":true,"value":"1914m3M7kRzkd5RJqAfzRY9EBcJrKemZC","mode":"list","cachedResultName":"Meeting Notes","cachedResultUrl":"https://drive.google.com/drive/folders/1914m3M7kRzkd5RJqAfzRY9EBcJrKemZC"},"event":"fileCreated","options":{}},"id":"41fb71dd-236a-48bc-9761-5841d52ca1b3","name":"File Created","type":"n8n-nodes-base.googleDriveTrigger","typeVersion":1,"position":[600,880],"credentials":{"googleDriveOAuth2Api":{"id":"vzcL2pD7uQzqDpdK","name":"Google Drive account"}}},{"parameters":{"pollTimes":{"item":[{"mode":"everyMinute"}]},"triggerOn":"specificFolder","folderToWatch":{"__rl":true,"value":"1914m3M7kRzkd5RJqAfzRY9EBcJrKemZC","mode":"list","cachedResultName":"Meeting Notes","cachedResultUrl":"https://drive.google.com/drive/folders/1914m3M7kRzkd5RJqAfzRY9EBcJrKemZC"},"event":"fileUpdated","options":{}},"id":"7b904686-89ae-4722-9ce5-a9da1b13b1a1","name":"File Updated","type":"n8n-nodes-base.googleDriveTrigger","typeVersion":1,"position":[600,1100],"credentials":{"googleDriveOAuth2Api":{"id":"vzcL2pD7uQzqDpdK","name":"Google Drive account"}}},{"parameters":{"assignments":{"assignments":[{"id":"10646eae-ae46-4327-a4dc-9987c2d76173","name":"file_id","value":"={{ $json.id }}","type":"string"},{"id":"dd0aa081-79e7-4714-8a67-1e898285554c","name":"folder_id","value":"={{ $json.parents[0] }}","type":"string"}]},"options":{}},"id":"87f8bbb0-92c5-4b25-be63-7a9d91fc46f8","name":"Set File ID","type":"n8n-nodes-base.set","typeVersion":3.4,"position":[860,880]},{"parameters":{"operation":"download","fileId":{"__rl":true,"value":"={{ $('Set File ID').item.json.file_id }}","mode":"id"},"options":{"googleFileConversion":{"conversion":{"docsToFormat":"text/plain"}}}},"id":"9f1e08fb-4ef3-4c4d-9473-5a7a1608b8e3","name":"Download File","type":"n8n-nodes-base.googleDrive","typeVersion":3,"position":[1300,880],"executeOnce":true,"credentials":{"googleDriveOAuth2Api":{"id":"vzcL2pD7uQzqDpdK","name":"Google Drive account"}}},{"parameters":{"operation":"text","options":{}},"id":"7efee822-68ad-4fe2-a616-ba19fd127684","name":"Extract Document Text","type":"n8n-nodes-base.extractFromFile","typeVersion":1,"position":[1540,880],"alwaysOutputData":true},{"parameters":{"options":{"metadata":{"metadataValues":[{"name":"file_id","value":"={{ $('Set File ID').item.json.file_id }}"},{"name":"folder_id","value":"={{ $('Set File ID').item.json.folder_id }}"}]}}},"id":"da4c8b29-4944-43c4-9df3-e380366c594a","name":"Default Data Loader","type":"@n8n/n8n-nodes-langchain.documentDefaultDataLoader","typeVersion":1,"position":[1860,1100]},{"parameters":{"chunkSize":100,"options":{}},"id":"d11c39b9-3fa7-4d5d-838f-da0d258c67c5","name":"Recursive Character Text Splitter","type":"@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter","typeVersion":1,"position":[1860,1320]},{"parameters":{"model":"nomic-embed-text:latest"},"id":"8a04559c-dfe8-479f-8998-a2e9bc994a0a","name":"Embeddings Ollama1","type":"@n8n/n8n-nodes-langchain.embeddingsOllama","typeVersion":1,"position":[1700,1100],"credentials":{"ollamaApi":{"id":"SyWYISdp9guZoNay","name":"Ollama account"}}},{"parameters":{"content":"## Local RAG AI Agent with Chat Interface","height":527.3027193303974,"width":969.0343804425795},"id":"a18773ae-1eb3-46b8-91cf-4184c66cf14f","name":"Sticky Note2","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[560,220]},{"parameters":{"content":"## Agent Tools for Local RAG","height":528.85546469693,"width":583.4552380860637,"color":4},"id":"fa010a11-3dda-4bd5-b261-463a3a6b88d9","name":"Sticky Note","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[1540,220]},{"parameters":{"content":"## Workflow to Create Local Knowledgebase from Google Drive Folder","height":705.2695614889159,"width":1568.9362829025763,"color":5},"id":"f29e6cc7-015e-47cb-a4fd-fecd6ffb0d24","name":"Sticky Note1","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[560,760]},{"parameters":{"options":{}},"id":"5da52326-dfbd-4350-919c-843461f58913","name":"When chat message received","type":"@n8n/n8n-nodes-langchain.chatTrigger","typeVersion":1.1,"position":[620,340],"webhookId":"4b3b1838-d6b3-447e-9d79-d0931eddb9f8"},{"parameters":{"qdrantCollection":{"__rl":true,"value":"documents","mode":"list","cachedResultName":"documents"},"options":{}},"id":"355370e0-2174-4e5b-830b-dd0f123b2e40","name":"Qdrant Vector Store","type":"@n8n/n8n-nodes-langchain.vectorStoreQdrant","typeVersion":1,"position":[1560,480],"credentials":{"qdrantApi":{"id":"RzFNlgEENHFNmlmD","name":"QdrantApi account"}}},{"parameters":{"code":{"execute":{"code":"const { QdrantVectorStore } = require(\"@langchain/qdrant\");\nconst { OllamaEmbeddings } = require(\"@langchain/community/embeddings/ollama\");\n\nconst embeddings = new OllamaEmbeddings({\n  model: \"nomic-embed-text\",\n  baseUrl: \"http://ollama:11434\"\n});\n\nconst vectorStore = await QdrantVectorStore.fromExistingCollection(\n  embeddings,\n  {\n    url: \"http://qdrant:6333\",\n    collectionName: \"documents\",\n  }\n);\n\nconst fileIdToDelete = this.getInputData()[0].json.file_id;\n\nconst filter = {\n        must: [\n            {\n                key: \"metadata.file_id\",\n                match: {\n                    value: fileIdToDelete,\n                },\n            },\n        ],\n    }\n\n// const results = await vectorStore.similaritySearch(\"this\", 10, filter);\n// const idsToDelete = results.map((doc) => doc.id);\n\n// NOT IMPLEMENTED!\n// await vectorStore.delete({ ids: idsToDelete });\n\nvectorStore.client.delete(\"documents\", {\n  filter\n});\n\nreturn [ {json: { file_id: fileIdToDelete } } ];\n"}},"inputs":{"input":[{"type":"main","required":true}]},"outputs":{"output":[{"type":"main"}]}},"id":"b93bd001-0c4d-42fe-939a-eb441f354917","name":"Clear Old Vectors","type":"@n8n/n8n-nodes-langchain.code","typeVersion":1,"position":[1080,880],"alwaysOutputData":false},{"parameters":{"mode":"insert","qdrantCollection":{"__rl":true,"value":"documents","mode":"list","cachedResultName":"documents"},"options":{}},"id":"97ec4618-c0ea-445b-9406-5d41784d7836","name":"Qdrant Vector Store Insert","type":"@n8n/n8n-nodes-langchain.vectorStoreQdrant","typeVersion":1,"position":[1760,880],"credentials":{"qdrantApi":{"id":"RzFNlgEENHFNmlmD","name":"QdrantApi account"}}},{"parameters":{"options":{}},"id":"e537544a-37d5-4b00-b5ff-bc71f041f4bb","name":"Respond to Webhook","type":"n8n-nodes-base.respondToWebhook","typeVersion":1.1,"position":[1340,340]},{"parameters":{"httpMethod":"POST","path":"invoke_n8n_agent","responseMode":"responseNode","options":{}},"id":"2b8cd01f-30a8-4aab-b0dd-56d2b658f059","name":"Webhook","type":"n8n-nodes-base.webhook","typeVersion":2,"position":[620,520],"webhookId":"4a839da9-b8a2-45f8-bcaf-c484f9a5912d"},{"parameters":{"options":{}},"id":"c9dfe906-178b-4375-8bda-f9290f35f222","name":"AI Agent","type":"@n8n/n8n-nodes-langchain.agent","typeVersion":1.6,"position":[1000,340]},{"parameters":{"assignments":{"assignments":[{"id":"75ebfdef-c8e2-4c3e-b716-1479d0cc2a73","name":"chatInput","value":"={{ $json?.chatInput || $json.body.chatInput }}","type":"string"},{"id":"59b7a20f-0626-4861-93e2-015d430c266e","name":"sessionId","value":"={{ $json?.sessionId || $json.body.sessionId}}","type":"string"}]},"options":{}},"id":"8f974a15-aa2f-4525-8278-ad58ad296076","name":"Edit Fields","type":"n8n-nodes-base.set","typeVersion":3.4,"position":[820,340]}],"connections":{"Postgres Chat Memory":{"ai_memory":[[{"node":"AI Agent","type":"ai_memory","index":0}]]},"Ollama Chat Model":{"ai_languageModel":[[{"node":"AI Agent","type":"ai_languageModel","index":0}]]},"Ollama Model":{"ai_languageModel":[[{"node":"Vector Store Tool","type":"ai_languageModel","index":0}]]},"Embeddings Ollama":{"ai_embedding":[[{"node":"Qdrant Vector Store","type":"ai_embedding","index":0}]]},"File Created":{"main":[[{"node":"Set File ID","type":"main","index":0}]]},"File Updated":{"main":[[{"node":"Set File ID","type":"main","index":0}]]},"Set File ID":{"main":[[{"node":"Clear Old Vectors","type":"main","index":0}]]},"Download File":{"main":[[{"node":"Extract Document Text","type":"main","index":0}]]},"Extract Document Text":{"main":[[{"node":"Qdrant Vector Store Insert","type":"main","index":0}]]},"Default Data Loader":{"ai_document":[[{"node":"Qdrant Vector Store Insert","type":"ai_document","index":0}]]},"Recursive Character Text Splitter":{"ai_textSplitter":[[{"node":"Default Data Loader","type":"ai_textSplitter","index":0}]]},"Embeddings Ollama1":{"ai_embedding":[[{"node":"Qdrant Vector Store Insert","type":"ai_embedding","index":0}]]},"When chat message received":{"main":[[{"node":"Edit Fields","type":"main","index":0}]]},"Qdrant Vector Store":{"ai_vectorStore":[[{"node":"Vector Store Tool","type":"ai_vectorStore","index":0}]]},"Clear Old Vectors":{"main":[[{"node":"Download File","type":"main","index":0}]]},"Webhook":{"main":[[{"node":"Edit Fields","type":"main","index":0}]]},"AI Agent":{"main":[[{"node":"Respond to Webhook","type":"main","index":0}]]},"Edit Fields":{"main":[[{"node":"AI Agent","type":"main","index":0}]]},"Vector Store Tool":{"ai_tool":[[{"node":"AI Agent","type":"ai_tool","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true,"instanceId":"f722e3e1e81e942a38faa434ad0aee8699371bbff9f883b9d5c59a7c726605af"},"pinData":{},"versionId":"19f9691c-4682-4704-81f2-33fdec9d0be2","triggerCount":0,"tags":[],"shared":[{"createdAt":"2025-05-03T06:49:20.162Z","updatedAt":"2025-05-03T06:49:20.162Z","role":"workflow:owner","workflowId":"vTN9y2dLXqTiDfPT","projectId":"WbfPHUYYKS2tiNNo","project":{"createdAt":"2025-05-03T06:49:18.088Z","updatedAt":"2025-05-03T06:52:24.837Z","id":"WbfPHUYYKS2tiNNo","name":"charlie phan <scottyphan08@gmail.com>","type":"personal","icon":null,"description":null}}]},{"createdAt":"2025-05-03T06:49:20.162Z","updatedAt":"2025-08-19T01:36:09.709Z","id":"hrnPh6dXgIbGVzIk","name":"V2 Supabase RAG AI Agent","active":false,"isArchived":false,"nodes":[{"parameters":{},"id":"3e70b57d-49fb-4cb0-8f9f-29d39adf6a65","name":"Postgres Chat Memory","type":"@n8n/n8n-nodes-langchain.memoryPostgresChat","typeVersion":1.1,"position":[480,340],"credentials":{"postgres":{"id":"UaTmh0frrACTMPxG","name":"Postgres account"}}},{"parameters":{"model":"qwen2.5:7b-instruct-q4_K_M","options":{}},"id":"8d61de27-45d8-4d10-97cc-3c36d224f865","name":"Ollama Chat Model","type":"@n8n/n8n-nodes-langchain.lmChatOllama","typeVersion":1,"position":[360,340],"credentials":{"ollamaApi":{"id":"SyWYISdp9guZoNay","name":"Ollama account"}}},{"parameters":{"model":"qwen2.5:7b-instruct-q4_K_M","options":{}},"id":"cbd5b56f-7afc-4e83-a221-6be4d348374e","name":"Ollama Model","type":"@n8n/n8n-nodes-langchain.lmOllama","typeVersion":1,"position":[1400,280],"credentials":{"ollamaApi":{"id":"SyWYISdp9guZoNay","name":"Ollama account"}}},{"parameters":{"name":"documents","topK":3},"id":"c15bd0a8-286a-4076-8ce8-8c0e54f73e2a","name":"Vector Store Tool","type":"@n8n/n8n-nodes-langchain.toolVectorStore","typeVersion":1,"position":[1180,100]},{"parameters":{"operation":"text","destinationKey":"=data","options":{}},"id":"ab9fb44a-85c6-486b-b5de-0f9d768d91b2","name":"Extract Document Text","type":"n8n-nodes-base.extractFromFile","typeVersion":1,"position":[920,640],"alwaysOutputData":true},{"parameters":{"options":{"metadata":{"metadataValues":[{"name":"file_id","value":"={{ $('Local File Trigger').item.json.path }}"}]}}},"id":"b5abf0a5-f62a-49a6-bf81-bf002ba4bb90","name":"Default Data Loader","type":"@n8n/n8n-nodes-langchain.documentDefaultDataLoader","typeVersion":1,"position":[1300,880]},{"parameters":{"chunkSize":100,"options":{}},"id":"1e2791c1-86e7-4fe1-a76d-732f87e6f41a","name":"Recursive Character Text Splitter","type":"@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter","typeVersion":1,"position":[1300,1100]},{"parameters":{"model":"nomic-embed-text:latest"},"id":"909713ea-5be3-4916-b12e-a8e848c949cb","name":"Embeddings Ollama1","type":"@n8n/n8n-nodes-langchain.embeddingsOllama","typeVersion":1,"position":[1140,880],"credentials":{"ollamaApi":{"id":"SyWYISdp9guZoNay","name":"Ollama account"}}},{"parameters":{"content":"## Local RAG AI Agent with Chat Interface","height":527.3027193303974,"width":969.0343804425795},"id":"de473f2f-b806-45bc-a0e0-2ef0d2aa9b55","name":"Sticky Note2","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[0,0]},{"parameters":{"content":"## Agent Tools for Local RAG","height":528.85546469693,"width":583.4552380860637,"color":4},"id":"b23ef570-f642-4503-87b9-3494ffdbf768","name":"Sticky Note","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[980,0]},{"parameters":{"content":"## Workflow to Create Local Knowledgebase","height":705.2695614889159,"width":1568.9362829025763,"color":5},"id":"836cd765-dae8-460e-951d-66e19d0cce77","name":"Sticky Note1","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[0,540]},{"parameters":{"options":{}},"id":"f8b5039c-4b00-453a-b30e-31a59f5d36ad","name":"When chat message received","type":"@n8n/n8n-nodes-langchain.chatTrigger","typeVersion":1.1,"position":[60,120],"webhookId":"4b3b1838-d6b3-447e-9d79-d0931eddb9f8"},{"parameters":{"options":{}},"id":"2f64907b-42ef-4bd6-83ba-e97584271bc7","name":"Respond to Webhook","type":"n8n-nodes-base.respondToWebhook","typeVersion":1.1,"position":[780,120]},{"parameters":{"httpMethod":"POST","path":"invoke_n8n_agent","responseMode":"responseNode","options":{}},"id":"9a30041f-0c14-41d8-a811-229b890bb1b7","name":"Webhook","type":"n8n-nodes-base.webhook","typeVersion":2,"position":[60,300],"webhookId":"4a839da9-b8a2-45f8-bcaf-c484f9a5912d"},{"parameters":{"options":{}},"id":"8311e22f-bddd-41f8-9d40-fde119126dc9","name":"AI Agent","type":"@n8n/n8n-nodes-langchain.agent","typeVersion":1.6,"position":[440,120]},{"parameters":{"assignments":{"assignments":[{"id":"75ebfdef-c8e2-4c3e-b716-1479d0cc2a73","name":"chatInput","value":"={{ $json?.chatInput || $json.body.chatInput }}","type":"string"},{"id":"59b7a20f-0626-4861-93e2-015d430c266e","name":"sessionId","value":"={{ $json?.sessionId || $json.body.sessionId}}","type":"string"}]},"options":{}},"id":"4988a14f-a2ea-4c4b-8f66-0f1773e11ea0","name":"Edit Fields","type":"n8n-nodes-base.set","typeVersion":3.4,"position":[260,120]},{"parameters":{"tableName":{"__rl":true,"value":"documents","mode":"list","cachedResultName":"documents"},"options":{"queryName":"match_documents"}},"type":"@n8n/n8n-nodes-langchain.vectorStoreSupabase","typeVersion":1,"position":[1000,240],"id":"9841944a-5a85-437d-a9ed-a3e7393d7a8d","name":"Supabase Vector Store","credentials":{"supabaseApi":{"id":"3tjCDwujGZ7BlK7R","name":"Supabase account"}}},{"parameters":{"model":"nomic-embed-text:latest"},"type":"@n8n/n8n-nodes-langchain.embeddingsOllama","typeVersion":1,"position":[1180,380],"id":"24e6e703-33c2-426d-ab59-7c9cad0fded9","name":"Embeddings Ollama2","credentials":{"ollamaApi":{"id":"SyWYISdp9guZoNay","name":"Ollama account"}}},{"parameters":{"mode":"insert","tableName":{"__rl":true,"value":"documents","mode":"list","cachedResultName":"documents"},"options":{"queryName":"match_documents"}},"type":"@n8n/n8n-nodes-langchain.vectorStoreSupabase","typeVersion":1,"position":[1180,640],"id":"d72c6f38-7766-4a10-9897-362539a6bcc0","name":"Supabase Vector Store1","credentials":{"supabaseApi":{"id":"3tjCDwujGZ7BlK7R","name":"Supabase account"}}},{"parameters":{"operation":"delete","tableId":"documents","filterType":"string","filterString":"=metadata->>file_id=like.*{{ $json.path }}*"},"id":"ab0e0395-9f88-438f-bc47-ea3913b869fe","name":"Delete Old Doc Rows","type":"n8n-nodes-base.supabase","typeVersion":1,"position":[460,840],"alwaysOutputData":true,"credentials":{"supabaseApi":{"id":"3tjCDwujGZ7BlK7R","name":"Supabase account"}}},{"parameters":{"triggerOn":"folder","path":"/data/shared","events":["add","change"],"options":{"followSymlinks":true,"usePolling":true}},"type":"n8n-nodes-base.localFileTrigger","typeVersion":1,"position":[60,840],"id":"eba68fe1-738d-451b-a2a7-9ee2942dd727","name":"Local File Trigger"},{"parameters":{"fileSelector":"={{ $('Local File Trigger').item.json.path }}","options":{"dataPropertyName":"=data"}},"type":"n8n-nodes-base.readWriteFile","typeVersion":1,"position":[640,640],"id":"b9459d4d-836c-47c4-9651-ebf3129f8864","name":"Read/Write Files from Disk","executeOnce":true},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"e051736f-949a-4230-bf32-c9ade2674b12","leftValue":"={{ $json.event }}","rightValue":"add","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[280,660],"id":"27123d6a-e27a-49a9-bd73-8a27235928ea","name":"If"}],"connections":{"Postgres Chat Memory":{"ai_memory":[[{"node":"AI Agent","type":"ai_memory","index":0}]]},"Ollama Chat Model":{"ai_languageModel":[[{"node":"AI Agent","type":"ai_languageModel","index":0}]]},"Ollama Model":{"ai_languageModel":[[{"node":"Vector Store Tool","type":"ai_languageModel","index":0}]]},"Extract Document Text":{"main":[[{"node":"Supabase Vector Store1","type":"main","index":0}]]},"Default Data Loader":{"ai_document":[[{"node":"Supabase Vector Store1","type":"ai_document","index":0}]]},"Recursive Character Text Splitter":{"ai_textSplitter":[[{"node":"Default Data Loader","type":"ai_textSplitter","index":0}]]},"Embeddings Ollama1":{"ai_embedding":[[{"node":"Supabase Vector Store1","type":"ai_embedding","index":0}]]},"When chat message received":{"main":[[{"node":"Edit Fields","type":"main","index":0}]]},"Webhook":{"main":[[{"node":"Edit Fields","type":"main","index":0}]]},"AI Agent":{"main":[[{"node":"Respond to Webhook","type":"main","index":0}]]},"Edit Fields":{"main":[[{"node":"AI Agent","type":"main","index":0}]]},"Vector Store Tool":{"ai_tool":[[{"node":"AI Agent","type":"ai_tool","index":0}]]},"Supabase Vector Store":{"ai_vectorStore":[[{"node":"Vector Store Tool","type":"ai_vectorStore","index":0}]]},"Embeddings Ollama2":{"ai_embedding":[[{"node":"Supabase Vector Store","type":"ai_embedding","index":0}]]},"Delete Old Doc Rows":{"main":[[{"node":"Read/Write Files from Disk","type":"main","index":0}]]},"Local File Trigger":{"main":[[{"node":"If","type":"main","index":0}]]},"Read/Write Files from Disk":{"main":[[{"node":"Extract Document Text","type":"main","index":0}]]},"If":{"main":[[{"node":"Read/Write Files from Disk","type":"main","index":0}],[{"node":"Delete Old Doc Rows","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"instanceId":"73cb7a3e883df514bb47e8d1b34526d30e2abb8f56cd99f10d5948a1e11b25aa"},"pinData":{},"versionId":"ea9ff68c-8fc0-40b0-aa5d-48217cda89f3","triggerCount":3,"tags":[],"shared":[{"createdAt":"2025-05-03T06:49:20.162Z","updatedAt":"2025-05-03T06:49:20.162Z","role":"workflow:owner","workflowId":"hrnPh6dXgIbGVzIk","projectId":"WbfPHUYYKS2tiNNo","project":{"createdAt":"2025-05-03T06:49:18.088Z","updatedAt":"2025-05-03T06:52:24.837Z","id":"WbfPHUYYKS2tiNNo","name":"charlie phan <scottyphan08@gmail.com>","type":"personal","icon":null,"description":null}}]},{"createdAt":"2025-05-03T06:49:20.162Z","updatedAt":"2025-08-19T01:36:09.709Z","id":"RssROpqkXOm23GYL","name":"V3 Local Agentic RAG AI Agent","active":false,"isArchived":false,"nodes":[{"parameters":{"jsonMode":"expressionData","jsonData":"={{ $json.data || $json.text || $json.concatenated_data }}","options":{"metadata":{"metadataValues":[{"name":"=file_id","value":"={{ $('Set File ID').first().json.file_id }}"},{"name":"file_title","value":"={{ $('Set File ID').first().json.file_title }}"}]}}},"id":"55f9647b-a2b2-4b19-97d2-ddc8864e440b","name":"Default Data Loader","type":"@n8n/n8n-nodes-langchain.documentDefaultDataLoader","typeVersion":1,"position":[1000,1140]},{"parameters":{"content":"## Agent Tools for RAG","height":528.85546469693,"width":583.4552380860637,"color":4},"id":"ceb2c823-1cce-4813-85e6-c3e638e68091","name":"Sticky Note","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[0,0]},{"parameters":{"content":"## Tool to Add a Google Drive File to Vector DB","height":867,"width":3073,"color":5},"id":"7bbc9f6b-ac99-471f-8bce-72427a4f775e","name":"Sticky Note1","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[-1740,540]},{"parameters":{"operation":"text","options":{}},"id":"f80a6769-d48d-4bd9-a6fc-ca718a2ef4b9","name":"Extract Document Text","type":"n8n-nodes-base.extractFromFile","typeVersion":1,"position":[200,1140],"alwaysOutputData":true},{"parameters":{},"id":"1f5d7294-b47e-41fe-99d7-7f79617c76cd","name":"Postgres Chat Memory","type":"@n8n/n8n-nodes-langchain.memoryPostgresChat","typeVersion":1,"position":[-600,360],"notesInFlow":false,"credentials":{"postgres":{"id":"UaTmh0frrACTMPxG","name":"Postgres account"}}},{"parameters":{"assignments":{"assignments":[{"id":"10646eae-ae46-4327-a4dc-9987c2d76173","name":"file_id","value":"={{ $json.path }}","type":"string"},{"id":"f4536df5-d0b1-4392-bf17-b8137fb31a44","name":"file_type","value":"={{ $json.path.split(/[\\\\/]/).pop().split('.').pop(); }}","type":"string"},{"id":"77d782de-169d-4a46-8a8e-a3831c04d90f","name":"file_title","value":"={{ $json.path.split(/[\\\\/]/).pop().split('.').slice(0, -1).join('.'); }}","type":"string"}]},"options":{}},"id":"5f283705-2576-4756-88fb-120463c3b69b","name":"Set File ID","type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-1320,820]},{"parameters":{"content":"## RAG AI Agent with Chat Interface","height":464.8027193303974,"width":1035.6381264595484},"id":"dc23d387-98e7-421d-b277-60dfbe06c501","name":"Sticky Note2","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[-1040,60]},{"parameters":{"options":{}},"id":"f285aab4-53d1-46a9-9e22-2686f082a374","name":"Respond to Webhook","type":"n8n-nodes-base.respondToWebhook","typeVersion":1.1,"position":[-180,140]},{"parameters":{"assignments":{"assignments":[{"id":"9a9a245e-f1a1-4282-bb02-a81ffe629f0f","name":"chatInput","value":"={{ $json?.chatInput || $json.body.chatInput }}","type":"string"},{"id":"b80831d8-c653-4203-8706-adedfdb98f77","name":"sessionId","value":"={{ $json?.sessionId || $json.body.sessionId}}","type":"string"}]},"options":{}},"id":"129c23bf-c9dc-4b87-820f-3f371f5a420d","name":"Edit Fields","type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-740,140]},{"parameters":{"public":true,"options":{}},"id":"fffe770f-5fe3-4ded-8aed-5d628a5e622f","name":"When chat message received","type":"@n8n/n8n-nodes-langchain.chatTrigger","typeVersion":1.1,"position":[-1000,140],"webhookId":"e104e40e-6134-4825-a6f0-8a646d882662"},{"parameters":{"httpMethod":"POST","path":"bf4dd093-bb02-472c-9454-7ab9af97bd1d","responseMode":"responseNode","options":{}},"id":"5eb1415f-4d37-4e63-8914-f370ae12d275","name":"Webhook","type":"n8n-nodes-base.webhook","typeVersion":2,"position":[-1000,340],"webhookId":"bf4dd093-bb02-472c-9454-7ab9af97bd1d"},{"parameters":{"operation":"pdf","options":{}},"id":"d050553b-da5c-4250-8f25-0300f49099cc","name":"Extract PDF Text","type":"n8n-nodes-base.extractFromFile","typeVersion":1,"position":[200,580]},{"parameters":{"aggregate":"aggregateAllItemData","options":{}},"id":"8f5f530e-186a-4788-86d1-cb41d0400286","name":"Aggregate","type":"n8n-nodes-base.aggregate","typeVersion":1,"position":[240,760]},{"parameters":{"fieldsToSummarize":{"values":[{"aggregation":"concatenate","field":"data"}]},"options":{}},"id":"50cb0e47-5857-4a27-a1a4-12357ba50420","name":"Summarize","type":"n8n-nodes-base.summarize","typeVersion":1,"position":[440,840]},{"parameters":{"promptType":"define","text":"={{ $json.chatInput }}","options":{"systemMessage":"You are a personal assistant who helps answer questions from a corpus of documents. The documents are either text based (Txt, docs, extracted PDFs, etc.) or tabular data (CSVs or Excel documents).\n\nYou are given tools to perform RAG in the 'documents' table, look up the documents available in your knowledge base in the 'document_metadata' table, extract all the text from a given document, and query the tabular files with SQL in the 'document_rows' table.\n\nAlways start by performing RAG unless the users asks you to check a document or the question requires a SQL query for tabular data (fetching a sum, finding a max, something a RAG lookup would be unreliable for). If RAG doesn't help, then look at the documents that are available to you, find a few that you think would contain the answer, and then analyze those.\n\nAlways tell the user if you didn't find the answer. Don't make something up just to please them."}},"id":"8d6daa23-a646-4592-a449-02cf50e2c953","name":"RAG AI Agent","type":"@n8n/n8n-nodes-langchain.agent","typeVersion":1.6,"position":[-520,140]},{"parameters":{"rules":{"values":[{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":1},"conditions":[{"leftValue":"={{ $('Set File ID').item.json.file_type }}","rightValue":"pdf","operator":{"type":"string","operation":"equals"}}],"combinator":"and"}},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":1},"conditions":[{"id":"2ae7faa7-a936-4621-a680-60c512163034","leftValue":"={{ $('Set File ID').item.json.file_type }}","rightValue":"xlsx","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"}},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":1},"conditions":[{"id":"fc193b06-363b-4699-a97d-e5a850138b0e","leftValue":"={{ $('Set File ID').item.json.file_type }}","rightValue":"=csv","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"}},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":1},"conditions":[{"id":"b69f5605-0179-4b02-9a32-e34bb085f82d","leftValue":"={{ $('Set File ID').item.json.file_type }}","rightValue":"txt","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"}}]},"options":{"fallbackOutput":3}},"id":"a381554d-5628-44dc-8e8c-fae60d6860b0","name":"Switch","type":"n8n-nodes-base.switch","typeVersion":3,"position":[-460,800]},{"parameters":{"operation":"xlsx","options":{}},"id":"713308e3-f35f-4657-b6fb-06882b178102","name":"Extract from Excel","type":"n8n-nodes-base.extractFromFile","typeVersion":1,"position":[20,760]},{"parameters":{"assignments":{"assignments":[{"id":"f422e2e0-381c-46ea-8f38-3f58c501d8b9","name":"schema","value":"={{ $('Extract from Excel').isExecuted ? $('Extract from Excel').first().json.keys().toJsonString() : $('Extract from CSV').first().json.keys().toJsonString() }}","type":"string"},{"id":"bb07c71e-5b60-4795-864c-cc3845b6bc46","name":"data","value":"={{ $json.concatenated_data }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[880,700],"id":"068f0564-7f2b-40df-8a82-ddfff6ac3192","name":"Set Schema"},{"parameters":{"options":{}},"type":"n8n-nodes-base.extractFromFile","typeVersion":1,"position":[20,940],"id":"9cc88ee0-a065-4bee-a6d8-135c433da188","name":"Extract from CSV"},{"parameters":{"content":"## Run Each Node Once to Set Up Database Tables","height":300,"width":680,"color":3},"type":"n8n-nodes-base.stickyNote","position":[-1740,220],"typeVersion":1,"id":"452a79b7-d5fe-4d5d-b32f-9df1d714423d","name":"Sticky Note3"},{"parameters":{"operation":"executeQuery","query":"CREATE TABLE document_metadata (\n    id TEXT PRIMARY KEY,\n    title TEXT,\n    created_at TIMESTAMP DEFAULT NOW(),\n    schema TEXT\n);","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.5,"position":[-1620,320],"id":"8d137c72-d6b5-4f91-a114-8d9f1777411b","name":"Create Document Metadata Table","credentials":{"postgres":{"id":"UaTmh0frrACTMPxG","name":"Postgres account"}}},{"parameters":{"operation":"executeQuery","query":"CREATE TABLE document_rows (\n    id SERIAL PRIMARY KEY,\n    dataset_id TEXT REFERENCES document_metadata(id),\n    row_data JSONB  -- Store the actual row data\n);","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.5,"position":[-1320,320],"id":"ddd63d7b-b7e7-4af5-9b2d-72898ca9b63a","name":"Create Document Rows Table (for Tabular Data)","credentials":{"postgres":{"id":"UaTmh0frrACTMPxG","name":"Postgres account"}}},{"parameters":{"descriptionType":"manual","toolDescription":"Use this tool to fetch all available documents, including the table schema if the file is a CSV or Excel file.","operation":"select","schema":{"__rl":true,"mode":"list","value":"public"},"table":{"__rl":true,"value":"document_metadata","mode":"list","cachedResultName":"document_metadata"},"returnAll":true,"options":{}},"type":"n8n-nodes-base.postgresTool","typeVersion":2.5,"position":[-460,360],"id":"e5223ab2-36fe-4294-9acc-14acefa716e4","name":"List Documents","credentials":{"postgres":{"id":"UaTmh0frrACTMPxG","name":"Postgres account"}}},{"parameters":{"descriptionType":"manual","toolDescription":"Given a file ID, fetches the text from the document.","operation":"executeQuery","query":"SELECT \n    string_agg(text, ' ') as document_text\nFROM documents_pg\n  WHERE metadata->>'file_id' = $1\nGROUP BY metadata->>'file_id';","options":{"queryReplacement":"={{ $fromAI('file_id') }}"}},"type":"n8n-nodes-base.postgresTool","typeVersion":2.5,"position":[-320,360],"id":"7d4eb63b-3b03-4d89-ad19-9a57f1a7cd84","name":"Get File Contents","credentials":{"postgres":{"id":"UaTmh0frrACTMPxG","name":"Postgres account"}}},{"parameters":{"descriptionType":"manual","toolDescription":"Run a SQL query - use this to query from the document_rows table once you know the file ID (which is the file path) you are querying. dataset_id is the file_id (file path) and you are always using the row_data for filtering, which is a jsonb field that has all the keys from the file schema given in the document_metadata table.\n\nExample query:\n\nSELECT AVG((row_data->>'revenue')::numeric)\nFROM document_rows\nWHERE dataset_id = '/data/shared/document.csv';\n\nExample query 2:\n\nSELECT \n    row_data->>'category' as category,\n    SUM((row_data->>'sales')::numeric) as total_sales\nFROM dataset_rows\nWHERE dataset_id = '/data/shared/document2.csv'\nGROUP BY row_data->>'category';","operation":"executeQuery","query":"{{ $fromAI('sql_query') }}","options":{}},"type":"n8n-nodes-base.postgresTool","typeVersion":2.5,"position":[-160,360],"id":"07c5525b-ae30-4c1f-b3e2-a6db965c25cf","name":"Query Document Rows","credentials":{"postgres":{"id":"UaTmh0frrACTMPxG","name":"Postgres account"}}},{"parameters":{"options":{"reset":false}},"type":"n8n-nodes-base.splitInBatches","typeVersion":3,"position":[-1500,660],"id":"933204fb-4c04-4217-8045-85358e9c9b0f","name":"Loop Over Items"},{"parameters":{"operation":"upsert","schema":{"__rl":true,"mode":"list","value":"public"},"table":{"__rl":true,"value":"document_metadata","mode":"list","cachedResultName":"document_metadata"},"columns":{"mappingMode":"defineBelow","value":{"id":"={{ $('Set File ID').item.json.file_id }}","title":"={{ $('Set File ID').item.json.file_title }}"},"matchingColumns":["id"],"schema":[{"id":"id","displayName":"id","required":true,"defaultMatch":true,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"title","displayName":"title","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":false},{"id":"url","displayName":"url","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":false,"removed":true},{"id":"created_at","displayName":"created_at","required":false,"defaultMatch":false,"display":true,"type":"dateTime","canBeUsedToMatch":false},{"id":"schema","displayName":"schema","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":false,"removed":true}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.5,"position":[-820,680],"id":"e2be1ad8-b54c-456f-814a-6d19808b0343","name":"Insert Document Metadata","executeOnce":true,"credentials":{"postgres":{"id":"UaTmh0frrACTMPxG","name":"Postgres account"}}},{"parameters":{"schema":{"__rl":true,"mode":"list","value":"public"},"table":{"__rl":true,"value":"document_rows","mode":"list","cachedResultName":"document_rows"},"columns":{"mappingMode":"defineBelow","value":{"dataset_id":"={{ $('Set File ID').item.json.file_id }}","row_data":"={{ $json.toJsonString().replaceAll(/'/g, \"''\") }}"},"matchingColumns":["id"],"schema":[{"id":"id","displayName":"id","required":false,"defaultMatch":true,"display":true,"type":"number","canBeUsedToMatch":true,"removed":true},{"id":"dataset_id","displayName":"dataset_id","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"row_data","displayName":"row_data","required":false,"defaultMatch":false,"display":true,"type":"object","canBeUsedToMatch":true,"removed":false}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.5,"position":[240,940],"id":"be314c88-6e7d-4229-9d06-cba976ce0ca1","name":"Insert Table Rows","credentials":{"postgres":{"id":"UaTmh0frrACTMPxG","name":"Postgres account"}}},{"parameters":{"operation":"upsert","schema":{"__rl":true,"mode":"list","value":"public"},"table":{"__rl":true,"value":"document_metadata","mode":"list","cachedResultName":"document_metadata"},"columns":{"mappingMode":"defineBelow","value":{"id":"={{ $('Set File ID').item.json.file_id }}","schema":"={{ $json.schema }}"},"matchingColumns":["id"],"schema":[{"id":"id","displayName":"id","required":true,"defaultMatch":true,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"title","displayName":"title","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":false,"removed":true},{"id":"url","displayName":"url","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":false,"removed":true},{"id":"created_at","displayName":"created_at","required":false,"defaultMatch":false,"display":true,"type":"dateTime","canBeUsedToMatch":false},{"id":"schema","displayName":"schema","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":false,"removed":false}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.5,"position":[1100,700],"id":"72eb8ed6-de71-4e46-bdaf-fb8ca48225ab","name":"Update Schema for Document Metadata","credentials":{"postgres":{"id":"UaTmh0frrACTMPxG","name":"Postgres account"}}},{"parameters":{"content":"## 🚀 n8n Local AI Agentic RAG Template\n\n**Author:** [Cole Medin](https://www.youtube.com/@ColeMedin)\n\n## What is this?\nThis template provides an entirely local implementation of an **Agentic RAG (Retrieval Augmented Generation)** system in n8n that can be extended easily for your specific use case and knowledge base. Unlike standard RAG which only performs simple lookups, this agent can reason about your knowledge base, self-improve retrieval, and dynamically switch between different tools based on the specific question. This workflow can be used with the [local AI package](https://github.com/coleam00/local-ai-packaged) for your LLMs (Ollama) and database (Supabase or \"vanilla\" Postgres).\n\n## Why Agentic RAG?\nStandard RAG has significant limitations:\n- Poor analysis of numerical/tabular data\n- Missing context due to document chunking\n- Inability to connect information across documents\n- No dynamic tool selection based on question type\n\n## What makes this template powerful:\n- **Intelligent tool selection**: Switches between RAG lookups, SQL queries, or full document retrieval based on the question\n- **Complete document context**: Accesses entire documents when needed instead of just chunks\n- **Accurate numerical analysis**: Uses SQL for precise calculations on spreadsheet/tabular data\n- **Cross-document insights**: Connects information across your entire knowledge base\n- **Multi-file processing**: Handles multiple documents in a single workflow loop\n- **Efficient storage**: Uses JSONB in Supabase to store tabular data without creating new tables for each CSV\n\n## Getting Started\n1. Run the table creation nodes first to set up your database tables in Supabase\n2. Upload your documents to the folder on your computer that is mounted to /data/shared in the n8n container. This folder by default is the \"shared\" folder in the local AI package.\n3. The agent will process them automatically (chunking text, storing tabular data in Supabase)\n4. Start asking questions that leverage the agent's multiple reasoning approaches\n\n## Customization\nThis template provides a solid foundation that you can extend by:\n- Tuning the system prompt for your specific use case\n- Adding document metadata like summaries\n- Implementing more advanced RAG techniques\n- Optimizing for larger knowledge bases\n\n---\n\nThe non-local (\"cloud\") version of this Agentic RAG agent can be [found here](https://github.com/coleam00/ottomator-agents/tree/main/n8n-agentic-rag-agent).","height":1320,"width":540,"color":6},"type":"n8n-nodes-base.stickyNote","position":[-2300,-140],"typeVersion":1,"id":"69bc6648-74a5-4f24-8539-63fdc890bf8e","name":"Sticky Note9"},{"parameters":{"triggerOn":"folder","path":"/data/shared","events":["add","change"],"options":{"followSymlinks":true,"usePolling":true}},"type":"n8n-nodes-base.localFileTrigger","typeVersion":1,"position":[-1700,660],"id":"c0039541-9e7b-487b-bf8a-4917fcc5b9dd","name":"Local File Trigger"},{"parameters":{"fileSelector":"={{ $('Set File ID').item.json.file_id }}","options":{"dataPropertyName":"=data"}},"type":"n8n-nodes-base.readWriteFile","typeVersion":1,"position":[-660,820],"id":"3f1993e1-77f9-4983-8eff-446f8a39d1a7","name":"Read/Write Files from Disk"},{"parameters":{"model":"nomic-embed-text:latest"},"type":"@n8n/n8n-nodes-langchain.embeddingsOllama","typeVersion":1,"position":[760,1140],"id":"a6c810f0-c564-4faa-8c69-fc22ef4f1156","name":"Embeddings Ollama","credentials":{"ollamaApi":{"id":"SyWYISdp9guZoNay","name":"Ollama account"}}},{"parameters":{"model":"nomic-embed-text:latest"},"type":"@n8n/n8n-nodes-langchain.embeddingsOllama","typeVersion":1,"position":[260,340],"id":"31c8cf4e-525f-47e4-a499-73a0cbf4f6e5","name":"Embeddings Ollama1","credentials":{"ollamaApi":{"id":"SyWYISdp9guZoNay","name":"Ollama account"}}},{"parameters":{"chunkSize":400,"options":{}},"type":"@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter","typeVersion":1,"position":[900,1260],"id":"590bdbf7-cbe7-405c-b2b8-cd73155ec4e4","name":"Recursive Character Text Splitter"},{"parameters":{"model":{"__rl":true,"value":"qwen2.5:14b-8k","mode":"list","cachedResultName":"qwen2.5:14b-8k"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[-740,360],"id":"a3b834b1-5fc7-4c84-86f3-eacde77ed46b","name":"Ollama (Change Base URL)","credentials":{"openAiApi":{"id":"yjDbkWOXNXC959ei","name":"OpenAi account"}}},{"parameters":{"content":"## NOTE\n\nThe Ollama chat model node doesn't work with the RAG nodes - known issue with n8n.\n\nSo for now, we are using the OpenAI chat model but changing the base URL to Ollama when creating the credentials (i.e. http://ollama:11434/v1). The API key can be set to whatever, it isn't used for local LLMs.","height":200,"width":540,"color":6},"type":"n8n-nodes-base.stickyNote","position":[-2300,1200],"typeVersion":1,"id":"c1a15e44-f282-4a2a-abe4-f4c17709fe38","name":"Sticky Note4"},{"parameters":{"operation":"executeQuery","query":"DO $$\nBEGIN\n    IF EXISTS (SELECT 1 FROM information_schema.tables WHERE table_name = 'documents_pg') THEN\n        EXECUTE 'DELETE FROM documents_pg WHERE metadata->>''file_id'' LIKE ''%' || $1 || '%''';\n    END IF;\nEND\n$$;","options":{"queryReplacement":"={{ $json.file_id }}"}},"type":"n8n-nodes-base.postgres","typeVersion":2.5,"position":[-1140,680],"id":"b7976820-6a79-4908-861c-f9062c2f7d17","name":"Delete Old Doc Records","credentials":{"postgres":{"id":"UaTmh0frrACTMPxG","name":"Postgres account"}}},{"parameters":{"operation":"executeQuery","query":"DELETE FROM document_rows\nWHERE dataset_id LIKE '%' || $1 || '%';","options":{"queryReplacement":"={{ $('Set File ID').item.json.file_id }}"}},"type":"n8n-nodes-base.postgres","typeVersion":2.5,"position":[-980,820],"id":"979948a0-7449-46d8-8c38-0a8ff8689162","name":"Delete Old Data Records","credentials":{"postgres":{"id":"UaTmh0frrACTMPxG","name":"Postgres account"}}},{"parameters":{"mode":"insert","tableName":"documents_pg","options":{}},"type":"@n8n/n8n-nodes-langchain.vectorStorePGVector","typeVersion":1,"position":[880,920],"id":"a6f5e003-5f65-488b-9ce5-0844413239f5","name":"Postgres PGVector Store","credentials":{"postgres":{"id":"UaTmh0frrACTMPxG","name":"Postgres account"}}},{"parameters":{"mode":"retrieve-as-tool","toolName":"documents","toolDescription":"Use RAG to look up information in the knowledgebase.","tableName":"documents_pg","options":{}},"type":"@n8n/n8n-nodes-langchain.vectorStorePGVector","typeVersion":1,"position":[160,140],"id":"d62a3b1e-5e74-4e46-b626-fd17fb74468c","name":"Postgres PGVector Store1","credentials":{"postgres":{"id":"UaTmh0frrACTMPxG","name":"Postgres account"}}}],"connections":{"Extract Document Text":{"main":[[{"node":"Postgres PGVector Store","type":"main","index":0}]]},"Default Data Loader":{"ai_document":[[{"node":"Postgres PGVector Store","type":"ai_document","index":0}]]},"Postgres Chat Memory":{"ai_memory":[[{"node":"RAG AI Agent","type":"ai_memory","index":0}]]},"Set File ID":{"main":[[{"node":"Delete Old Doc Records","type":"main","index":0}]]},"Edit Fields":{"main":[[{"node":"RAG AI Agent","type":"main","index":0}]]},"When chat message received":{"main":[[{"node":"Edit Fields","type":"main","index":0}]]},"Webhook":{"main":[[{"node":"Edit Fields","type":"main","index":0}]]},"Extract PDF Text":{"main":[[{"node":"Postgres PGVector Store","type":"main","index":0}]]},"Aggregate":{"main":[[{"node":"Summarize","type":"main","index":0}]]},"Summarize":{"main":[[{"node":"Set Schema","type":"main","index":0},{"node":"Postgres PGVector Store","type":"main","index":0}]]},"RAG AI Agent":{"main":[[{"node":"Respond to Webhook","type":"main","index":0}]]},"Switch":{"main":[[{"node":"Extract PDF Text","type":"main","index":0}],[{"node":"Extract from Excel","type":"main","index":0}],[{"node":"Extract from CSV","type":"main","index":0}],[{"node":"Extract Document Text","type":"main","index":0}]]},"Extract from Excel":{"main":[[{"node":"Aggregate","type":"main","index":0},{"node":"Insert Table Rows","type":"main","index":0}]]},"Set Schema":{"main":[[{"node":"Update Schema for Document Metadata","type":"main","index":0}]]},"Extract from CSV":{"main":[[{"node":"Aggregate","type":"main","index":0},{"node":"Insert Table Rows","type":"main","index":0}]]},"Create Document Metadata Table":{"main":[[]]},"List Documents":{"ai_tool":[[{"node":"RAG AI Agent","type":"ai_tool","index":0}]]},"Get File Contents":{"ai_tool":[[{"node":"RAG AI Agent","type":"ai_tool","index":0}]]},"Query Document Rows":{"ai_tool":[[{"node":"RAG AI Agent","type":"ai_tool","index":0}]]},"Loop Over Items":{"main":[[],[{"node":"Set File ID","type":"main","index":0}]]},"Insert Document Metadata":{"main":[[{"node":"Read/Write Files from Disk","type":"main","index":0}]]},"Local File Trigger":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Read/Write Files from Disk":{"main":[[{"node":"Switch","type":"main","index":0}]]},"Embeddings Ollama":{"ai_embedding":[[{"node":"Postgres PGVector Store","type":"ai_embedding","index":0}]]},"Embeddings Ollama1":{"ai_embedding":[[{"node":"Postgres PGVector Store1","type":"ai_embedding","index":0}]]},"Recursive Character Text Splitter":{"ai_textSplitter":[[{"node":"Default Data Loader","type":"ai_textSplitter","index":0}]]},"Ollama (Change Base URL)":{"ai_languageModel":[[{"node":"RAG AI Agent","type":"ai_languageModel","index":0}]]},"Delete Old Doc Records":{"main":[[{"node":"Delete Old Data Records","type":"main","index":0}]]},"Delete Old Data Records":{"main":[[{"node":"Insert Document Metadata","type":"main","index":0}]]},"Postgres PGVector Store":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Postgres PGVector Store1":{"ai_tool":[[{"node":"RAG AI Agent","type":"ai_tool","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true,"instanceId":"73cb7a3e883df514bb47e8d1b34526d30e2abb8f56cd99f10d5948a1e11b25aa"},"pinData":{},"versionId":"cd039b65-853f-4cde-892c-0ad66da0ef02","triggerCount":0,"tags":[],"shared":[{"createdAt":"2025-05-03T06:49:20.162Z","updatedAt":"2025-05-03T06:49:20.162Z","role":"workflow:owner","workflowId":"RssROpqkXOm23GYL","projectId":"WbfPHUYYKS2tiNNo","project":{"createdAt":"2025-05-03T06:49:18.088Z","updatedAt":"2025-05-03T06:52:24.837Z","id":"WbfPHUYYKS2tiNNo","name":"charlie phan <scottyphan08@gmail.com>","type":"personal","icon":null,"description":null}}]},{"createdAt":"2025-05-03T07:40:57.306Z","updatedAt":"2025-05-12T04:37:43.542Z","id":"8lsKvwp9467nXFtE","name":"1. MCP house","active":true,"isArchived":false,"nodes":[{"parameters":{"path":"mpc.weather"},"type":"@n8n/n8n-nodes-langchain.mcpTrigger","typeVersion":1,"position":[0,0],"id":"6cd790ce-b62e-4c6f-9749-2aa0101f12cb","name":"MCP Server Trigger","webhookId":"4f443f0a-dd3b-4b78-9404-a4ea5f013191"},{"parameters":{"toolDescription":"Get the buy,transfer, sell of Exrate CurrencyCode","url":"https://portal.vietcombank.com.vn/Usercontrols/TVPortal.TyGia/pXML.aspx?b=10"},"type":"@n8n/n8n-nodes-langchain.toolHttpRequest","typeVersion":1.1,"position":[100,220],"id":"1f2adb03-ad66-40fd-887d-41722b6536f4","name":"Get currency rate change"},{"parameters":{"toolDescription":"Get the weather in the city","url":"http://api.weatherstack.com/current?access_key=00d103ad9577253bb82b177ce5eec8cf&query={city}"},"type":"@n8n/n8n-nodes-langchain.toolHttpRequest","typeVersion":1.1,"position":[320,220],"id":"0bfe3068-e868-45b4-8130-137a9e05198b","name":"Get weather"},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.chatTrigger","typeVersion":1.1,"position":[-340,240],"id":"1ff8fbf9-08a3-4b34-b2c6-0f9b6c6d7667","name":"When chat message received","webhookId":"b3c3242f-c31b-47e5-950d-bdcbf3df7741"},{"parameters":{"sseEndpoint":"https://kit-sacred-condor.ngrok-free.app/mcp/mpc.weather/sse"},"type":"@n8n/n8n-nodes-langchain.mcpClientTool","typeVersion":1,"position":[-100,220],"id":"6fa6750a-b326-43a3-9261-343fda37b4d2","name":"MCP Client"}],"connections":{"Get currency rate change":{"ai_tool":[[{"node":"MCP Server Trigger","type":"ai_tool","index":0}]]},"Get weather":{"ai_tool":[[{"node":"MCP Server Trigger","type":"ai_tool","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":null,"pinData":{},"versionId":"220b8e3f-c16b-411a-ae6a-fd248cb32656","triggerCount":2,"tags":[{"createdAt":"2025-05-03T07:40:54.609Z","updatedAt":"2025-05-03T07:40:54.609Z","id":"sIFaxsMmQL1uJfU2","name":"MCP"}],"shared":[{"createdAt":"2025-05-03T07:40:57.306Z","updatedAt":"2025-05-03T07:40:57.306Z","role":"workflow:owner","workflowId":"8lsKvwp9467nXFtE","projectId":"WbfPHUYYKS2tiNNo","project":{"createdAt":"2025-05-03T06:49:18.088Z","updatedAt":"2025-05-03T06:52:24.837Z","id":"WbfPHUYYKS2tiNNo","name":"charlie phan <scottyphan08@gmail.com>","type":"personal","icon":null,"description":null}}]},{"createdAt":"2025-05-03T07:41:40.009Z","updatedAt":"2025-05-14T08:31:02.087Z","id":"4hp5RkUgJgGHcT3e","name":"MCP client asking 2","active":true,"isArchived":false,"nodes":[{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.chatTrigger","typeVersion":1.1,"position":[-20,320],"id":"cd3838f3-72e1-4972-b7e2-449326ff3dbb","name":"When chat message received","webhookId":"a409225d-e83b-48b6-abc4-1acdadd14d57"},{"parameters":{"promptType":"define","text":"={{ $json.message.text }}","options":{}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":1.9,"position":[400,120],"id":"d93694ad-32b8-4028-9a57-8c6783c09690","name":"AI Agent"},{"parameters":{"modelName":"models/learnlm-2.0-flash-experimental","options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatGoogleGemini","typeVersion":1,"position":[240,320],"id":"1639d8f1-c646-45b9-8fdf-a6af973761d3","name":"Google Gemini Chat Model","credentials":{"googlePalmApi":{"id":"VxuR4Ot4TSiJTVFk","name":"Google Gemini(PaLM) Api account"}}},{"parameters":{"updates":["message"],"additionalFields":{}},"type":"n8n-nodes-base.telegramTrigger","typeVersion":1.2,"position":[-40,140],"id":"2f3f6690-0a8a-44ee-b63c-61cd17bf33bc","name":"Telegram Trigger","webhookId":"4aeac31a-4a85-4329-a16a-cd47c61af7a9","credentials":{"telegramApi":{"id":"I69z6e5cYkew5SXv","name":"Telegram n8nclp Chat"}}},{"parameters":{"chatId":"730141489","text":"= {{ $json.output }}","additionalFields":{"appendAttribution":false}},"type":"n8n-nodes-base.telegram","typeVersion":1.2,"position":[760,120],"id":"9763ffd5-6b3d-448c-9dd0-9c45b1b91988","name":"Telegram","webhookId":"70697d0a-bd02-4090-b296-e4bee72dee67","credentials":{"telegramApi":{"id":"I69z6e5cYkew5SXv","name":"Telegram n8nclp Chat"}}},{"parameters":{"sessionIdType":"customKey","sessionKey":"={{ $('Telegram Trigger').item.json.message.text }}"},"type":"@n8n/n8n-nodes-langchain.memoryPostgresChat","typeVersion":1.3,"position":[500,340],"id":"d6bbb0b4-ca0a-487c-a042-8dcf127194fe","name":"Postgres Chat Memory","credentials":{"postgres":{"id":"lPXyj3Ypf5YeZpp3","name":"Postgres account Local"}}},{"parameters":{"sseEndpoint":"https://pnjp-ai-demo.pnj.com.vn/mcp/mpc.weather/sse"},"type":"@n8n/n8n-nodes-langchain.mcpClientTool","typeVersion":1,"position":[700,360],"id":"66b6f150-bcbe-4188-ac10-7fcf6f72a98f","name":"MCP Client"},{"parameters":{"path":"mcp_chat_weather","options":{}},"type":"n8n-nodes-base.webhook","typeVersion":2,"position":[120,-60],"id":"c26b759d-1eb0-43c0-9672-e7b1ca3a4121","name":"Webhook","webhookId":"c430484b-ecb7-4618-9266-6f485b40b6e0"}],"connections":{"Google Gemini Chat Model":{"ai_languageModel":[[{"node":"AI Agent","type":"ai_languageModel","index":0}]]},"Telegram Trigger":{"main":[[{"node":"AI Agent","type":"main","index":0}]]},"AI Agent":{"main":[[{"node":"Telegram","type":"main","index":0}]]},"Postgres Chat Memory":{"ai_memory":[[{"node":"AI Agent","type":"ai_memory","index":0}]]},"When chat message received":{"main":[[]]},"MCP Client":{"ai_tool":[[{"node":"AI Agent","type":"ai_tool","index":0}]]},"Webhook":{"main":[[]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"84ea5438-eb82-417c-a79f-bfe0d1348d1e","triggerCount":3,"tags":[],"shared":[{"createdAt":"2025-05-03T07:41:40.009Z","updatedAt":"2025-05-03T07:41:40.009Z","role":"workflow:owner","workflowId":"4hp5RkUgJgGHcT3e","projectId":"WbfPHUYYKS2tiNNo","project":{"createdAt":"2025-05-03T06:49:18.088Z","updatedAt":"2025-05-03T06:52:24.837Z","id":"WbfPHUYYKS2tiNNo","name":"charlie phan <scottyphan08@gmail.com>","type":"personal","icon":null,"description":null}}]},{"createdAt":"2025-05-03T13:08:01.090Z","updatedAt":"2025-05-23T03:46:58.547Z","id":"l50zZQ6Xwmtzz3lr","name":"CSKH 01","active":false,"isArchived":false,"nodes":[{"parameters":{"promptType":"define","text":"={{ $json.chatInput }}","hasOutputParser":true,"options":{"systemMessage":"You are Customer service Assitant you can use google sheet data to perform similarity search. Lets priority this tool first.\n\nFor complex request that required SQL query then you have the access to a google sheet information in Vietnam, you have the ability to run SQL queries to retrieve specific item data when needed. \n"}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":1.7,"position":[240,-160],"id":"a61ec7ed-535b-43da-8096-737275e2db71","name":"AI Agent"},{"parameters":{"mode":"retrieve-as-tool","toolName":"qq_travel","toolDescription":"=# Similarity Search Travel Information Tool\nThis tool performs semantic similarity searches on a vector database containing tour information. It finds tours that match user queries by semantic meaning rather than exact keyword matching.\nDatabase Content\nThe database contains tours with information about:\nTour names and destinations\nPricing (original and current)\nRatings and review counts\nIncluded amenities and departure dates\nAvailable seats and suitable audiences\nSeasonal availability and discounts\nWhen to Use\nUse this tool to find relevant tour information based on natural language queries such as:\n\"Find beach tours with good ratings\"\n\"Show affordable family vacations\"\n\"Are there tours to Vietnam in July?\"\n\"What weekend getaways are discounted?\"\nThe tool returns the 5 most semantically similar tour options from the database, helping users find travel options that best match their interests and requirements.","tableName":{"__rl":true,"value":"documents","mode":"list","cachedResultName":"documents"},"topK":5,"options":{}},"type":"@n8n/n8n-nodes-langchain.vectorStoreSupabase","typeVersion":1,"position":[620,220],"id":"73ffc34b-3c97-4fca-aa72-536151c35428","name":"Supabase Vector Store","credentials":{"supabaseApi":{"id":"0ndJqD87syAe4VB5","name":"Supabase account Cloud"}}},{"parameters":{"chatId":"730141489","text":"={{ $json.output }}","additionalFields":{"appendAttribution":false}},"type":"n8n-nodes-base.telegram","typeVersion":1.2,"position":[680,0],"id":"c7cc9780-2aac-41a5-8585-f40e29ebd38c","name":"Telegram","webhookId":"913fee11-7b0b-42d4-ba88-6e345fa2f678","credentials":{"telegramApi":{"id":"kXmnaXA6rCyKZ2To","name":"Telegram account AIVSAI"}}},{"parameters":{"model":"nomic-embed-text:latest"},"type":"@n8n/n8n-nodes-langchain.embeddingsOllama","typeVersion":1,"position":[600,420],"id":"bb4cc147-48be-4575-8110-80169fc34e6d","name":"Embeddings Ollama1","credentials":{"ollamaApi":{"id":"SyWYISdp9guZoNay","name":"Ollama account"}}},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.chatTrigger","typeVersion":1.1,"position":[-220,60],"id":"868204f7-5fd1-4a2c-a962-eb90c114df91","name":"When chat message received","webhookId":"3d87c10c-9572-40c8-9ebc-932fb28b5daf"},{"parameters":{"modelName":"models/gemini-2.0-flash-001","options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatGoogleGemini","typeVersion":1,"position":[100,60],"id":"fe659abb-18a3-4f84-92df-02dd1a73627a","name":"Google Gemini Chat Model","credentials":{"googlePalmApi":{"id":"VxuR4Ot4TSiJTVFk","name":"Google Gemini(PaLM) Api account"}}},{"parameters":{"updates":["message"],"additionalFields":{}},"type":"n8n-nodes-base.telegramTrigger","typeVersion":1.2,"position":[-200,-120],"id":"f8b7da03-4fcb-43e4-bdb5-90d6db4bc24e","name":"Telegram Trigger","webhookId":"b3d55f54-c09b-48e5-a4bf-e021613dfd55","credentials":{"telegramApi":{"id":"kXmnaXA6rCyKZ2To","name":"Telegram account AIVSAI"}}},{"parameters":{"documentId":{"__rl":true,"value":"1IhZOuG-itT-OJcG9J7uGqKmOu5Xp9ENh08VILwCaPSc","mode":"list","cachedResultName":"electronics_products_list02","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1IhZOuG-itT-OJcG9J7uGqKmOu5Xp9ENh08VILwCaPSc/edit?usp=drivesdk"},"sheetName":{"__rl":true,"value":1867148592,"mode":"list","cachedResultName":"Product List","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1IhZOuG-itT-OJcG9J7uGqKmOu5Xp9ENh08VILwCaPSc/edit#gid=1867148592"},"options":{}},"type":"n8n-nodes-base.googleSheetsTool","typeVersion":4.5,"position":[480,40],"id":"71e99a24-2f28-4226-9368-36e6b118b261","name":"Google Sheets","credentials":{"googleSheetsOAuth2Api":{"id":"bdeAZgAgEmqpgnr1","name":"Google Sheets account"}}},{"parameters":{"sessionIdType":"customKey","sessionKey":"= {{ $json.message.text }}"},"type":"@n8n/n8n-nodes-langchain.memoryPostgresChat","typeVersion":1.3,"position":[320,40],"id":"ede9625a-31f1-4552-9a42-1adb9d0c32be","name":"Postgres Chat Memory","credentials":{"postgres":{"id":"lPXyj3Ypf5YeZpp3","name":"Postgres account Local"}}},{"parameters":{"descriptionType":"manual","toolDescription":"=# Postgres Database Query Tool\nThis tool executes SQL queries on a PostgreSQL database containing tour information. Use it to find, filter, and analyze tour data.\nTable Schema Summary\nThe \"tours\" table includes details like tour ID, name, destination, pricing, ratings, available seats, descriptions, and seasonal information.\nUsage\nFormulate SQL queries that target the \"tours\" table to retrieve specific information.\nExample Queries\n-- Find tours by destination\nSELECT tour_name, current_price, rating FROM tours \nWHERE destination ILIKE '%paris%' ORDER BY rating DESC;\n\n-- Find affordable high-rated tours\nSELECT tour_name, destination, current_price \nFROM tours WHERE rating > 4 AND current_price < 1000;\n\n-- Find tours with available seats in a specific season\nSELECT tour_name, destination, available_seats \nFROM tours WHERE available_seats > 0 AND season = 'Summer';\n\nUse proper SQL syntax for best results. The tool will execute your query and return matching tour data.","operation":"executeQuery","query":"{{ $fromAI('sql_query') }}","options":{}},"type":"n8n-nodes-base.postgresTool","typeVersion":2.5,"position":[360,300],"id":"27232b65-582c-4f51-94f9-679d964d0576","name":"Postgres","credentials":{"postgres":{"id":"ULsaTVpa7uWp9X9s","name":"Postgres account Cloud"}}}],"connections":{"Supabase Vector Store":{"ai_tool":[[]]},"AI Agent":{"main":[[]]},"Embeddings Ollama1":{"ai_embedding":[[{"node":"Supabase Vector Store","type":"ai_embedding","index":0}]]},"Google Gemini Chat Model":{"ai_languageModel":[[{"node":"AI Agent","type":"ai_languageModel","index":0}]]},"Telegram Trigger":{"main":[[]]},"Google Sheets":{"ai_tool":[[{"node":"AI Agent","type":"ai_tool","index":0}]]},"Postgres Chat Memory":{"ai_memory":[[{"node":"AI Agent","type":"ai_memory","index":0}]]},"When chat message received":{"main":[[{"node":"AI Agent","type":"main","index":0}]]},"Postgres":{"ai_tool":[[]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"7c948250-6364-48fc-8537-330697b9a45a","triggerCount":0,"tags":[{"createdAt":"2025-05-03T10:39:23.915Z","updatedAt":"2025-05-03T10:39:23.915Z","id":"vgchH25FqnHCRv99","name":"automate"}],"shared":[{"createdAt":"2025-05-03T13:08:01.090Z","updatedAt":"2025-05-03T13:08:01.090Z","role":"workflow:owner","workflowId":"l50zZQ6Xwmtzz3lr","projectId":"WbfPHUYYKS2tiNNo","project":{"createdAt":"2025-05-03T06:49:18.088Z","updatedAt":"2025-05-03T06:52:24.837Z","id":"WbfPHUYYKS2tiNNo","name":"charlie phan <scottyphan08@gmail.com>","type":"personal","icon":null,"description":null}}]},{"createdAt":"2025-05-03T13:11:57.933Z","updatedAt":"2025-05-19T07:32:18.995Z","id":"Jo3QEXwrtv0WYJ1U","name":"n8n ask tour","active":false,"isArchived":false,"nodes":[{"parameters":{"promptType":"define","text":"= {{ $json.message.text }}","hasOutputParser":true,"options":{"systemMessage":"You are QQ Travel Assitant you can use Supabase Vector Store Tool to perform similarity search. Lets priority this tool first.\n\nFor complex request that required SQL query then you have the access to a Postgres database containing hotel information in Vietnam, you have the ability to run SQL queries to retrieve specific hotel data when needed. The Postgres tool allows you to search, filter, and analyze hotel information to provide accurate and relevant responses to user queries.\n\nAlways explain your reasoning when deciding to use the Postgres tool, formulate your SQL query clearly, and interpret the results for the user in natural language."}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":1.7,"position":[240,0],"id":"a61ec7ed-535b-43da-8096-737275e2db71","name":"AI Agent"},{"parameters":{"mode":"retrieve-as-tool","toolName":"qq_travel","toolDescription":"=# Similarity Search Travel Information Tool\nThis tool performs semantic similarity searches on a vector database containing tour information. It finds tours that match user queries by semantic meaning rather than exact keyword matching.\nDatabase Content\nThe database contains tours with information about:\nTour names and destinations\nPricing (original and current)\nRatings and review counts\nIncluded amenities and departure dates\nAvailable seats and suitable audiences\nSeasonal availability and discounts\nWhen to Use\nUse this tool to find relevant tour information based on natural language queries such as:\n\"Find beach tours with good ratings\"\n\"Show affordable family vacations\"\n\"Are there tours to Vietnam in July?\"\n\"What weekend getaways are discounted?\"\nThe tool returns the 5 most semantically similar tour options from the database, helping users find travel options that best match their interests and requirements.","tableName":{"__rl":true,"value":"documents","mode":"list","cachedResultName":"documents"},"topK":5,"options":{}},"type":"@n8n/n8n-nodes-langchain.vectorStoreSupabase","typeVersion":1,"position":[520,320],"id":"73ffc34b-3c97-4fca-aa72-536151c35428","name":"Supabase Vector Store","credentials":{"supabaseApi":{"id":"0ndJqD87syAe4VB5","name":"Supabase account Cloud"}}},{"parameters":{"descriptionType":"manual","toolDescription":"=# Postgres Database Query Tool\nThis tool executes SQL queries on a PostgreSQL database containing tour information. Use it to find, filter, and analyze tour data.\nTable Schema Summary\nThe \"tours\" table includes details like tour ID, name, destination, pricing, ratings, available seats, descriptions, and seasonal information.\nUsage\nFormulate SQL queries that target the \"tours\" table to retrieve specific information.\nExample Queries\n-- Find tours by destination\nSELECT tour_name, current_price, rating FROM tours \nWHERE destination ILIKE '%paris%' ORDER BY rating DESC;\n\n-- Find affordable high-rated tours\nSELECT tour_name, destination, current_price \nFROM tours WHERE rating > 4 AND current_price < 1000;\n\n-- Find tours with available seats in a specific season\nSELECT tour_name, destination, available_seats \nFROM tours WHERE available_seats > 0 AND season = 'Summer';\n\nUse proper SQL syntax for best results. The tool will execute your query and return matching tour data.","operation":"executeQuery","query":"{{ $fromAI('sql_query') }}","options":{}},"type":"n8n-nodes-base.postgresTool","typeVersion":2.5,"position":[340,260],"id":"27232b65-582c-4f51-94f9-679d964d0576","name":"Postgres","credentials":{"postgres":{"id":"ULsaTVpa7uWp9X9s","name":"Postgres account Cloud"}}},{"parameters":{"chatId":"730141489","text":"={{ $json.output }}","additionalFields":{"appendAttribution":false}},"type":"n8n-nodes-base.telegram","typeVersion":1.2,"position":[600,0],"id":"c7cc9780-2aac-41a5-8585-f40e29ebd38c","name":"Telegram","webhookId":"913fee11-7b0b-42d4-ba88-6e345fa2f678","credentials":{"telegramApi":{"id":"kXmnaXA6rCyKZ2To","name":"Telegram account AIVSAI"}}},{"parameters":{"model":"nomic-embed-text:latest"},"type":"@n8n/n8n-nodes-langchain.embeddingsOllama","typeVersion":1,"position":[380,440],"id":"bb4cc147-48be-4575-8110-80169fc34e6d","name":"Embeddings Ollama1","credentials":{"ollamaApi":{"id":"SyWYISdp9guZoNay","name":"Ollama account"}}},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.chatTrigger","typeVersion":1.1,"position":[-240,260],"id":"868204f7-5fd1-4a2c-a962-eb90c114df91","name":"When chat message received","webhookId":"3d87c10c-9572-40c8-9ebc-932fb28b5daf"},{"parameters":{"modelName":"models/gemini-2.0-flash-001","options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatGoogleGemini","typeVersion":1,"position":[60,240],"id":"fe659abb-18a3-4f84-92df-02dd1a73627a","name":"Google Gemini Chat Model","credentials":{"googlePalmApi":{"id":"VxuR4Ot4TSiJTVFk","name":"Google Gemini(PaLM) Api account"}}},{"parameters":{"updates":["message"],"additionalFields":{}},"type":"n8n-nodes-base.telegramTrigger","typeVersion":1.2,"position":[-60,-60],"id":"f8b7da03-4fcb-43e4-bdb5-90d6db4bc24e","name":"Telegram Trigger","webhookId":"b3d55f54-c09b-48e5-a4bf-e021613dfd55","credentials":{"telegramApi":{"id":"kXmnaXA6rCyKZ2To","name":"Telegram account AIVSAI"}}},{"parameters":{"sessionIdType":"customKey","sessionKey":"={{ $('Telegram Trigger').item.json.message.text }}"},"type":"@n8n/n8n-nodes-langchain.memoryPostgresChat","typeVersion":1.3,"position":[220,340],"id":"b98669a8-927b-43df-8aec-143e7c8d0198","name":"Postgres Chat Memory","credentials":{"postgres":{"id":"ULsaTVpa7uWp9X9s","name":"Postgres account Cloud"}}}],"connections":{"Supabase Vector Store":{"ai_tool":[[{"node":"AI Agent","type":"ai_tool","index":0}]]},"Postgres":{"ai_tool":[[{"node":"AI Agent","type":"ai_tool","index":0}]]},"AI Agent":{"main":[[{"node":"Telegram","type":"main","index":0}]]},"Embeddings Ollama1":{"ai_embedding":[[{"node":"Supabase Vector Store","type":"ai_embedding","index":0}]]},"Google Gemini Chat Model":{"ai_languageModel":[[{"node":"AI Agent","type":"ai_languageModel","index":0}]]},"Telegram Trigger":{"main":[[{"node":"AI Agent","type":"main","index":0}]]},"Postgres Chat Memory":{"ai_memory":[[{"node":"AI Agent","type":"ai_memory","index":0}]]},"When chat message received":{"main":[[{"node":"AI Agent","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"bbb30184-aa82-4b66-b7bd-83ec9776618a","triggerCount":2,"tags":[{"createdAt":"2025-05-03T10:39:23.915Z","updatedAt":"2025-05-03T10:39:23.915Z","id":"vgchH25FqnHCRv99","name":"automate"}],"shared":[{"createdAt":"2025-05-03T13:11:57.933Z","updatedAt":"2025-05-03T13:11:57.933Z","role":"workflow:owner","workflowId":"Jo3QEXwrtv0WYJ1U","projectId":"WbfPHUYYKS2tiNNo","project":{"createdAt":"2025-05-03T06:49:18.088Z","updatedAt":"2025-05-03T06:52:24.837Z","id":"WbfPHUYYKS2tiNNo","name":"charlie phan <scottyphan08@gmail.com>","type":"personal","icon":null,"description":null}}]},{"createdAt":"2025-05-03T13:47:23.872Z","updatedAt":"2025-05-05T02:12:11.251Z","id":"qHKi3hZ5d3uynUOS","name":"RAG Gemini","active":false,"isArchived":false,"nodes":[{"parameters":{"jsonMode":"expressionData","jsonData":"={{ $json.data || $json.text || $json.concatenated_data }}","options":{"metadata":{"metadataValues":[{"name":"=file_id","value":"={{ $('Set File ID').first().json.file_id }}"},{"name":"file_title","value":"={{ $('Set File ID').first().json.file_title }}"}]}}},"id":"ab916d3c-aab6-4dda-8252-d143526c8136","name":"Default Data Loader","type":"@n8n/n8n-nodes-langchain.documentDefaultDataLoader","typeVersion":1,"position":[1000,1140]},{"parameters":{"content":"## Agent Tools for RAG","height":528.85546469693,"width":583.4552380860637,"color":4},"id":"bdbbafd6-55c0-4ccf-8e52-3c70feeb0465","name":"Sticky Note","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[0,0]},{"parameters":{"content":"## Tool to Add a Google Drive File to Vector DB","height":867,"width":3073,"color":5},"id":"99dda8a5-7d4b-4171-b7d3-e755c352cb16","name":"Sticky Note1","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[-1740,540]},{"parameters":{"operation":"download","fileId":{"__rl":true,"value":"={{ $('Set File ID').item.json.file_id }}","mode":"id"},"options":{"googleFileConversion":{"conversion":{"docsToFormat":"text/plain"}}}},"id":"80895c15-2f9a-4acb-8915-c7cfd1f2a7e1","name":"Download File","type":"n8n-nodes-base.googleDrive","typeVersion":3,"position":[-660,820],"executeOnce":true,"credentials":{"googleDriveOAuth2Api":{"id":"nbS6fTRsKFONPFqs","name":"Google Drive account"}}},{"parameters":{"pollTimes":{"item":[{"mode":"everyMinute"}]},"triggerOn":"specificFolder","folderToWatch":{"__rl":true,"value":"1VEUNkoIdGAc9EZPv-_ENtdm67NxNZy8u","mode":"list","cachedResultName":"n8ndocuments","cachedResultUrl":"https://drive.google.com/drive/folders/1VEUNkoIdGAc9EZPv-_ENtdm67NxNZy8u"},"event":"fileCreated","options":{}},"id":"86ecfb2d-2403-4ae7-8318-cef79e434a3c","name":"File Created","type":"n8n-nodes-base.googleDriveTrigger","typeVersion":1,"position":[-1680,660],"credentials":{"googleDriveOAuth2Api":{"id":"nbS6fTRsKFONPFqs","name":"Google Drive account"}}},{"parameters":{"pollTimes":{"item":[{"mode":"everyMinute"}]},"triggerOn":"specificFolder","folderToWatch":{"__rl":true,"value":"1VEUNkoIdGAc9EZPv-_ENtdm67NxNZy8u","mode":"list","cachedResultName":"n8ndocuments","cachedResultUrl":"https://drive.google.com/drive/folders/1VEUNkoIdGAc9EZPv-_ENtdm67NxNZy8u"},"event":"fileUpdated","options":{}},"id":"606ce41c-5ec3-4cd2-ac18-257c750a6770","name":"File Updated","type":"n8n-nodes-base.googleDriveTrigger","typeVersion":1,"position":[-1680,820],"credentials":{"googleDriveOAuth2Api":{"id":"nbS6fTRsKFONPFqs","name":"Google Drive account"}}},{"parameters":{"operation":"text","options":{}},"id":"67207dcb-1285-4b85-a688-9b1fc33fde97","name":"Extract Document Text","type":"n8n-nodes-base.extractFromFile","typeVersion":1,"position":[200,1140],"alwaysOutputData":true},{"parameters":{},"id":"9dbad9ac-5efa-40d8-8c10-e642aa001414","name":"Postgres Chat Memory","type":"@n8n/n8n-nodes-langchain.memoryPostgresChat","typeVersion":1,"position":[-600,380],"notesInFlow":false,"credentials":{"postgres":{"id":"ULsaTVpa7uWp9X9s","name":"Postgres account Cloud"}}},{"parameters":{"operation":"delete","tableId":"documents","filterType":"string","filterString":"=metadata->>file_id=like.*{{ $json.file_id }}*"},"id":"9ec85d45-ebb5-453f-9135-cd51bb187ff7","name":"Delete Old Doc Rows","type":"n8n-nodes-base.supabase","typeVersion":1,"position":[-1140,660],"alwaysOutputData":true,"credentials":{"supabaseApi":{"id":"0ndJqD87syAe4VB5","name":"Supabase account Cloud"}}},{"parameters":{"assignments":{"assignments":[{"id":"10646eae-ae46-4327-a4dc-9987c2d76173","name":"file_id","value":"={{ $json.id }}","type":"string"},{"id":"f4536df5-d0b1-4392-bf17-b8137fb31a44","name":"file_type","value":"={{ $json.mimeType }}","type":"string"},{"id":"77d782de-169d-4a46-8a8e-a3831c04d90f","name":"file_title","value":"={{ $json.name }}","type":"string"},{"id":"9bde4d7f-e4f3-4ebd-9338-dce1350f9eab","name":"file_url","value":"={{ $json.webViewLink }}","type":"string"}]},"options":{}},"id":"d6adb628-e9ae-40e6-ab8f-2c4a5888e8cc","name":"Set File ID","type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-1320,820]},{"parameters":{"content":"## RAG AI Agent with Chat Interface","height":464.8027193303974,"width":1035.6381264595484},"id":"8bf7bdba-ad82-4d87-8ca6-64dce6716620","name":"Sticky Note2","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[-1040,60]},{"parameters":{"options":{}},"id":"727e6ded-73b2-44da-b6b9-2ab51acbbdcc","name":"Respond to Webhook","type":"n8n-nodes-base.respondToWebhook","typeVersion":1.1,"position":[-160,100]},{"parameters":{"assignments":{"assignments":[{"id":"9a9a245e-f1a1-4282-bb02-a81ffe629f0f","name":"chatInput","value":"={{ $json?.chatInput || $json.body.chatInput }}","type":"string"},{"id":"b80831d8-c653-4203-8706-adedfdb98f77","name":"sessionId","value":"={{ $json?.sessionId || $json.body.sessionId}}","type":"string"}]},"options":{}},"id":"16df9435-198d-428e-bc79-22fd498f0cf0","name":"Edit Fields","type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-740,140]},{"parameters":{"public":true,"options":{}},"id":"cdb93fa4-6826-4d78-8af0-540deb9e654d","name":"When chat message received","type":"@n8n/n8n-nodes-langchain.chatTrigger","typeVersion":1.1,"position":[-1000,140],"webhookId":"577f3a96-e095-4764-a55c-baad9ed92617"},{"parameters":{"operation":"pdf","options":{}},"id":"0756cf6a-e624-4f0a-96a1-df914f53bb08","name":"Extract PDF Text","type":"n8n-nodes-base.extractFromFile","typeVersion":1,"position":[200,580]},{"parameters":{"aggregate":"aggregateAllItemData","options":{}},"id":"9c9c5b8b-364b-4af8-b1c1-1c382b831895","name":"Aggregate","type":"n8n-nodes-base.aggregate","typeVersion":1,"position":[240,760]},{"parameters":{"chunkOverlap":100},"id":"086c3e97-dfac-470e-af27-15187ff3a778","name":"Character Text Splitter","type":"@n8n/n8n-nodes-langchain.textSplitterCharacterTextSplitter","typeVersion":1,"position":[900,1260]},{"parameters":{"fieldsToSummarize":{"values":[{"aggregation":"concatenate","field":"data"}]},"options":{}},"id":"1c75b252-582a-4013-87e4-f7c3f566f872","name":"Summarize","type":"n8n-nodes-base.summarize","typeVersion":1,"position":[440,840]},{"parameters":{"promptType":"define","text":"={{ $json.chatInput }}","options":{"systemMessage":"You are a personal assistant who helps answer questions from a corpus of documents. The documents are either text based (Txt, docs, extracted PDFs, etc.) or tabular data (CSVs or Excel documents).\n\nYou are given tools to perform RAG in the 'gemini_documents' table, look up the documents available in your knowledge base in the 'document_metadata' table, extract all the text from a given document, and query the tabular files with SQL in the 'document_rows' table.\n\nAlways start by performing RAG unless the question requires a SQL query for tabular data (fetching a sum, finding a max, something a RAG lookup would be unreliable for). If RAG doesn't help, then look at the documents that are available to you, find a few that you think would contain the answer, and then analyze those.\n\nAlways tell the user if you didn't find the answer. Don't make something up just to please them."}},"id":"d9486f2e-31cf-4600-9535-bd38ec331015","name":"RAG AI Agent","type":"@n8n/n8n-nodes-langchain.agent","typeVersion":1.6,"position":[-560,80]},{"parameters":{"rules":{"values":[{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":1},"conditions":[{"leftValue":"={{ $('Set File ID').item.json.file_type }}","rightValue":"application/pdf","operator":{"type":"string","operation":"equals"}}],"combinator":"and"}},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":1},"conditions":[{"id":"2ae7faa7-a936-4621-a680-60c512163034","leftValue":"={{ $('Set File ID').item.json.file_type }}","rightValue":"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"}},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":1},"conditions":[{"id":"fc193b06-363b-4699-a97d-e5a850138b0e","leftValue":"={{ $('Set File ID').item.json.file_type }}","rightValue":"=application/vnd.google-apps.spreadsheet","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"}},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":1},"conditions":[{"id":"b69f5605-0179-4b02-9a32-e34bb085f82d","leftValue":"={{ $('Set File ID').item.json.file_type }}","rightValue":"application/vnd.google-apps.document","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"}}]},"options":{"fallbackOutput":3}},"id":"e7b35c5f-b93d-4214-bb11-4bc99ba6389c","name":"Switch","type":"n8n-nodes-base.switch","typeVersion":3,"position":[-460,800]},{"parameters":{"operation":"xlsx","options":{}},"id":"cc4faf1f-bdfd-4f9c-9678-d15281990361","name":"Extract from Excel","type":"n8n-nodes-base.extractFromFile","typeVersion":1,"position":[20,760]},{"parameters":{"assignments":{"assignments":[{"id":"f422e2e0-381c-46ea-8f38-3f58c501d8b9","name":"schema","value":"={{ $('Extract from Excel').isExecuted ? $('Extract from Excel').first().json.keys().toJsonString() : $('Extract from CSV').first().json.keys().toJsonString() }}","type":"string"},{"id":"bb07c71e-5b60-4795-864c-cc3845b6bc46","name":"data","value":"={{ $json.concatenated_data }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[880,700],"id":"b95098cb-81f9-473f-b7ce-75ad2a3d0d7b","name":"Set Schema"},{"parameters":{"options":{}},"type":"n8n-nodes-base.extractFromFile","typeVersion":1,"position":[20,940],"id":"ce318d91-35cf-41b8-b6f8-e4158978e548","name":"Extract from CSV"},{"parameters":{"content":"## Run Each Node Once to Set Up Database Tables","height":300,"width":680,"color":3},"type":"n8n-nodes-base.stickyNote","position":[-1740,220],"typeVersion":1,"id":"7a012e74-701b-4a87-b8c2-9775e8c2facc","name":"Sticky Note3"},{"parameters":{"operation":"executeQuery","query":"CREATE TABLE document_metadata (\n    id TEXT PRIMARY KEY,\n    title TEXT,\n    url TEXT,\n    created_at TIMESTAMP DEFAULT NOW(),\n    schema TEXT\n);","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.5,"position":[-1480,320],"id":"f072019e-adbd-4ba3-b6a6-16b498445afa","name":"Create Document Metadata Table","credentials":{"postgres":{"id":"ULsaTVpa7uWp9X9s","name":"Postgres account Cloud"}}},{"parameters":{"operation":"executeQuery","query":"CREATE TABLE document_rows (\n    id SERIAL PRIMARY KEY,\n    dataset_id TEXT REFERENCES document_metadata(id),\n    row_data JSONB  -- Store the actual row data\n);","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.5,"position":[-1260,320],"id":"f6639f5a-441b-46a6-be4c-9ede06bea62d","name":"Create Document Rows Table (for Tabular Data)","credentials":{"postgres":{"id":"ULsaTVpa7uWp9X9s","name":"Postgres account Cloud"}}},{"parameters":{"descriptionType":"manual","toolDescription":"Use this tool to fetch all available documents, including the table schema if the file is a CSV or Excel file.","operation":"select","schema":{"__rl":true,"mode":"list","value":"public"},"table":{"__rl":true,"value":"document_metadata","mode":"list","cachedResultName":"document_metadata"},"returnAll":true,"options":{}},"type":"n8n-nodes-base.postgresTool","typeVersion":2.5,"position":[-460,360],"id":"78251094-ef1e-4237-b056-613bdb9a0174","name":"List Documents","credentials":{"postgres":{"id":"ULsaTVpa7uWp9X9s","name":"Postgres account Cloud"}}},{"parameters":{"descriptionType":"manual","toolDescription":"Given a file ID, fetches the text from the document.","operation":"executeQuery","query":"SELECT \n    string_agg(content, ' ') as document_text\nFROM documents\n  WHERE metadata->>'file_id' = $1\nGROUP BY metadata->>'file_id';","options":{"queryReplacement":"={{ $fromAI('file_id') }}"}},"type":"n8n-nodes-base.postgresTool","typeVersion":2.5,"position":[-320,360],"id":"b417a966-96c1-4769-bda3-fdfff073e2f7","name":"Get File Contents","credentials":{"postgres":{"id":"ULsaTVpa7uWp9X9s","name":"Postgres account Cloud"}}},{"parameters":{"descriptionType":"manual","toolDescription":"Run a SQL query - use this to query from the document_rows table once you know the file ID you are querying. dataset_id is the file_id and you are always using the row_data for filtering, which is a jsonb field that has all the keys from the file schema given in the document_metadata table.\n\nExample query:\n\nSELECT AVG((row_data->>'revenue')::numeric)\nFROM document_rows\nWHERE dataset_id = '123';\n\nExample query 2:\n\nSELECT \n    row_data->>'category' as category,\n    SUM((row_data->>'sales')::numeric) as total_sales\nFROM dataset_rows\nWHERE dataset_id = '123'\nGROUP BY row_data->>'category';","operation":"executeQuery","query":"{{ $fromAI('sql_query') }}","options":{}},"type":"n8n-nodes-base.postgresTool","typeVersion":2.5,"position":[-160,360],"id":"25054d9a-ff48-4431-8ba0-27bae321ecc9","name":"Query Document Rows","credentials":{"postgres":{"id":"ULsaTVpa7uWp9X9s","name":"Postgres account Cloud"}}},{"parameters":{"options":{"reset":false}},"type":"n8n-nodes-base.splitInBatches","typeVersion":3,"position":[-1500,660],"id":"ff125c42-d59e-4275-b9d2-f287aa2e8d75","name":"Loop Over Items"},{"parameters":{"operation":"executeQuery","query":"-- Enable the pgvector extension to work with embedding vectors\ncreate extension vector;\n\n-- Create a table to store your documents\ncreate table documents (\n  id bigserial primary key,\n  content text, -- corresponds to Document.pageContent\n  metadata jsonb, -- corresponds to Document.metadata\n  embedding vector(3072) -- 1536 works for OpenAI embeddings, change if needed\n);\n\n-- Create a function to search for documents\ncreate function match_documents (\n  query_embedding vector(3072),\n  match_count int default null,\n  filter jsonb DEFAULT '{}'\n) returns table (\n  id bigint,\n  content text,\n  metadata jsonb,\n  similarity float\n)\nlanguage plpgsql\nas $$\n#variable_conflict use_column\nbegin\n  return query\n  select\n    id,\n    content,\n    metadata,\n    1 - (documents.embedding <=> query_embedding) as similarity\n  from documents\n  where metadata @> filter\n  order by documents.embedding <=> query_embedding\n  limit match_count;\nend;\n$$;","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.5,"position":[-1680,320],"id":"016e8fa4-f9b5-49f1-bdd3-ae68f195e418","name":"Create Documents Table and Match Function","credentials":{"postgres":{"id":"ULsaTVpa7uWp9X9s","name":"Postgres account Cloud"}}},{"parameters":{"operation":"delete","tableId":"document_rows","filters":{"conditions":[{"keyName":"dataset_id","condition":"eq","keyValue":"={{ $('Set File ID').item.json.file_id }}"}]}},"type":"n8n-nodes-base.supabase","typeVersion":1,"position":[-980,820],"id":"c9250bcc-9900-4979-b2c2-6a87b32b1f0e","name":"Delete Old Data Rows","alwaysOutputData":true,"executeOnce":true,"credentials":{"supabaseApi":{"id":"0ndJqD87syAe4VB5","name":"Supabase account Cloud"}}},{"parameters":{"operation":"upsert","schema":{"__rl":true,"mode":"list","value":"public"},"table":{"__rl":true,"value":"document_metadata","mode":"list","cachedResultName":"document_metadata"},"columns":{"mappingMode":"defineBelow","value":{"id":"={{ $('Set File ID').item.json.file_id }}","title":"={{ $('Set File ID').item.json.file_title }}","url":"={{ $('Set File ID').item.json.file_url }}"},"matchingColumns":["id"],"schema":[{"id":"id","displayName":"id","required":true,"defaultMatch":true,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"title","displayName":"title","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":false},{"id":"url","displayName":"url","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":false,"removed":false},{"id":"created_at","displayName":"created_at","required":false,"defaultMatch":false,"display":true,"type":"dateTime","canBeUsedToMatch":false},{"id":"schema","displayName":"schema","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":false,"removed":true}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.5,"position":[-820,680],"id":"4e3d31a6-12d6-4fcd-8024-8b7e106f402d","name":"Insert Document Metadata","executeOnce":true,"credentials":{"postgres":{"id":"ULsaTVpa7uWp9X9s","name":"Postgres account Cloud"}}},{"parameters":{"schema":{"__rl":true,"mode":"list","value":"public"},"table":{"__rl":true,"value":"document_rows","mode":"list","cachedResultName":"document_rows"},"columns":{"mappingMode":"defineBelow","value":{"dataset_id":"={{ $('Set File ID').item.json.file_id }}","row_data":"={{ $json.toJsonString().replaceAll(/'/g, \"''\") }}"},"matchingColumns":["id"],"schema":[{"id":"id","displayName":"id","required":false,"defaultMatch":true,"display":true,"type":"number","canBeUsedToMatch":true,"removed":true},{"id":"dataset_id","displayName":"dataset_id","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"row_data","displayName":"row_data","required":false,"defaultMatch":false,"display":true,"type":"object","canBeUsedToMatch":true}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.5,"position":[240,940],"id":"9e020b39-13d0-4c6d-afcd-08c9e9e07e9c","name":"Insert Table Rows","credentials":{"postgres":{"id":"ULsaTVpa7uWp9X9s","name":"Postgres account Cloud"}}},{"parameters":{"operation":"upsert","schema":{"__rl":true,"mode":"list","value":"public"},"table":{"__rl":true,"value":"document_metadata","mode":"list","cachedResultName":"document_metadata"},"columns":{"mappingMode":"defineBelow","value":{"id":"={{ $('Set File ID').item.json.file_id }}","schema":"={{ $json.schema }}"},"matchingColumns":["id"],"schema":[{"id":"id","displayName":"id","required":true,"defaultMatch":true,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"title","displayName":"title","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":false,"removed":true},{"id":"url","displayName":"url","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":false,"removed":true},{"id":"created_at","displayName":"created_at","required":false,"defaultMatch":false,"display":true,"type":"dateTime","canBeUsedToMatch":false},{"id":"schema","displayName":"schema","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":false,"removed":false}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.5,"position":[1100,700],"id":"80cd92d8-7323-46fd-b378-4117ba7fa917","name":"Update Schema for Document Metadata","credentials":{"postgres":{"id":"ULsaTVpa7uWp9X9s","name":"Postgres account Cloud"}}},{"parameters":{"content":"## 🚀 Ultimate n8n Agentic RAG Template\n\n**Author:** [Cole Medin](https://www.youtube.com/@ColeMedin)\n\n## What is this?\nThis template provides a complete implementation of an **Agentic RAG (Retrieval Augmented Generation)** system in n8n that can be extended easily for your specific use case and knowledge base. Unlike standard RAG which only performs simple lookups, this agent can reason about your knowledge base, self-improve retrieval, and dynamically switch between different tools based on the specific question.\n\n## Why Agentic RAG?\nStandard RAG has significant limitations:\n- Poor analysis of numerical/tabular data\n- Missing context due to document chunking\n- Inability to connect information across documents\n- No dynamic tool selection based on question type\n\n## What makes this template powerful:\n- **Intelligent tool selection**: Switches between RAG lookups, SQL queries, or full document retrieval based on the question\n- **Complete document context**: Accesses entire documents when needed instead of just chunks\n- **Accurate numerical analysis**: Uses SQL for precise calculations on spreadsheet/tabular data\n- **Cross-document insights**: Connects information across your entire knowledge base\n- **Multi-file processing**: Handles multiple documents in a single workflow loop\n- **Efficient storage**: Uses JSONB in Supabase to store tabular data without creating new tables for each CSV\n\n## Getting Started\n1. Run the table creation nodes first to set up your database tables in Supabase\n2. Upload your documents through Google Drive (or swap out for a different file storage solution)\n3. The agent will process them automatically (chunking text, storing tabular data in Supabase)\n4. Start asking questions that leverage the agent's multiple reasoning approaches\n\n## Customization\nThis template provides a solid foundation that you can extend by:\n- Tuning the system prompt for your specific use case\n- Adding document metadata like summaries\n- Implementing more advanced RAG techniques\n- Optimizing for larger knowledge bases\n\n---\n\nI do intend on making a local version of this agent very soon!","height":1320,"width":540,"color":6},"type":"n8n-nodes-base.stickyNote","position":[-2320,80],"typeVersion":1,"id":"8f4dcf0c-0282-4249-96b1-f59d4cd7dd7e","name":"Sticky Note9"},{"parameters":{"mode":"insert","tableName":{"__rl":true,"value":"documents","mode":"list","cachedResultName":"documents"},"options":{"queryName":"match_documents"}},"id":"43888c86-bc55-4f16-9270-c94e89350532","name":"Insert into Supabase Vectorstore","type":"@n8n/n8n-nodes-langchain.vectorStoreSupabase","typeVersion":1,"position":[900,880],"credentials":{"supabaseApi":{"id":"0ndJqD87syAe4VB5","name":"Supabase account Cloud"}}},{"parameters":{"model":{"__rl":true,"value":"llama3.3:latest","mode":"list","cachedResultName":"llama3.3:latest"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[-740,360],"id":"ace4a1b2-a6f7-480a-ba29-7283afd9af32","name":"OpenAI Chat Model","credentials":{"openAiApi":{"id":"ZaHwQvZCp13kccgP","name":"OpenAi account 2"}}},{"parameters":{"modelName":"models/text-embedding-004"},"type":"@n8n/n8n-nodes-langchain.embeddingsGoogleGemini","typeVersion":1,"position":[720,1140],"id":"f1e11c37-8b81-4063-84e6-2efe7919728d","name":"Embeddings Google Gemini","credentials":{"googlePalmApi":{"id":"VxuR4Ot4TSiJTVFk","name":"Google Gemini(PaLM) Api account"}}},{"parameters":{"mode":"retrieve-as-tool","toolName":"gemini_documents","toolDescription":"Use RAG to look up information in the knowledgebase.","tableName":{"__rl":true,"value":"documents","mode":"list","cachedResultName":"documents"},"topK":5,"options":{"queryName":"match_documents"}},"type":"@n8n/n8n-nodes-langchain.vectorStoreSupabase","typeVersion":1,"position":[100,200],"id":"27a6a96d-fd14-4b09-ba6c-c5ccc69e5e95","name":"Supabase Vector Store1","credentials":{"supabaseApi":{"id":"0ndJqD87syAe4VB5","name":"Supabase account Cloud"}}},{"parameters":{"modelName":"models/gemini-embedding-exp-03-07"},"type":"@n8n/n8n-nodes-langchain.embeddingsGoogleGemini","typeVersion":1,"position":[80,360],"id":"ce3b3d4e-e237-477c-9481-81694d53537a","name":"Embeddings Google Gemini1","credentials":{"googlePalmApi":{"id":"VxuR4Ot4TSiJTVFk","name":"Google Gemini(PaLM) Api account"}}},{"parameters":{"path":"n8nagentchat","options":{}},"type":"n8n-nodes-base.webhook","typeVersion":2,"position":[-980,360],"id":"dee6d675-29b5-4eee-b8ec-9ba31ae3f362","name":"Webhook","webhookId":"7829c28d-c81f-4afd-b7c6-81285325bf37"}],"connections":{"Download File":{"main":[[{"node":"Switch","type":"main","index":0}]]},"File Created":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Extract Document Text":{"main":[[{"node":"Insert into Supabase Vectorstore","type":"main","index":0}]]},"Default Data Loader":{"ai_document":[[{"node":"Insert into Supabase Vectorstore","type":"ai_document","index":0}]]},"Postgres Chat Memory":{"ai_memory":[[{"node":"RAG AI Agent","type":"ai_memory","index":0}]]},"Delete Old Doc Rows":{"main":[[{"node":"Delete Old Data Rows","type":"main","index":0}]]},"Set File ID":{"main":[[{"node":"Delete Old Doc Rows","type":"main","index":0}]]},"File Updated":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Edit Fields":{"main":[[{"node":"RAG AI Agent","type":"main","index":0}]]},"When chat message received":{"main":[[{"node":"Edit Fields","type":"main","index":0}]]},"Extract PDF Text":{"main":[[{"node":"Insert into Supabase Vectorstore","type":"main","index":0}]]},"Aggregate":{"main":[[{"node":"Summarize","type":"main","index":0}]]},"Character Text Splitter":{"ai_textSplitter":[[{"node":"Default Data Loader","type":"ai_textSplitter","index":0}]]},"Summarize":{"main":[[{"node":"Set Schema","type":"main","index":0},{"node":"Insert into Supabase Vectorstore","type":"main","index":0}]]},"RAG AI Agent":{"main":[[{"node":"Respond to Webhook","type":"main","index":0}]]},"Switch":{"main":[[{"node":"Extract PDF Text","type":"main","index":0}],[{"node":"Extract from Excel","type":"main","index":0}],[{"node":"Extract from CSV","type":"main","index":0}],[{"node":"Extract Document Text","type":"main","index":0}]]},"Extract from Excel":{"main":[[{"node":"Aggregate","type":"main","index":0},{"node":"Insert Table Rows","type":"main","index":0}]]},"Set Schema":{"main":[[{"node":"Update Schema for Document Metadata","type":"main","index":0}]]},"Extract from CSV":{"main":[[{"node":"Aggregate","type":"main","index":0},{"node":"Insert Table Rows","type":"main","index":0}]]},"List Documents":{"ai_tool":[[{"node":"RAG AI Agent","type":"ai_tool","index":0}]]},"Get File Contents":{"ai_tool":[[{"node":"RAG AI Agent","type":"ai_tool","index":0}]]},"Query Document Rows":{"ai_tool":[[{"node":"RAG AI Agent","type":"ai_tool","index":0}]]},"Loop Over Items":{"main":[[],[{"node":"Set File ID","type":"main","index":0}]]},"Delete Old Data Rows":{"main":[[{"node":"Insert Document Metadata","type":"main","index":0}]]},"Insert Document Metadata":{"main":[[{"node":"Download File","type":"main","index":0}]]},"Insert into Supabase Vectorstore":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"OpenAI Chat Model":{"ai_languageModel":[[{"node":"RAG AI Agent","type":"ai_languageModel","index":0}]]},"Embeddings Google Gemini":{"ai_embedding":[[{"node":"Insert into Supabase Vectorstore","type":"ai_embedding","index":0}]]},"Supabase Vector Store1":{"ai_tool":[[{"node":"RAG AI Agent","type":"ai_tool","index":0}]]},"Embeddings Google Gemini1":{"ai_embedding":[[{"node":"Supabase Vector Store1","type":"ai_embedding","index":0}]]},"Webhook":{"main":[[{"node":"Edit Fields","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"d235fae1-e4aa-44fd-a751-05aaff8a8dd1","triggerCount":0,"tags":[],"shared":[{"createdAt":"2025-05-03T13:47:23.872Z","updatedAt":"2025-05-03T13:47:23.872Z","role":"workflow:owner","workflowId":"qHKi3hZ5d3uynUOS","projectId":"WbfPHUYYKS2tiNNo","project":{"createdAt":"2025-05-03T06:49:18.088Z","updatedAt":"2025-05-03T06:52:24.837Z","id":"WbfPHUYYKS2tiNNo","name":"charlie phan <scottyphan08@gmail.com>","type":"personal","icon":null,"description":null}}]},{"createdAt":"2025-05-03T13:53:33.703Z","updatedAt":"2025-05-22T01:56:43.105Z","id":"z3dWUxkDMFstdaa7","name":"Ultimate RAG","active":false,"isArchived":false,"nodes":[{"parameters":{"jsonMode":"expressionData","jsonData":"={{ $json.data || $json.text || $json.concatenated_data }}","options":{"metadata":{"metadataValues":[{"name":"=file_id","value":"={{ $('Set File ID').first().json.file_id }}"},{"name":"file_title","value":"={{ $('Set File ID').first().json.file_title }}"}]}}},"id":"36f12cc7-e77e-41ba-864d-dc1c10f9031c","name":"Default Data Loader","type":"@n8n/n8n-nodes-langchain.documentDefaultDataLoader","typeVersion":1,"position":[1000,1140]},{"parameters":{"content":"## Agent Tools for RAG","height":528.85546469693,"width":583.4552380860637,"color":4},"id":"a168c023-591d-48b1-8bb9-88ccc3c86828","name":"Sticky Note","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[0,0]},{"parameters":{"content":"## Tool to Add a Google Drive File to Vector DB","height":867,"width":3073,"color":5},"id":"ce4f7d0a-135d-47be-a1fb-d6e8de86c200","name":"Sticky Note1","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[-1740,540]},{"parameters":{"operation":"download","fileId":{"__rl":true,"value":"={{ $('Set File ID').item.json.file_id }}","mode":"id"},"options":{"googleFileConversion":{"conversion":{"docsToFormat":"text/plain"}}}},"id":"65d2451c-99c8-470e-81f5-7df1a6a6c88a","name":"Download File","type":"n8n-nodes-base.googleDrive","typeVersion":3,"position":[-660,820],"executeOnce":true,"credentials":{"googleDriveOAuth2Api":{"id":"nbS6fTRsKFONPFqs","name":"Google Drive account"}}},{"parameters":{"pollTimes":{"item":[{"mode":"everyMinute"}]},"triggerOn":"specificFolder","folderToWatch":{"__rl":true,"value":"1oFu5np2GG_Y__qC4O9aoZAxT1zvqhywl","mode":"list","cachedResultName":"n8n","cachedResultUrl":"https://drive.google.com/drive/folders/1oFu5np2GG_Y__qC4O9aoZAxT1zvqhywl"},"event":"fileCreated","options":{}},"id":"51785cf8-a061-49e1-9f74-c4a69b8d68e9","name":"File Created","type":"n8n-nodes-base.googleDriveTrigger","typeVersion":1,"position":[-1680,660],"credentials":{"googleDriveOAuth2Api":{"id":"nbS6fTRsKFONPFqs","name":"Google Drive account"}}},{"parameters":{"pollTimes":{"item":[{"mode":"everyMinute"}]},"triggerOn":"specificFolder","folderToWatch":{"__rl":true,"value":"1oFu5np2GG_Y__qC4O9aoZAxT1zvqhywl","mode":"list","cachedResultName":"n8n","cachedResultUrl":"https://drive.google.com/drive/folders/1oFu5np2GG_Y__qC4O9aoZAxT1zvqhywl"},"event":"fileUpdated","options":{}},"id":"15128cdd-8f28-4e1c-861e-46bdc95cf07b","name":"File Updated","type":"n8n-nodes-base.googleDriveTrigger","typeVersion":1,"position":[-1680,820],"credentials":{"googleDriveOAuth2Api":{"id":"nbS6fTRsKFONPFqs","name":"Google Drive account"}}},{"parameters":{"operation":"text","options":{}},"id":"9837e50f-e97f-4598-bbb5-1c40d59d1a16","name":"Extract Document Text","type":"n8n-nodes-base.extractFromFile","typeVersion":1,"position":[200,1140],"alwaysOutputData":true},{"parameters":{"sessionIdType":"customKey","sessionKey":"={{ $('Telegram Trigger').item.json.message.text }}"},"id":"70291b3b-2e7d-4589-b085-b7bc14913c6b","name":"Postgres Chat Memory","type":"@n8n/n8n-nodes-langchain.memoryPostgresChat","typeVersion":1,"position":[-600,380],"notesInFlow":false,"credentials":{"postgres":{"id":"ULsaTVpa7uWp9X9s","name":"Postgres account Cloud"}}},{"parameters":{"operation":"delete","tableId":"documents","filterType":"string","filterString":"=metadata->>file_id=like.*{{ $json.file_id }}*"},"id":"7e1ab708-0720-4492-b435-ffd12d27c039","name":"Delete Old Doc Rows","type":"n8n-nodes-base.supabase","typeVersion":1,"position":[-1140,660],"alwaysOutputData":true,"credentials":{"supabaseApi":{"id":"0ndJqD87syAe4VB5","name":"Supabase account Cloud"}}},{"parameters":{"assignments":{"assignments":[{"id":"10646eae-ae46-4327-a4dc-9987c2d76173","name":"file_id","value":"={{ $json.id }}","type":"string"},{"id":"f4536df5-d0b1-4392-bf17-b8137fb31a44","name":"file_type","value":"={{ $json.mimeType }}","type":"string"},{"id":"77d782de-169d-4a46-8a8e-a3831c04d90f","name":"file_title","value":"={{ $json.name }}","type":"string"},{"id":"9bde4d7f-e4f3-4ebd-9338-dce1350f9eab","name":"file_url","value":"={{ $json.webViewLink }}","type":"string"}]},"options":{}},"id":"1c7979cd-71b5-448a-95b0-d14e230b2b28","name":"Set File ID","type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-1320,820]},{"parameters":{"content":"## RAG AI Agent with Chat Interface","height":464.8027193303974,"width":1035.6381264595484},"id":"bd1c7ac4-2999-4bd0-848c-65b376d712ae","name":"Sticky Note2","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[-1040,60]},{"parameters":{"assignments":{"assignments":[{"id":"9a9a245e-f1a1-4282-bb02-a81ffe629f0f","name":"chatInput","value":"={{ $json?.chatInput || $json.body.chatInput }}","type":"string"},{"id":"b80831d8-c653-4203-8706-adedfdb98f77","name":"sessionId","value":"={{ $json?.sessionId || $json.body.sessionId}}","type":"string"}]},"options":{}},"id":"d28ce072-d664-4465-af3d-edddb8408f30","name":"Edit Fields","type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-740,140]},{"parameters":{"public":true,"options":{}},"id":"d2b89c0a-ed66-4103-90a3-f4a38d292ba0","name":"When chat message received","type":"@n8n/n8n-nodes-langchain.chatTrigger","typeVersion":1.1,"position":[-1000,140],"webhookId":"577f3a96-e095-4764-a55c-baad9ed92617"},{"parameters":{"operation":"pdf","options":{}},"id":"3cbc4b09-ddfe-4a8d-9e3b-6b05faf291a1","name":"Extract PDF Text","type":"n8n-nodes-base.extractFromFile","typeVersion":1,"position":[200,580]},{"parameters":{"aggregate":"aggregateAllItemData","options":{}},"id":"afe48cec-f9fb-4b68-b513-9708de928ca3","name":"Aggregate","type":"n8n-nodes-base.aggregate","typeVersion":1,"position":[240,760]},{"parameters":{"chunkOverlap":100},"id":"1d9d976c-5a9b-4dc1-9d05-a0144c9bee99","name":"Character Text Splitter","type":"@n8n/n8n-nodes-langchain.textSplitterCharacterTextSplitter","typeVersion":1,"position":[900,1260]},{"parameters":{"fieldsToSummarize":{"values":[{"aggregation":"concatenate","field":"data"}]},"options":{}},"id":"34594953-8ee2-42a3-a17f-a7b0de73bab3","name":"Summarize","type":"n8n-nodes-base.summarize","typeVersion":1,"position":[440,840]},{"parameters":{"promptType":"define","text":"={{ $('Telegram Trigger').item.json.message.text }}","options":{"systemMessage":"You are a personal assistant who helps answer questions from a corpus of documents. The documents are either text based (Txt, docs, extracted PDFs, etc.) or tabular data (CSVs or Excel documents).\n\nYou are given tools to perform RAG in the 'gemini_documents' table, look up the documents available in your knowledge base in the 'document_metadata' table, extract all the text from a given document, and query the tabular files with SQL in the 'document_rows' table.\n\nAlways start by performing RAG unless the question requires a SQL query for tabular data (fetching a sum, finding a max, something a RAG lookup would be unreliable for). If RAG doesn't help, then look at the documents that are available to you, find a few that you think would contain the answer, and then analyze those.\n\nAlways tell the user if you didn't find the answer. Don't make something up just to please them."}},"id":"79dec38e-01d1-44a1-89d5-439d3ac05ad7","name":"RAG AI Agent","type":"@n8n/n8n-nodes-langchain.agent","typeVersion":1.6,"position":[-560,80]},{"parameters":{"rules":{"values":[{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":1},"conditions":[{"leftValue":"={{ $('Set File ID').item.json.file_type }}","rightValue":"application/pdf","operator":{"type":"string","operation":"equals"}}],"combinator":"and"}},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":1},"conditions":[{"id":"2ae7faa7-a936-4621-a680-60c512163034","leftValue":"={{ $('Set File ID').item.json.file_type }}","rightValue":"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"}},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":1},"conditions":[{"id":"fc193b06-363b-4699-a97d-e5a850138b0e","leftValue":"={{ $('Set File ID').item.json.file_type }}","rightValue":"=application/vnd.google-apps.spreadsheet","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"}},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":1},"conditions":[{"id":"b69f5605-0179-4b02-9a32-e34bb085f82d","leftValue":"={{ $('Set File ID').item.json.file_type }}","rightValue":"application/vnd.google-apps.document","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"}}]},"options":{"fallbackOutput":3}},"id":"a06d925b-cde1-44ed-90a9-16433160a611","name":"Switch","type":"n8n-nodes-base.switch","typeVersion":3,"position":[-460,800]},{"parameters":{"operation":"xlsx","options":{}},"id":"f3a5e1fa-28fe-470b-a43a-1edb4ee8611e","name":"Extract from Excel","type":"n8n-nodes-base.extractFromFile","typeVersion":1,"position":[20,760]},{"parameters":{"assignments":{"assignments":[{"id":"f422e2e0-381c-46ea-8f38-3f58c501d8b9","name":"schema","value":"={{ $('Extract from Excel').isExecuted ? $('Extract from Excel').first().json.keys().toJsonString() : $('Extract from CSV').first().json.keys().toJsonString() }}","type":"string"},{"id":"bb07c71e-5b60-4795-864c-cc3845b6bc46","name":"data","value":"={{ $json.concatenated_data }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[880,700],"id":"53601d39-2ef2-40a4-92d1-9c6f7ae042f2","name":"Set Schema"},{"parameters":{"options":{}},"type":"n8n-nodes-base.extractFromFile","typeVersion":1,"position":[20,940],"id":"da73ffff-c8a3-493b-918e-c70898574622","name":"Extract from CSV"},{"parameters":{"content":"## Run Each Node Once to Set Up Database Tables","height":300,"width":680,"color":3},"type":"n8n-nodes-base.stickyNote","position":[-1740,220],"typeVersion":1,"id":"b458f2d0-3865-4dcf-8016-9797724197ca","name":"Sticky Note3"},{"parameters":{"operation":"executeQuery","query":"CREATE TABLE document_metadata (\n    id TEXT PRIMARY KEY,\n    title TEXT,\n    url TEXT,\n    created_at TIMESTAMP DEFAULT NOW(),\n    schema TEXT\n);","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.5,"position":[-1480,320],"id":"b06233d1-5d57-4843-a439-9be2196f3b3d","name":"Create Document Metadata Table","credentials":{"postgres":{"id":"ULsaTVpa7uWp9X9s","name":"Postgres account Cloud"}}},{"parameters":{"operation":"executeQuery","query":"CREATE TABLE document_rows (\n    id SERIAL PRIMARY KEY,\n    dataset_id TEXT REFERENCES document_metadata(id),\n    row_data JSONB  -- Store the actual row data\n);","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.5,"position":[-1260,320],"id":"f9aeaf3f-27d7-4e0d-b1d7-998343e73020","name":"Create Document Rows Table (for Tabular Data)","credentials":{"postgres":{"id":"ULsaTVpa7uWp9X9s","name":"Postgres account Cloud"}}},{"parameters":{"descriptionType":"manual","toolDescription":"Use this tool to fetch all available documents, including the table schema if the file is a CSV or Excel file.","operation":"select","schema":{"__rl":true,"mode":"list","value":"public"},"table":{"__rl":true,"value":"document_metadata","mode":"list","cachedResultName":"document_metadata"},"returnAll":true,"options":{}},"type":"n8n-nodes-base.postgresTool","typeVersion":2.5,"position":[-460,360],"id":"fab5ca24-6b4d-45c3-ab18-d7c87b120fc9","name":"List Documents","credentials":{"postgres":{"id":"ULsaTVpa7uWp9X9s","name":"Postgres account Cloud"}}},{"parameters":{"descriptionType":"manual","toolDescription":"Given a file ID, fetches the text from the document.","operation":"executeQuery","query":"SELECT \n    string_agg(content, ' ') as document_text\nFROM documents\n  WHERE metadata->>'file_id' = $1\nGROUP BY metadata->>'file_id';","options":{"queryReplacement":"={{ $fromAI('file_id') }}"}},"type":"n8n-nodes-base.postgresTool","typeVersion":2.5,"position":[-320,360],"id":"562dfd1f-44a7-4fd9-be91-9abdc789d2a0","name":"Get File Contents","credentials":{"postgres":{"id":"ULsaTVpa7uWp9X9s","name":"Postgres account Cloud"}}},{"parameters":{"descriptionType":"manual","toolDescription":"=Run a SQL query - use this to query from the document_rows table once you know the file ID you are querying. dataset_id is the file_id and you are always using the row_data for filtering, which is a jsonb field that has all the keys from the file schema given in the document_metadata table.\n\nExample query:\n\nSELECT AVG((row_data->>'revenue')::numeric)\nFROM document_rows\nWHERE dataset_id = '123';\n\nExample query 2:\n\nSELECT \n    row_data->>'category' as category,\n    SUM((row_data->>'sales')::numeric) as total_sales\nFROM dataset_rows\nWHERE dataset_id = '123'\nGROUP BY row_data->>'category';","operation":"executeQuery","query":"{{ $fromAI('sql_query') }}","options":{}},"type":"n8n-nodes-base.postgresTool","typeVersion":2.5,"position":[-160,360],"id":"490b8ae7-5e3b-4c7a-b943-94604a1de416","name":"Query Document Rows","credentials":{"postgres":{"id":"ULsaTVpa7uWp9X9s","name":"Postgres account Cloud"}}},{"parameters":{"options":{"reset":false}},"type":"n8n-nodes-base.splitInBatches","typeVersion":3,"position":[-1500,660],"id":"dd48df40-59c4-471e-9572-02ff178a714d","name":"Loop Over Items"},{"parameters":{"operation":"executeQuery","query":"-- Enable the pgvector extension to work with embedding vectors\ncreate extension vector;\n\n-- Create a table to store your documents\ncreate table documents (\n  id bigserial primary key,\n  content text, -- corresponds to Document.pageContent\n  metadata jsonb, -- corresponds to Document.metadata\n  embedding vector(3072) -- 1536 works for OpenAI embeddings, change if needed\n);\n\n-- Create a function to search for documents\ncreate function match_documents (\n  query_embedding vector(3072),\n  match_count int default null,\n  filter jsonb DEFAULT '{}'\n) returns table (\n  id bigint,\n  content text,\n  metadata jsonb,\n  similarity float\n)\nlanguage plpgsql\nas $$\n#variable_conflict use_column\nbegin\n  return query\n  select\n    id,\n    content,\n    metadata,\n    1 - (documents.embedding <=> query_embedding) as similarity\n  from documents\n  where metadata @> filter\n  order by documents.embedding <=> query_embedding\n  limit match_count;\nend;\n$$;","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.5,"position":[-1680,320],"id":"38e08ad6-4fdd-477c-a922-22d3092cbf57","name":"Create Documents Table and Match Function","credentials":{"postgres":{"id":"ULsaTVpa7uWp9X9s","name":"Postgres account Cloud"}}},{"parameters":{"operation":"delete","tableId":"document_rows","filters":{"conditions":[{"keyName":"dataset_id","condition":"eq","keyValue":"={{ $('Set File ID').item.json.file_id }}"}]}},"type":"n8n-nodes-base.supabase","typeVersion":1,"position":[-980,820],"id":"ba3e50b5-1f81-488b-baf6-42646340e4c6","name":"Delete Old Data Rows","alwaysOutputData":true,"executeOnce":true,"credentials":{"supabaseApi":{"id":"0ndJqD87syAe4VB5","name":"Supabase account Cloud"}}},{"parameters":{"operation":"upsert","schema":{"__rl":true,"mode":"list","value":"public"},"table":{"__rl":true,"value":"document_metadata","mode":"list","cachedResultName":"document_metadata"},"columns":{"mappingMode":"defineBelow","value":{"id":"={{ $('Set File ID').item.json.file_id }}","title":"={{ $('Set File ID').item.json.file_title }}","url":"={{ $('Set File ID').item.json.file_url }}"},"matchingColumns":["id"],"schema":[{"id":"id","displayName":"id","required":true,"defaultMatch":true,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"title","displayName":"title","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":false},{"id":"url","displayName":"url","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":false,"removed":false},{"id":"created_at","displayName":"created_at","required":false,"defaultMatch":false,"display":true,"type":"dateTime","canBeUsedToMatch":false},{"id":"schema","displayName":"schema","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":false,"removed":true}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.5,"position":[-820,680],"id":"0c1f2d5b-e2e3-4d4c-ba95-e640fa2da5aa","name":"Insert Document Metadata","executeOnce":true,"credentials":{"postgres":{"id":"ULsaTVpa7uWp9X9s","name":"Postgres account Cloud"}}},{"parameters":{"schema":{"__rl":true,"mode":"list","value":"public"},"table":{"__rl":true,"value":"document_rows","mode":"list","cachedResultName":"document_rows"},"columns":{"mappingMode":"defineBelow","value":{"dataset_id":"={{ $('Set File ID').item.json.file_id }}","row_data":"={{ $json.toJsonString().replaceAll(/'/g, \"''\") }}"},"matchingColumns":["id"],"schema":[{"id":"id","displayName":"id","required":false,"defaultMatch":true,"display":true,"type":"number","canBeUsedToMatch":true,"removed":true},{"id":"dataset_id","displayName":"dataset_id","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"row_data","displayName":"row_data","required":false,"defaultMatch":false,"display":true,"type":"object","canBeUsedToMatch":true}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.5,"position":[240,940],"id":"2f9f0a0a-2365-44de-92ee-8e3006d0c524","name":"Insert Table Rows","credentials":{"postgres":{"id":"ULsaTVpa7uWp9X9s","name":"Postgres account Cloud"}}},{"parameters":{"operation":"upsert","schema":{"__rl":true,"mode":"list","value":"public"},"table":{"__rl":true,"value":"document_metadata","mode":"list","cachedResultName":"document_metadata"},"columns":{"mappingMode":"defineBelow","value":{"id":"={{ $('Set File ID').item.json.file_id }}","schema":"={{ $json.schema }}"},"matchingColumns":["id"],"schema":[{"id":"id","displayName":"id","required":true,"defaultMatch":true,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"title","displayName":"title","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":false,"removed":true},{"id":"url","displayName":"url","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":false,"removed":true},{"id":"created_at","displayName":"created_at","required":false,"defaultMatch":false,"display":true,"type":"dateTime","canBeUsedToMatch":false},{"id":"schema","displayName":"schema","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":false,"removed":false}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.5,"position":[1100,700],"id":"30a08f4b-2b5b-4893-8eea-a5097ac055a2","name":"Update Schema for Document Metadata","credentials":{"postgres":{"id":"ULsaTVpa7uWp9X9s","name":"Postgres account Cloud"}}},{"parameters":{"content":"## 🚀 Ultimate n8n Agentic RAG Template\n\n**Author:** [Cole Medin](https://www.youtube.com/@ColeMedin)\n\n## What is this?\nThis template provides a complete implementation of an **Agentic RAG (Retrieval Augmented Generation)** system in n8n that can be extended easily for your specific use case and knowledge base. Unlike standard RAG which only performs simple lookups, this agent can reason about your knowledge base, self-improve retrieval, and dynamically switch between different tools based on the specific question.\n\n## Why Agentic RAG?\nStandard RAG has significant limitations:\n- Poor analysis of numerical/tabular data\n- Missing context due to document chunking\n- Inability to connect information across documents\n- No dynamic tool selection based on question type\n\n## What makes this template powerful:\n- **Intelligent tool selection**: Switches between RAG lookups, SQL queries, or full document retrieval based on the question\n- **Complete document context**: Accesses entire documents when needed instead of just chunks\n- **Accurate numerical analysis**: Uses SQL for precise calculations on spreadsheet/tabular data\n- **Cross-document insights**: Connects information across your entire knowledge base\n- **Multi-file processing**: Handles multiple documents in a single workflow loop\n- **Efficient storage**: Uses JSONB in Supabase to store tabular data without creating new tables for each CSV\n\n## Getting Started\n1. Run the table creation nodes first to set up your database tables in Supabase\n2. Upload your documents through Google Drive (or swap out for a different file storage solution)\n3. The agent will process them automatically (chunking text, storing tabular data in Supabase)\n4. Start asking questions that leverage the agent's multiple reasoning approaches\n\n## Customization\nThis template provides a solid foundation that you can extend by:\n- Tuning the system prompt for your specific use case\n- Adding document metadata like summaries\n- Implementing more advanced RAG techniques\n- Optimizing for larger knowledge bases\n\n---\n\nI do intend on making a local version of this agent very soon!","height":1320,"width":540,"color":6},"type":"n8n-nodes-base.stickyNote","position":[-2320,80],"typeVersion":1,"id":"e8812e15-2c26-4fb5-a4ac-c61712105882","name":"Sticky Note9"},{"parameters":{"mode":"insert","tableName":{"__rl":true,"value":"documents","mode":"list","cachedResultName":"documents"},"options":{"queryName":"match_documents"}},"id":"887ef090-e7d4-4818-a31d-4b59a8aa1cc5","name":"Insert into Supabase Vectorstore","type":"@n8n/n8n-nodes-langchain.vectorStoreSupabase","typeVersion":1,"position":[900,880],"credentials":{"supabaseApi":{"id":"0ndJqD87syAe4VB5","name":"Supabase account Cloud"}}},{"parameters":{"model":{"__rl":true,"mode":"list","value":"gpt-4o-mini"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[-740,360],"id":"cdc6256f-e571-4a04-b96c-83ebb3db3581","name":"OpenAI Chat Model","credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{"modelName":"models/gemini-embedding-exp-03-07"},"type":"@n8n/n8n-nodes-langchain.embeddingsGoogleGemini","typeVersion":1,"position":[720,1140],"id":"dd32531b-81ba-49ea-bf53-37415fb2ce90","name":"Embeddings Google Gemini","credentials":{"googlePalmApi":{"id":"VxuR4Ot4TSiJTVFk","name":"Google Gemini(PaLM) Api account"}}},{"parameters":{"mode":"retrieve-as-tool","toolName":"gemini_documents","toolDescription":"Use RAG to look up information in the knowledgebase.","tableName":{"__rl":true,"value":"documents","mode":"list","cachedResultName":"documents"},"topK":5,"options":{"queryName":"match_documents"}},"type":"@n8n/n8n-nodes-langchain.vectorStoreSupabase","typeVersion":1,"position":[100,200],"id":"ce0df7f8-3e36-459a-888e-911b39d52e86","name":"Supabase Vector Store1","credentials":{"supabaseApi":{"id":"0ndJqD87syAe4VB5","name":"Supabase account Cloud"}}},{"parameters":{"modelName":"models/text-embedding-004"},"type":"@n8n/n8n-nodes-langchain.embeddingsGoogleGemini","typeVersion":1,"position":[80,360],"id":"790dd65d-736a-4fde-9f65-21ec3b8b6e04","name":"Embeddings Google Gemini1","credentials":{"googlePalmApi":{"id":"VxuR4Ot4TSiJTVFk","name":"Google Gemini(PaLM) Api account"}}},{"parameters":{"updates":["message"],"additionalFields":{}},"type":"n8n-nodes-base.telegramTrigger","typeVersion":1.2,"position":[-900,280],"id":"efc0c0a8-a9f2-47a6-b343-745bb9d2b50d","name":"Telegram Trigger","webhookId":"18011f68-de39-42c4-a756-1a3dfb79397f","credentials":{"telegramApi":{"id":"I69z6e5cYkew5SXv","name":"Telegram n8nclp Chat"}}},{"parameters":{"chatId":"730141489","text":"={{ $json.output }}","additionalFields":{"appendAttribution":false}},"type":"n8n-nodes-base.telegram","typeVersion":1.2,"position":[200,40],"id":"49ab3cc6-ef75-4a0a-9d58-3b2fecd00b74","name":"Telegram","webhookId":"baed2994-0fc9-40f6-bd21-0fb41c228b27","credentials":{"telegramApi":{"id":"I69z6e5cYkew5SXv","name":"Telegram n8nclp Chat"}}}],"connections":{"Download File":{"main":[[{"node":"Switch","type":"main","index":0}]]},"File Created":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Extract Document Text":{"main":[[{"node":"Insert into Supabase Vectorstore","type":"main","index":0}]]},"Default Data Loader":{"ai_document":[[{"node":"Insert into Supabase Vectorstore","type":"ai_document","index":0}]]},"Postgres Chat Memory":{"ai_memory":[[{"node":"RAG AI Agent","type":"ai_memory","index":0}]]},"Delete Old Doc Rows":{"main":[[{"node":"Delete Old Data Rows","type":"main","index":0}]]},"Set File ID":{"main":[[{"node":"Delete Old Doc Rows","type":"main","index":0}]]},"File Updated":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Edit Fields":{"main":[[{"node":"RAG AI Agent","type":"main","index":0}]]},"When chat message received":{"main":[[]]},"Extract PDF Text":{"main":[[{"node":"Insert into Supabase Vectorstore","type":"main","index":0}]]},"Aggregate":{"main":[[{"node":"Summarize","type":"main","index":0}]]},"Character Text Splitter":{"ai_textSplitter":[[{"node":"Default Data Loader","type":"ai_textSplitter","index":0}]]},"Summarize":{"main":[[{"node":"Set Schema","type":"main","index":0},{"node":"Insert into Supabase Vectorstore","type":"main","index":0}]]},"RAG AI Agent":{"main":[[{"node":"Telegram","type":"main","index":0}]]},"Switch":{"main":[[{"node":"Extract PDF Text","type":"main","index":0}],[{"node":"Extract from Excel","type":"main","index":0}],[{"node":"Extract from CSV","type":"main","index":0}],[{"node":"Extract Document Text","type":"main","index":0}]]},"Extract from Excel":{"main":[[{"node":"Aggregate","type":"main","index":0},{"node":"Insert Table Rows","type":"main","index":0}]]},"Set Schema":{"main":[[{"node":"Update Schema for Document Metadata","type":"main","index":0}]]},"Extract from CSV":{"main":[[{"node":"Aggregate","type":"main","index":0},{"node":"Insert Table Rows","type":"main","index":0}]]},"List Documents":{"ai_tool":[[{"node":"RAG AI Agent","type":"ai_tool","index":0}]]},"Get File Contents":{"ai_tool":[[{"node":"RAG AI Agent","type":"ai_tool","index":0}]]},"Query Document Rows":{"ai_tool":[[{"node":"RAG AI Agent","type":"ai_tool","index":0}]]},"Loop Over Items":{"main":[[],[{"node":"Set File ID","type":"main","index":0}]]},"Delete Old Data Rows":{"main":[[{"node":"Insert Document Metadata","type":"main","index":0}]]},"Insert Document Metadata":{"main":[[{"node":"Download File","type":"main","index":0}]]},"Insert into Supabase Vectorstore":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"OpenAI Chat Model":{"ai_languageModel":[[{"node":"RAG AI Agent","type":"ai_languageModel","index":0}]]},"Embeddings Google Gemini":{"ai_embedding":[[{"node":"Insert into Supabase Vectorstore","type":"ai_embedding","index":0}]]},"Supabase Vector Store1":{"ai_tool":[[{"node":"RAG AI Agent","type":"ai_tool","index":0}]]},"Embeddings Google Gemini1":{"ai_embedding":[[{"node":"Supabase Vector Store1","type":"ai_embedding","index":0}]]},"Telegram Trigger":{"main":[[{"node":"Edit Fields","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":{"node:File Created":{"lastTimeChecked":"2025-05-08T10:42:42Z"},"node:File Updated":{"lastTimeChecked":"2025-05-08T10:42:42Z"}},"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"63b4a217-219d-4ff9-9597-c888661a17f4","triggerCount":4,"tags":[],"shared":[{"createdAt":"2025-05-03T13:53:33.703Z","updatedAt":"2025-05-03T13:53:33.703Z","role":"workflow:owner","workflowId":"z3dWUxkDMFstdaa7","projectId":"WbfPHUYYKS2tiNNo","project":{"createdAt":"2025-05-03T06:49:18.088Z","updatedAt":"2025-05-03T06:52:24.837Z","id":"WbfPHUYYKS2tiNNo","name":"charlie phan <scottyphan08@gmail.com>","type":"personal","icon":null,"description":null}}]},{"createdAt":"2025-05-04T05:47:15.312Z","updatedAt":"2025-05-04T07:19:46.458Z","id":"Z4M0fu0WlYIiim6k","name":"Data Analytics","active":false,"isArchived":false,"nodes":[{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.chatTrigger","typeVersion":1.1,"position":[-400,-100],"id":"edbc3a52-a012-4fa8-86ec-5d481956c51a","name":"When chat message received","webhookId":"573f56e8-b6d2-482e-854e-2abdd985de84"},{"parameters":{"promptType":"define","text":"={{ $('When chat message received').item.json.chatInput }}","options":{"systemMessage":"=You are helpfule data analysis Expert skilled working with nocodb, d database tool. You are tasked to help the user understand the table that they mention.\nHere's the columns to the table for context:\n {{ $json.Columns }}\nIf you generate a chart you should also know that you are a visualization expert. When provided with a chart URL. return it ussig Markdown so that the chart image displays inline. Exxample format\n![Generated Chart](chart_url)\n"}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":1.9,"position":[200,-80],"id":"423a9f14-478b-4a2a-bbc1-312fb8ade2f7","name":"AI Agent"},{"parameters":{"url":"https://app.nocodb.com/api/v2/meta/tables/mhoc5o12r5hcwaf","authentication":"predefinedCredentialType","nodeCredentialType":"nocoDbApiToken","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[-180,-100],"id":"b17b44be-e2ff-444c-9d9a-81fcaaedc227","name":"HTTP Request","credentials":{"nocoDbApiToken":{"id":"zLeElDeqtLW8x4WS","name":"NocoDB Token account"}}},{"parameters":{"assignments":{"assignments":[{"id":"6f1fcd8f-a9c3-4064-8ee8-d139b05edb66","name":"Columns","value":"={{ $json.columns.map(item => item.title).toJsonString()}}}","type":"string"},{"id":"f80e616b-40b5-443b-90f5-f95d3c05c8b7","name":"sessionid","value":"={{ $('When chat message received').item.json.sessionId }}","type":"string"},{"id":"0d6e449f-e662-43c1-8105-183ce54d7345","name":"input","value":"={{ $('When chat message received').item.json.chatInput }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-20,-160],"id":"c2b28b92-f4cb-4912-acc1-5c6aae7be415","name":"Edit Fields"},{"parameters":{"model":{"__rl":true,"mode":"list","value":"gpt-4o-mini"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[40,80],"id":"3bb8a7cd-2706-4efb-b880-92a83048146e","name":"OpenAI Chat Model","credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{"authentication":"nocoDbApiToken","operation":"getAll","workspaceId":"wtbz9py0","projectId":"pz9oqhbqgaf8sl3","table":"mhoc5o12r5hcwaf","options":{"where":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Filter_By_Formula', ``, 'string') }}"}},"type":"n8n-nodes-base.nocoDbTool","typeVersion":3,"position":[540,120],"id":"55cba083-afac-4ee4-8449-31e2c009c981","name":"NocoDB","credentials":{"nocoDbApiToken":{"id":"zLeElDeqtLW8x4WS","name":"NocoDB Token account"}}},{"parameters":{"sessionIdType":"customKey","sessionKey":"={{ $json.sessionid }}","contextWindowLength":20},"type":"@n8n/n8n-nodes-langchain.memoryBufferWindow","typeVersion":1.3,"position":[200,100],"id":"73159b12-ef36-4adb-91e2-a99ede0e555f","name":"Window buffer Memory"}],"connections":{"When chat message received":{"main":[[{"node":"HTTP Request","type":"main","index":0}]]},"HTTP Request":{"main":[[{"node":"Edit Fields","type":"main","index":0}]]},"Edit Fields":{"main":[[{"node":"AI Agent","type":"main","index":0}]]},"OpenAI Chat Model":{"ai_languageModel":[[{"node":"AI Agent","type":"ai_languageModel","index":0}]]},"NocoDB":{"ai_tool":[[{"node":"AI Agent","type":"ai_tool","index":0}]]},"Window buffer Memory":{"ai_memory":[[{"node":"AI Agent","type":"ai_memory","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"0e61cb59-a383-43f7-9535-0cb13ea908f2","triggerCount":0,"tags":[],"shared":[{"createdAt":"2025-05-04T05:47:15.312Z","updatedAt":"2025-05-04T05:47:15.312Z","role":"workflow:owner","workflowId":"Z4M0fu0WlYIiim6k","projectId":"WbfPHUYYKS2tiNNo","project":{"createdAt":"2025-05-03T06:49:18.088Z","updatedAt":"2025-05-03T06:52:24.837Z","id":"WbfPHUYYKS2tiNNo","name":"charlie phan <scottyphan08@gmail.com>","type":"personal","icon":null,"description":null}}]},{"createdAt":"2025-05-05T03:29:18.775Z","updatedAt":"2025-05-23T04:01:39.473Z","id":"yCAll4psbD1SGnLX","name":"Chuẩn Import vector database","active":false,"isArchived":false,"nodes":[{"parameters":{"jsonMode":"expressionData","jsonData":"={{ $json.data || $json.text || $json.concatenated_data }}","options":{"metadata":{"metadataValues":[{"name":"=file_id","value":"={{ $('Set File ID').first().json.file_id }}"},{"name":"file_title","value":"={{ $('Set File ID').first().json.file_title }}"}]}}},"id":"11a2b0e6-d509-4f4c-ae87-4f7219bce426","name":"Default Data Loader","type":"@n8n/n8n-nodes-langchain.documentDefaultDataLoader","typeVersion":1,"position":[1020,-420]},{"parameters":{"content":"## Tool to Add a Google Drive File to Vector DB","height":867,"width":3073,"color":5},"id":"973a16c1-2653-454a-bf58-abb7f289c105","name":"Sticky Note1","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[-1720,-1020]},{"parameters":{"operation":"download","fileId":{"__rl":true,"value":"={{ $('Set File ID').item.json.file_id }}","mode":"id"},"options":{"googleFileConversion":{"conversion":{"docsToFormat":"text/plain"}}}},"id":"78574be8-7d52-4950-b67a-ae3d62393a82","name":"Download File","type":"n8n-nodes-base.googleDrive","typeVersion":3,"position":[-640,-740],"executeOnce":true,"credentials":{"googleDriveOAuth2Api":{"id":"nbS6fTRsKFONPFqs","name":"Google Drive account"}}},{"parameters":{"pollTimes":{"item":[{"mode":"everyMinute"}]},"triggerOn":"specificFolder","folderToWatch":{"__rl":true,"value":"1VEUNkoIdGAc9EZPv-_ENtdm67NxNZy8u","mode":"list","cachedResultName":"n8ndocuments","cachedResultUrl":"https://drive.google.com/drive/folders/1VEUNkoIdGAc9EZPv-_ENtdm67NxNZy8u"},"event":"fileCreated","options":{}},"id":"8edf234d-9b96-412d-8ba3-b5327ef60526","name":"File Created","type":"n8n-nodes-base.googleDriveTrigger","typeVersion":1,"position":[-1660,-900],"credentials":{"googleDriveOAuth2Api":{"id":"nbS6fTRsKFONPFqs","name":"Google Drive account"}}},{"parameters":{"pollTimes":{"item":[{"mode":"everyMinute"}]},"triggerOn":"specificFolder","folderToWatch":{"__rl":true,"value":"1VEUNkoIdGAc9EZPv-_ENtdm67NxNZy8u","mode":"list","cachedResultName":"n8ndocuments","cachedResultUrl":"https://drive.google.com/drive/folders/1VEUNkoIdGAc9EZPv-_ENtdm67NxNZy8u"},"event":"fileUpdated","options":{}},"id":"ebcfd70b-c404-4cb0-8dcb-b6cb9a0a0cc5","name":"File Updated","type":"n8n-nodes-base.googleDriveTrigger","typeVersion":1,"position":[-1660,-740],"credentials":{"googleDriveOAuth2Api":{"id":"nbS6fTRsKFONPFqs","name":"Google Drive account"}}},{"parameters":{"operation":"text","options":{}},"id":"86861b28-7f29-4d2c-9200-d862670663b5","name":"Extract Document Text","type":"n8n-nodes-base.extractFromFile","typeVersion":1,"position":[220,-420],"alwaysOutputData":true},{"parameters":{"operation":"delete","tableId":"da01_documents","filterType":"string","filterString":"=metadata->>file_id=like.*{{ $json.file_id }}*"},"id":"ee2e4172-255b-4a5b-8ef2-0a2c15989506","name":"Delete Old Doc Rows","type":"n8n-nodes-base.supabase","typeVersion":1,"position":[-1120,-900],"alwaysOutputData":true,"credentials":{"supabaseApi":{"id":"GwQHus8VDsBElGiE","name":"Supabase account localhost"}}},{"parameters":{"assignments":{"assignments":[{"id":"10646eae-ae46-4327-a4dc-9987c2d76173","name":"file_id","value":"={{ $json.id }}","type":"string"},{"id":"f4536df5-d0b1-4392-bf17-b8137fb31a44","name":"file_type","value":"={{ $json.mimeType }}","type":"string"},{"id":"77d782de-169d-4a46-8a8e-a3831c04d90f","name":"file_title","value":"={{ $json.name }}","type":"string"},{"id":"9bde4d7f-e4f3-4ebd-9338-dce1350f9eab","name":"file_url","value":"={{ $json.webViewLink }}","type":"string"}]},"options":{}},"id":"494428fb-6080-4f9d-9e04-895cae58c1d5","name":"Set File ID","type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-1300,-740]},{"parameters":{"operation":"pdf","options":{}},"id":"19a877c4-0cb2-4a55-8124-a5a4e0447fe9","name":"Extract PDF Text","type":"n8n-nodes-base.extractFromFile","typeVersion":1,"position":[220,-980]},{"parameters":{"aggregate":"aggregateAllItemData","options":{}},"id":"053f048d-8624-4c96-bc2c-cf3e4f3354d8","name":"Aggregate","type":"n8n-nodes-base.aggregate","typeVersion":1,"position":[260,-800]},{"parameters":{"chunkOverlap":100},"id":"d683a9fa-bbed-43ce-9e86-5017f032fbd0","name":"Character Text Splitter","type":"@n8n/n8n-nodes-langchain.textSplitterCharacterTextSplitter","typeVersion":1,"position":[920,-300]},{"parameters":{"fieldsToSummarize":{"values":[{"aggregation":"concatenate","field":"data"}]},"options":{}},"id":"4b18df32-3e19-4730-a60b-3ef3c8487f66","name":"Summarize","type":"n8n-nodes-base.summarize","typeVersion":1,"position":[460,-720]},{"parameters":{"rules":{"values":[{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":1},"conditions":[{"leftValue":"={{ $('Set File ID').item.json.file_type }}","rightValue":"application/pdf","operator":{"type":"string","operation":"equals"}}],"combinator":"and"}},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":1},"conditions":[{"id":"2ae7faa7-a936-4621-a680-60c512163034","leftValue":"={{ $('Set File ID').item.json.file_type }}","rightValue":"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"}},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":1},"conditions":[{"id":"fc193b06-363b-4699-a97d-e5a850138b0e","leftValue":"={{ $('Set File ID').item.json.file_type }}","rightValue":"=application/vnd.google-apps.spreadsheet","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"}},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":1},"conditions":[{"id":"b69f5605-0179-4b02-9a32-e34bb085f82d","leftValue":"={{ $('Set File ID').item.json.file_type }}","rightValue":"application/vnd.google-apps.document","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"}}]},"options":{"fallbackOutput":3}},"id":"9b553baf-2715-4062-b058-5dc84fca0144","name":"Switch","type":"n8n-nodes-base.switch","typeVersion":3,"position":[-440,-760]},{"parameters":{"operation":"xlsx","options":{}},"id":"cfbdc1e8-cb0b-4ecf-8daf-f15cffe47c40","name":"Extract from Excel","type":"n8n-nodes-base.extractFromFile","typeVersion":1,"position":[40,-800]},{"parameters":{"assignments":{"assignments":[{"id":"f422e2e0-381c-46ea-8f38-3f58c501d8b9","name":"schema","value":"={{ $('Extract from Excel').isExecuted ? $('Extract from Excel').first().json.keys().toJsonString() : $('Extract from CSV').first().json.keys().toJsonString() }}","type":"string"},{"id":"bb07c71e-5b60-4795-864c-cc3845b6bc46","name":"data","value":"={{ $json.concatenated_data }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[900,-860],"id":"d03e2f11-b152-4c5d-b4e1-bb07c8b45bb1","name":"Set Schema"},{"parameters":{"options":{}},"type":"n8n-nodes-base.extractFromFile","typeVersion":1,"position":[40,-620],"id":"b38c3271-08b2-4fd8-9ac7-38897740f854","name":"Extract from CSV"},{"parameters":{"options":{"reset":false}},"type":"n8n-nodes-base.splitInBatches","typeVersion":3,"position":[-1480,-900],"id":"45226a17-ca71-4350-9f97-f498348dc64f","name":"Loop Over Items"},{"parameters":{"operation":"delete","tableId":"da01_document_rows","filters":{"conditions":[{"keyName":"dataset_id","condition":"eq","keyValue":"={{ $('Set File ID').item.json.file_id }}"}]}},"type":"n8n-nodes-base.supabase","typeVersion":1,"position":[-960,-740],"id":"896ff5ca-9df8-4c18-8a0b-fc64c5c9f3d0","name":"Delete Old Data Rows","alwaysOutputData":true,"executeOnce":true,"credentials":{"supabaseApi":{"id":"GwQHus8VDsBElGiE","name":"Supabase account localhost"}}},{"parameters":{"operation":"upsert","schema":{"__rl":true,"mode":"list","value":"public"},"table":{"__rl":true,"value":"document_metadata","mode":"list","cachedResultName":"document_metadata"},"columns":{"mappingMode":"defineBelow","value":{"id":"={{ $('Set File ID').item.json.file_id }}","title":"={{ $('Set File ID').item.json.file_title }}","url":"={{ $('Set File ID').item.json.file_url }}"},"matchingColumns":["id"],"schema":[{"id":"id","displayName":"id","required":true,"defaultMatch":true,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"title","displayName":"title","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":false},{"id":"url","displayName":"url","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":false,"removed":false},{"id":"created_at","displayName":"created_at","required":false,"defaultMatch":false,"display":true,"type":"dateTime","canBeUsedToMatch":false},{"id":"schema","displayName":"schema","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":false,"removed":true}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.5,"position":[-800,-880],"id":"5e45756d-13ad-401f-8f6f-fbf6a148389b","name":"Insert Document Metadata","executeOnce":true,"credentials":{"postgres":{"id":"ULsaTVpa7uWp9X9s","name":"Postgres account Cloud"}}},{"parameters":{"schema":{"__rl":true,"mode":"list","value":"public"},"table":{"__rl":true,"value":"document_rows","mode":"list","cachedResultName":"document_rows"},"columns":{"mappingMode":"defineBelow","value":{"dataset_id":"={{ $('Set File ID').item.json.file_id }}","row_data":"={{ $json.toJsonString().replaceAll(/'/g, \"''\") }}"},"matchingColumns":["id"],"schema":[{"id":"id","displayName":"id","required":false,"defaultMatch":true,"display":true,"type":"number","canBeUsedToMatch":true,"removed":true},{"id":"dataset_id","displayName":"dataset_id","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"row_data","displayName":"row_data","required":false,"defaultMatch":false,"display":true,"type":"object","canBeUsedToMatch":true}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.5,"position":[260,-620],"id":"c5b0d3f3-7254-4455-b391-5fa821c9ef84","name":"Insert Table Rows","credentials":{"postgres":{"id":"ULsaTVpa7uWp9X9s","name":"Postgres account Cloud"}}},{"parameters":{"operation":"upsert","schema":{"__rl":true,"mode":"list","value":"public"},"table":{"__rl":true,"value":"document_metadata","mode":"list","cachedResultName":"document_metadata"},"columns":{"mappingMode":"defineBelow","value":{"id":"={{ $('Set File ID').item.json.file_id }}","schema":"={{ $json.schema }}"},"matchingColumns":["id"],"schema":[{"id":"id","displayName":"id","required":true,"defaultMatch":true,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"title","displayName":"title","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":false,"removed":true},{"id":"url","displayName":"url","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":false,"removed":true},{"id":"created_at","displayName":"created_at","required":false,"defaultMatch":false,"display":true,"type":"dateTime","canBeUsedToMatch":false},{"id":"schema","displayName":"schema","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":false,"removed":false}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.5,"position":[1120,-860],"id":"aa6c5fd1-66f0-4c59-b83e-defbdf29a619","name":"Update Schema for Document Metadata","credentials":{"postgres":{"id":"ULsaTVpa7uWp9X9s","name":"Postgres account Cloud"}}},{"parameters":{"mode":"insert","tableName":{"__rl":true,"value":"da01_documents","mode":"list","cachedResultName":"da01_documents"},"options":{"queryName":"da01_match_documents"}},"id":"f35cab93-5cc5-494d-8c9b-bddee9f1e169","name":"Insert into Supabase Vectorstore","type":"@n8n/n8n-nodes-langchain.vectorStoreSupabase","typeVersion":1,"position":[920,-680],"credentials":{"supabaseApi":{"id":"GwQHus8VDsBElGiE","name":"Supabase account localhost"}}},{"parameters":{"modelName":"models/text-embedding-004"},"type":"@n8n/n8n-nodes-langchain.embeddingsGoogleGemini","typeVersion":1,"position":[740,-420],"id":"a01a0f11-720f-4d11-ab65-794587a5aaa5","name":"Embeddings Google Gemini","credentials":{"googlePalmApi":{"id":"VxuR4Ot4TSiJTVFk","name":"Google Gemini(PaLM) Api account"}}},{"parameters":{"triggerOn":"folder","path":"/data/shared","events":["add","change"],"options":{"followSymlinks":true,"usePolling":true}},"type":"n8n-nodes-base.localFileTrigger","typeVersion":1,"position":[-1560,-40],"id":"fa740fb8-eeab-4435-b715-b15acd8b88f6","name":"Local File Trigger"},{"parameters":{"fileSelector":"={{ $('Set File ID1').item.json.file_id }}","options":{"dataPropertyName":"=data"}},"type":"n8n-nodes-base.readWriteFile","typeVersion":1,"position":[-520,120],"id":"3e95699b-7e09-41bd-98cc-ebef9fe4b535","name":"Read/Write Files from Disk"},{"parameters":{"model":"nomic-embed-text:latest"},"type":"@n8n/n8n-nodes-langchain.embeddingsOllama","typeVersion":1,"position":[780,400],"id":"2e6f8fe7-3272-4ec5-a59b-d80b19af409c","name":"Embeddings Ollama","credentials":{"ollamaApi":{"id":"SyWYISdp9guZoNay","name":"Ollama account"}}},{"parameters":{"chunkSize":400,"options":{}},"type":"@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter","typeVersion":1,"position":[940,560],"id":"f20d1674-ee83-4975-84b9-55219f90880a","name":"Recursive Character Text Splitter"},{"parameters":{"operation":"executeQuery","query":"DO $$\nBEGIN\n    IF EXISTS (SELECT 1 FROM information_schema.tables WHERE table_name = 'DA01_documents_pg') THEN\n        EXECUTE 'DELETE FROM DA01_documents_pg WHERE metadata->>''file_id'' LIKE ''%' || $1 || '%''';\n    END IF;\nEND\n$$;","options":{"queryReplacement":"={{ $json.file_id }}"}},"type":"n8n-nodes-base.postgres","typeVersion":2.5,"position":[-1000,-20],"id":"33f62c19-9e70-48e6-8713-0c994683d508","name":"Delete Old Doc Records","credentials":{"postgres":{"id":"lPXyj3Ypf5YeZpp3","name":"Postgres account Local"}}},{"parameters":{"operation":"executeQuery","query":"DELETE FROM DA01_document_rows\nWHERE dataset_id LIKE '%' || $1 || '%';","options":{"queryReplacement":"={{ $('Set File ID1').item.json.file_id }}"}},"type":"n8n-nodes-base.postgres","typeVersion":2.5,"position":[-840,120],"id":"1508758d-7209-4a06-9969-2220c08bbe7b","name":"Delete Old Data Records","credentials":{"postgres":{"id":"lPXyj3Ypf5YeZpp3","name":"Postgres account Local"}}},{"parameters":{"jsonMode":"expressionData","jsonData":"={{ $json.data || $json.text || $json.concatenated_data }}","options":{"metadata":{"metadataValues":[{"name":"=file_id","value":"={{ $('Set File ID1').first().json.file_id }}"},{"name":"file_title","value":"={{ $('Set File ID1').first().json.file_title }}"}]}}},"id":"b3ca2f30-be78-4179-88ba-0e689d267aa5","name":"Default Data Loader1","type":"@n8n/n8n-nodes-langchain.documentDefaultDataLoader","typeVersion":1,"position":[1020,400]},{"parameters":{"operation":"text","options":{}},"id":"90cf34aa-d20a-4e72-be26-83ab1b35e752","name":"Extract Document Text1","type":"n8n-nodes-base.extractFromFile","typeVersion":1,"position":[340,440],"alwaysOutputData":true},{"parameters":{"assignments":{"assignments":[{"id":"10646eae-ae46-4327-a4dc-9987c2d76173","name":"file_id","value":"={{ $json.path }}","type":"string"},{"id":"f4536df5-d0b1-4392-bf17-b8137fb31a44","name":"file_type","value":"={{ $json.path.split(/[\\\\/]/).pop().split('.').pop(); }}","type":"string"},{"id":"77d782de-169d-4a46-8a8e-a3831c04d90f","name":"file_title","value":"={{ $json.path.split(/[\\\\/]/).pop().split('.').slice(0, -1).join('.'); }}","type":"string"}]},"options":{}},"id":"97f316cc-86b8-403a-8653-f794b8a346e0","name":"Set File ID1","type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-1180,120]},{"parameters":{"aggregate":"aggregateAllItemData","options":{}},"id":"4bc8db0e-af25-4a37-a59b-9f135d4a5cd9","name":"Aggregate1","type":"n8n-nodes-base.aggregate","typeVersion":1,"position":[380,60]},{"parameters":{"fieldsToSummarize":{"values":[{"aggregation":"concatenate","field":"data"}]},"options":{}},"id":"06762bc2-296d-4a8f-bd6a-efcd42f53615","name":"Summarize1","type":"n8n-nodes-base.summarize","typeVersion":1,"position":[580,140]},{"parameters":{"rules":{"values":[{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":1},"conditions":[{"leftValue":"={{ $('Set File ID1').item.json.file_type }}","rightValue":"pdf","operator":{"type":"string","operation":"equals"}}],"combinator":"and"}},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":1},"conditions":[{"id":"2ae7faa7-a936-4621-a680-60c512163034","leftValue":"={{ $('Set File ID1').item.json.file_type }}","rightValue":"xlsx","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"}},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":1},"conditions":[{"id":"fc193b06-363b-4699-a97d-e5a850138b0e","leftValue":"={{ $('Set File ID1').item.json.file_type }}","rightValue":"=csv","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"}},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":1},"conditions":[{"id":"b69f5605-0179-4b02-9a32-e34bb085f82d","leftValue":"={{ $('Set File ID1').item.json.file_type }}","rightValue":"txt","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"}}]},"options":{"fallbackOutput":"none"}},"id":"a668ab91-f3ee-4eec-8770-1aa6f0fa61c9","name":"Switch1","type":"n8n-nodes-base.switch","typeVersion":3,"position":[-320,100]},{"parameters":{"operation":"xlsx","options":{}},"id":"ef76d1e2-336d-4723-800a-a69a14fa83cf","name":"Extract from Excel1","type":"n8n-nodes-base.extractFromFile","typeVersion":1,"position":[160,60]},{"parameters":{"assignments":{"assignments":[{"id":"f422e2e0-381c-46ea-8f38-3f58c501d8b9","name":"schema","value":"={{ $('Extract from Excel1').isExecuted ? $('Extract from Excel1').first().json.keys().toJsonString() : $('Extract from CSV1').first().json.keys().toJsonString() }}","type":"string"},{"id":"bb07c71e-5b60-4795-864c-cc3845b6bc46","name":"data","value":"={{ $json.concatenated_data }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[1020,0],"id":"3a526e2c-f8f3-432f-8d2e-a117806a6f51","name":"Set Schema1"},{"parameters":{"options":{}},"type":"n8n-nodes-base.extractFromFile","typeVersion":1,"position":[160,240],"id":"19adfc88-efcb-4ce2-9d4b-7ff54c1bf100","name":"Extract from CSV1"},{"parameters":{"options":{"reset":false}},"type":"n8n-nodes-base.splitInBatches","typeVersion":3,"position":[-1360,-40],"id":"82b75553-c252-45f6-83c2-aebc88cf5e73","name":"Loop Over Items1"},{"parameters":{"operation":"upsert","schema":{"__rl":true,"mode":"list","value":"public"},"table":{"__rl":true,"value":"da01_document_metadata","mode":"list","cachedResultName":"da01_document_metadata"},"columns":{"mappingMode":"defineBelow","value":{"id":"={{ $('Set File ID1').item.json.file_id }}","title":"={{ $('Set File ID1').item.json.file_title }}"},"matchingColumns":["id"],"schema":[{"id":"id","displayName":"id","required":true,"defaultMatch":true,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"title","displayName":"title","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":false},{"id":"url","displayName":"url","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":false,"removed":true},{"id":"created_at","displayName":"created_at","required":false,"defaultMatch":false,"display":true,"type":"dateTime","canBeUsedToMatch":false},{"id":"schema","displayName":"schema","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":false,"removed":true}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.5,"position":[-680,-20],"id":"d2d90be0-dfdc-48b4-aa02-150d1cf87e68","name":"Insert Document Metadata1","executeOnce":true,"credentials":{"postgres":{"id":"lPXyj3Ypf5YeZpp3","name":"Postgres account Local"}}},{"parameters":{"schema":{"__rl":true,"mode":"list","value":"public"},"table":{"__rl":true,"value":"DA01_documents_pg","mode":"list","cachedResultName":"DA01_documents_pg"},"columns":{"mappingMode":"defineBelow","value":{"dataset_id":"={{ $('Set File ID1').item.json.file_id }}","row_data":"={{ $json.toJsonString().replaceAll(/'/g, \"''\") }}"},"matchingColumns":["id"],"schema":[{"id":"id","displayName":"id","required":false,"defaultMatch":true,"display":true,"type":"number","canBeUsedToMatch":true,"removed":true},{"id":"dataset_id","displayName":"dataset_id","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"row_data","displayName":"row_data","required":false,"defaultMatch":false,"display":true,"type":"object","canBeUsedToMatch":true,"removed":false}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.5,"position":[380,240],"id":"98f39b6f-8f09-4726-a1c7-c48e7cbf4e17","name":"Insert Table Rows1","credentials":{"postgres":{"id":"lPXyj3Ypf5YeZpp3","name":"Postgres account Local"}}},{"parameters":{"operation":"upsert","schema":{"__rl":true,"mode":"list","value":"public"},"table":{"__rl":true,"value":"da01_document_metadata","mode":"list","cachedResultName":"da01_document_metadata"},"columns":{"mappingMode":"defineBelow","value":{"id":"={{ $('Set File ID1').item.json.file_id }}","schema":"={{ $json.schema }}"},"matchingColumns":["id"],"schema":[{"id":"id","displayName":"id","required":true,"defaultMatch":true,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"title","displayName":"title","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":false,"removed":true},{"id":"url","displayName":"url","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":false,"removed":true},{"id":"created_at","displayName":"created_at","required":false,"defaultMatch":false,"display":true,"type":"dateTime","canBeUsedToMatch":false},{"id":"schema","displayName":"schema","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":false,"removed":false}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.5,"position":[1240,0],"id":"9d1c7e98-61cd-41d6-9da9-d604a85fcce6","name":"Update Schema for Document Metadata1","credentials":{"postgres":{"id":"lPXyj3Ypf5YeZpp3","name":"Postgres account Local"}}},{"parameters":{"content":"## Tool to Add a Google Drive File to Vector DB","height":867,"width":3073,"color":3},"id":"f5d162a5-91e2-4737-ae0b-d6c9a053e253","name":"Sticky Note","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[-1720,-100]},{"parameters":{"model":"nomic-embed-text:latest"},"id":"c6931d00-fbfe-4056-a303-b8a1ac9351a1","name":"Embeddings Ollama1","type":"@n8n/n8n-nodes-langchain.embeddingsOllama","typeVersion":1,"position":[-520,1500],"credentials":{"ollamaApi":{"id":"SyWYISdp9guZoNay","name":"Ollama account"}}},{"parameters":{"mode":"insert","tableName":{"__rl":true,"value":"documents","mode":"list","cachedResultName":"documents"},"options":{"queryName":"match_documents"}},"type":"@n8n/n8n-nodes-langchain.vectorStoreSupabase","typeVersion":1,"position":[-480,1260],"id":"566c506e-4b46-494a-903b-a4d2e0de8dfa","name":"Supabase Vector Store1","credentials":{"supabaseApi":{"id":"0ndJqD87syAe4VB5","name":"Supabase account Cloud"}}},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"e051736f-949a-4230-bf32-c9ade2674b12","leftValue":"={{ $json.event }}","rightValue":"add","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[-1380,1280],"id":"d3da1bbb-b867-4dea-961c-8e4ffc856d23","name":"If"},{"parameters":{"operation":"text","destinationKey":"=data","options":{}},"id":"6b17822d-22da-4e7f-8fb7-c5f5d8c19999","name":"Extract Document Text2","type":"n8n-nodes-base.extractFromFile","typeVersion":1,"position":[-740,1260],"alwaysOutputData":true},{"parameters":{"options":{"metadata":{"metadataValues":[{"name":"file_id","value":"={{ $('Local File Trigger1').item.json.path }}"}]}}},"id":"38fb2a26-ec8d-46b1-974a-503205e67d1b","name":"Default Data Loader2","type":"@n8n/n8n-nodes-langchain.documentDefaultDataLoader","typeVersion":1,"position":[-360,1500]},{"parameters":{"chunkSize":100,"options":{}},"id":"ffb49ce5-056a-42c5-9509-cd31f22f79e9","name":"Recursive Character Text Splitter1","type":"@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter","typeVersion":1,"position":[-360,1720]},{"parameters":{"content":"## Workflow to Create Local Knowledgebase","height":705.2695614889159,"width":1568.9362829025763,"color":5},"id":"b727c59f-a28a-4a1c-a0a9-166d3c21d9d0","name":"Sticky Note2","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[-1660,1160]},{"parameters":{"operation":"delete","tableId":"documents","filterType":"string","filterString":"=metadata->>file_id=like.*{{ $json.path }}*"},"id":"e150af87-9335-41b4-987a-1a7b23bce87e","name":"Delete Old Doc Rows1","type":"n8n-nodes-base.supabase","typeVersion":1,"position":[-1200,1460],"alwaysOutputData":true,"credentials":{"supabaseApi":{"id":"0ndJqD87syAe4VB5","name":"Supabase account Cloud"}}},{"parameters":{"triggerOn":"folder","path":"/data/shared","events":["add","change"],"options":{"followSymlinks":true,"usePolling":true}},"type":"n8n-nodes-base.localFileTrigger","typeVersion":1,"position":[-1600,1460],"id":"aa4d4b0f-768a-4300-b694-5e3c52619b58","name":"Local File Trigger1"},{"parameters":{"fileSelector":"={{ $('Local File Trigger1').item.json.path }}","options":{"dataPropertyName":"=data"}},"type":"n8n-nodes-base.readWriteFile","typeVersion":1,"position":[-1020,1260],"id":"9da3c480-cc20-49d5-8210-aa733fe2d743","name":"Read/Write Files from Disk1","executeOnce":true},{"parameters":{"content":"## Run Each Node Once to Set Up Database Tables","height":300,"width":720,"color":3},"type":"n8n-nodes-base.stickyNote","position":[-2800,-900],"typeVersion":1,"id":"91add97d-a9a2-40a7-9a84-30fe238ab9ab","name":"Sticky Note3"},{"parameters":{"operation":"executeQuery","query":"CREATE TABLE DA01_document_metadata (\n    id TEXT PRIMARY KEY,\n    title TEXT,\n    url TEXT,\n    created_at TIMESTAMP DEFAULT NOW(),\n    schema TEXT\n);","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.5,"position":[-2540,-800],"id":"ef4390b9-0ef0-4ea5-ad26-a7436518b23d","name":"Create Document Metadata Table","credentials":{"postgres":{"id":"lPXyj3Ypf5YeZpp3","name":"Postgres account Local"}}},{"parameters":{"operation":"executeQuery","query":"CREATE TABLE DA01_document_rows (\n    id SERIAL PRIMARY KEY,\n    dataset_id TEXT REFERENCES document_metadata(id),\n    row_data JSONB  -- Store the actual row data\n);","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.5,"position":[-2320,-800],"id":"115b233b-9561-497f-860a-83c32e3acabc","name":"Create Document Rows Table (for Tabular Data)","credentials":{"postgres":{"id":"lPXyj3Ypf5YeZpp3","name":"Postgres account Local"}}},{"parameters":{"operation":"executeQuery","query":"-- Enable the pgvector extension to work with embedding vectors\n--create extension vector;\n\n-- Create a table to store your documents\nCREATE table DA01_documents (\n  id bigserial primary key,\n  content text, -- corresponds to Document.pageContent\n  metadata jsonb, -- corresponds to Document.metadata\n  embedding vector(768) -- 1536 works for OpenAI embeddings, change if needed\n);\n\n-- Create a function to search for documents\nCREATE function DA01_match_documents (\n  query_embedding vector(768),\n  match_count int default null,\n  filter jsonb DEFAULT '{}'\n) returns table (\n  id bigint,\n  content text,\n  metadata jsonb,\n  similarity float\n)\nlanguage plpgsql\nas $$\n#variable_conflict use_column\nbegin\n  return query\n  select\n    id,\n    content,\n    metadata,\n    1 - (documents.embedding <=> query_embedding) as similarity\n  from documents\n  where metadata @> filter\n  order by documents.embedding <=> query_embedding\n  limit match_count;\nend;\n$$;","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.5,"position":[-2740,-800],"id":"85d3c493-bbdc-47df-b4be-e39a920a99d1","name":"Create Documents Table and Match Function","credentials":{"postgres":{"id":"lPXyj3Ypf5YeZpp3","name":"Postgres account Local"}}},{"parameters":{"mode":"insert","tableName":{"__rl":true,"value":"da01_documents","mode":"list","cachedResultName":"da01_documents"},"options":{}},"type":"@n8n/n8n-nodes-langchain.vectorStoreSupabase","typeVersion":1.1,"position":[860,200],"id":"f2438ddd-0435-4528-9419-1480385339fc","name":"Supabase Vector Store","credentials":{"supabaseApi":{"id":"GwQHus8VDsBElGiE","name":"Supabase account localhost"}}}],"connections":{"Default Data Loader":{"ai_document":[[{"node":"Insert into Supabase Vectorstore","type":"ai_document","index":0}]]},"Download File":{"main":[[{"node":"Switch","type":"main","index":0}]]},"File Created":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"File Updated":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Extract Document Text":{"main":[[{"node":"Insert into Supabase Vectorstore","type":"main","index":0}]]},"Delete Old Doc Rows":{"main":[[{"node":"Delete Old Data Rows","type":"main","index":0}]]},"Set File ID":{"main":[[{"node":"Delete Old Doc Rows","type":"main","index":0}]]},"Extract PDF Text":{"main":[[{"node":"Insert into Supabase Vectorstore","type":"main","index":0}]]},"Aggregate":{"main":[[{"node":"Summarize","type":"main","index":0}]]},"Character Text Splitter":{"ai_textSplitter":[[{"node":"Default Data Loader","type":"ai_textSplitter","index":0}]]},"Summarize":{"main":[[{"node":"Set Schema","type":"main","index":0},{"node":"Insert into Supabase Vectorstore","type":"main","index":0}]]},"Switch":{"main":[[{"node":"Extract PDF Text","type":"main","index":0}],[{"node":"Extract from Excel","type":"main","index":0}],[{"node":"Extract from CSV","type":"main","index":0}],[{"node":"Extract Document Text","type":"main","index":0}]]},"Extract from Excel":{"main":[[{"node":"Aggregate","type":"main","index":0},{"node":"Insert Table Rows","type":"main","index":0}]]},"Set Schema":{"main":[[{"node":"Update Schema for Document Metadata","type":"main","index":0}]]},"Extract from CSV":{"main":[[{"node":"Aggregate","type":"main","index":0},{"node":"Insert Table Rows","type":"main","index":0}]]},"Loop Over Items":{"main":[[],[{"node":"Set File ID","type":"main","index":0}]]},"Delete Old Data Rows":{"main":[[{"node":"Insert Document Metadata","type":"main","index":0}]]},"Insert Document Metadata":{"main":[[{"node":"Download File","type":"main","index":0}]]},"Insert into Supabase Vectorstore":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Embeddings Google Gemini":{"ai_embedding":[[{"node":"Insert into Supabase Vectorstore","type":"ai_embedding","index":0}]]},"Local File Trigger":{"main":[[]]},"Read/Write Files from Disk":{"main":[[{"node":"Switch1","type":"main","index":0}]]},"Embeddings Ollama":{"ai_embedding":[[{"node":"Supabase Vector Store","type":"ai_embedding","index":0}]]},"Recursive Character Text Splitter":{"ai_textSplitter":[[{"node":"Default Data Loader1","type":"ai_textSplitter","index":0}]]},"Delete Old Doc Records":{"main":[[{"node":"Delete Old Data Records","type":"main","index":0}]]},"Delete Old Data Records":{"main":[[{"node":"Insert Document Metadata1","type":"main","index":0}]]},"Default Data Loader1":{"ai_document":[[{"node":"Supabase Vector Store","type":"ai_document","index":0}]]},"Extract Document Text1":{"main":[[{"node":"Supabase Vector Store","type":"main","index":0}]]},"Set File ID1":{"main":[[{"node":"Delete Old Doc Records","type":"main","index":0}]]},"Aggregate1":{"main":[[{"node":"Summarize1","type":"main","index":0}]]},"Summarize1":{"main":[[{"node":"Set Schema1","type":"main","index":0},{"node":"Supabase Vector Store","type":"main","index":0}]]},"Switch1":{"main":[[],[{"node":"Extract from Excel1","type":"main","index":0}],[{"node":"Extract from CSV1","type":"main","index":0}],[{"node":"Extract Document Text1","type":"main","index":0}]]},"Extract from Excel1":{"main":[[{"node":"Aggregate1","type":"main","index":0},{"node":"Insert Table Rows1","type":"main","index":0}]]},"Set Schema1":{"main":[[{"node":"Update Schema for Document Metadata1","type":"main","index":0}]]},"Extract from CSV1":{"main":[[{"node":"Aggregate1","type":"main","index":0},{"node":"Insert Table Rows1","type":"main","index":0}]]},"Loop Over Items1":{"main":[[],[{"node":"Set File ID1","type":"main","index":0}]]},"Insert Document Metadata1":{"main":[[{"node":"Read/Write Files from Disk","type":"main","index":0}]]},"Embeddings Ollama1":{"ai_embedding":[[{"node":"Supabase Vector Store1","type":"ai_embedding","index":0}]]},"If":{"main":[[{"node":"Read/Write Files from Disk1","type":"main","index":0}],[{"node":"Delete Old Doc Rows1","type":"main","index":0}]]},"Extract Document Text2":{"main":[[{"node":"Supabase Vector Store1","type":"main","index":0}]]},"Default Data Loader2":{"ai_document":[[{"node":"Supabase Vector Store1","type":"ai_document","index":0}]]},"Recursive Character Text Splitter1":{"ai_textSplitter":[[{"node":"Default Data Loader2","type":"ai_textSplitter","index":0}]]},"Delete Old Doc Rows1":{"main":[[{"node":"Read/Write Files from Disk1","type":"main","index":0}]]},"Local File Trigger1":{"main":[[{"node":"If","type":"main","index":0}]]},"Read/Write Files from Disk1":{"main":[[{"node":"Extract Document Text2","type":"main","index":0}]]},"Supabase Vector Store":{"main":[[{"node":"Loop Over Items1","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"14706c54-cd37-487a-bcbc-531a679815d1","triggerCount":0,"tags":[],"shared":[{"createdAt":"2025-05-05T03:29:18.775Z","updatedAt":"2025-05-05T03:29:18.775Z","role":"workflow:owner","workflowId":"yCAll4psbD1SGnLX","projectId":"WbfPHUYYKS2tiNNo","project":{"createdAt":"2025-05-03T06:49:18.088Z","updatedAt":"2025-05-03T06:52:24.837Z","id":"WbfPHUYYKS2tiNNo","name":"charlie phan <scottyphan08@gmail.com>","type":"personal","icon":null,"description":null}}]},{"createdAt":"2025-05-05T04:06:29.955Z","updatedAt":"2025-05-05T04:06:51.819Z","id":"5xCRFETIY3FuBs81","name":"Import vector database Local","active":false,"isArchived":false,"nodes":[{"parameters":{"triggerOn":"folder","path":"/data/shared","events":["add","change"],"options":{"followSymlinks":true,"usePolling":true}},"type":"n8n-nodes-base.localFileTrigger","typeVersion":1,"position":[-1560,-40],"id":"4e7b2982-01a1-4726-a435-9f2c05912855","name":"Local File Trigger"},{"parameters":{"fileSelector":"={{ $('Set File ID1').item.json.file_id }}","options":{"dataPropertyName":"=data"}},"type":"n8n-nodes-base.readWriteFile","typeVersion":1,"position":[-520,120],"id":"177caa85-7489-4eff-bd00-3a071c6d583b","name":"Read/Write Files from Disk"},{"parameters":{"model":"nomic-embed-text:latest"},"type":"@n8n/n8n-nodes-langchain.embeddingsOllama","typeVersion":1,"position":[900,440],"id":"78dd80dd-3ee7-48bd-8e2c-9703744599de","name":"Embeddings Ollama","credentials":{"ollamaApi":{"id":"SyWYISdp9guZoNay","name":"Ollama account"}}},{"parameters":{"chunkSize":400,"options":{}},"type":"@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter","typeVersion":1,"position":[1040,560],"id":"810b499b-7cef-4c7f-817c-9293aee242d1","name":"Recursive Character Text Splitter"},{"parameters":{"operation":"executeQuery","query":"DO $$\nBEGIN\n    IF EXISTS (SELECT 1 FROM information_schema.tables WHERE table_name = 'DA01_documents_pg') THEN\n        EXECUTE 'DELETE FROM DA01_documents_pg WHERE metadata->>''file_id'' LIKE ''%' || $1 || '%''';\n    END IF;\nEND\n$$;","options":{"queryReplacement":"={{ $json.file_id }}"}},"type":"n8n-nodes-base.postgres","typeVersion":2.5,"position":[-1000,-20],"id":"25731758-e331-4c42-9721-59cb8553ad3a","name":"Delete Old Doc Records","credentials":{"postgres":{"id":"lPXyj3Ypf5YeZpp3","name":"Postgres account Local"}}},{"parameters":{"operation":"executeQuery","query":"DELETE FROM DA01_document_rows\nWHERE dataset_id LIKE '%' || $1 || '%';","options":{"queryReplacement":"={{ $('Set File ID1').item.json.file_id }}"}},"type":"n8n-nodes-base.postgres","typeVersion":2.5,"position":[-840,120],"id":"f2d92f11-d6f0-4771-9213-dc4efafe7699","name":"Delete Old Data Records","credentials":{"postgres":{"id":"lPXyj3Ypf5YeZpp3","name":"Postgres account Local"}}},{"parameters":{"mode":"insert","tableName":"DA01_documents_pg","options":{}},"type":"@n8n/n8n-nodes-langchain.vectorStorePGVector","typeVersion":1,"position":[1020,220],"id":"1d77b954-890e-497b-894b-22c2a8ccddcc","name":"Postgres PGVector Store","credentials":{"postgres":{"id":"lPXyj3Ypf5YeZpp3","name":"Postgres account Local"}}},{"parameters":{"jsonMode":"expressionData","jsonData":"={{ $json.data || $json.text || $json.concatenated_data }}","options":{"metadata":{"metadataValues":[{"name":"=file_id","value":"={{ $('Set File ID1').first().json.file_id }}"},{"name":"file_title","value":"={{ $('Set File ID1').first().json.file_title }}"}]}}},"id":"3bc6caba-3255-474a-b600-1ddd7d705c1b","name":"Default Data Loader1","type":"@n8n/n8n-nodes-langchain.documentDefaultDataLoader","typeVersion":1,"position":[1140,440]},{"parameters":{"operation":"text","options":{}},"id":"6e678ad1-8346-4ebd-8a47-a628f536ef06","name":"Extract Document Text1","type":"n8n-nodes-base.extractFromFile","typeVersion":1,"position":[340,440],"alwaysOutputData":true},{"parameters":{"assignments":{"assignments":[{"id":"10646eae-ae46-4327-a4dc-9987c2d76173","name":"file_id","value":"={{ $json.path }}","type":"string"},{"id":"f4536df5-d0b1-4392-bf17-b8137fb31a44","name":"file_type","value":"={{ $json.path.split(/[\\\\/]/).pop().split('.').pop(); }}","type":"string"},{"id":"77d782de-169d-4a46-8a8e-a3831c04d90f","name":"file_title","value":"={{ $json.path.split(/[\\\\/]/).pop().split('.').slice(0, -1).join('.'); }}","type":"string"}]},"options":{}},"id":"d5de0d3b-4afe-4772-8731-d5b3ba3ee77d","name":"Set File ID1","type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-1180,120]},{"parameters":{"aggregate":"aggregateAllItemData","options":{}},"id":"4aed3485-d39d-416a-abf2-dcb121770524","name":"Aggregate1","type":"n8n-nodes-base.aggregate","typeVersion":1,"position":[380,60]},{"parameters":{"fieldsToSummarize":{"values":[{"aggregation":"concatenate","field":"data"}]},"options":{}},"id":"e4340bec-3691-49eb-b2ee-0edd0d07d991","name":"Summarize1","type":"n8n-nodes-base.summarize","typeVersion":1,"position":[580,140]},{"parameters":{"rules":{"values":[{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":1},"conditions":[{"leftValue":"={{ $('Set File ID1').item.json.file_type }}","rightValue":"pdf","operator":{"type":"string","operation":"equals"}}],"combinator":"and"}},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":1},"conditions":[{"id":"2ae7faa7-a936-4621-a680-60c512163034","leftValue":"={{ $('Set File ID1').item.json.file_type }}","rightValue":"xlsx","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"}},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":1},"conditions":[{"id":"fc193b06-363b-4699-a97d-e5a850138b0e","leftValue":"={{ $('Set File ID1').item.json.file_type }}","rightValue":"=csv","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"}},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":1},"conditions":[{"id":"b69f5605-0179-4b02-9a32-e34bb085f82d","leftValue":"={{ $('Set File ID1').item.json.file_type }}","rightValue":"txt","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"}}]},"options":{"fallbackOutput":3}},"id":"eb5f24a1-c2c0-44e1-87f2-77dde520dc97","name":"Switch1","type":"n8n-nodes-base.switch","typeVersion":3,"position":[-320,100]},{"parameters":{"operation":"xlsx","options":{}},"id":"983764ee-6e19-4218-8694-eb23ab0d9295","name":"Extract from Excel1","type":"n8n-nodes-base.extractFromFile","typeVersion":1,"position":[160,60]},{"parameters":{"assignments":{"assignments":[{"id":"f422e2e0-381c-46ea-8f38-3f58c501d8b9","name":"schema","value":"={{ $('Extract from Excel1').isExecuted ? $('Extract from Excel1').first().json.keys().toJsonString() : $('Extract from CSV1').first().json.keys().toJsonString() }}","type":"string"},{"id":"bb07c71e-5b60-4795-864c-cc3845b6bc46","name":"data","value":"={{ $json.concatenated_data }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[1020,0],"id":"094acf8e-1327-44e1-b983-4820632296d6","name":"Set Schema1"},{"parameters":{"options":{}},"type":"n8n-nodes-base.extractFromFile","typeVersion":1,"position":[160,240],"id":"38ee5018-aea6-473b-8fd6-bf3393c52e9a","name":"Extract from CSV1"},{"parameters":{"options":{"reset":false}},"type":"n8n-nodes-base.splitInBatches","typeVersion":3,"position":[-1360,-40],"id":"d7a758bf-42a1-4dd2-b467-24538995e7c6","name":"Loop Over Items1"},{"parameters":{"operation":"upsert","schema":{"__rl":true,"mode":"list","value":"public"},"table":{"__rl":true,"value":"da01_document_metadata","mode":"list","cachedResultName":"da01_document_metadata"},"columns":{"mappingMode":"defineBelow","value":{"id":"={{ $('Set File ID1').item.json.file_id }}","title":"={{ $('Set File ID1').item.json.file_title }}"},"matchingColumns":["id"],"schema":[{"id":"id","displayName":"id","required":true,"defaultMatch":true,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"title","displayName":"title","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":false},{"id":"url","displayName":"url","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":false,"removed":true},{"id":"created_at","displayName":"created_at","required":false,"defaultMatch":false,"display":true,"type":"dateTime","canBeUsedToMatch":false},{"id":"schema","displayName":"schema","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":false,"removed":true}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.5,"position":[-680,-20],"id":"109127f6-1b2b-4d80-8616-93ed72ce1130","name":"Insert Document Metadata1","executeOnce":true,"credentials":{"postgres":{"id":"lPXyj3Ypf5YeZpp3","name":"Postgres account Local"}}},{"parameters":{"schema":{"__rl":true,"mode":"list","value":"public"},"table":{"__rl":true,"value":"DA01_documents_pg","mode":"list","cachedResultName":"DA01_documents_pg"},"columns":{"mappingMode":"defineBelow","value":{"dataset_id":"={{ $('Set File ID1').item.json.file_id }}","row_data":"={{ $json.toJsonString().replaceAll(/'/g, \"''\") }}"},"matchingColumns":["id"],"schema":[{"id":"id","displayName":"id","required":false,"defaultMatch":true,"display":true,"type":"number","canBeUsedToMatch":true,"removed":true},{"id":"dataset_id","displayName":"dataset_id","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"row_data","displayName":"row_data","required":false,"defaultMatch":false,"display":true,"type":"object","canBeUsedToMatch":true,"removed":false}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.5,"position":[380,240],"id":"ae348c4d-a305-4b2f-b0dc-d8726dcd74db","name":"Insert Table Rows1","credentials":{"postgres":{"id":"lPXyj3Ypf5YeZpp3","name":"Postgres account Local"}}},{"parameters":{"operation":"upsert","schema":{"__rl":true,"mode":"list","value":"public"},"table":{"__rl":true,"value":"da01_document_metadata","mode":"list","cachedResultName":"da01_document_metadata"},"columns":{"mappingMode":"defineBelow","value":{"id":"={{ $('Set File ID1').item.json.file_id }}","schema":"={{ $json.schema }}"},"matchingColumns":["id"],"schema":[{"id":"id","displayName":"id","required":true,"defaultMatch":true,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"title","displayName":"title","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":false,"removed":true},{"id":"url","displayName":"url","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":false,"removed":true},{"id":"created_at","displayName":"created_at","required":false,"defaultMatch":false,"display":true,"type":"dateTime","canBeUsedToMatch":false},{"id":"schema","displayName":"schema","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":false,"removed":false}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.5,"position":[1240,0],"id":"fc93604e-53cc-4ab8-ac6c-136ba6158dbc","name":"Update Schema for Document Metadata1","credentials":{"postgres":{"id":"lPXyj3Ypf5YeZpp3","name":"Postgres account Local"}}},{"parameters":{"content":"## Tool to Add a Google Drive File to Vector DB","height":867,"width":3073,"color":3},"id":"788d61ef-7734-4e64-9070-b42de30d4146","name":"Sticky Note","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[-1720,-100]},{"parameters":{"content":"## Run Each Node Once to Set Up Database Tables","height":300,"width":720,"color":3},"type":"n8n-nodes-base.stickyNote","position":[-2800,-900],"typeVersion":1,"id":"917b36d8-6093-4b12-b698-a9f0566ce9a3","name":"Sticky Note3"},{"parameters":{"operation":"executeQuery","query":"CREATE TABLE DA01_document_metadata (\n    id TEXT PRIMARY KEY,\n    title TEXT,\n    url TEXT,\n    created_at TIMESTAMP DEFAULT NOW(),\n    schema TEXT\n);","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.5,"position":[-2540,-800],"id":"e836bd81-1062-410d-9e5f-16b698bc4177","name":"Create Document Metadata Table","credentials":{"postgres":{"id":"lPXyj3Ypf5YeZpp3","name":"Postgres account Local"}}},{"parameters":{"operation":"executeQuery","query":"CREATE TABLE DA01_document_rows (\n    id SERIAL PRIMARY KEY,\n    dataset_id TEXT REFERENCES document_metadata(id),\n    row_data JSONB  -- Store the actual row data\n);","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.5,"position":[-2320,-800],"id":"0f17b051-975f-4fe2-ab10-a6df3cb12428","name":"Create Document Rows Table (for Tabular Data)","credentials":{"postgres":{"id":"lPXyj3Ypf5YeZpp3","name":"Postgres account Local"}}},{"parameters":{"operation":"executeQuery","query":"-- Enable the pgvector extension to work with embedding vectors\n--create extension vector;\n\n-- Create a table to store your documents\ncreate table DA01_documents (\n  id bigserial primary key,\n  content text, -- corresponds to Document.pageContent\n  metadata jsonb, -- corresponds to Document.metadata\n  embedding vector(3072) -- 1536 works for OpenAI embeddings, change if needed\n);\n\n-- Create a function to search for documents\ncreate function DA01_match_documents (\n  query_embedding vector(3072),\n  match_count int default null,\n  filter jsonb DEFAULT '{}'\n) returns table (\n  id bigint,\n  content text,\n  metadata jsonb,\n  similarity float\n)\nlanguage plpgsql\nas $$\n#variable_conflict use_column\nbegin\n  return query\n  select\n    id,\n    content,\n    metadata,\n    1 - (documents.embedding <=> query_embedding) as similarity\n  from documents\n  where metadata @> filter\n  order by documents.embedding <=> query_embedding\n  limit match_count;\nend;\n$$;","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.5,"position":[-2740,-800],"id":"9f0970d1-ecd6-4d06-b21c-b78157166d8e","name":"Create Documents Table and Match Function","credentials":{"postgres":{"id":"lPXyj3Ypf5YeZpp3","name":"Postgres account Local"}}}],"connections":{"Local File Trigger":{"main":[[]]},"Read/Write Files from Disk":{"main":[[{"node":"Switch1","type":"main","index":0}]]},"Embeddings Ollama":{"ai_embedding":[[{"node":"Postgres PGVector Store","type":"ai_embedding","index":0}]]},"Recursive Character Text Splitter":{"ai_textSplitter":[[{"node":"Default Data Loader1","type":"ai_textSplitter","index":0}]]},"Delete Old Doc Records":{"main":[[{"node":"Delete Old Data Records","type":"main","index":0}]]},"Delete Old Data Records":{"main":[[{"node":"Insert Document Metadata1","type":"main","index":0}]]},"Postgres PGVector Store":{"main":[[{"node":"Loop Over Items1","type":"main","index":0}]]},"Default Data Loader1":{"ai_document":[[{"node":"Postgres PGVector Store","type":"ai_document","index":0}]]},"Extract Document Text1":{"main":[[{"node":"Postgres PGVector Store","type":"main","index":0}]]},"Set File ID1":{"main":[[{"node":"Delete Old Doc Records","type":"main","index":0}]]},"Aggregate1":{"main":[[{"node":"Summarize1","type":"main","index":0}]]},"Summarize1":{"main":[[{"node":"Set Schema1","type":"main","index":0},{"node":"Postgres PGVector Store","type":"main","index":0}]]},"Switch1":{"main":[[],[{"node":"Extract from Excel1","type":"main","index":0}],[{"node":"Extract from CSV1","type":"main","index":0}],[{"node":"Extract Document Text1","type":"main","index":0}]]},"Extract from Excel1":{"main":[[{"node":"Aggregate1","type":"main","index":0},{"node":"Insert Table Rows1","type":"main","index":0}]]},"Set Schema1":{"main":[[{"node":"Update Schema for Document Metadata1","type":"main","index":0}]]},"Extract from CSV1":{"main":[[{"node":"Aggregate1","type":"main","index":0},{"node":"Insert Table Rows1","type":"main","index":0}]]},"Loop Over Items1":{"main":[[],[{"node":"Set File ID1","type":"main","index":0}]]},"Insert Document Metadata1":{"main":[[{"node":"Read/Write Files from Disk","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":null,"pinData":{},"versionId":"20238750-88e3-434e-8753-840862801d14","triggerCount":0,"tags":[],"shared":[{"createdAt":"2025-05-05T04:06:29.955Z","updatedAt":"2025-05-05T04:06:29.955Z","role":"workflow:owner","workflowId":"5xCRFETIY3FuBs81","projectId":"WbfPHUYYKS2tiNNo","project":{"createdAt":"2025-05-03T06:49:18.088Z","updatedAt":"2025-05-03T06:52:24.837Z","id":"WbfPHUYYKS2tiNNo","name":"charlie phan <scottyphan08@gmail.com>","type":"personal","icon":null,"description":null}}]},{"createdAt":"2025-05-06T07:17:09.006Z","updatedAt":"2025-05-06T07:35:39.536Z","id":"J3ApnglyCU1SLchI","name":"My workflow 2","active":false,"isArchived":false,"nodes":[{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.chatTrigger","typeVersion":1.1,"position":[0,0],"id":"2da46c05-0a6a-4a2d-b473-bda4e9857f18","name":"When chat message received","webhookId":"94178dc2-c42a-4480-888d-cee76fef3012"},{"parameters":{"options":{"systemMessage":"khi có yêu cầu Hãy truy cập vào google calendar check các cuộc họp và truy suất ra thông tin nha\n\nKhi có yêu cầu thêm thông tin lịch họp bạn hãy thêm thông tin vào google calendar của tôi "}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":1.9,"position":[220,0],"id":"7b015345-2b30-4fdd-8aa1-e6d5522186cb","name":"AI Agent"},{"parameters":{"modelName":"models/gemini-2.0-flash","options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatGoogleGemini","typeVersion":1,"position":[40,200],"id":"a7773879-2ce2-4c81-ad97-4256f8590224","name":"Google Gemini Chat Model","credentials":{"googlePalmApi":{"id":"VxuR4Ot4TSiJTVFk","name":"Google Gemini(PaLM) Api account"}}},{"parameters":{"operation":"getAll","calendar":{"__rl":true,"value":"vi.vietnamese#holiday@group.v.calendar.google.com","mode":"list","cachedResultName":"Ngày lễ ở Việt Nam"},"options":{}},"type":"n8n-nodes-base.googleCalendarTool","typeVersion":1.3,"position":[560,160],"id":"3b38c741-af31-4f61-a1da-8122221d3bba","name":"Google Calendar","credentials":{"googleCalendarOAuth2Api":{"id":"krHXGEaFpIrtKpX3","name":"Google Calendar account"}}},{"parameters":{},"type":"@n8n/n8n-nodes-langchain.memoryBufferWindow","typeVersion":1.3,"position":[220,220],"id":"c9f9ac3a-379c-4248-818e-0a0373791672","name":"Simple Memory"},{"parameters":{"calendar":{"__rl":true,"value":"vi.vietnamese#holiday@group.v.calendar.google.com","mode":"list","cachedResultName":"Ngày lễ ở Việt Nam"},"additionalFields":{}},"type":"n8n-nodes-base.googleCalendarTool","typeVersion":1.3,"position":[380,220],"id":"d90f56c6-5a6b-46a7-8a3c-4c0af6b87b0a","name":"Google Calendar1","credentials":{"googleCalendarOAuth2Api":{"id":"krHXGEaFpIrtKpX3","name":"Google Calendar account"}}}],"connections":{"When chat message received":{"main":[[{"node":"AI Agent","type":"main","index":0}]]},"Google Gemini Chat Model":{"ai_languageModel":[[{"node":"AI Agent","type":"ai_languageModel","index":0}]]},"Google Calendar":{"ai_tool":[[{"node":"AI Agent","type":"ai_tool","index":0}]]},"Simple Memory":{"ai_memory":[[{"node":"AI Agent","type":"ai_memory","index":0}]]},"Google Calendar1":{"ai_tool":[[{"node":"AI Agent","type":"ai_tool","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"01917cc7-db25-4a20-91f4-c9999c548690","triggerCount":0,"tags":[],"shared":[{"createdAt":"2025-05-06T07:17:09.006Z","updatedAt":"2025-05-06T07:17:09.006Z","role":"workflow:owner","workflowId":"J3ApnglyCU1SLchI","projectId":"WbfPHUYYKS2tiNNo","project":{"createdAt":"2025-05-03T06:49:18.088Z","updatedAt":"2025-05-03T06:52:24.837Z","id":"WbfPHUYYKS2tiNNo","name":"charlie phan <scottyphan08@gmail.com>","type":"personal","icon":null,"description":null}}]},{"createdAt":"2025-05-06T08:39:13.765Z","updatedAt":"2025-05-22T01:56:41.244Z","id":"lk84GBOTQRbQ2ZcG","name":"Ultimate RAG QA file","active":false,"isArchived":false,"nodes":[{"parameters":{"jsonMode":"expressionData","jsonData":"={{ $json.data || $json.text || $json.concatenated_data }}","options":{"metadata":{"metadataValues":[{"name":"=file_id","value":"={{ $('Set File ID').first().json.file_id }}"},{"name":"file_title","value":"={{ $('Set File ID').first().json.file_title }}"}]}}},"id":"d0ee72b0-e8a9-4a3c-8e9f-b47667d2cf79","name":"Default Data Loader","type":"@n8n/n8n-nodes-langchain.documentDefaultDataLoader","typeVersion":1,"position":[1000,1140]},{"parameters":{"content":"## Agent Tools for RAG","height":528.85546469693,"width":583.4552380860637,"color":4},"id":"b5d1848a-4725-47da-9ccf-3a0df78ac19f","name":"Sticky Note","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[0,0]},{"parameters":{"content":"## Tool to Add a Google Drive File to Vector DB","height":867,"width":3073,"color":5},"id":"0afead9d-1d80-4ae5-99fc-3206cf16bbd2","name":"Sticky Note1","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[-1740,540]},{"parameters":{"operation":"download","fileId":{"__rl":true,"value":"={{ $('Set File ID').item.json.file_id }}","mode":"id"},"options":{"googleFileConversion":{"conversion":{"docsToFormat":"text/plain"}}}},"id":"96cd50d1-2090-452e-9e7c-e357a945b7a9","name":"Download File","type":"n8n-nodes-base.googleDrive","typeVersion":3,"position":[-660,820],"executeOnce":true,"credentials":{"googleDriveOAuth2Api":{"id":"nbS6fTRsKFONPFqs","name":"Google Drive account"}}},{"parameters":{"pollTimes":{"item":[{"mode":"everyMinute"}]},"triggerOn":"specificFolder","folderToWatch":{"__rl":true,"value":"1oFu5np2GG_Y__qC4O9aoZAxT1zvqhywl","mode":"list","cachedResultName":"n8n","cachedResultUrl":"https://drive.google.com/drive/folders/1oFu5np2GG_Y__qC4O9aoZAxT1zvqhywl"},"event":"fileCreated","options":{}},"id":"28b0780f-d225-4b57-8f47-44222a96637e","name":"File Created","type":"n8n-nodes-base.googleDriveTrigger","typeVersion":1,"position":[-1680,660],"credentials":{"googleDriveOAuth2Api":{"id":"XDqLv6T2wJMb4j1U","name":"Google Drive account pnjp"}}},{"parameters":{"pollTimes":{"item":[{"mode":"everyMinute"}]},"triggerOn":"specificFolder","folderToWatch":{"__rl":true,"value":"1oFu5np2GG_Y__qC4O9aoZAxT1zvqhywl","mode":"list","cachedResultName":"n8n","cachedResultUrl":"https://drive.google.com/drive/folders/1oFu5np2GG_Y__qC4O9aoZAxT1zvqhywl"},"event":"fileUpdated","options":{}},"id":"e314c898-3722-48f2-b5d6-1501ab787ba1","name":"File Updated","type":"n8n-nodes-base.googleDriveTrigger","typeVersion":1,"position":[-1680,820],"credentials":{"googleDriveOAuth2Api":{"id":"nbS6fTRsKFONPFqs","name":"Google Drive account"}}},{"parameters":{"operation":"text","options":{}},"id":"1aa20a51-c39e-45b4-a978-cda0d7d3e609","name":"Extract Document Text","type":"n8n-nodes-base.extractFromFile","typeVersion":1,"position":[200,1140],"alwaysOutputData":true},{"parameters":{"sessionIdType":"customKey","sessionKey":"={{ $('Telegram Trigger').item.json.message.text }}"},"id":"94f0b5de-1036-424a-8347-040e76c0fcbe","name":"Postgres Chat Memory","type":"@n8n/n8n-nodes-langchain.memoryPostgresChat","typeVersion":1,"position":[-600,380],"notesInFlow":false,"credentials":{"postgres":{"id":"ULsaTVpa7uWp9X9s","name":"Postgres account Cloud"}}},{"parameters":{"operation":"delete","tableId":"documents","filterType":"string","filterString":"=metadata->>file_id=like.*{{ $json.file_id }}*"},"id":"1f0f0423-f075-4458-8a92-51a04eccfdc0","name":"Delete Old Doc Rows","type":"n8n-nodes-base.supabase","typeVersion":1,"position":[-1140,660],"alwaysOutputData":true,"credentials":{"supabaseApi":{"id":"0ndJqD87syAe4VB5","name":"Supabase account Cloud"}}},{"parameters":{"assignments":{"assignments":[{"id":"10646eae-ae46-4327-a4dc-9987c2d76173","name":"file_id","value":"={{ $json.id }}","type":"string"},{"id":"f4536df5-d0b1-4392-bf17-b8137fb31a44","name":"file_type","value":"={{ $json.mimeType }}","type":"string"},{"id":"77d782de-169d-4a46-8a8e-a3831c04d90f","name":"file_title","value":"={{ $json.name }}","type":"string"},{"id":"9bde4d7f-e4f3-4ebd-9338-dce1350f9eab","name":"file_url","value":"={{ $json.webViewLink }}","type":"string"}]},"options":{}},"id":"23c663c6-5be1-47e9-b3e7-d80d4aa7fe85","name":"Set File ID","type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-1320,820]},{"parameters":{"content":"## RAG AI Agent with Chat Interface","height":464.8027193303974,"width":1035.6381264595484},"id":"33982cc7-9470-4bfe-a8ae-a5a0bc0846f6","name":"Sticky Note2","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[-1040,60]},{"parameters":{"assignments":{"assignments":[{"id":"9a9a245e-f1a1-4282-bb02-a81ffe629f0f","name":"chatInput","value":"={{ $json?.chatInput || $json.body.chatInput }}","type":"string"},{"id":"b80831d8-c653-4203-8706-adedfdb98f77","name":"sessionId","value":"={{ $json?.sessionId || $json.body.sessionId}}","type":"string"}]},"options":{}},"id":"df49ccba-f2a5-4ed5-a93d-d1f3c40d191d","name":"Edit Fields","type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-740,140]},{"parameters":{"public":true,"options":{}},"id":"4b3d78c7-cec2-4a3d-bbf1-e52d444c9550","name":"When chat message received","type":"@n8n/n8n-nodes-langchain.chatTrigger","typeVersion":1.1,"position":[-1000,140],"webhookId":"8ba8058b-b96b-4ec7-8df6-5dc1a7414bc0"},{"parameters":{"operation":"pdf","options":{}},"id":"271792fe-6efc-4331-ba27-d9ff0dfd084c","name":"Extract PDF Text","type":"n8n-nodes-base.extractFromFile","typeVersion":1,"position":[200,580]},{"parameters":{"aggregate":"aggregateAllItemData","options":{}},"id":"fe838174-1042-4cef-8f99-239b54640905","name":"Aggregate","type":"n8n-nodes-base.aggregate","typeVersion":1,"position":[240,760]},{"parameters":{"chunkOverlap":100},"id":"f7c7d7c0-6026-4972-aeee-64e08c94102e","name":"Character Text Splitter","type":"@n8n/n8n-nodes-langchain.textSplitterCharacterTextSplitter","typeVersion":1,"position":[900,1260]},{"parameters":{"fieldsToSummarize":{"values":[{"aggregation":"concatenate","field":"data"}]},"options":{}},"id":"fd54d14b-083e-4f4b-90be-1f095f3761ef","name":"Summarize","type":"n8n-nodes-base.summarize","typeVersion":1,"position":[440,840]},{"parameters":{"promptType":"define","text":"={{ $('Telegram Trigger').item.json.message.text }}","options":{"systemMessage":"When customer say hi or hello, you should reply : \" I am AI assistant from PJP company, may i help you.\"\nYou are a helpful customer support assistant. Use the knowledge from the following Q&A pairs to answer user questions.\n\nAlways refer to the most relevant answer from the provided context below. If the context does not contain enough information, respond: \"I’m sorry, I don’t have enough information to answer that.\"\n\n### Context:\n{retrieved_documents}\n\n### User Question:\n{user_question}\n\n### Your Answer:"}},"id":"850c7e80-4e03-40fc-a8cc-017293c7a1bc","name":"RAG AI Agent","type":"@n8n/n8n-nodes-langchain.agent","typeVersion":1.6,"position":[-560,80]},{"parameters":{"rules":{"values":[{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":1},"conditions":[{"leftValue":"={{ $('Set File ID').item.json.file_type }}","rightValue":"application/pdf","operator":{"type":"string","operation":"equals"}}],"combinator":"and"}},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":1},"conditions":[{"id":"2ae7faa7-a936-4621-a680-60c512163034","leftValue":"={{ $('Set File ID').item.json.file_type }}","rightValue":"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"}},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":1},"conditions":[{"id":"fc193b06-363b-4699-a97d-e5a850138b0e","leftValue":"={{ $('Set File ID').item.json.file_type }}","rightValue":"=application/vnd.google-apps.spreadsheet","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"}},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":1},"conditions":[{"id":"b69f5605-0179-4b02-9a32-e34bb085f82d","leftValue":"={{ $('Set File ID').item.json.file_type }}","rightValue":"application/vnd.google-apps.document","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"}}]},"options":{"fallbackOutput":3}},"id":"559a1fdb-00c0-413c-aa5b-85b954d728e9","name":"Switch","type":"n8n-nodes-base.switch","typeVersion":3,"position":[-460,800]},{"parameters":{"operation":"xlsx","options":{}},"id":"938ebc58-0475-4551-9edd-6da655df80a9","name":"Extract from Excel","type":"n8n-nodes-base.extractFromFile","typeVersion":1,"position":[20,760]},{"parameters":{"assignments":{"assignments":[{"id":"f422e2e0-381c-46ea-8f38-3f58c501d8b9","name":"schema","value":"={{ $('Extract from Excel').isExecuted ? $('Extract from Excel').first().json.keys().toJsonString() : $('Extract from CSV').first().json.keys().toJsonString() }}","type":"string"},{"id":"bb07c71e-5b60-4795-864c-cc3845b6bc46","name":"data","value":"={{ $json.concatenated_data }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[880,700],"id":"ea143eeb-f0ca-4f42-9b72-f84456ce8be7","name":"Set Schema"},{"parameters":{"options":{}},"type":"n8n-nodes-base.extractFromFile","typeVersion":1,"position":[20,940],"id":"9c540d6e-1b3f-4d26-865a-e81b5ea846bb","name":"Extract from CSV"},{"parameters":{"content":"## Run Each Node Once to Set Up Database Tables","height":300,"width":680,"color":3},"type":"n8n-nodes-base.stickyNote","position":[-1740,220],"typeVersion":1,"id":"57665960-f15c-4945-ae13-2ed3f080d9f7","name":"Sticky Note3"},{"parameters":{"operation":"executeQuery","query":"CREATE TABLE document_metadata (\n    id TEXT PRIMARY KEY,\n    title TEXT,\n    url TEXT,\n    created_at TIMESTAMP DEFAULT NOW(),\n    schema TEXT\n);","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.5,"position":[-1480,320],"id":"013fc55f-b6e9-4c52-a6d7-c87b77ebd314","name":"Create Document Metadata Table","credentials":{"postgres":{"id":"ULsaTVpa7uWp9X9s","name":"Postgres account Cloud"}}},{"parameters":{"operation":"executeQuery","query":"CREATE TABLE document_rows (\n    id SERIAL PRIMARY KEY,\n    dataset_id TEXT REFERENCES document_metadata(id),\n    row_data JSONB  -- Store the actual row data\n);","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.5,"position":[-1260,320],"id":"94b390fb-b4c9-4004-8e4c-b02e9f5bc847","name":"Create Document Rows Table (for Tabular Data)","credentials":{"postgres":{"id":"ULsaTVpa7uWp9X9s","name":"Postgres account Cloud"}}},{"parameters":{"descriptionType":"manual","toolDescription":"Given a file ID, fetches the text from the document.","operation":"executeQuery","query":"SELECT \n    string_agg(content, ' ') as document_text\nFROM QA\n  WHERE metadata->>'file_id' = $1\nGROUP BY metadata->>'file_id';","options":{"queryReplacement":"={{ $fromAI('file_id') }}"}},"type":"n8n-nodes-base.postgresTool","typeVersion":2.5,"position":[-320,360],"id":"bf250cfd-3412-4fa2-b389-7937730b55cb","name":"Get File Contents","credentials":{"postgres":{"id":"ULsaTVpa7uWp9X9s","name":"Postgres account Cloud"}}},{"parameters":{"descriptionType":"manual","toolDescription":"=Run a SQL query - use this to query from the QA table once you know the file ID you are querying. dataset_id is the file_id and you are always using the row_data for filtering, which is a jsonb field that has all the keys from the file schema given in the document_metadata table.\n\nExample query:\n\nSELECT AVG((row_data->>'revenue')::numeric)\nFROM QA\nWHERE dataset_id = '123';\n\nExample query 2:\n\nSELECT \n    row_data->>'category' as category,\n    SUM((row_data->>'sales')::numeric) as total_sales\nFROM dataset_rows\nWHERE dataset_id = '123'\nGROUP BY row_data->>'category';","operation":"executeQuery","query":"{{ $fromAI('sql_query') }}","options":{}},"type":"n8n-nodes-base.postgresTool","typeVersion":2.5,"position":[-160,360],"id":"9cd83616-b3b3-42cc-bb9e-d33bc986428f","name":"Query Document Rows","credentials":{"postgres":{"id":"ULsaTVpa7uWp9X9s","name":"Postgres account Cloud"}}},{"parameters":{"options":{"reset":false}},"type":"n8n-nodes-base.splitInBatches","typeVersion":3,"position":[-1500,660],"id":"386af581-c93d-4778-8fd8-d94c3cbb72e8","name":"Loop Over Items"},{"parameters":{"operation":"executeQuery","query":"-- Enable the pgvector extension to work with embedding vectors\ncreate extension vector;\n\n-- Create a table to store your documents\ncreate table documents (\n  id bigserial primary key,\n  content text, -- corresponds to Document.pageContent\n  metadata jsonb, -- corresponds to Document.metadata\n  embedding vector(3072) -- 1536 works for OpenAI embeddings, change if needed\n);\n\n-- Create a function to search for documents\ncreate function match_documents (\n  query_embedding vector(3072),\n  match_count int default null,\n  filter jsonb DEFAULT '{}'\n) returns table (\n  id bigint,\n  content text,\n  metadata jsonb,\n  similarity float\n)\nlanguage plpgsql\nas $$\n#variable_conflict use_column\nbegin\n  return query\n  select\n    id,\n    content,\n    metadata,\n    1 - (documents.embedding <=> query_embedding) as similarity\n  from documents\n  where metadata @> filter\n  order by documents.embedding <=> query_embedding\n  limit match_count;\nend;\n$$;","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.5,"position":[-1680,320],"id":"216abda0-deb2-4ec4-a7e2-8ef0807c1c21","name":"Create Documents Table and Match Function","credentials":{"postgres":{"id":"ULsaTVpa7uWp9X9s","name":"Postgres account Cloud"}}},{"parameters":{"operation":"delete","tableId":"document_rows","filters":{"conditions":[{"keyName":"dataset_id","condition":"eq","keyValue":"={{ $('Set File ID').item.json.file_id }}"}]}},"type":"n8n-nodes-base.supabase","typeVersion":1,"position":[-980,820],"id":"576a707e-7ae9-4777-b581-305b90c8350d","name":"Delete Old Data Rows","alwaysOutputData":true,"executeOnce":true,"credentials":{"supabaseApi":{"id":"0ndJqD87syAe4VB5","name":"Supabase account Cloud"}}},{"parameters":{"operation":"upsert","schema":{"__rl":true,"mode":"list","value":"public"},"table":{"__rl":true,"value":"document_metadata","mode":"list","cachedResultName":"document_metadata"},"columns":{"mappingMode":"defineBelow","value":{"id":"={{ $('Set File ID').item.json.file_id }}","title":"={{ $('Set File ID').item.json.file_title }}","url":"={{ $('Set File ID').item.json.file_url }}"},"matchingColumns":["id"],"schema":[{"id":"id","displayName":"id","required":true,"defaultMatch":true,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"title","displayName":"title","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":false},{"id":"url","displayName":"url","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":false,"removed":false},{"id":"created_at","displayName":"created_at","required":false,"defaultMatch":false,"display":true,"type":"dateTime","canBeUsedToMatch":false},{"id":"schema","displayName":"schema","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":false,"removed":true}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.5,"position":[-820,680],"id":"cd1d7fd5-0b4f-4bb1-bc6a-7d0cc35542ae","name":"Insert Document Metadata","executeOnce":true,"credentials":{"postgres":{"id":"ULsaTVpa7uWp9X9s","name":"Postgres account Cloud"}}},{"parameters":{"schema":{"__rl":true,"mode":"list","value":"public"},"table":{"__rl":true,"value":"document_rows","mode":"list","cachedResultName":"document_rows"},"columns":{"mappingMode":"defineBelow","value":{"dataset_id":"={{ $('Set File ID').item.json.file_id }}","row_data":"={{ $json.toJsonString().replaceAll(/'/g, \"''\") }}"},"matchingColumns":["id"],"schema":[{"id":"id","displayName":"id","required":false,"defaultMatch":true,"display":true,"type":"number","canBeUsedToMatch":true,"removed":true},{"id":"dataset_id","displayName":"dataset_id","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"row_data","displayName":"row_data","required":false,"defaultMatch":false,"display":true,"type":"object","canBeUsedToMatch":true}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.5,"position":[240,940],"id":"77d81a3f-481c-4c2e-9f88-967adc242d5b","name":"Insert Table Rows","credentials":{"postgres":{"id":"ULsaTVpa7uWp9X9s","name":"Postgres account Cloud"}}},{"parameters":{"operation":"upsert","schema":{"__rl":true,"mode":"list","value":"public"},"table":{"__rl":true,"value":"document_metadata","mode":"list","cachedResultName":"document_metadata"},"columns":{"mappingMode":"defineBelow","value":{"id":"={{ $('Set File ID').item.json.file_id }}","schema":"={{ $json.schema }}"},"matchingColumns":["id"],"schema":[{"id":"id","displayName":"id","required":true,"defaultMatch":true,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"title","displayName":"title","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":false,"removed":true},{"id":"url","displayName":"url","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":false,"removed":true},{"id":"created_at","displayName":"created_at","required":false,"defaultMatch":false,"display":true,"type":"dateTime","canBeUsedToMatch":false},{"id":"schema","displayName":"schema","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":false,"removed":false}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.5,"position":[1100,700],"id":"fea9c87c-6c42-4fe3-9526-9637313a6000","name":"Update Schema for Document Metadata","credentials":{"postgres":{"id":"ULsaTVpa7uWp9X9s","name":"Postgres account Cloud"}}},{"parameters":{"content":"## 🚀 Ultimate n8n Agentic RAG Template\n\n**Author:** [Cole Medin](https://www.youtube.com/@ColeMedin)\n\n## What is this?\nThis template provides a complete implementation of an **Agentic RAG (Retrieval Augmented Generation)** system in n8n that can be extended easily for your specific use case and knowledge base. Unlike standard RAG which only performs simple lookups, this agent can reason about your knowledge base, self-improve retrieval, and dynamically switch between different tools based on the specific question.\n\n## Why Agentic RAG?\nStandard RAG has significant limitations:\n- Poor analysis of numerical/tabular data\n- Missing context due to document chunking\n- Inability to connect information across documents\n- No dynamic tool selection based on question type\n\n## What makes this template powerful:\n- **Intelligent tool selection**: Switches between RAG lookups, SQL queries, or full document retrieval based on the question\n- **Complete document context**: Accesses entire documents when needed instead of just chunks\n- **Accurate numerical analysis**: Uses SQL for precise calculations on spreadsheet/tabular data\n- **Cross-document insights**: Connects information across your entire knowledge base\n- **Multi-file processing**: Handles multiple documents in a single workflow loop\n- **Efficient storage**: Uses JSONB in Supabase to store tabular data without creating new tables for each CSV\n\n## Getting Started\n1. Run the table creation nodes first to set up your database tables in Supabase\n2. Upload your documents through Google Drive (or swap out for a different file storage solution)\n3. The agent will process them automatically (chunking text, storing tabular data in Supabase)\n4. Start asking questions that leverage the agent's multiple reasoning approaches\n\n## Customization\nThis template provides a solid foundation that you can extend by:\n- Tuning the system prompt for your specific use case\n- Adding document metadata like summaries\n- Implementing more advanced RAG techniques\n- Optimizing for larger knowledge bases\n\n---\n\nI do intend on making a local version of this agent very soon!","height":1320,"width":540,"color":6},"type":"n8n-nodes-base.stickyNote","position":[-2320,80],"typeVersion":1,"id":"c3388ee3-cc68-4c22-8d57-a114107b10d8","name":"Sticky Note9"},{"parameters":{"mode":"insert","tableName":{"__rl":true,"value":"documents","mode":"list","cachedResultName":"documents"},"options":{"queryName":"match_documents"}},"id":"311caf14-54f1-4007-bea7-bdee2374e3c9","name":"Insert into Supabase Vectorstore","type":"@n8n/n8n-nodes-langchain.vectorStoreSupabase","typeVersion":1,"position":[900,880],"credentials":{"supabaseApi":{"id":"0ndJqD87syAe4VB5","name":"Supabase account Cloud"}}},{"parameters":{"model":{"__rl":true,"mode":"list","value":"gpt-4o-mini"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[-740,360],"id":"9b405180-3be4-43b0-b569-16fe1329e1db","name":"OpenAI Chat Model","credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{"modelName":"models/gemini-embedding-exp-03-07"},"type":"@n8n/n8n-nodes-langchain.embeddingsGoogleGemini","typeVersion":1,"position":[720,1140],"id":"533aabe4-2b80-47d6-906b-ea54ecf9d586","name":"Embeddings Google Gemini","credentials":{"googlePalmApi":{"id":"VxuR4Ot4TSiJTVFk","name":"Google Gemini(PaLM) Api account"}}},{"parameters":{"updates":["message"],"additionalFields":{}},"type":"n8n-nodes-base.telegramTrigger","typeVersion":1.2,"position":[-900,280],"id":"614f9869-3f09-423e-85eb-55f2be4384dd","name":"Telegram Trigger","webhookId":"f9ef8191-4ba7-4eef-85c9-c18afb1f5fc2","credentials":{"telegramApi":{"id":"I69z6e5cYkew5SXv","name":"Telegram n8nclp Chat"}}},{"parameters":{"chatId":"730141489","text":"={{ $json.output }}","additionalFields":{"appendAttribution":false}},"type":"n8n-nodes-base.telegram","typeVersion":1.2,"position":[200,40],"id":"bb4c5dde-b36c-4069-84ac-3a543f94cc85","name":"Telegram","webhookId":"d586af77-9829-42ba-8857-2b42adf6d613","credentials":{"telegramApi":{"id":"I69z6e5cYkew5SXv","name":"Telegram n8nclp Chat"}}},{"parameters":{"descriptionType":"manual","toolDescription":"Use this tool to fetch all available documents, including the table schema if the file is a CSV or Excel file.","operation":"select","schema":{"__rl":true,"mode":"list","value":"public"},"table":{"__rl":true,"value":"QA","mode":"list","cachedResultName":"QA"},"returnAll":true,"options":{}},"type":"n8n-nodes-base.postgresTool","typeVersion":2.5,"position":[-460,360],"id":"a991eab4-9152-4123-a726-c3b835bf1cdf","name":"List Documents","credentials":{"postgres":{"id":"ULsaTVpa7uWp9X9s","name":"Postgres account Cloud"}}},{"parameters":{"documentId":{"__rl":true,"value":"17NzRMYiUE6M1y3pi6fqKcq7U9Kfjqsj7dF-xcEhnjTw","mode":"list","cachedResultName":"QA RAG","cachedResultUrl":"https://docs.google.com/spreadsheets/d/17NzRMYiUE6M1y3pi6fqKcq7U9Kfjqsj7dF-xcEhnjTw/edit?usp=drivesdk"},"sheetName":{"__rl":true,"value":"gid=0","mode":"list","cachedResultName":"Trang tính1","cachedResultUrl":"https://docs.google.com/spreadsheets/d/17NzRMYiUE6M1y3pi6fqKcq7U9Kfjqsj7dF-xcEhnjTw/edit#gid=0"},"options":{}},"type":"n8n-nodes-base.googleSheetsTool","typeVersion":4.5,"position":[-60,200],"id":"224a2c85-5236-448c-92ac-d0bb008af3ab","name":"Google Sheets","credentials":{"googleSheetsOAuth2Api":{"id":"bdeAZgAgEmqpgnr1","name":"Google Sheets account"}}}],"connections":{"Download File":{"main":[[{"node":"Switch","type":"main","index":0}]]},"File Created":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Extract Document Text":{"main":[[{"node":"Insert into Supabase Vectorstore","type":"main","index":0}]]},"Default Data Loader":{"ai_document":[[{"node":"Insert into Supabase Vectorstore","type":"ai_document","index":0}]]},"Postgres Chat Memory":{"ai_memory":[[{"node":"RAG AI Agent","type":"ai_memory","index":0}]]},"Delete Old Doc Rows":{"main":[[{"node":"Delete Old Data Rows","type":"main","index":0}]]},"Set File ID":{"main":[[{"node":"Delete Old Doc Rows","type":"main","index":0}]]},"File Updated":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Edit Fields":{"main":[[{"node":"RAG AI Agent","type":"main","index":0}]]},"When chat message received":{"main":[[]]},"Extract PDF Text":{"main":[[{"node":"Insert into Supabase Vectorstore","type":"main","index":0}]]},"Aggregate":{"main":[[{"node":"Summarize","type":"main","index":0}]]},"Character Text Splitter":{"ai_textSplitter":[[{"node":"Default Data Loader","type":"ai_textSplitter","index":0}]]},"Summarize":{"main":[[{"node":"Set Schema","type":"main","index":0},{"node":"Insert into Supabase Vectorstore","type":"main","index":0}]]},"RAG AI Agent":{"main":[[{"node":"Telegram","type":"main","index":0}]]},"Switch":{"main":[[{"node":"Extract PDF Text","type":"main","index":0}],[{"node":"Extract from Excel","type":"main","index":0}],[{"node":"Extract from CSV","type":"main","index":0}],[{"node":"Extract Document Text","type":"main","index":0}]]},"Extract from Excel":{"main":[[{"node":"Aggregate","type":"main","index":0},{"node":"Insert Table Rows","type":"main","index":0}]]},"Set Schema":{"main":[[{"node":"Update Schema for Document Metadata","type":"main","index":0}]]},"Extract from CSV":{"main":[[{"node":"Aggregate","type":"main","index":0},{"node":"Insert Table Rows","type":"main","index":0}]]},"Get File Contents":{"ai_tool":[[]]},"Query Document Rows":{"ai_tool":[[]]},"Loop Over Items":{"main":[[],[{"node":"Set File ID","type":"main","index":0}]]},"Delete Old Data Rows":{"main":[[{"node":"Insert Document Metadata","type":"main","index":0}]]},"Insert Document Metadata":{"main":[[{"node":"Download File","type":"main","index":0}]]},"Insert into Supabase Vectorstore":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"OpenAI Chat Model":{"ai_languageModel":[[{"node":"RAG AI Agent","type":"ai_languageModel","index":0}]]},"Embeddings Google Gemini":{"ai_embedding":[[{"node":"Insert into Supabase Vectorstore","type":"ai_embedding","index":0}]]},"Telegram Trigger":{"main":[[{"node":"Edit Fields","type":"main","index":0}]]},"List Documents":{"ai_tool":[[]]},"Google Sheets":{"ai_tool":[[{"node":"RAG AI Agent","type":"ai_tool","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":{"node:File Created":{"lastTimeChecked":"2025-05-06T00:51:52Z"},"node:File Updated":{"lastTimeChecked":"2025-05-06T00:51:53Z"}},"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"fb898f90-06dd-4bbb-9fbb-273129f3401c","triggerCount":4,"tags":[],"shared":[{"createdAt":"2025-05-06T08:39:13.765Z","updatedAt":"2025-05-06T08:39:13.765Z","role":"workflow:owner","workflowId":"lk84GBOTQRbQ2ZcG","projectId":"WbfPHUYYKS2tiNNo","project":{"createdAt":"2025-05-03T06:49:18.088Z","updatedAt":"2025-05-03T06:52:24.837Z","id":"WbfPHUYYKS2tiNNo","name":"charlie phan <scottyphan08@gmail.com>","type":"personal","icon":null,"description":null}}]},{"createdAt":"2025-05-08T09:22:25.570Z","updatedAt":"2025-05-09T05:24:18.272Z","id":"84TONs7Sez5ohvmt","name":"0705 Strategy for Accurate RAG","active":false,"isArchived":false,"nodes":[{"parameters":{"model":"gpt-4.1-mini","options":{}},"id":"fc7c6d25-581a-40af-8fc7-6698fa161091","name":"OpenAI Chat Model","type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1,"position":[300,300],"credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{"jsonMode":"expressionData","jsonData":"={{\n{\n  \"content\": `${ $json.text }\\n---\\n${ $json.chunk }`\n}\n}}","options":{"metadata":{"metadataValues":[{"name":"=file_id","value":"={{ $('Set File ID').first().json.file_id }}"},{"name":"file_title","value":"={{ $('Set File ID').first().json.file_title }}"},{"name":"file_url","value":"={{ $('Set File ID').first().json.file_url }}"}]}}},"id":"8fd95cc7-4cef-434a-91f1-b59ab0a17adc","name":"Default Data Loader","type":"@n8n/n8n-nodes-langchain.documentDefaultDataLoader","typeVersion":1,"position":[2440,1020]},{"parameters":{"model":"text-embedding-3-small","options":{}},"id":"283cdc93-e1ca-4551-b480-40a62bf11c8d","name":"Embeddings OpenAI1","type":"@n8n/n8n-nodes-langchain.embeddingsOpenAi","typeVersion":1,"position":[2280,1020],"credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{"content":"## Tool to Add Google Drive Files to Vector DB with Contextual Embeddings","height":867,"width":2853,"color":5},"id":"7c355c00-cf26-46db-8501-86625c9e71bd","name":"Sticky Note1","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[0,500]},{"parameters":{"operation":"download","fileId":{"__rl":true,"value":"={{ $('Set File ID').item.json.file_id }}","mode":"id"},"options":{"googleFileConversion":{"conversion":{"docsToFormat":"text/plain"}}}},"id":"d1ef70b4-2683-4d34-91ae-6b7f26416da2","name":"Download File","type":"n8n-nodes-base.googleDrive","typeVersion":3,"position":[900,760],"executeOnce":true,"credentials":{"googleDriveOAuth2Api":{"id":"XDqLv6T2wJMb4j1U","name":"Google Drive account pnjp"}}},{"parameters":{"pollTimes":{"item":[{"mode":"everyMinute"}]},"triggerOn":"specificFolder","folderToWatch":{"__rl":true,"value":"1VEUNkoIdGAc9EZPv-_ENtdm67NxNZy8u","mode":"list","cachedResultName":"n8ndocuments","cachedResultUrl":"https://drive.google.com/drive/folders/1VEUNkoIdGAc9EZPv-_ENtdm67NxNZy8u"},"event":"fileCreated","options":{}},"id":"c71b73b9-e2fd-49ad-bd34-b796920798e2","name":"File Created","type":"n8n-nodes-base.googleDriveTrigger","typeVersion":1,"position":[60,620],"credentials":{"googleDriveOAuth2Api":{"id":"XDqLv6T2wJMb4j1U","name":"Google Drive account pnjp"}}},{"parameters":{"pollTimes":{"item":[{"mode":"everyMinute"}]},"triggerOn":"specificFolder","folderToWatch":{"__rl":true,"value":"1iLcA4aE4rOe87BNXhiArRaHkG9dfzJqw","mode":"list","cachedResultName":"Neon","cachedResultUrl":"https://drive.google.com/drive/folders/1iLcA4aE4rOe87BNXhiArRaHkG9dfzJqw"},"event":"fileUpdated","options":{}},"id":"963cd2cd-b7cb-4a86-ae0a-6ae9c2d1ad8d","name":"File Updated","type":"n8n-nodes-base.googleDriveTrigger","typeVersion":1,"position":[60,780],"credentials":{"googleDriveOAuth2Api":{"id":"XDqLv6T2wJMb4j1U","name":"Google Drive account pnjp"}}},{"parameters":{"operation":"text","options":{}},"id":"ec23d1a7-0b9a-4a1c-928c-05e237bec969","name":"Extract Document Text","type":"n8n-nodes-base.extractFromFile","typeVersion":1,"position":[1100,620],"alwaysOutputData":true},{"parameters":{"sessionIdType":"customKey","sessionKey":"={{ $(\"When chat message received\").item.json.sessionId }}"},"id":"24cfc8de-8b66-4d7a-8af7-bb2592b05b95","name":"Postgres Chat Memory","type":"@n8n/n8n-nodes-langchain.memoryPostgresChat","typeVersion":1,"position":[480,300],"notesInFlow":false,"credentials":{"postgres":{"id":"lPXyj3Ypf5YeZpp3","name":"Postgres account Local"}}},{"parameters":{"assignments":{"assignments":[{"id":"10646eae-ae46-4327-a4dc-9987c2d76173","name":"file_id","value":"={{ $json.id }}","type":"string"},{"id":"f4536df5-d0b1-4392-bf17-b8137fb31a44","name":"file_type","value":"={{ $json.mimeType }}","type":"string"},{"id":"77d782de-169d-4a46-8a8e-a3831c04d90f","name":"file_title","value":"={{ $json.name }}","type":"string"},{"id":"9bde4d7f-e4f3-4ebd-9338-dce1350f9eab","name":"file_url","value":"={{ $json.webViewLink }}","type":"string"}]},"options":{}},"id":"c4945ee8-030a-4c37-8883-43093ea3644f","name":"Set File ID","type":"n8n-nodes-base.set","typeVersion":3.4,"position":[460,760]},{"parameters":{"content":"## RAG AI Agent with Contextual Retrieval","height":485,"width":1036},"id":"d5ee99a3-c30e-4371-b39c-66ba0271dc62","name":"Sticky Note2","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[0,0]},{"parameters":{"options":{"systemMessage":"=## Role\n\nYou are a Retrieval-Augmented Generation (RAG) assistant designed to answer questions a user has. You use a corpus of documents that are all text based. Your primary goal is to provide accurate, up-to-date, and relevant information based on what the user asks and the documents you retrieve.\n\n## Responsibilities\n\n- Answer user queries with a good mix of being comprehensive but still concise\n- Present information in an easy-to-understand and professional manner  \n- Clarify misconceptions or misinformation\n\n## Other Key Information and Instructions\n\n- Always tell the user if you didn't find the answer. Don't make something up just to please them.\n- Keep your language neutral and factual. Do not show bias or opinion  \n\n## Error Handling\n- If the information cannot be found using the provided instructions respond with:  \n  “I’m sorry, I couldn’t find relevant information based on your documents.”\n"}},"id":"5a144938-9e67-43ca-9c7a-2fd066a04f19","name":"RAG AI Agent","type":"@n8n/n8n-nodes-langchain.agent","typeVersion":1.6,"position":[380,80]},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.embeddingsOpenAi","typeVersion":1.2,"position":[820,340],"id":"cbff7636-d5da-4784-8a7f-808064e525c3","name":"Embeddings OpenAI2","credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{"options":{"reset":false}},"type":"n8n-nodes-base.splitInBatches","typeVersion":3,"position":[280,620],"id":"4cb51e05-4be3-4c3d-962f-9f6712752f84","name":"Loop Over Items"},{"parameters":{"chunkSize":2000,"options":{}},"type":"@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter","typeVersion":1,"position":[2560,1180],"id":"60118e92-32a8-4a81-8615-44402fcd7a25","name":"Recursive Character Text Splitter"},{"parameters":{"public":true,"options":{}},"id":"693e282b-a872-4253-abf7-12dc15b43a06","name":"When chat message received","type":"@n8n/n8n-nodes-langchain.chatTrigger","typeVersion":1.1,"position":[100,80],"webhookId":"2e7c037a-cf2e-40c5-9bed-e0944cc03cfa"},{"parameters":{"mode":"runOnceForEachItem","jsCode":"const chunks = [];\nconst chunkSize = 400;\nconst chunkOverlap = 0;\nconst text = $json.data.replace(/\\n/, '');\n\nfor (let i=0, j=Math.round(text.length/chunkSize); i<j; i++) {\n  chunks.push(\n    text.substr(\n      Math.max(0,(i * chunkSize)-chunkOverlap),\n      chunkSize\n    )\n  );\n}\n\nreturn { chunks };"},"id":"cbfb09c4-de6b-48cf-8ffa-c3d68d49a8e6","name":"Create Chunks From Doc","type":"n8n-nodes-base.code","typeVersion":2,"position":[1340,780]},{"parameters":{"fieldToSplitOut":"chunks","options":{"destinationFieldName":"chunk"}},"id":"ea226cce-4b7c-4158-8efb-16afd4fad5af","name":"Chunks To List","type":"n8n-nodes-base.splitOut","typeVersion":1,"position":[1560,640]},{"parameters":{"promptType":"define","text":"=<document> \n{{ $('Extract Document Text').first().json.data }} \n</document>\nHere is the chunk we want to situate within the whole document \n<chunk> \n{{ $json.chunk }}\n</chunk> \nPlease give a short succinct context to situate this chunk within the overall document for the purposes of improving search retrieval of the chunk. Answer only with the succinct context and nothing else. "},"id":"6f010426-6134-45d3-a105-922d70835db7","name":"Generate Contextual Text","type":"@n8n/n8n-nodes-langchain.chainLlm","typeVersion":1.4,"position":[1780,780]},{"parameters":{"model":{"__rl":true,"value":"gpt-4.1-nano","mode":"list","cachedResultName":"gpt-4.1-nano"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[1740,1020],"id":"d4ef359d-8228-4f55-8411-d2ae15702885","name":"OpenAI Chat Model3","credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{"assignments":{"assignments":[{"id":"069d067c-3534-4939-8ff4-34dee02a9436","name":"chunk","value":"={{ $('Chunks To List').item.json.chunk }}","type":"string"},{"id":"24e01f4f-e156-47e9-a89e-9cbdccda6bd4","name":"text","value":"={{ $('Generate Contextual Text').item.json.text }}","type":"string"}]},"options":{}},"id":"0f6e7e1a-d66d-4078-8351-2b72fe84242d","name":"Get Values","type":"n8n-nodes-base.set","typeVersion":3.4,"position":[2140,660]},{"parameters":{"mode":"insert","tableName":"documents_pg","options":{}},"type":"@n8n/n8n-nodes-langchain.vectorStorePGVector","typeVersion":1.1,"position":[2360,760],"id":"6788da2d-65c5-4a8f-843b-accd54dd3d04","name":"Postgres PGVector Store","credentials":{"postgres":{"id":"lPXyj3Ypf5YeZpp3","name":"Postgres account Local"}}},{"parameters":{"mode":"retrieve-as-tool","toolName":"documents_pg","toolDescription":"Use RAG to look up information in the knowledgebase.","tableName":"documents_pg","options":{}},"type":"@n8n/n8n-nodes-langchain.vectorStorePGVector","typeVersion":1.1,"position":[700,200],"id":"2212d771-a4f6-496c-9771-0d4ad98ba628","name":"Document RAG Tool1","credentials":{"postgres":{"id":"lPXyj3Ypf5YeZpp3","name":"Postgres account Local"}}},{"parameters":{"operation":"executeQuery","query":"DO $$\nBEGIN\n    IF EXISTS (SELECT 1 FROM information_schema.tables WHERE table_name = 'documents_pg') THEN\n        EXECUTE 'DELETE FROM documents_pg WHERE metadata->>''file_id'' LIKE ''%' || $1 || '%''';\n    END IF;\nEND\n$$;","options":{"queryReplacement":"={{ $json.file_id }}"}},"type":"n8n-nodes-base.postgres","typeVersion":2.5,"position":[680,620],"id":"34ae9583-94d0-4550-8384-be023d594db6","name":"Delete Old Doc Records","credentials":{"postgres":{"id":"lPXyj3Ypf5YeZpp3","name":"Postgres account Local"}}}],"connections":{"OpenAI Chat Model":{"ai_languageModel":[[{"node":"RAG AI Agent","type":"ai_languageModel","index":0}]]},"Download File":{"main":[[{"node":"Extract Document Text","type":"main","index":0}]]},"File Created":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Extract Document Text":{"main":[[{"node":"Create Chunks From Doc","type":"main","index":0}]]},"Embeddings OpenAI1":{"ai_embedding":[[{"node":"Postgres PGVector Store","type":"ai_embedding","index":0}]]},"Default Data Loader":{"ai_document":[[{"node":"Postgres PGVector Store","type":"ai_document","index":0}]]},"Postgres Chat Memory":{"ai_memory":[[{"node":"RAG AI Agent","type":"ai_memory","index":0}]]},"Set File ID":{"main":[[{"node":"Delete Old Doc Records","type":"main","index":0}]]},"File Updated":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Embeddings OpenAI2":{"ai_embedding":[[{"node":"Document RAG Tool1","type":"ai_embedding","index":0}]]},"Loop Over Items":{"main":[[],[{"node":"Set File ID","type":"main","index":0}]]},"Recursive Character Text Splitter":{"ai_textSplitter":[[{"node":"Default Data Loader","type":"ai_textSplitter","index":0}]]},"When chat message received":{"main":[[{"node":"RAG AI Agent","type":"main","index":0}]]},"Chunks To List":{"main":[[{"node":"Generate Contextual Text","type":"main","index":0}]]},"Create Chunks From Doc":{"main":[[{"node":"Chunks To List","type":"main","index":0}]]},"OpenAI Chat Model3":{"ai_languageModel":[[{"node":"Generate Contextual Text","type":"ai_languageModel","index":0}]]},"Generate Contextual Text":{"main":[[{"node":"Get Values","type":"main","index":0}]]},"Get Values":{"main":[[{"node":"Postgres PGVector Store","type":"main","index":0}]]},"Postgres PGVector Store":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Document RAG Tool1":{"ai_tool":[[{"node":"RAG AI Agent","type":"ai_tool","index":0}]]},"Delete Old Doc Records":{"main":[[{"node":"Download File","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"0893200f-f872-4e26-95ba-74be44d83ed6","triggerCount":0,"tags":[],"shared":[{"createdAt":"2025-05-08T09:22:25.570Z","updatedAt":"2025-05-08T09:22:25.570Z","role":"workflow:owner","workflowId":"84TONs7Sez5ohvmt","projectId":"WbfPHUYYKS2tiNNo","project":{"createdAt":"2025-05-03T06:49:18.088Z","updatedAt":"2025-05-03T06:52:24.837Z","id":"WbfPHUYYKS2tiNNo","name":"charlie phan <scottyphan08@gmail.com>","type":"personal","icon":null,"description":null}}]},{"createdAt":"2025-05-09T05:29:13.759Z","updatedAt":"2025-05-09T05:51:04.983Z","id":"jX3rK0J1uU1SjKFP","name":"0905 Strategy for Accurate RAG Germini","active":false,"isArchived":false,"nodes":[{"parameters":{"model":"gpt-4.1-mini","options":{}},"id":"8db728e4-fec2-4665-8a7a-367a57dbc5f9","name":"OpenAI Chat Model","type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1,"position":[160,300],"credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{"jsonMode":"expressionData","jsonData":"={{\n{\n  \"content\": `${ $json.text }\\n---\\n${ $json.chunk }`\n}\n}}","options":{"metadata":{"metadataValues":[{"name":"=file_id","value":"={{ $('Set File ID').first().json.file_id }}"},{"name":"file_title","value":"={{ $('Set File ID').first().json.file_title }}"},{"name":"file_url","value":"={{ $('Set File ID').first().json.file_url }}"}]}}},"id":"2a26cc71-ccd5-478a-bfc2-bb2f7a69c6b6","name":"Default Data Loader","type":"@n8n/n8n-nodes-langchain.documentDefaultDataLoader","typeVersion":1,"position":[2620,860]},{"parameters":{"model":"text-embedding-3-small","options":{}},"id":"c4b687fa-4b43-430e-8312-fb2e7cbd8f15","name":"Embeddings OpenAI1","type":"@n8n/n8n-nodes-langchain.embeddingsOpenAi","typeVersion":1,"position":[2280,1020],"credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{"content":"## Tool to Add Google Drive Files to Vector DB with Contextual Embeddings","height":867,"width":2853,"color":5},"id":"0df82578-135a-488f-8d58-cefea1f0f9ba","name":"Sticky Note1","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[0,500]},{"parameters":{"operation":"download","fileId":{"__rl":true,"value":"={{ $('Set File ID').item.json.file_id }}","mode":"id"},"options":{"googleFileConversion":{"conversion":{"docsToFormat":"text/plain"}}}},"id":"50d68bef-781b-4266-a17d-1fbf5b345878","name":"Download File","type":"n8n-nodes-base.googleDrive","typeVersion":3,"position":[900,760],"executeOnce":true,"credentials":{"googleDriveOAuth2Api":{"id":"XDqLv6T2wJMb4j1U","name":"Google Drive account pnjp"}}},{"parameters":{"pollTimes":{"item":[{"mode":"everyMinute"}]},"triggerOn":"specificFolder","folderToWatch":{"__rl":true,"value":"1VEUNkoIdGAc9EZPv-_ENtdm67NxNZy8u","mode":"list","cachedResultName":"n8ndocuments","cachedResultUrl":"https://drive.google.com/drive/folders/1VEUNkoIdGAc9EZPv-_ENtdm67NxNZy8u"},"event":"fileCreated","options":{}},"id":"ab3af6e2-b044-4493-a9ee-61dd83d03442","name":"File Created","type":"n8n-nodes-base.googleDriveTrigger","typeVersion":1,"position":[60,620],"credentials":{"googleDriveOAuth2Api":{"id":"XDqLv6T2wJMb4j1U","name":"Google Drive account pnjp"}}},{"parameters":{"pollTimes":{"item":[{"mode":"everyMinute"}]},"triggerOn":"specificFolder","folderToWatch":{"__rl":true,"value":"1iLcA4aE4rOe87BNXhiArRaHkG9dfzJqw","mode":"list","cachedResultName":"Neon","cachedResultUrl":"https://drive.google.com/drive/folders/1iLcA4aE4rOe87BNXhiArRaHkG9dfzJqw"},"event":"fileUpdated","options":{}},"id":"e4788f61-29d1-4220-a06a-4350544b457d","name":"File Updated","type":"n8n-nodes-base.googleDriveTrigger","typeVersion":1,"position":[60,780],"credentials":{"googleDriveOAuth2Api":{"id":"XDqLv6T2wJMb4j1U","name":"Google Drive account pnjp"}}},{"parameters":{"operation":"text","options":{}},"id":"d046a88b-747d-493f-ac0e-056afd0e64d2","name":"Extract Document Text","type":"n8n-nodes-base.extractFromFile","typeVersion":1,"position":[1100,620],"alwaysOutputData":true},{"parameters":{"sessionIdType":"customKey","sessionKey":"={{ $(\"When chat message received\").item.json.sessionId }}"},"id":"7487f5ba-ab2d-4c21-b053-890eb4290de5","name":"Postgres Chat Memory","type":"@n8n/n8n-nodes-langchain.memoryPostgresChat","typeVersion":1,"position":[480,300],"notesInFlow":false,"credentials":{"postgres":{"id":"lPXyj3Ypf5YeZpp3","name":"Postgres account Local"}}},{"parameters":{"assignments":{"assignments":[{"id":"10646eae-ae46-4327-a4dc-9987c2d76173","name":"file_id","value":"={{ $json.id }}","type":"string"},{"id":"f4536df5-d0b1-4392-bf17-b8137fb31a44","name":"file_type","value":"={{ $json.mimeType }}","type":"string"},{"id":"77d782de-169d-4a46-8a8e-a3831c04d90f","name":"file_title","value":"={{ $json.name }}","type":"string"},{"id":"9bde4d7f-e4f3-4ebd-9338-dce1350f9eab","name":"file_url","value":"={{ $json.webViewLink }}","type":"string"}]},"options":{}},"id":"a7fdc937-8396-42fd-a39c-f1380b8a38d1","name":"Set File ID","type":"n8n-nodes-base.set","typeVersion":3.4,"position":[460,760]},{"parameters":{"content":"## RAG AI Agent with Contextual Retrieval","height":485,"width":1036},"id":"01011323-1d6e-4602-aa12-099ce8dbc6c7","name":"Sticky Note2","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[0,0]},{"parameters":{"options":{"systemMessage":"=## Role\n\nYou are a Retrieval-Augmented Generation (RAG) assistant designed to answer questions a user has. You use a corpus of documents that are all text based. Your primary goal is to provide accurate, up-to-date, and relevant information based on what the user asks and the documents you retrieve.\n\n## Responsibilities\n\n- Answer user queries with a good mix of being comprehensive but still concise\n- Present information in an easy-to-understand and professional manner  \n- Clarify misconceptions or misinformation\n\n## Other Key Information and Instructions\n\n- Always tell the user if you didn't find the answer. Don't make something up just to please them.\n- Keep your language neutral and factual. Do not show bias or opinion  \n\n## Error Handling\n- If the information cannot be found using the provided instructions respond with:  \n  “I’m sorry, I couldn’t find relevant information based on your documents.”\n"}},"id":"48564160-3d70-426a-8ecc-16a5a23ec8a0","name":"RAG AI Agent","type":"@n8n/n8n-nodes-langchain.agent","typeVersion":1.6,"position":[380,80]},{"parameters":{"options":{"reset":false}},"type":"n8n-nodes-base.splitInBatches","typeVersion":3,"position":[280,620],"id":"9f827c51-5be8-4e5a-95de-201affdf4937","name":"Loop Over Items"},{"parameters":{"chunkSize":2000,"options":{}},"type":"@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter","typeVersion":1,"position":[2560,1180],"id":"60a973b0-312d-42de-9d53-df81b5f2dd8a","name":"Recursive Character Text Splitter"},{"parameters":{"public":true,"options":{}},"id":"27977a09-76ea-4dcd-9dd0-fd494d81c38d","name":"When chat message received","type":"@n8n/n8n-nodes-langchain.chatTrigger","typeVersion":1.1,"position":[100,80],"webhookId":"999d8774-e860-4fb7-86f6-01be9df07f78"},{"parameters":{"mode":"runOnceForEachItem","jsCode":"const chunks = [];\nconst chunkSize = 400;\nconst chunkOverlap = 0;\nconst text = $json.data.replace(/\\n/, '');\n\nfor (let i=0, j=Math.round(text.length/chunkSize); i<j; i++) {\n  chunks.push(\n    text.substr(\n      Math.max(0,(i * chunkSize)-chunkOverlap),\n      chunkSize\n    )\n  );\n}\n\nreturn { chunks };"},"id":"328a1b52-6c08-422e-9366-75ffd4969f63","name":"Create Chunks From Doc","type":"n8n-nodes-base.code","typeVersion":2,"position":[1340,780]},{"parameters":{"fieldToSplitOut":"chunks","options":{"destinationFieldName":"chunk"}},"id":"58d7c7c3-e046-4304-8b87-233ddab3374d","name":"Chunks To List","type":"n8n-nodes-base.splitOut","typeVersion":1,"position":[1560,640]},{"parameters":{"promptType":"define","text":"=<document> \n{{ $('Extract Document Text').first().json.data }} \n</document>\nHere is the chunk we want to situate within the whole document \n<chunk> \n{{ $json.chunk }}\n</chunk> \nPlease give a short succinct context to situate this chunk within the overall document for the purposes of improving search retrieval of the chunk. Answer only with the succinct context and nothing else. "},"id":"cb69f781-8ef3-425b-aaf7-263b639b31c3","name":"Generate Contextual Text","type":"@n8n/n8n-nodes-langchain.chainLlm","typeVersion":1.4,"position":[1780,640]},{"parameters":{"model":{"__rl":true,"value":"gpt-4.1-nano","mode":"list","cachedResultName":"gpt-4.1-nano"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[1740,1020],"id":"be444436-bb85-44ed-bbdf-e9dc3b2f9a3b","name":"OpenAI Chat Model3","credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{"assignments":{"assignments":[{"id":"069d067c-3534-4939-8ff4-34dee02a9436","name":"chunk","value":"={{ $('Chunks To List').item.json.chunk }}","type":"string"},{"id":"24e01f4f-e156-47e9-a89e-9cbdccda6bd4","name":"text","value":"={{ $('Generate Contextual Text').item.json.text }}","type":"string"}]},"options":{}},"id":"fc59910e-76f5-4e21-9541-4acb439eb6d9","name":"Get Values","type":"n8n-nodes-base.set","typeVersion":3.4,"position":[2140,660]},{"parameters":{"mode":"insert","tableName":"documents_kg","options":{}},"type":"@n8n/n8n-nodes-langchain.vectorStorePGVector","typeVersion":1.1,"position":[2400,620],"id":"d899aed5-4c04-4745-bb83-7ff6219e2086","name":"Postgres PGVector Store","credentials":{"postgres":{"id":"lPXyj3Ypf5YeZpp3","name":"Postgres account Local"}}},{"parameters":{"mode":"retrieve-as-tool","toolName":"documents_kg","toolDescription":"Use RAG to look up information in the knowledgebase.","tableName":"documents_pg","options":{}},"type":"@n8n/n8n-nodes-langchain.vectorStorePGVector","typeVersion":1.1,"position":[800,180],"id":"8de8a573-b9a5-4053-a192-a304ad4fc2fd","name":"Document RAG Tool1","credentials":{"postgres":{"id":"lPXyj3Ypf5YeZpp3","name":"Postgres account Local"}}},{"parameters":{"operation":"executeQuery","query":"DO $$\nBEGIN\n    IF EXISTS (SELECT 1 FROM information_schema.tables WHERE table_name = 'documents_pg') THEN\n        EXECUTE 'DELETE FROM documents_pg WHERE metadata->>''file_id'' LIKE ''%' || $1 || '%''';\n    END IF;\nEND\n$$;","options":{"queryReplacement":"={{ $json.file_id }}"}},"type":"n8n-nodes-base.postgres","typeVersion":2.5,"position":[680,620],"id":"1f57819c-54f9-4a9b-9e7f-a83a45b37898","name":"Delete Old Doc Records","credentials":{"postgres":{"id":"lPXyj3Ypf5YeZpp3","name":"Postgres account Local"}}},{"parameters":{"modelName":"models/gemini-2.0-flash-exp","options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatGoogleGemini","typeVersion":1,"position":[1640,800],"id":"888ac3e5-389c-4396-8d4d-c2c4ace20a32","name":"Google Gemini Chat Model","credentials":{"googlePalmApi":{"id":"VxuR4Ot4TSiJTVFk","name":"Google Gemini(PaLM) Api account"}}},{"parameters":{"modelName":"models/text-embedding-004"},"type":"@n8n/n8n-nodes-langchain.embeddingsGoogleGemini","typeVersion":1,"position":[2340,840],"id":"9b4cd278-ffda-4874-9da5-af26cddf0dc5","name":"Embeddings Google Gemini","credentials":{"googlePalmApi":{"id":"VxuR4Ot4TSiJTVFk","name":"Google Gemini(PaLM) Api account"}}},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.embeddingsOpenAi","typeVersion":1.2,"position":[640,340],"id":"a6517015-2f2c-441e-8f5d-2cb9d06eddf5","name":"Embeddings OpenAI2","credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{"modelName":"models/embedding-001"},"type":"@n8n/n8n-nodes-langchain.embeddingsGoogleGemini","typeVersion":1,"position":[900,400],"id":"0729b2b8-4fd9-43a5-8ce3-4d932d43fd87","name":"Embeddings Google Gemini1","credentials":{"googlePalmApi":{"id":"VxuR4Ot4TSiJTVFk","name":"Google Gemini(PaLM) Api account"}}}],"connections":{"OpenAI Chat Model":{"ai_languageModel":[[{"node":"RAG AI Agent","type":"ai_languageModel","index":0}]]},"Download File":{"main":[[{"node":"Extract Document Text","type":"main","index":0}]]},"File Created":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Extract Document Text":{"main":[[{"node":"Create Chunks From Doc","type":"main","index":0}]]},"Embeddings OpenAI1":{"ai_embedding":[[]]},"Default Data Loader":{"ai_document":[[{"node":"Postgres PGVector Store","type":"ai_document","index":0}]]},"Postgres Chat Memory":{"ai_memory":[[{"node":"RAG AI Agent","type":"ai_memory","index":0}]]},"Set File ID":{"main":[[{"node":"Delete Old Doc Records","type":"main","index":0}]]},"File Updated":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Loop Over Items":{"main":[[],[{"node":"Set File ID","type":"main","index":0}]]},"Recursive Character Text Splitter":{"ai_textSplitter":[[{"node":"Default Data Loader","type":"ai_textSplitter","index":0}]]},"When chat message received":{"main":[[{"node":"RAG AI Agent","type":"main","index":0}]]},"Chunks To List":{"main":[[{"node":"Generate Contextual Text","type":"main","index":0}]]},"Create Chunks From Doc":{"main":[[{"node":"Chunks To List","type":"main","index":0}]]},"OpenAI Chat Model3":{"ai_languageModel":[[]]},"Generate Contextual Text":{"main":[[{"node":"Get Values","type":"main","index":0}]]},"Get Values":{"main":[[{"node":"Postgres PGVector Store","type":"main","index":0}]]},"Postgres PGVector Store":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Document RAG Tool1":{"ai_tool":[[{"node":"RAG AI Agent","type":"ai_tool","index":0}]]},"Delete Old Doc Records":{"main":[[{"node":"Download File","type":"main","index":0}]]},"Google Gemini Chat Model":{"ai_languageModel":[[{"node":"Generate Contextual Text","type":"ai_languageModel","index":0}]]},"Embeddings Google Gemini":{"ai_embedding":[[{"node":"Postgres PGVector Store","type":"ai_embedding","index":0}]]},"Embeddings OpenAI2":{"ai_embedding":[[]]},"Embeddings Google Gemini1":{"ai_embedding":[[{"node":"Document RAG Tool1","type":"ai_embedding","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"a0e8c9de-d7e8-4fdb-84a6-4ee289920b13","triggerCount":0,"tags":[],"shared":[{"createdAt":"2025-05-09T05:29:13.759Z","updatedAt":"2025-05-09T05:29:13.759Z","role":"workflow:owner","workflowId":"jX3rK0J1uU1SjKFP","projectId":"WbfPHUYYKS2tiNNo","project":{"createdAt":"2025-05-03T06:49:18.088Z","updatedAt":"2025-05-03T06:52:24.837Z","id":"WbfPHUYYKS2tiNNo","name":"charlie phan <scottyphan08@gmail.com>","type":"personal","icon":null,"description":null}}]},{"createdAt":"2025-05-12T07:06:37.096Z","updatedAt":"2025-05-12T07:33:29.521Z","id":"tNcG7WTPjPWeVHzW","name":"MCP client asking","active":false,"isArchived":false,"nodes":[{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.chatTrigger","typeVersion":1.1,"position":[-20,320],"id":"cd3838f3-72e1-4972-b7e2-449326ff3dbb","name":"When chat message received","webhookId":"a409225d-e83b-48b6-abc4-1acdadd14d57"},{"parameters":{"promptType":"define","text":"={{ $json.message.text }}","options":{}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":1.9,"position":[400,120],"id":"d93694ad-32b8-4028-9a57-8c6783c09690","name":"AI Agent"},{"parameters":{"modelName":"models/learnlm-2.0-flash-experimental","options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatGoogleGemini","typeVersion":1,"position":[240,320],"id":"1639d8f1-c646-45b9-8fdf-a6af973761d3","name":"Google Gemini Chat Model","credentials":{"googlePalmApi":{"id":"VxuR4Ot4TSiJTVFk","name":"Google Gemini(PaLM) Api account"}}},{"parameters":{"updates":["message"],"additionalFields":{}},"type":"n8n-nodes-base.telegramTrigger","typeVersion":1.2,"position":[-40,140],"id":"2f3f6690-0a8a-44ee-b63c-61cd17bf33bc","name":"Telegram Trigger","webhookId":"4aeac31a-4a85-4329-a16a-cd47c61af7a9","credentials":{"telegramApi":{"id":"I69z6e5cYkew5SXv","name":"Telegram n8nclp Chat"}}},{"parameters":{"chatId":"730141489","text":"= {{ $json.output }}","additionalFields":{"appendAttribution":false}},"type":"n8n-nodes-base.telegram","typeVersion":1.2,"position":[760,120],"id":"9763ffd5-6b3d-448c-9dd0-9c45b1b91988","name":"Telegram","webhookId":"70697d0a-bd02-4090-b296-e4bee72dee67","credentials":{"telegramApi":{"id":"I69z6e5cYkew5SXv","name":"Telegram n8nclp Chat"}}},{"parameters":{"sessionIdType":"customKey","sessionKey":"={{ $('Telegram Trigger').item.json.message.text }}"},"type":"@n8n/n8n-nodes-langchain.memoryPostgresChat","typeVersion":1.3,"position":[500,340],"id":"d6bbb0b4-ca0a-487c-a042-8dcf127194fe","name":"Postgres Chat Memory","credentials":{"postgres":{"id":"lPXyj3Ypf5YeZpp3","name":"Postgres account Local"}}},{"parameters":{"sseEndpoint":"https://pnjp-ai-demo.pnj.com.vn/mcp/mpc.weather/sse"},"type":"@n8n/n8n-nodes-langchain.mcpClientTool","typeVersion":1,"position":[700,360],"id":"66b6f150-bcbe-4188-ac10-7fcf6f72a98f","name":"MCP Client"},{"parameters":{"path":"mcp_chat_weather","options":{}},"type":"n8n-nodes-base.webhook","typeVersion":2,"position":[0,0],"id":"c26b759d-1eb0-43c0-9672-e7b1ca3a4121","name":"Webhook","webhookId":"c430484b-ecb7-4618-9266-6f485b40b6e0"}],"connections":{"Google Gemini Chat Model":{"ai_languageModel":[[{"node":"AI Agent","type":"ai_languageModel","index":0}]]},"Telegram Trigger":{"main":[[{"node":"AI Agent","type":"main","index":0}]]},"AI Agent":{"main":[[{"node":"Telegram","type":"main","index":0}]]},"Postgres Chat Memory":{"ai_memory":[[{"node":"AI Agent","type":"ai_memory","index":0}]]},"When chat message received":{"main":[[]]},"MCP Client":{"ai_tool":[[{"node":"AI Agent","type":"ai_tool","index":0}]]},"Webhook":{"main":[[]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{"Telegram Trigger":[{"json":{"update_id":7013576,"message":{"message_id":82,"from":{"id":730141489,"is_bot":false,"first_name":"Charlie","last_name":"Phan","username":"Charliephanvan","language_code":"en"},"chat":{"id":730141489,"first_name":"Charlie","last_name":"Phan","username":"Charliephanvan","type":"private"},"date":1746186570,"text":"Thời tiết ở hồ chí minh thế nào"}}}]},"versionId":"568a6b0f-caea-425e-80fe-259200be590a","triggerCount":3,"tags":[],"shared":[{"createdAt":"2025-05-12T07:06:37.096Z","updatedAt":"2025-05-12T07:06:37.096Z","role":"workflow:owner","workflowId":"tNcG7WTPjPWeVHzW","projectId":"WbfPHUYYKS2tiNNo","project":{"createdAt":"2025-05-03T06:49:18.088Z","updatedAt":"2025-05-03T06:52:24.837Z","id":"WbfPHUYYKS2tiNNo","name":"charlie phan <scottyphan08@gmail.com>","type":"personal","icon":null,"description":null}}]},{"createdAt":"2025-05-15T01:03:19.919Z","updatedAt":"2025-06-05T07:12:56.823Z","id":"cLHjBHz9vUOxTo72","name":"n8n_facebook","active":false,"isArchived":false,"nodes":[{"parameters":{"multipleMethods":true,"path":"n8n_chatbot","responseMode":"responseNode","options":{}},"type":"n8n-nodes-base.webhook","typeVersion":2,"position":[-440,-260],"id":"17d37e8a-52f6-4c76-93c7-e073f1e233e9","name":"Webhook","webhookId":"cb6c3d68-959c-4598-b2aa-821333286121"},{"parameters":{"respondWith":"text","responseBody":"={{ $json.hubchllenge }}","options":{}},"type":"n8n-nodes-base.respondToWebhook","typeVersion":1.2,"position":[0,-340],"id":"06cc4cfb-0804-4b10-9478-36551262fc3b","name":"Respond to Webhook"},{"parameters":{"assignments":{"assignments":[{"id":"139d8803-1ec9-4be7-8408-ce20403db4ba","name":"hubchllenge","value":"={{ $json.query['hub.challenge'] }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-140,-340],"id":"7a2187f5-6cc3-4d5c-af70-fbc8e5fa8a3c","name":"Set Hub"},{"parameters":{"assignments":{"assignments":[{"id":"eccec6b0-6413-4889-bb89-c71e7465685d","name":"accesstoken","value":"EAAexzcjlpuMBOzKAwD5KK0csQZAUZCLPkZAxqMyceYByJVd5qekJ5aKMiPuw3TqjpZAPqFCOZBDbK47KsSlH9HOBct5yw8ZCQ5luSvPGtKnC2WyvgnBo5RdeT48MBITSkhFu4iVXyONZC4jeV94V2QzNmyy47g6G3mqoAyxoLjrh9blcvdKdWVPmtfITwZDZD","type":"string"},{"id":"c395e2db-1d85-4db6-880f-2ed370850c8d","name":"page_id","value":"={{ $json.body.entry[0].messaging[0].recipient }}","type":"string"},{"id":"13704ede-88ea-4b76-b3d2-8b8507239cdc","name":"psid","value":"={{ $json.body.entry[0].messaging[0].sender }}","type":"string"},{"id":"1403bc1f-7e0c-429f-a8e8-6cd174b90a28","name":"massage","value":"={{ $json.body.entry[0].messaging[0].message.text }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-240,-120],"id":"c8c272a5-0670-4a5e-b5b2-e82776c3234c","name":"Set Info"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"6c5f0a80-e0ff-420a-8f1c-d693c9c5fc43","leftValue":"{{$('Set').item.json.message}}","rightValue":"","operator":{"type":"string","operation":"notEmpty","singleValue":true}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[-60,-120],"id":"2ca751f6-1396-4800-8db0-ea0c9ec78b31","name":"If"},{"parameters":{},"type":"n8n-nodes-base.noOp","typeVersion":1,"position":[-80,100],"id":"ed4c066e-3838-44f9-8d0f-a04ef2651cf3","name":"No Operation, do nothing"},{"parameters":{"promptType":"define","text":"=**Nội dung hỏi:**\n{{ $json.massage }}\n\n** ID của user: **\n{{ $json.psid }}","options":{"systemMessage":"=\n\nOverview:\nBạn là trợ lý hữu ích\n\nCông cụ:\n'cskh': Gọi công cụ này để lấy thông tin phản hồi người dùng về dịch vụ mua bán thiết bị linh kiện máy tính\n\n'add_id': Dùng để thêm ID khách hàng trên page\n\n'them_lich_giaohang': Dùng để tạo lịch hẹn cho user.\n\nHướng dẫn:\nTrước khi đưa ra phản hồi, LUÔN LUÔN gọi công cụ 'add_id' đầu tiên để kiểm tra và thêm thông tin của user.\n\nKhi user hỏi các thông tin: Về giá dịch vụ, thời gian mở cửa, ưu đãi hiện tại của cửa hàng, hãy gọi công cụ cskh để lấy thông tin trước khi đưa ra phản hồi.\n\nKhi user cần đặt hỏi về các sản phẩm của công ty thì, hãy hỏi các thông tin sau:\n\nLoại máy tính\nTính năng\nTài chính bao nhiêu\nMàu sắc máy tính\nCần card đồ họa hay không\nSĐT của KH\nNgày giao hàng\nGiờ giao hàng\nPhương thúc giao hàng\n\n\nLưu ý khác\n(Trong đó 4 trường đầu tiên là bắt buộc)\n\nLưu ý:\n\nNếu user chưa cung cấp đủ thông tin, hướng dẫn user bổ sung thêm 1 cách lịch sự.\n\nNếu user đã cung cấp đủ thông tin, gửi toàn bộ các thông tin trên lại để user kiểm tra và xác nhận.\nGợi ý nhập \"ok\" để xác nhận.\n\nNếu user yêu cầu chỉnh sửa, hỗ trợ điều chỉnh thông tin cấu hình và lịch giao hàng và gửi lại để user kiểm tra và xác nhận.\n\nNếu user nhấn \"ok\" (hoặc các text có ngữ cảnh tương tự), gọi công cụ them_lich_giaohang để gửi thông tin. Sau đó nhắn user đã thêm lịch thành công, sẽ sớm có nhân viên liên hệ.\n\nLưu ý:\nLuôn xưng hô tên khách một cách lịch sự\n\nNội dung phản hồi phải trả ra ít hơn 2000 ký tự tiếng Việt, bao gồm khoảng trống"}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":1.9,"position":[220,-220],"id":"804fc9f3-7e3f-4d72-ad88-3897c3e88c73","name":"AI Agent"},{"parameters":{"model":{"__rl":true,"mode":"list","value":"gpt-4o-mini"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[140,-20],"id":"087905d4-d446-4593-a6c1-bc60ef4eecc9","name":"OpenAI Chat Model","credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{"sessionIdType":"customKey","sessionKey":"={{ $json.psid }}-{{ $now.format('ddMMyyyy') }}","contextWindowLength":20},"type":"@n8n/n8n-nodes-langchain.memoryPostgresChat","typeVersion":1.3,"position":[320,0],"id":"980e71ef-3647-4411-9820-3ac8f3041984","name":"Postgres Chat Memory","credentials":{"postgres":{"id":"lPXyj3Ypf5YeZpp3","name":"Postgres account Local"}}},{"parameters":{"description":"Gọi công cụ này để thêm thông tin KH vào google sheet","workflowId":{"__rl":true,"value":"yCAll4psbD1SGnLX","mode":"list","cachedResultName":"Import vector database"},"workflowInputs":{"mappingMode":"defineBelow","value":{},"matchingColumns":[],"schema":[],"attemptToConvertTypes":false,"convertFieldsToString":false}},"type":"@n8n/n8n-nodes-langchain.toolWorkflow","typeVersion":2.2,"position":[480,0],"id":"611ad125-5aab-467e-a0c1-ab702600c07a","name":"Call n8n Workflow Tool"}],"connections":{"Webhook":{"main":[[{"node":"Set Hub","type":"main","index":0}],[{"node":"Set Info","type":"main","index":0}]]},"Set Hub":{"main":[[{"node":"Respond to Webhook","type":"main","index":0}]]},"Set Info":{"main":[[{"node":"If","type":"main","index":0}]]},"If":{"main":[[{"node":"AI Agent","type":"main","index":0}],[{"node":"No Operation, do nothing","type":"main","index":0}]]},"OpenAI Chat Model":{"ai_languageModel":[[{"node":"AI Agent","type":"ai_languageModel","index":0}]]},"Postgres Chat Memory":{"ai_memory":[[{"node":"AI Agent","type":"ai_memory","index":0}]]},"Call n8n Workflow Tool":{"ai_tool":[[{"node":"AI Agent","type":"ai_tool","index":0}]]}},"settings":{"executionOrder":"v1","timezone":"Asia/Ho_Chi_Minh","callerPolicy":"workflowsFromSameOwner"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{"Webhook":[]},"versionId":"6dc38897-b4b2-4b6e-ba0c-0a4f8e79f790","triggerCount":1,"tags":[],"shared":[{"createdAt":"2025-05-15T01:03:19.919Z","updatedAt":"2025-05-15T01:03:19.919Z","role":"workflow:owner","workflowId":"cLHjBHz9vUOxTo72","projectId":"WbfPHUYYKS2tiNNo","project":{"createdAt":"2025-05-03T06:49:18.088Z","updatedAt":"2025-05-03T06:52:24.837Z","id":"WbfPHUYYKS2tiNNo","name":"charlie phan <scottyphan08@gmail.com>","type":"personal","icon":null,"description":null}}]},{"createdAt":"2025-05-15T07:57:07.179Z","updatedAt":"2025-05-19T07:32:15.064Z","id":"7kwscEZ8KLUdANUo","name":"Chatbot_pincecone","active":false,"isArchived":false,"nodes":[{"parameters":{"resource":"fileFolder","filter":{"folderId":{"__rl":true,"value":"1g5TR7Q5Np7Am_Hc0BA360MLVAYLIRCaz","mode":"list","cachedResultName":"pinecone_demo","cachedResultUrl":"https://drive.google.com/drive/folders/1g5TR7Q5Np7Am_Hc0BA360MLVAYLIRCaz"}},"options":{}},"type":"n8n-nodes-base.googleDrive","typeVersion":3,"position":[320,100],"id":"098b389e-5df6-4678-9787-fbf3cf43d5b6","name":"search_file","credentials":{"googleDriveOAuth2Api":{"id":"XDqLv6T2wJMb4j1U","name":"Google Drive account pnjp"}}},{"parameters":{"operation":"download","fileId":{"__rl":true,"value":"={{ $json.id }}","mode":"id"},"options":{}},"type":"n8n-nodes-base.googleDrive","typeVersion":3,"position":[540,100],"id":"fc6913b3-c3c9-44af-a71b-5b9ada5317cc","name":"dowload","credentials":{"googleDriveOAuth2Api":{"id":"XDqLv6T2wJMb4j1U","name":"Google Drive account pnjp"}}},{"parameters":{"options":{}},"type":"n8n-nodes-base.splitInBatches","typeVersion":3,"position":[800,80],"id":"060e1f7a-9972-4d8a-b3ce-ff273ecfafd9","name":"Loop Over Items"},{"parameters":{"mode":"insert","pineconeIndex":{"__rl":true,"value":"dulieunoibo","mode":"list","cachedResultName":"dulieunoibo"},"options":{}},"type":"@n8n/n8n-nodes-langchain.vectorStorePinecone","typeVersion":1,"position":[1060,40],"id":"72ce8a97-b4f6-48d2-9388-e1d50c7b382a","name":"Pinecone Vector Store","credentials":{"pineconeApi":{"id":"RfhRe1bC0DveUEwr","name":"PineconeApi account"}}},{"parameters":{"dataType":"binary","options":{}},"type":"@n8n/n8n-nodes-langchain.documentDefaultDataLoader","typeVersion":1,"position":[1220,220],"id":"b4d7dcfc-d7ef-4270-a1d1-b17f9bcd4a70","name":"Default Data Loader"},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter","typeVersion":1,"position":[1080,280],"id":"a4d612ec-be65-48ce-a355-2e7742bf2335","name":"Recursive Character Text Splitter"},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.embeddingsOpenAi","typeVersion":1.2,"position":[860,280],"id":"f53b2b88-c553-4bec-8cf9-cd8121a1c1f4","name":"Embeddings OpenAI","credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{"content":"## Upload tài liệu","height":400,"width":1480,"color":5},"type":"n8n-nodes-base.stickyNote","position":[0,0],"typeVersion":1,"id":"de7c73eb-d0d9-444a-a8f3-c12d0f92ba62","name":"Sticky Note"},{"parameters":{"options":{"systemMessage":"=## Overview:\n- Bạn là AI trợ lý riêng của người dùng. Nhiệm vụ của bạn là tiếp nhận và hỗ trợ giải đáp thắc mắc của người dùng dựa trên tài liệu nội bộ\n\n## Công Cụ:\n- `dulieu`: Chứa dữ liệu nội bộ, dùng để tìm kiếm thông tin trước khi đưa ra phản hồi\n\n## Hướng dẫn:\n- Luôn gọi công cụ `dulieu` để tìm kiếm thông tin trước khi phản hồi\n- Không tự ý tìm kiếm thông tin bên ngoài\n- Nếu trong `dulieu` không có thông tin, phản hồi chưa có thông tin\n- Giao tiếp chuyên nghiệp, lịch sự"}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":1.7,"position":[520,440],"id":"022717ff-6cb8-43f8-bc5e-567fb322b1e1","name":"AI Agent"},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.chatTrigger","typeVersion":1.1,"position":[300,500],"id":"f3fce0df-d7c3-4838-8ac6-98a90ac9d026","name":"When chat message received","webhookId":"0a30838e-59c4-484c-8b87-2d84dc78e992"},{"parameters":{},"type":"@n8n/n8n-nodes-langchain.memoryBufferWindow","typeVersion":1.3,"position":[620,800],"id":"b63a7e6b-6b82-424f-ba77-7e0cde0a2b2a","name":"Window Buffer Memory"},{"parameters":{"model":{"__rl":true,"mode":"list","value":"gpt-4o-mini"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[460,740],"id":"1f49328e-013a-44b4-9511-ed62fe9fe4be","name":"OpenAI Chat Model","credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{"name":"dulieu","description":"Chứa dữ liệu nội bộ, truy vấn để tìm thông tin trả lời câu hỏi của người dùng"},"type":"@n8n/n8n-nodes-langchain.toolVectorStore","typeVersion":1,"position":[940,520],"id":"372baa87-3435-4a8f-a6a2-97eab5cd576f","name":"Answer questions with a vector store"},{"parameters":{"pineconeIndex":{"__rl":true,"value":"dulieunoibo","mode":"list","cachedResultName":"dulieunoibo"},"options":{}},"type":"@n8n/n8n-nodes-langchain.vectorStorePinecone","typeVersion":1,"position":[800,780],"id":"98c3797d-73e0-4639-a50d-c306d8698634","name":"Pinecone Vector Store1","credentials":{"pineconeApi":{"id":"RfhRe1bC0DveUEwr","name":"PineconeApi account"}}},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.embeddingsOpenAi","typeVersion":1.2,"position":[1080,860],"id":"1af9c1b8-a335-4cc7-b14f-f3444af0963c","name":"Embeddings OpenAI1","credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{"content":"## Chat","height":560,"width":1060,"color":3},"type":"n8n-nodes-base.stickyNote","position":[240,440],"typeVersion":1,"id":"d86aa22d-2de9-4163-8372-07cfaedf90a2","name":"Sticky Note1"},{"parameters":{},"type":"n8n-nodes-base.manualTrigger","typeVersion":1,"position":[100,100],"id":"b57d7b7c-c3d6-4fe8-96ac-f882d591c0d1","name":"When clicking ‘Test workflow’"}],"connections":{"search_file":{"main":[[{"node":"dowload","type":"main","index":0}]]},"dowload":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Loop Over Items":{"main":[[],[{"node":"Pinecone Vector Store","type":"main","index":0}]]},"Pinecone Vector Store":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Default Data Loader":{"ai_document":[[{"node":"Pinecone Vector Store","type":"ai_document","index":0}]]},"Recursive Character Text Splitter":{"ai_textSplitter":[[{"node":"Default Data Loader","type":"ai_textSplitter","index":0}]]},"Embeddings OpenAI":{"ai_embedding":[[{"node":"Pinecone Vector Store","type":"ai_embedding","index":0}]]},"When chat message received":{"main":[[{"node":"AI Agent","type":"main","index":0}]]},"Window Buffer Memory":{"ai_memory":[[{"node":"AI Agent","type":"ai_memory","index":0}]]},"OpenAI Chat Model":{"ai_languageModel":[[{"node":"AI Agent","type":"ai_languageModel","index":0},{"node":"Answer questions with a vector store","type":"ai_languageModel","index":0}]]},"Answer questions with a vector store":{"ai_tool":[[{"node":"AI Agent","type":"ai_tool","index":0}]]},"Pinecone Vector Store1":{"ai_vectorStore":[[{"node":"Answer questions with a vector store","type":"ai_vectorStore","index":0}]]},"Embeddings OpenAI1":{"ai_embedding":[[{"node":"Pinecone Vector Store1","type":"ai_embedding","index":0}]]},"When clicking ‘Test workflow’":{"main":[[{"node":"search_file","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"264a9e86-78d5-4dec-b00e-f46f70385b24","triggerCount":1,"tags":[],"shared":[{"createdAt":"2025-05-15T07:57:07.179Z","updatedAt":"2025-05-15T07:57:07.179Z","role":"workflow:owner","workflowId":"7kwscEZ8KLUdANUo","projectId":"WbfPHUYYKS2tiNNo","project":{"createdAt":"2025-05-03T06:49:18.088Z","updatedAt":"2025-05-03T06:52:24.837Z","id":"WbfPHUYYKS2tiNNo","name":"charlie phan <scottyphan08@gmail.com>","type":"personal","icon":null,"description":null}}]},{"createdAt":"2025-05-15T10:00:29.995Z","updatedAt":"2025-05-19T07:32:16.837Z","id":"dYZYt65EylvlX2ax","name":"Chatbot_supabase","active":false,"isArchived":false,"nodes":[{"parameters":{"resource":"fileFolder","filter":{"folderId":{"__rl":true,"value":"1g5TR7Q5Np7Am_Hc0BA360MLVAYLIRCaz","mode":"list","cachedResultName":"pinecone_demo","cachedResultUrl":"https://drive.google.com/drive/folders/1g5TR7Q5Np7Am_Hc0BA360MLVAYLIRCaz"}},"options":{}},"type":"n8n-nodes-base.googleDrive","typeVersion":3,"position":[260,40],"id":"1b2dabcf-3dc1-4dc6-94b6-7648c9835886","name":"search_file","credentials":{"googleDriveOAuth2Api":{"id":"XDqLv6T2wJMb4j1U","name":"Google Drive account pnjp"}}},{"parameters":{"operation":"download","fileId":{"__rl":true,"value":"={{ $json.id }}","mode":"id"},"options":{}},"type":"n8n-nodes-base.googleDrive","typeVersion":3,"position":[440,-60],"id":"031d7ea1-56a2-48cf-b812-4b0f5f876261","name":"dowload","credentials":{"googleDriveOAuth2Api":{"id":"XDqLv6T2wJMb4j1U","name":"Google Drive account pnjp"}}},{"parameters":{"options":{}},"type":"n8n-nodes-base.splitInBatches","typeVersion":3,"position":[640,-100],"id":"e6ef4166-c77e-4243-ba55-0a4d2cb99b90","name":"Loop Over Items"},{"parameters":{"mode":"insert","pineconeIndex":{"__rl":true,"value":"dulieunoibo","mode":"list","cachedResultName":"dulieunoibo"},"options":{}},"type":"@n8n/n8n-nodes-langchain.vectorStorePinecone","typeVersion":1,"position":[1460,-120],"id":"fe5b9b34-7b79-4c78-8f14-f94835517e9b","name":"Pinecone Vector Store","credentials":{"pineconeApi":{"id":"RfhRe1bC0DveUEwr","name":"PineconeApi account"}}},{"parameters":{"dataType":"binary","options":{}},"type":"@n8n/n8n-nodes-langchain.documentDefaultDataLoader","typeVersion":1,"position":[1460,180],"id":"57226e1f-cd13-4119-af24-ad7571c622cf","name":"Default Data Loader"},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter","typeVersion":1,"position":[1540,280],"id":"2659559a-67db-4a61-bb50-afbba8469062","name":"Recursive Character Text Splitter"},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.embeddingsOpenAi","typeVersion":1.2,"position":[1460,40],"id":"80d58787-4cfc-48db-98dd-b7a8d575546b","name":"Embeddings OpenAI","credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{"content":"## Upload tài liệu","height":400,"width":1480,"color":5},"type":"n8n-nodes-base.stickyNote","position":[0,0],"typeVersion":1,"id":"3ef48bc2-c57f-46b0-8ea1-1d1317209c51","name":"Sticky Note"},{"parameters":{"options":{"systemMessage":"=## Overview:\n- Bạn là AI trợ lý riêng của người dùng. Nhiệm vụ của bạn là tiếp nhận và hỗ trợ giải đáp thắc mắc của người dùng dựa trên tài liệu nội bộ\n\n## Công Cụ:\n- `dulieu`: Chứa dữ liệu nội bộ, dùng để tìm kiếm thông tin trước khi đưa ra phản hồi\n\n## Hướng dẫn:\n- Luôn gọi công cụ `dulieu` để tìm kiếm thông tin trước khi phản hồi\n- Không tự ý tìm kiếm thông tin bên ngoài\n- Nếu trong `dulieu` không có thông tin, phản hồi chưa có thông tin\n- Giao tiếp chuyên nghiệp, lịch sự"}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":1.7,"position":[520,440],"id":"d1afcffc-24c0-4937-9144-31fa8d20a467","name":"AI Agent"},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.chatTrigger","typeVersion":1.1,"position":[300,500],"id":"12d23f82-0dc3-4e92-959c-7764362bb545","name":"When chat message received","webhookId":"6c7a412e-19cb-4691-b1c1-53f414e34806"},{"parameters":{},"type":"@n8n/n8n-nodes-langchain.memoryBufferWindow","typeVersion":1.3,"position":[620,800],"id":"8ee0e4f1-e743-4117-98cf-1c40f82b831b","name":"Window Buffer Memory"},{"parameters":{"model":{"__rl":true,"mode":"list","value":"gpt-4o-mini"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[460,740],"id":"d7aaec45-509f-4929-bc5d-c1c7b8149dbb","name":"OpenAI Chat Model","credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{"name":"dulieu","description":"Chứa dữ liệu nội bộ, truy vấn để tìm thông tin trả lời câu hỏi của người dùng"},"type":"@n8n/n8n-nodes-langchain.toolVectorStore","typeVersion":1,"position":[940,520],"id":"f13f086d-6138-4882-998e-55dd5d36e7d7","name":"Answer questions with a vector store"},{"parameters":{"pineconeIndex":{"__rl":true,"value":"dulieunoibo","mode":"list","cachedResultName":"dulieunoibo"},"options":{}},"type":"@n8n/n8n-nodes-langchain.vectorStorePinecone","typeVersion":1,"position":[800,780],"id":"4acac3a0-c1ea-42c7-917e-f25db5767dd9","name":"Pinecone Vector Store1","credentials":{"pineconeApi":{"id":"RfhRe1bC0DveUEwr","name":"PineconeApi account"}}},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.embeddingsOpenAi","typeVersion":1.2,"position":[1080,860],"id":"e8f0bffe-07e1-4f89-b78c-7bad1ee70aec","name":"Embeddings OpenAI1","credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{"content":"## Chat","height":560,"width":1060,"color":3},"type":"n8n-nodes-base.stickyNote","position":[240,440],"typeVersion":1,"id":"031b406b-5695-402d-aedc-853e907130ce","name":"Sticky Note1"},{"parameters":{},"type":"n8n-nodes-base.manualTrigger","typeVersion":1,"position":[20,20],"id":"846766d8-930a-4b1e-afd1-ae4007847199","name":"When clicking ‘Test workflow’"},{"parameters":{"mode":"insert","tableName":{"__rl":true,"value":"documents_kg","mode":"list","cachedResultName":"documents_kg"},"options":{}},"type":"@n8n/n8n-nodes-langchain.vectorStoreSupabase","typeVersion":1.1,"position":[1020,-160],"id":"f5f2cda2-6ba3-422e-852a-d3951345c735","name":"Supabase Vector Store","credentials":{"supabaseApi":{"id":"GwQHus8VDsBElGiE","name":"Supabase account localhost"}}},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.embeddingsOpenAi","typeVersion":1.2,"position":[880,160],"id":"eb46c393-9fa1-4490-82ab-64f08549791c","name":"Embeddings OpenAI2","credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{"dataType":"binary","options":{}},"type":"@n8n/n8n-nodes-langchain.documentDefaultDataLoader","typeVersion":1,"position":[1100,80],"id":"ee553983-1348-42e4-8b1f-282c4bbee9f8","name":"Default Data Loader1"},{"parameters":{"chunkOverlap":5,"options":{}},"type":"@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter","typeVersion":1,"position":[1140,240],"id":"c45820f6-18e1-484f-b830-c61c07604291","name":"Recursive Character Text Splitter1"}],"connections":{"search_file":{"main":[[{"node":"dowload","type":"main","index":0}]]},"dowload":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Loop Over Items":{"main":[[],[{"node":"Supabase Vector Store","type":"main","index":0}]]},"Pinecone Vector Store":{"main":[[]]},"Default Data Loader":{"ai_document":[[{"node":"Pinecone Vector Store","type":"ai_document","index":0}]]},"Recursive Character Text Splitter":{"ai_textSplitter":[[{"node":"Default Data Loader","type":"ai_textSplitter","index":0}]]},"Embeddings OpenAI":{"ai_embedding":[[{"node":"Pinecone Vector Store","type":"ai_embedding","index":0}]]},"When chat message received":{"main":[[{"node":"AI Agent","type":"main","index":0}]]},"Window Buffer Memory":{"ai_memory":[[{"node":"AI Agent","type":"ai_memory","index":0}]]},"OpenAI Chat Model":{"ai_languageModel":[[{"node":"AI Agent","type":"ai_languageModel","index":0},{"node":"Answer questions with a vector store","type":"ai_languageModel","index":0}]]},"Answer questions with a vector store":{"ai_tool":[[{"node":"AI Agent","type":"ai_tool","index":0}]]},"Pinecone Vector Store1":{"ai_vectorStore":[[{"node":"Answer questions with a vector store","type":"ai_vectorStore","index":0}]]},"Embeddings OpenAI1":{"ai_embedding":[[{"node":"Pinecone Vector Store1","type":"ai_embedding","index":0}]]},"When clicking ‘Test workflow’":{"main":[[{"node":"search_file","type":"main","index":0}]]},"Embeddings OpenAI2":{"ai_embedding":[[{"node":"Supabase Vector Store","type":"ai_embedding","index":0}]]},"Default Data Loader1":{"ai_document":[[{"node":"Supabase Vector Store","type":"ai_document","index":0}]]},"Recursive Character Text Splitter1":{"ai_textSplitter":[[{"node":"Default Data Loader1","type":"ai_textSplitter","index":0}]]},"Supabase Vector Store":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"ca9d9192-3267-4f28-a4b8-e74082cba6a9","triggerCount":1,"tags":[],"shared":[{"createdAt":"2025-05-15T10:00:29.995Z","updatedAt":"2025-05-15T10:00:29.995Z","role":"workflow:owner","workflowId":"dYZYt65EylvlX2ax","projectId":"WbfPHUYYKS2tiNNo","project":{"createdAt":"2025-05-03T06:49:18.088Z","updatedAt":"2025-05-03T06:52:24.837Z","id":"WbfPHUYYKS2tiNNo","name":"charlie phan <scottyphan08@gmail.com>","type":"personal","icon":null,"description":null}}]},{"createdAt":"2025-05-15T10:16:50.305Z","updatedAt":"2025-05-23T02:40:06.146Z","id":"bZN93DRiMbT32t0O","name":"Chatbot_localsupabase","active":false,"isArchived":false,"nodes":[{"parameters":{"options":{}},"id":"b1e918e4-4b1e-461d-9bf9-ab20833ed739","name":"OpenAI Chat Model","type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1,"position":[-420,360],"credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{"options":{}},"id":"b1dff32f-1ace-4c92-8286-d2ffac5888a7","name":"OpenAI Chat Model1","type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1,"position":[400,300],"credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{"jsonMode":"expressionData","jsonData":"={{ $json.data }}","options":{"metadata":{"metadataValues":[{"name":"=file_id","value":"={{ $('Set File ID').item.json.file_id }}"}]}}},"id":"d5ab8f64-040a-484d-bd04-703e8483590b","name":"Default Data Loader","type":"@n8n/n8n-nodes-langchain.documentDefaultDataLoader","typeVersion":1,"position":[540,840]},{"parameters":{"model":"text-embedding-3-small","options":{}},"id":"ab2c7de0-d75f-46e5-b83d-61235aef9af3","name":"Embeddings OpenAI1","type":"@n8n/n8n-nodes-langchain.embeddingsOpenAi","typeVersion":1,"position":[380,840],"credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{"name":"user_documents","description":"Contains all the user's documents that you can check for context to answer user questions."},"id":"2c7d9806-578f-448e-9475-8014b9f0bcda","name":"Retrieve Documents","type":"@n8n/n8n-nodes-langchain.toolVectorStore","typeVersion":1,"position":[180,160]},{"parameters":{"content":"## Agent Tools for RAG","height":528.85546469693,"width":583.4552380860637,"color":4},"id":"b957850f-27ae-4de9-a385-e2b25ebe61dc","name":"Sticky Note","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[0,0]},{"parameters":{"content":"## Tool to Add a Google Drive File to Vector DB","height":671.8877842322804,"width":2070.8894079025763,"color":5},"id":"d23c4b53-8104-417f-805b-3e8bc9b48b0c","name":"Sticky Note1","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[-1220,540]},{"parameters":{"operation":"download","fileId":{"__rl":true,"value":"={{ $('Set File ID').item.json.file_id }}","mode":"id"},"options":{"googleFileConversion":{"conversion":{"docsToFormat":"text/plain"}}}},"id":"cf97566a-9ddc-488e-9ad7-b86747e5b4c4","name":"Download File","type":"n8n-nodes-base.googleDrive","typeVersion":3,"position":[-120,720],"executeOnce":true,"credentials":{"googleDriveOAuth2Api":{"id":"XDqLv6T2wJMb4j1U","name":"Google Drive account pnjp"}}},{"parameters":{"pollTimes":{"item":[{"mode":"everyMinute"}]},"triggerOn":"specificFolder","folderToWatch":{"__rl":true,"value":"1g5TR7Q5Np7Am_Hc0BA360MLVAYLIRCaz","mode":"list","cachedResultName":"pinecone_demo","cachedResultUrl":"https://drive.google.com/drive/folders/1g5TR7Q5Np7Am_Hc0BA360MLVAYLIRCaz"},"event":"fileCreated","options":{}},"id":"0c7bb524-2fa7-4f55-ab1a-d8fb2a247c0b","name":"File Created","type":"n8n-nodes-base.googleDriveTrigger","typeVersion":1,"position":[-1160,620],"credentials":{"googleDriveOAuth2Api":{"id":"XDqLv6T2wJMb4j1U","name":"Google Drive account pnjp"}}},{"parameters":{"pollTimes":{"item":[{"mode":"everyMinute"}]},"triggerOn":"specificFolder","folderToWatch":{"__rl":true,"value":"1g5TR7Q5Np7Am_Hc0BA360MLVAYLIRCaz","mode":"list","cachedResultName":"pinecone_demo","cachedResultUrl":"https://drive.google.com/drive/folders/1g5TR7Q5Np7Am_Hc0BA360MLVAYLIRCaz"},"event":"fileUpdated","options":{}},"id":"857a8639-e56e-4081-a683-f87e49ffda57","name":"File Updated","type":"n8n-nodes-base.googleDriveTrigger","typeVersion":1,"position":[-1160,840],"credentials":{"googleDriveOAuth2Api":{"id":"XDqLv6T2wJMb4j1U","name":"Google Drive account pnjp"}}},{"parameters":{"operation":"text","options":{}},"id":"37e62995-66a5-4d9c-b44d-7e3db3e68729","name":"Extract Document Text","type":"n8n-nodes-base.extractFromFile","typeVersion":1,"position":[140,720],"alwaysOutputData":true},{"parameters":{"model":"text-embedding-3-small","options":{}},"id":"31d48528-42d4-411c-ae4a-dc55053f3d2e","name":"Embeddings OpenAI","type":"@n8n/n8n-nodes-langchain.embeddingsOpenAi","typeVersion":1,"position":[220,400],"credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{},"id":"0a0daef9-73a1-487c-a0b7-30691b3c521f","name":"Postgres Chat Memory","type":"@n8n/n8n-nodes-langchain.memoryPostgresChat","typeVersion":1,"position":[-280,360],"notesInFlow":false,"credentials":{"postgres":{"id":"lPXyj3Ypf5YeZpp3","name":"Postgres account Local"}}},{"parameters":{"options":{}},"id":"905700b4-c0c0-4777-b6ec-5ef055c7ffba","name":"Recursive Character Text Splitter","type":"@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter","typeVersion":1,"position":[540,1040]},{"parameters":{"operation":"delete","tableId":"documents","filterType":"string","filterString":"=metadata->>file_id=like.*{{ $json.file_id }}*"},"id":"aa40808c-85da-45f5-8e93-d701bbe7a288","name":"Delete Old Doc Rows","type":"n8n-nodes-base.supabase","typeVersion":1,"position":[-420,720],"alwaysOutputData":true,"credentials":{"supabaseApi":{"id":"GwQHus8VDsBElGiE","name":"Supabase account localhost"}}},{"parameters":{"assignments":{"assignments":[{"id":"10646eae-ae46-4327-a4dc-9987c2d76173","name":"file_id","value":"={{ $json.id }}","type":"string"}]},"options":{}},"id":"3f06ffb7-1e20-426f-97b0-4ff227d16ff5","name":"Set File ID","type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-740,720]},{"parameters":{"content":"## RAG AI Agent with Chat Interface","height":464.8027193303974,"width":692.7866482806627},"id":"9938117c-cf99-40fa-bdfb-ae404bd95d59","name":"Sticky Note2","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[-700,60]},{"parameters":{"public":true,"options":{}},"id":"52c58096-de95-4379-9711-78446838f3f7","name":"When chat message received","type":"@n8n/n8n-nodes-langchain.chatTrigger","typeVersion":1.1,"position":[-640,140],"webhookId":"e985d15f-b2f6-456d-be15-97e0b1544a40"},{"parameters":{"promptType":"define","text":"={{ $('When chat message received').item.json.chatInput }}","options":{"systemMessage":"You are a personal assistant who helps answer questions from a corpus of documents when you don't know the answer yourself."}},"id":"25d05af6-5998-4fd3-86dd-43c0bc20cf8b","name":"RAG AI Agent","type":"@n8n/n8n-nodes-langchain.agent","typeVersion":1.6,"position":[-340,100]},{"parameters":{"tableName":{"__rl":true,"value":"documents","mode":"list","cachedResultName":"documents"},"options":{"queryName":"match_documents"}},"id":"86afca50-c70b-4e18-9114-4bab4a8f78a5","name":"Supabase Vector Store","type":"@n8n/n8n-nodes-langchain.vectorStoreSupabase","typeVersion":1,"position":[60,280],"credentials":{"supabaseApi":{"id":"GwQHus8VDsBElGiE","name":"Supabase account localhost"}}},{"parameters":{"mode":"insert","tableName":{"__rl":true,"value":"documents","mode":"list","cachedResultName":"documents"},"options":{"queryName":"match_documents"}},"id":"41c4d124-2c6d-4e1b-aaba-81855e6aee84","name":"Insert into Supabase Vectorstore","type":"@n8n/n8n-nodes-langchain.vectorStoreSupabase","typeVersion":1,"position":[420,620],"credentials":{"supabaseApi":{"id":"GwQHus8VDsBElGiE","name":"Supabase account localhost"}}}],"connections":{"OpenAI Chat Model":{"ai_languageModel":[[{"node":"RAG AI Agent","type":"ai_languageModel","index":0}]]},"OpenAI Chat Model1":{"ai_languageModel":[[{"node":"Retrieve Documents","type":"ai_languageModel","index":0}]]},"Retrieve Documents":{"ai_tool":[[{"node":"RAG AI Agent","type":"ai_tool","index":0}]]},"Download File":{"main":[[{"node":"Extract Document Text","type":"main","index":0}]]},"File Created":{"main":[[{"node":"Set File ID","type":"main","index":0}]]},"Embeddings OpenAI":{"ai_embedding":[[{"node":"Supabase Vector Store","type":"ai_embedding","index":0}]]},"Extract Document Text":{"main":[[{"node":"Insert into Supabase Vectorstore","type":"main","index":0}]]},"Embeddings OpenAI1":{"ai_embedding":[[{"node":"Insert into Supabase Vectorstore","type":"ai_embedding","index":0}]]},"Default Data Loader":{"ai_document":[[{"node":"Insert into Supabase Vectorstore","type":"ai_document","index":0}]]},"Postgres Chat Memory":{"ai_memory":[[{"node":"RAG AI Agent","type":"ai_memory","index":0}]]},"Recursive Character Text Splitter":{"ai_textSplitter":[[{"node":"Default Data Loader","type":"ai_textSplitter","index":0}]]},"Delete Old Doc Rows":{"main":[[{"node":"Download File","type":"main","index":0}]]},"Set File ID":{"main":[[{"node":"Delete Old Doc Rows","type":"main","index":0}]]},"File Updated":{"main":[[{"node":"Set File ID","type":"main","index":0}]]},"When chat message received":{"main":[[{"node":"RAG AI Agent","type":"main","index":0}]]},"Supabase Vector Store":{"ai_vectorStore":[[{"node":"Retrieve Documents","type":"ai_vectorStore","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"496a288e-8c91-490b-a4b1-24fdf6d0de52","triggerCount":0,"tags":[],"shared":[{"createdAt":"2025-05-15T10:16:50.305Z","updatedAt":"2025-05-15T10:16:50.305Z","role":"workflow:owner","workflowId":"bZN93DRiMbT32t0O","projectId":"WbfPHUYYKS2tiNNo","project":{"createdAt":"2025-05-03T06:49:18.088Z","updatedAt":"2025-05-03T06:52:24.837Z","id":"WbfPHUYYKS2tiNNo","name":"charlie phan <scottyphan08@gmail.com>","type":"personal","icon":null,"description":null}}]},{"createdAt":"2025-05-15T13:38:00.835Z","updatedAt":"2025-05-19T07:32:12.405Z","id":"Zix8dphVLqCRUeTe","name":"Import vectordatabase","active":false,"isArchived":false,"nodes":[{"parameters":{"options":{}},"id":"0ce892be-0df2-450c-bd7f-79ec9d191ab6","name":"OpenAI Chat Model","type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1,"position":[-740,360],"credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{"jsonMode":"expressionData","jsonData":"={{ $json.data || $json.text || $json.concatenated_data }}","options":{"metadata":{"metadataValues":[{"name":"=file_id","value":"={{ $('Set File ID').first().json.file_id }}"},{"name":"file_title","value":"={{ $('Set File ID').first().json.file_title }}"}]}}},"id":"26b12def-9412-4646-9c59-16e05faf3887","name":"Default Data Loader","type":"@n8n/n8n-nodes-langchain.documentDefaultDataLoader","typeVersion":1,"position":[1000,1140]},{"parameters":{"model":"text-embedding-3-small","options":{}},"id":"d5ce90dc-852f-4dc7-b5c1-b1a2e2a75999","name":"Embeddings OpenAI1","type":"@n8n/n8n-nodes-langchain.embeddingsOpenAi","typeVersion":1,"position":[760,1140],"credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{"content":"## Agent Tools for RAG","height":528.85546469693,"width":583.4552380860637,"color":4},"id":"68a43c33-ddc5-45ab-9d37-94e794a9d4c5","name":"Sticky Note","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[0,0]},{"parameters":{"content":"## Tool to Add a Google Drive File to Vector DB","height":867,"width":3073,"color":5},"id":"1045cfc2-1310-44e0-8112-73f7471a8e0e","name":"Sticky Note1","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[-1740,540]},{"parameters":{"operation":"download","fileId":{"__rl":true,"value":"={{ $('Set File ID').item.json.file_id }}","mode":"id"},"options":{"binaryPropertyName":"data","googleFileConversion":{"conversion":{"docsToFormat":"text/plain"}}}},"id":"b3b43916-7281-4fef-962e-579dfc9afd08","name":"Download File","type":"n8n-nodes-base.googleDrive","typeVersion":3,"position":[-660,820],"executeOnce":true,"credentials":{"googleDriveOAuth2Api":{"id":"XDqLv6T2wJMb4j1U","name":"Google Drive account pnjp"}}},{"parameters":{"pollTimes":{"item":[{"mode":"everyMinute"}]},"triggerOn":"specificFolder","folderToWatch":{"__rl":true,"value":"1VEUNkoIdGAc9EZPv-_ENtdm67NxNZy8u","mode":"list","cachedResultName":"n8ndocuments","cachedResultUrl":"https://drive.google.com/drive/folders/1VEUNkoIdGAc9EZPv-_ENtdm67NxNZy8u"},"event":"fileCreated","options":{}},"id":"9f660596-afde-43b3-b68c-13a8fda34d82","name":"File Created","type":"n8n-nodes-base.googleDriveTrigger","typeVersion":1,"position":[-1680,660],"credentials":{"googleDriveOAuth2Api":{"id":"XDqLv6T2wJMb4j1U","name":"Google Drive account pnjp"}}},{"parameters":{"pollTimes":{"item":[{"mode":"everyMinute"}]},"triggerOn":"specificFolder","folderToWatch":{"__rl":true,"value":"1HtaIIK3kWwjbwhsmEbtJ-upalxVn3Ek9","mode":"list","cachedResultName":"n8n Documents","cachedResultUrl":"https://drive.google.com/drive/folders/1HtaIIK3kWwjbwhsmEbtJ-upalxVn3Ek9"},"event":"fileUpdated","options":{}},"id":"d29e2c72-67df-48eb-b469-c7c09f5805df","name":"File Updated","type":"n8n-nodes-base.googleDriveTrigger","typeVersion":1,"position":[-1680,820],"credentials":{"googleDriveOAuth2Api":{"id":"XDqLv6T2wJMb4j1U","name":"Google Drive account pnjp"}}},{"parameters":{"operation":"text","options":{}},"id":"ed864f11-3471-4072-8b1d-c1841ef95f1f","name":"Extract Document Text","type":"n8n-nodes-base.extractFromFile","typeVersion":1,"position":[200,1140],"alwaysOutputData":true},{"parameters":{},"id":"972a8fb9-a88b-439e-8364-e0eeba4bb644","name":"Postgres Chat Memory","type":"@n8n/n8n-nodes-langchain.memoryPostgresChat","typeVersion":1,"position":[-600,360],"notesInFlow":false,"credentials":{"postgres":{"id":"lPXyj3Ypf5YeZpp3","name":"Postgres account Local"}}},{"parameters":{"operation":"delete","tableId":"documents","filterType":"string","filterString":"=metadata->>file_id=like.*{{ $json.file_id }}*"},"id":"e833a687-378e-4252-ab34-b98c5804e6a7","name":"Delete Old Doc Rows","type":"n8n-nodes-base.supabase","typeVersion":1,"position":[-1140,660],"alwaysOutputData":true,"credentials":{"supabaseApi":{"id":"GwQHus8VDsBElGiE","name":"Supabase account localhost"}}},{"parameters":{"assignments":{"assignments":[{"id":"10646eae-ae46-4327-a4dc-9987c2d76173","name":"file_id","value":"={{ $json.id }}","type":"string"},{"id":"f4536df5-d0b1-4392-bf17-b8137fb31a44","name":"file_type","value":"={{ $json.mimeType }}","type":"string"},{"id":"77d782de-169d-4a46-8a8e-a3831c04d90f","name":"file_title","value":"={{ $json.name }}","type":"string"},{"id":"9bde4d7f-e4f3-4ebd-9338-dce1350f9eab","name":"file_url","value":"={{ $json.webViewLink }}","type":"string"}]},"options":{}},"id":"b27fc39b-9a9f-4b11-a55b-c70e82024256","name":"Set File ID","type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-1320,820]},{"parameters":{"content":"## RAG AI Agent with Chat Interface","height":464.8027193303974,"width":1035.6381264595484},"id":"881c5178-51f0-4a73-abbc-ce306430a7b2","name":"Sticky Note2","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[-1040,60]},{"parameters":{"options":{}},"id":"c778aded-607d-414e-9363-093d3a3b4f80","name":"Respond to Webhook","type":"n8n-nodes-base.respondToWebhook","typeVersion":1.1,"position":[-180,140]},{"parameters":{"assignments":{"assignments":[{"id":"9a9a245e-f1a1-4282-bb02-a81ffe629f0f","name":"chatInput","value":"={{ $json?.chatInput || $json.body.chatInput }}","type":"string"},{"id":"b80831d8-c653-4203-8706-adedfdb98f77","name":"sessionId","value":"={{ $json?.sessionId || $json.body.sessionId}}","type":"string"}]},"options":{}},"id":"26fdbec7-2088-4448-8e30-58c6078c83f3","name":"Edit Fields","type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-740,140]},{"parameters":{"public":true,"options":{}},"id":"968030bb-2542-469d-8ab4-8db60228298e","name":"When chat message received","type":"@n8n/n8n-nodes-langchain.chatTrigger","typeVersion":1.1,"position":[-1000,140],"webhookId":"e104e40e-6134-4825-a6f0-8a646d882662"},{"parameters":{"httpMethod":"POST","path":"bf4dd093-bb02-472c-9454-7ab9af97bd1d","authentication":"headerAuth","responseMode":"responseNode","options":{}},"id":"9c67f7b1-fddf-45c9-bfb1-87347716d7b1","name":"Webhook","type":"n8n-nodes-base.webhook","typeVersion":2,"position":[-1000,340],"webhookId":"bf4dd093-bb02-472c-9454-7ab9af97bd1d"},{"parameters":{"operation":"pdf","options":{}},"id":"1566cc6f-6afa-4fe5-bcc6-ec3ee414c545","name":"Extract PDF Text","type":"n8n-nodes-base.extractFromFile","typeVersion":1,"position":[200,580]},{"parameters":{"aggregate":"aggregateAllItemData","options":{}},"id":"b692552f-de92-4cf5-af6c-55aa4437ff17","name":"Aggregate","type":"n8n-nodes-base.aggregate","typeVersion":1,"position":[240,760]},{"parameters":{},"id":"c0863eb8-6f6d-4ba4-a7bf-09e1edb8a16f","name":"Character Text Splitter","type":"@n8n/n8n-nodes-langchain.textSplitterCharacterTextSplitter","typeVersion":1,"position":[900,1260]},{"parameters":{"fieldsToSummarize":{"values":[{"aggregation":"concatenate","field":"data"}]},"options":{}},"id":"1afd6382-88ca-41ff-8a43-b322d0ca0fb9","name":"Summarize","type":"n8n-nodes-base.summarize","typeVersion":1,"position":[440,840]},{"parameters":{"promptType":"define","text":"={{ $json.chatInput }}","options":{"systemMessage":"You are a personal assistant who helps answer questions from a corpus of documents. The documents are either text based (Txt, docs, extracted PDFs, etc.) or tabular data (CSVs or Excel documents).\n\nYou are given tools to perform RAG in the 'documents' table, look up the documents available in your knowledge base in the 'document_metadata' table, extract all the text from a given document, and query the tabular files with SQL in the 'document_rows' table.\n\nAlways start by performing RAG unless the question requires a SQL query for tabular data (fetching a sum, finding a max, something a RAG lookup would be unreliable for). If RAG doesn't help, then look at the documents that are available to you, find a few that you think would contain the answer, and then analyze those.\n\nAlways tell the user if you didn't find the answer. Don't make something up just to please them."}},"id":"ccd7fa23-4fde-4ed8-a011-c0d043685154","name":"RAG AI Agent","type":"@n8n/n8n-nodes-langchain.agent","typeVersion":1.6,"position":[-520,140]},{"parameters":{"rules":{"values":[{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":1},"conditions":[{"leftValue":"={{ $('Set File ID').item.json.file_type }}","rightValue":"application/pdf","operator":{"type":"string","operation":"equals"}}],"combinator":"and"}},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":1},"conditions":[{"id":"2ae7faa7-a936-4621-a680-60c512163034","leftValue":"={{ $('Set File ID').item.json.file_type }}","rightValue":"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"}},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":1},"conditions":[{"id":"fc193b06-363b-4699-a97d-e5a850138b0e","leftValue":"={{ $('Set File ID').item.json.file_type }}","rightValue":"=application/vnd.google-apps.spreadsheet","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"}},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":1},"conditions":[{"id":"b69f5605-0179-4b02-9a32-e34bb085f82d","leftValue":"={{ $('Set File ID').item.json.file_type }}","rightValue":"application/vnd.google-apps.document","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"}}]},"options":{"fallbackOutput":"none"}},"id":"d02a694e-9aea-4742-ba73-cadc02bc1cd0","name":"Switch","type":"n8n-nodes-base.switch","typeVersion":3,"position":[-460,800]},{"parameters":{"mode":"insert","tableName":{"__rl":true,"value":"documents","mode":"list","cachedResultName":"documents"},"options":{"queryName":"match_documents"}},"id":"27e9cf83-c074-4327-91d8-326de8257fdc","name":"Insert into Supabase Vectorstore","type":"@n8n/n8n-nodes-langchain.vectorStoreSupabase","typeVersion":1,"position":[920,920],"credentials":{"supabaseApi":{"id":"GwQHus8VDsBElGiE","name":"Supabase account localhost"}}},{"parameters":{"operation":"xlsx","options":{}},"id":"7da304ac-cc73-48ad-a08f-57b022e5718a","name":"Extract from Excel","type":"n8n-nodes-base.extractFromFile","typeVersion":1,"position":[20,760]},{"parameters":{"assignments":{"assignments":[{"id":"f422e2e0-381c-46ea-8f38-3f58c501d8b9","name":"schema","value":"={{ $('Extract from Excel').isExecuted ? $('Extract from Excel').first().json.keys().toJsonString() : $('Extract from CSV').first().json.keys().toJsonString() }}","type":"string"},{"id":"bb07c71e-5b60-4795-864c-cc3845b6bc46","name":"data","value":"={{ $json.concatenated_data }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[880,700],"id":"ce5f7444-777d-4b56-a64f-e9d272473680","name":"Set Schema"},{"parameters":{"options":{}},"type":"n8n-nodes-base.extractFromFile","typeVersion":1,"position":[20,940],"id":"6ff8d44b-0048-4043-926c-aec76bc876ba","name":"Extract from CSV"},{"parameters":{"content":"## Run Each Node Once to Set Up Database Tables","height":300,"width":680,"color":3},"type":"n8n-nodes-base.stickyNote","position":[-1740,220],"typeVersion":1,"id":"5ff1d70e-1b47-4f4e-8dd5-493ec8abf170","name":"Sticky Note3"},{"parameters":{"operation":"executeQuery","query":"CREATE TABLE document_metadata (\n    id TEXT PRIMARY KEY,\n    title TEXT,\n    url TEXT,\n    created_at TIMESTAMP DEFAULT NOW(),\n    schema TEXT\n);","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.5,"position":[-1480,320],"id":"041a75c9-6391-47cd-aaaa-e019c7da0e96","name":"Create Document Metadata Table"},{"parameters":{"operation":"executeQuery","query":"CREATE TABLE document_rows (\n    id SERIAL PRIMARY KEY,\n    dataset_id TEXT REFERENCES document_metadata(id),\n    row_data JSONB  -- Store the actual row data\n);","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.5,"position":[-1260,320],"id":"3c016697-bf3a-46e6-81f3-4725d1978dc4","name":"Create Document Rows Table (for Tabular Data)"},{"parameters":{"descriptionType":"manual","toolDescription":"Use this tool to fetch all available documents, including the table schema if the file is a CSV or Excel file.","operation":"select","schema":{"__rl":true,"mode":"list","value":"public"},"table":{"__rl":true,"value":"document_metadata","mode":"list","cachedResultName":"document_metadata"},"returnAll":true,"options":{}},"type":"n8n-nodes-base.postgresTool","typeVersion":2.5,"position":[-460,360],"id":"d60bbe17-7b44-40b4-8b3f-85b849380adf","name":"List Documents","credentials":{"postgres":{"id":"lPXyj3Ypf5YeZpp3","name":"Postgres account Local"}}},{"parameters":{"descriptionType":"manual","toolDescription":"Given a file ID, fetches the text from the document.","operation":"executeQuery","query":"SELECT \n    string_agg(content, ' ') as document_text\nFROM documents\n  WHERE metadata->>'file_id' = $1\nGROUP BY metadata->>'file_id';","options":{"queryReplacement":"={{ $fromAI('file_id') }}"}},"type":"n8n-nodes-base.postgresTool","typeVersion":2.5,"position":[-320,360],"id":"fe60f367-91bd-45dc-b9a3-af2fc442dc8d","name":"Get File Contents","credentials":{"postgres":{"id":"lPXyj3Ypf5YeZpp3","name":"Postgres account Local"}}},{"parameters":{"descriptionType":"manual","toolDescription":"=Run a SQL query - use this to query from the document_rows table once you know the file ID you are querying. dataset_id is the file_id and you are always using the row_data for filtering, which is a jsonb field that has all the keys from the file schema given in the document_metadata table.\n\nExample query:\n\nSELECT AVG((row_data->>'revenue')::numeric)\nFROM document_rows\nWHERE dataset_id = '123';\n\nExample query 2:\n\nSELECT \n    row_data->>'category' as category,\n    SUM((row_data->>'sales')::numeric) as total_sales\nFROM dataset_rows\nWHERE dataset_id = '123'\nGROUP BY row_data->>'category';","operation":"executeQuery","query":"{{ $fromAI('sql_query') }}","options":{}},"type":"n8n-nodes-base.postgresTool","typeVersion":2.5,"position":[-160,360],"id":"db342fa2-e491-4f0e-bc83-24bd50a8fc8c","name":"Query Document Rows","credentials":{"postgres":{"id":"lPXyj3Ypf5YeZpp3","name":"Postgres account Local"}}},{"parameters":{"mode":"retrieve-as-tool","toolName":"documents","toolDescription":"Use RAG to look up information in the knowledgebase.","tableName":{"__rl":true,"value":"documents","mode":"list","cachedResultName":"documents"},"options":{"queryName":"match_documents"}},"type":"@n8n/n8n-nodes-langchain.vectorStoreSupabase","typeVersion":1,"position":[160,140],"id":"b24eb03d-bce1-4596-b32e-21f2fe31b09f","name":"Supabase Vector Store1","credentials":{"supabaseApi":{"id":"GwQHus8VDsBElGiE","name":"Supabase account localhost"}}},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.embeddingsOpenAi","typeVersion":1.2,"position":[260,320],"id":"7e062b60-433f-4bea-ae6e-8c5b1aad92eb","name":"Embeddings OpenAI2","credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{"options":{"reset":false}},"type":"n8n-nodes-base.splitInBatches","typeVersion":3,"position":[-1500,660],"id":"96c225c4-4e8d-4896-af4f-163980226cd2","name":"Loop Over Items"},{"parameters":{"operation":"executeQuery","query":"-- Enable the pgvector extension to work with embedding vectors\ncreate extension vector;\n\n-- Create a table to store your documents\ncreate table documents (\n  id bigserial primary key,\n  content text, -- corresponds to Document.pageContent\n  metadata jsonb, -- corresponds to Document.metadata\n  embedding vector(1536) -- 1536 works for OpenAI embeddings, change if needed\n);\n\n-- Create a function to search for documents\ncreate function match_documents (\n  query_embedding vector(1536),\n  match_count int default null,\n  filter jsonb DEFAULT '{}'\n) returns table (\n  id bigint,\n  content text,\n  metadata jsonb,\n  similarity float\n)\nlanguage plpgsql\nas $$\n#variable_conflict use_column\nbegin\n  return query\n  select\n    id,\n    content,\n    metadata,\n    1 - (documents.embedding <=> query_embedding) as similarity\n  from documents\n  where metadata @> filter\n  order by documents.embedding <=> query_embedding\n  limit match_count;\nend;\n$$;","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.5,"position":[-1680,320],"id":"850f8c1e-d3c7-44bd-80d3-7792bf4bf3c9","name":"Create Documents Table and Match Function"},{"parameters":{"operation":"delete","tableId":"document_rows","filters":{"conditions":[{"keyName":"dataset_id","condition":"eq","keyValue":"={{ $('Set File ID').item.json.file_id }}"}]}},"type":"n8n-nodes-base.supabase","typeVersion":1,"position":[-980,820],"id":"c8a082ed-7897-4922-bcf5-3257a4595657","name":"Delete Old Data Rows","alwaysOutputData":true,"executeOnce":true,"credentials":{"supabaseApi":{"id":"GwQHus8VDsBElGiE","name":"Supabase account localhost"}}},{"parameters":{"operation":"upsert","schema":{"__rl":true,"mode":"list","value":"public"},"table":{"__rl":true,"value":"document_metadata","mode":"list","cachedResultName":"document_metadata"},"columns":{"mappingMode":"defineBelow","value":{"id":"={{ $('Set File ID').item.json.file_id }}","title":"={{ $('Set File ID').item.json.file_title }}","url":"={{ $('Set File ID').item.json.file_url }}"},"matchingColumns":["id"],"schema":[{"id":"id","displayName":"id","required":true,"defaultMatch":true,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"title","displayName":"title","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":false},{"id":"url","displayName":"url","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":false,"removed":false},{"id":"created_at","displayName":"created_at","required":false,"defaultMatch":false,"display":true,"type":"dateTime","canBeUsedToMatch":false},{"id":"schema","displayName":"schema","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":false,"removed":true}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.5,"position":[-820,680],"id":"32f1d913-e7f6-4a6f-8856-5d7705bcde72","name":"Insert Document Metadata","executeOnce":true,"credentials":{"postgres":{"id":"lPXyj3Ypf5YeZpp3","name":"Postgres account Local"}}},{"parameters":{"schema":{"__rl":true,"mode":"list","value":"public"},"table":{"__rl":true,"value":"document_rows","mode":"list","cachedResultName":"document_rows"},"columns":{"mappingMode":"defineBelow","value":{"dataset_id":"={{ $('Set File ID').item.json.file_id }}","row_data":"={{ $json.toJsonString().replaceAll(/'/g, \"''\") }}"},"matchingColumns":["id"],"schema":[{"id":"id","displayName":"id","required":false,"defaultMatch":true,"display":true,"type":"number","canBeUsedToMatch":true,"removed":true},{"id":"dataset_id","displayName":"dataset_id","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"row_data","displayName":"row_data","required":false,"defaultMatch":false,"display":true,"type":"object","canBeUsedToMatch":true}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.5,"position":[240,940],"id":"f8f7f4a9-956a-42e5-ae4c-6ab1aec16da5","name":"Insert Table Rows","credentials":{"postgres":{"id":"lPXyj3Ypf5YeZpp3","name":"Postgres account Local"}}},{"parameters":{"operation":"upsert","schema":{"__rl":true,"mode":"list","value":"public"},"table":{"__rl":true,"value":"document_metadata","mode":"list","cachedResultName":"document_metadata"},"columns":{"mappingMode":"defineBelow","value":{"id":"={{ $('Set File ID').item.json.file_id }}","schema":"={{ $json.schema }}"},"matchingColumns":["id"],"schema":[{"id":"id","displayName":"id","required":true,"defaultMatch":true,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"title","displayName":"title","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":false,"removed":true},{"id":"created_at","displayName":"created_at","required":false,"defaultMatch":false,"display":true,"type":"dateTime","canBeUsedToMatch":false},{"id":"schema","displayName":"schema","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":false,"removed":false}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.5,"position":[1100,700],"id":"ea7151e9-9905-46a4-a949-2db3b03e4ff2","name":"Update Schema for Document Metadata","credentials":{"postgres":{"id":"lPXyj3Ypf5YeZpp3","name":"Postgres account Local"}}},{"parameters":{"content":"## 🚀 Ultimate n8n Agentic RAG Template\n\n**Author:** [Cole Medin](https://www.youtube.com/@ColeMedin)\n\n## What is this?\nThis template provides a complete implementation of an **Agentic RAG (Retrieval Augmented Generation)** system in n8n that can be extended easily for your specific use case and knowledge base. Unlike standard RAG which only performs simple lookups, this agent can reason about your knowledge base, self-improve retrieval, and dynamically switch between different tools based on the specific question.\n\n## Why Agentic RAG?\nStandard RAG has significant limitations:\n- Poor analysis of numerical/tabular data\n- Missing context due to document chunking\n- Inability to connect information across documents\n- No dynamic tool selection based on question type\n\n## What makes this template powerful:\n- **Intelligent tool selection**: Switches between RAG lookups, SQL queries, or full document retrieval based on the question\n- **Complete document context**: Accesses entire documents when needed instead of just chunks\n- **Accurate numerical analysis**: Uses SQL for precise calculations on spreadsheet/tabular data\n- **Cross-document insights**: Connects information across your entire knowledge base\n- **Multi-file processing**: Handles multiple documents in a single workflow loop\n- **Efficient storage**: Uses JSONB in Supabase to store tabular data without creating new tables for each CSV\n\n## Getting Started\n1. Run the table creation nodes first to set up your database tables in Supabase\n2. Upload your documents through Google Drive (or swap out for a different file storage solution)\n3. The agent will process them automatically (chunking text, storing tabular data in Supabase)\n4. Start asking questions that leverage the agent's multiple reasoning approaches\n\n## Customization\nThis template provides a solid foundation that you can extend by:\n- Tuning the system prompt for your specific use case\n- Adding document metadata like summaries\n- Implementing more advanced RAG techniques\n- Optimizing for larger knowledge bases\n\n---\n\nI do intend on making a local version of this agent very soon!","height":1320,"width":540,"color":6},"type":"n8n-nodes-base.stickyNote","position":[-2320,80],"typeVersion":1,"id":"34072add-1c1b-4c74-8a3b-078aedcba851","name":"Sticky Note9"}],"connections":{"OpenAI Chat Model":{"ai_languageModel":[[{"node":"RAG AI Agent","type":"ai_languageModel","index":0}]]},"Download File":{"main":[[{"node":"Switch","type":"main","index":0}]]},"File Created":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Extract Document Text":{"main":[[{"node":"Insert into Supabase Vectorstore","type":"main","index":0}]]},"Embeddings OpenAI1":{"ai_embedding":[[{"node":"Insert into Supabase Vectorstore","type":"ai_embedding","index":0}]]},"Default Data Loader":{"ai_document":[[{"node":"Insert into Supabase Vectorstore","type":"ai_document","index":0}]]},"Postgres Chat Memory":{"ai_memory":[[{"node":"RAG AI Agent","type":"ai_memory","index":0}]]},"Delete Old Doc Rows":{"main":[[{"node":"Delete Old Data Rows","type":"main","index":0}]]},"Set File ID":{"main":[[{"node":"Delete Old Doc Rows","type":"main","index":0}]]},"File Updated":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Edit Fields":{"main":[[{"node":"RAG AI Agent","type":"main","index":0}]]},"When chat message received":{"main":[[{"node":"Edit Fields","type":"main","index":0}]]},"Webhook":{"main":[[{"node":"Edit Fields","type":"main","index":0}]]},"Extract PDF Text":{"main":[[{"node":"Insert into Supabase Vectorstore","type":"main","index":0}]]},"Aggregate":{"main":[[{"node":"Summarize","type":"main","index":0}]]},"Character Text Splitter":{"ai_textSplitter":[[{"node":"Default Data Loader","type":"ai_textSplitter","index":0}]]},"Summarize":{"main":[[{"node":"Set Schema","type":"main","index":0},{"node":"Insert into Supabase Vectorstore","type":"main","index":0}]]},"RAG AI Agent":{"main":[[{"node":"Respond to Webhook","type":"main","index":0}]]},"Switch":{"main":[[{"node":"Extract PDF Text","type":"main","index":0}],[{"node":"Extract from Excel","type":"main","index":0}],[{"node":"Extract from CSV","type":"main","index":0}],[{"node":"Extract Document Text","type":"main","index":0}]]},"Extract from Excel":{"main":[[{"node":"Aggregate","type":"main","index":0},{"node":"Insert Table Rows","type":"main","index":0}]]},"Set Schema":{"main":[[{"node":"Update Schema for Document Metadata","type":"main","index":0}]]},"Extract from CSV":{"main":[[{"node":"Aggregate","type":"main","index":0},{"node":"Insert Table Rows","type":"main","index":0}]]},"Create Document Metadata Table":{"main":[[{"node":"Create Document Rows Table (for Tabular Data)","type":"main","index":0}]]},"List Documents":{"ai_tool":[[{"node":"RAG AI Agent","type":"ai_tool","index":0}]]},"Get File Contents":{"ai_tool":[[{"node":"RAG AI Agent","type":"ai_tool","index":0}]]},"Query Document Rows":{"ai_tool":[[{"node":"RAG AI Agent","type":"ai_tool","index":0}]]},"Supabase Vector Store1":{"ai_tool":[[{"node":"RAG AI Agent","type":"ai_tool","index":0}]]},"Embeddings OpenAI2":{"ai_embedding":[[{"node":"Supabase Vector Store1","type":"ai_embedding","index":0}]]},"Loop Over Items":{"main":[[],[{"node":"Set File ID","type":"main","index":0}]]},"Insert into Supabase Vectorstore":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Create Documents Table and Match Function":{"main":[[{"node":"Create Document Metadata Table","type":"main","index":0}]]},"Delete Old Data Rows":{"main":[[{"node":"Insert Document Metadata","type":"main","index":0}]]},"Insert Document Metadata":{"main":[[{"node":"Download File","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":null,"pinData":{"File Created":[{"json":{"kind":"drive#file","copyRequiresWriterPermission":false,"writersCanShare":true,"viewedByMe":true,"mimeType":"application/vnd.google-apps.spreadsheet","exportLinks":{"application/x-vnd.oasis.opendocument.spreadsheet":"https://docs.google.com/spreadsheets/export?id=1py8boCNhGKiZ4EUJ3jAP8rNDVxYArwoOJsg0xXeAWlM&exportFormat=ods","text/tab-separated-values":"https://docs.google.com/spreadsheets/export?id=1py8boCNhGKiZ4EUJ3jAP8rNDVxYArwoOJsg0xXeAWlM&exportFormat=tsv","application/pdf":"https://docs.google.com/spreadsheets/export?id=1py8boCNhGKiZ4EUJ3jAP8rNDVxYArwoOJsg0xXeAWlM&exportFormat=pdf","application/vnd.openxmlformats-officedocument.spreadsheetml.sheet":"https://docs.google.com/spreadsheets/export?id=1py8boCNhGKiZ4EUJ3jAP8rNDVxYArwoOJsg0xXeAWlM&exportFormat=xlsx","text/csv":"https://docs.google.com/spreadsheets/export?id=1py8boCNhGKiZ4EUJ3jAP8rNDVxYArwoOJsg0xXeAWlM&exportFormat=csv","application/zip":"https://docs.google.com/spreadsheets/export?id=1py8boCNhGKiZ4EUJ3jAP8rNDVxYArwoOJsg0xXeAWlM&exportFormat=zip","application/vnd.oasis.opendocument.spreadsheet":"https://docs.google.com/spreadsheets/export?id=1py8boCNhGKiZ4EUJ3jAP8rNDVxYArwoOJsg0xXeAWlM&exportFormat=ods"},"parents":["1HtaIIK3kWwjbwhsmEbtJ-upalxVn3Ek9"],"thumbnailLink":"https://lh3.googleusercontent.com/drive-storage/AJQWtBO25toxt6RwVPjSmlzZEda-lk4VxRy3zObFMOtcvKSX8m0uyYJAOMHYjIxSVnl6GgWT9QJFzn6oAaUFOPdnWPB89gUcAo5c97K0oNb1vYNFjk5jEOpro51Aa5PYpA=s220","iconLink":"https://drive-thirdparty.googleusercontent.com/16/type/application/vnd.google-apps.spreadsheet","shared":false,"lastModifyingUser":{"displayName":"Cole Medin","kind":"drive#user","me":true,"permissionId":"09805982089636049437","emailAddress":"colemedin@ottomator.ai","photoLink":"https://lh3.googleusercontent.com/a-/ALV-UjXYQW9sb7WW3wnC-1AVobRmOW6jJVl-c6A8a1Vmfg22B_llKKPYSlKo9UEZvIV23wtXqnJ0dgC56hiJN_z6e2d9S2MdiFDTpg7cyD-gXf1LICu2REL4QH54-MvYmKecDcm4MgnZYSms-X1KpD6seI1pkEehGcRg0NIXn2wGCPicXUZ30K8SFo9PxCr_0NRyR93hQn8hkX3Ml1nBuHIRL4Fvu5MjOvxRJQkqaF9zf0JVyB1LHdV-Ypr87v_B_7hDaJ8Jor2z73LA-rKq_mcU6Ta46Hsm83AnTY3iOJE9WxH2Cd9N795co4COaYL5hHEADdPq_B-OfVcbYNk1kf2qT4Josi_cu1uRGUFnhpBpD5Cu5uy2qD-J8GrMgkKdRKr1S7Z9ZD6bYyb3r3j6s4NHpE_iswHBJh-WfD2fg590TiCs6ciAPbx5769BYDF6Z2hVsCVq0G5bgS3JfbCTVNk8mNCh_4gzyRyfzj38OR0L5Fngv1i8y-HluGNw2k37cyrYu4HunKjMZKy_NsmOTWLITeyU_VoDvH-egUftryYVVCdUn1SEpSjDByjpLmQqCk-Kg3jK-0DGmClkblFw_svgvWUqyoOWMHHpH5fNTLdmPYK6w0Zcft5GXar9bahLAK9IT-epMIFTwnxhQu2yT0cP1I186OoWWUxCapElN_AEJDhibEMLyrHlmJUuhq205dClKGEvXw9D2ejYVpY0xVQ1ZxpKV-QGDTkniAjlWVCRwdaDrgbH3ieKgy5LXj357oCXUwRC-5niqp5MiybN0bN7KUe1zPSJjMDSjIkKcUMd_uAx_hlFkhx_jD0i0IMs3BLQ3OEOLw1IoD2Lol6jBstCUcZFCQrikP7d-nabEX8yDTLfYi9e8sDPp2yNA4pBJfKUm9-AHOAFWZ1BzXJN97RIiTQyKdExCKSz3kPf2lrQyTDVwYkZ75-ZkksHvXoz3kWo3MrAjGl56MxCrOkd88teMhDHq0E=s64"},"owners":[{"displayName":"Cole Medin","kind":"drive#user","me":true,"permissionId":"09805982089636049437","emailAddress":"colemedin@ottomator.ai","photoLink":"https://lh3.googleusercontent.com/a-/ALV-UjXYQW9sb7WW3wnC-1AVobRmOW6jJVl-c6A8a1Vmfg22B_llKKPYSlKo9UEZvIV23wtXqnJ0dgC56hiJN_z6e2d9S2MdiFDTpg7cyD-gXf1LICu2REL4QH54-MvYmKecDcm4MgnZYSms-X1KpD6seI1pkEehGcRg0NIXn2wGCPicXUZ30K8SFo9PxCr_0NRyR93hQn8hkX3Ml1nBuHIRL4Fvu5MjOvxRJQkqaF9zf0JVyB1LHdV-Ypr87v_B_7hDaJ8Jor2z73LA-rKq_mcU6Ta46Hsm83AnTY3iOJE9WxH2Cd9N795co4COaYL5hHEADdPq_B-OfVcbYNk1kf2qT4Josi_cu1uRGUFnhpBpD5Cu5uy2qD-J8GrMgkKdRKr1S7Z9ZD6bYyb3r3j6s4NHpE_iswHBJh-WfD2fg590TiCs6ciAPbx5769BYDF6Z2hVsCVq0G5bgS3JfbCTVNk8mNCh_4gzyRyfzj38OR0L5Fngv1i8y-HluGNw2k37cyrYu4HunKjMZKy_NsmOTWLITeyU_VoDvH-egUftryYVVCdUn1SEpSjDByjpLmQqCk-Kg3jK-0DGmClkblFw_svgvWUqyoOWMHHpH5fNTLdmPYK6w0Zcft5GXar9bahLAK9IT-epMIFTwnxhQu2yT0cP1I186OoWWUxCapElN_AEJDhibEMLyrHlmJUuhq205dClKGEvXw9D2ejYVpY0xVQ1ZxpKV-QGDTkniAjlWVCRwdaDrgbH3ieKgy5LXj357oCXUwRC-5niqp5MiybN0bN7KUe1zPSJjMDSjIkKcUMd_uAx_hlFkhx_jD0i0IMs3BLQ3OEOLw1IoD2Lol6jBstCUcZFCQrikP7d-nabEX8yDTLfYi9e8sDPp2yNA4pBJfKUm9-AHOAFWZ1BzXJN97RIiTQyKdExCKSz3kPf2lrQyTDVwYkZ75-ZkksHvXoz3kWo3MrAjGl56MxCrOkd88teMhDHq0E=s64"}],"webViewLink":"https://docs.google.com/spreadsheets/d/1py8boCNhGKiZ4EUJ3jAP8rNDVxYArwoOJsg0xXeAWlM/edit?usp=drivesdk","size":"1024","viewersCanCopyContent":true,"permissions":[{"id":"09805982089636049437","displayName":"Cole Medin","type":"user","kind":"drive#permission","photoLink":"https://lh3.googleusercontent.com/a-/ALV-UjU-zfOspR2RPV0ODNiUMTUKvYDBBCZV-dZusxjov3wKmsVu93G9IfBKLBtQef-ZfzxVCqoc8HAVOEJyVPWiFax-dpQqjp5Bmqnsiestzam2U55u4Y7m3qszgGuIwTYYCQ4-TI6w2ActqiVwzXSrFt8hF5q5UYn1zzHvR8OG1fQHhoxUgOpsSwsylfLh2gRj49gNFuJ0tQZFIT37R0-dsKLjV0DqBDUpqHgP4mnA02dUgy3D9BjshwfHQY-IdWnK1xGTrunpzeHBrIE306eUhHcXaN2D0P8vAdpFRjTKyJMCDVp5ZVMn79MSZwUVbN9TGD_u4DpbXFVB27hi4MjS8mHblF5tJLSKtLs-UW4itcrt-QnUMeHkIEpcly8vsGcuiOmyNHlldsJ79HhOsSPhY9vxvwSpXBOn_9F15_808Om2de0duT2RewGeMlEXXjE0PO456Y4BStBV1uRa3VceZ2l3MgXkbF8BZG_f0DjNrVkW7xqdOHBArDO87vRhEawPlaWPTFw8UX7kGRsV9jIyRuLmvcSINIW2nEuZOXyKFeHR6IfIRIuTk0F7E0qk8WFtQlvVx-a--ELays2G5R1oVqrFst2mbO6U9wQz9Uhz3SDsIh6OB7S0e86x0hkdFS1lbKmxSqpXx-d-kcYuW88etuwSYnoZEQVAs1Vyu_XHYxfMw_nFZ0PTH_LMc9DYINUILulRvuMPq_bfkusoIr4EEyZTGtQVy-4qf01eEgRCG1xGBIN6_6dzyWGZoHdayfSXyDoFfwE2vcWBz30qFeImwis1u67VnbWCyfC0vb8rEScWo19XpyxW81umlcTlOXA8buq7nnD8IgVETwn7islB-mzsjnQOtrjDCOJ4T4KdzYYpM0iWdwSbhu95sDfa2GBeNSM6_shlwwm88V56XEyDZ7t0K52rtgjX7tI9qQg_5uAsQSmUQWwHXs1qLw_0Lm8HJm7NTJey6_uN2pCzhM-eajxl3Gw=s64","emailAddress":"colemedin@ottomator.ai","role":"owner","deleted":false,"pendingOwner":false}],"hasThumbnail":true,"spaces":["drive"],"id":"1py8boCNhGKiZ4EUJ3jAP8rNDVxYArwoOJsg0xXeAWlM","name":"Test Sheet #1","starred":false,"trashed":false,"explicitlyTrashed":false,"createdTime":"2025-02-23T17:00:50.000Z","modifiedTime":"2025-02-23T17:43:45.286Z","modifiedByMeTime":"2025-02-23T17:43:45.286Z","viewedByMeTime":"2025-02-23T18:21:12.774Z","quotaBytesUsed":"1024","version":"17","ownedByMe":true,"isAppAuthorized":false,"capabilities":{"canChangeViewersCanCopyContent":true,"canEdit":true,"canCopy":true,"canComment":true,"canAddChildren":false,"canDelete":true,"canDownload":true,"canListChildren":false,"canRemoveChildren":false,"canRename":true,"canTrash":true,"canReadRevisions":true,"canChangeCopyRequiresWriterPermission":true,"canMoveItemIntoTeamDrive":true,"canUntrash":true,"canModifyContent":true,"canMoveItemOutOfDrive":true,"canAddMyDriveParent":false,"canRemoveMyDriveParent":true,"canMoveItemWithinDrive":true,"canShare":true,"canMoveChildrenWithinDrive":false,"canModifyContentRestriction":true,"canChangeSecurityUpdateEnabled":false,"canAcceptOwnership":false,"canReadLabels":false,"canModifyLabels":false,"canModifyEditorContentRestriction":true,"canModifyOwnerContentRestriction":true,"canRemoveContentRestriction":false,"canDisableInheritedPermissions":false,"canEnableInheritedPermissions":true},"thumbnailVersion":"3","modifiedByMe":true,"permissionIds":["09805982089636049437"],"linkShareMetadata":{"securityUpdateEligible":false,"securityUpdateEnabled":true},"inheritedPermissionsDisabled":false}},{"json":{"kind":"drive#file","copyRequiresWriterPermission":false,"writersCanShare":true,"viewedByMe":true,"mimeType":"application/vnd.google-apps.spreadsheet","exportLinks":{"application/x-vnd.oasis.opendocument.spreadsheet":"https://docs.google.com/spreadsheets/export?id=1py8boCNhGKiZ4EUJ3jAP8rNDVxYArwoOJsg0xXeAWlM&exportFormat=ods","text/tab-separated-values":"https://docs.google.com/spreadsheets/export?id=1py8boCNhGKiZ4EUJ3jAP8rNDVxYArwoOJsg0xXeAWlM&exportFormat=tsv","application/pdf":"https://docs.google.com/spreadsheets/export?id=1py8boCNhGKiZ4EUJ3jAP8rNDVxYArwoOJsg0xXeAWlM&exportFormat=pdf","application/vnd.openxmlformats-officedocument.spreadsheetml.sheet":"https://docs.google.com/spreadsheets/export?id=1py8boCNhGKiZ4EUJ3jAP8rNDVxYArwoOJsg0xXeAWlM&exportFormat=xlsx","text/csv":"https://docs.google.com/spreadsheets/export?id=1py8boCNhGKiZ4EUJ3jAP8rNDVxYArwoOJsg0xXeAWlM&exportFormat=csv","application/zip":"https://docs.google.com/spreadsheets/export?id=1py8boCNhGKiZ4EUJ3jAP8rNDVxYArwoOJsg0xXeAWlM&exportFormat=zip","application/vnd.oasis.opendocument.spreadsheet":"https://docs.google.com/spreadsheets/export?id=1py8boCNhGKiZ4EUJ3jAP8rNDVxYArwoOJsg0xXeAWlM&exportFormat=ods"},"parents":["1HtaIIK3kWwjbwhsmEbtJ-upalxVn3Ek9"],"thumbnailLink":"https://lh3.googleusercontent.com/drive-storage/AJQWtBO25toxt6RwVPjSmlzZEda-lk4VxRy3zObFMOtcvKSX8m0uyYJAOMHYjIxSVnl6GgWT9QJFzn6oAaUFOPdnWPB89gUcAo5c97K0oNb1vYNFjk5jEOpro51Aa5PYpA=s220","iconLink":"https://drive-thirdparty.googleusercontent.com/16/type/application/vnd.google-apps.spreadsheet","shared":false,"lastModifyingUser":{"displayName":"Cole Medin","kind":"drive#user","me":true,"permissionId":"09805982089636049437","emailAddress":"colemedin@ottomator.ai","photoLink":"https://lh3.googleusercontent.com/a-/ALV-UjXYQW9sb7WW3wnC-1AVobRmOW6jJVl-c6A8a1Vmfg22B_llKKPYSlKo9UEZvIV23wtXqnJ0dgC56hiJN_z6e2d9S2MdiFDTpg7cyD-gXf1LICu2REL4QH54-MvYmKecDcm4MgnZYSms-X1KpD6seI1pkEehGcRg0NIXn2wGCPicXUZ30K8SFo9PxCr_0NRyR93hQn8hkX3Ml1nBuHIRL4Fvu5MjOvxRJQkqaF9zf0JVyB1LHdV-Ypr87v_B_7hDaJ8Jor2z73LA-rKq_mcU6Ta46Hsm83AnTY3iOJE9WxH2Cd9N795co4COaYL5hHEADdPq_B-OfVcbYNk1kf2qT4Josi_cu1uRGUFnhpBpD5Cu5uy2qD-J8GrMgkKdRKr1S7Z9ZD6bYyb3r3j6s4NHpE_iswHBJh-WfD2fg590TiCs6ciAPbx5769BYDF6Z2hVsCVq0G5bgS3JfbCTVNk8mNCh_4gzyRyfzj38OR0L5Fngv1i8y-HluGNw2k37cyrYu4HunKjMZKy_NsmOTWLITeyU_VoDvH-egUftryYVVCdUn1SEpSjDByjpLmQqCk-Kg3jK-0DGmClkblFw_svgvWUqyoOWMHHpH5fNTLdmPYK6w0Zcft5GXar9bahLAK9IT-epMIFTwnxhQu2yT0cP1I186OoWWUxCapElN_AEJDhibEMLyrHlmJUuhq205dClKGEvXw9D2ejYVpY0xVQ1ZxpKV-QGDTkniAjlWVCRwdaDrgbH3ieKgy5LXj357oCXUwRC-5niqp5MiybN0bN7KUe1zPSJjMDSjIkKcUMd_uAx_hlFkhx_jD0i0IMs3BLQ3OEOLw1IoD2Lol6jBstCUcZFCQrikP7d-nabEX8yDTLfYi9e8sDPp2yNA4pBJfKUm9-AHOAFWZ1BzXJN97RIiTQyKdExCKSz3kPf2lrQyTDVwYkZ75-ZkksHvXoz3kWo3MrAjGl56MxCrOkd88teMhDHq0E=s64"},"owners":[{"displayName":"Cole Medin","kind":"drive#user","me":true,"permissionId":"09805982089636049437","emailAddress":"colemedin@ottomator.ai","photoLink":"https://lh3.googleusercontent.com/a-/ALV-UjXYQW9sb7WW3wnC-1AVobRmOW6jJVl-c6A8a1Vmfg22B_llKKPYSlKo9UEZvIV23wtXqnJ0dgC56hiJN_z6e2d9S2MdiFDTpg7cyD-gXf1LICu2REL4QH54-MvYmKecDcm4MgnZYSms-X1KpD6seI1pkEehGcRg0NIXn2wGCPicXUZ30K8SFo9PxCr_0NRyR93hQn8hkX3Ml1nBuHIRL4Fvu5MjOvxRJQkqaF9zf0JVyB1LHdV-Ypr87v_B_7hDaJ8Jor2z73LA-rKq_mcU6Ta46Hsm83AnTY3iOJE9WxH2Cd9N795co4COaYL5hHEADdPq_B-OfVcbYNk1kf2qT4Josi_cu1uRGUFnhpBpD5Cu5uy2qD-J8GrMgkKdRKr1S7Z9ZD6bYyb3r3j6s4NHpE_iswHBJh-WfD2fg590TiCs6ciAPbx5769BYDF6Z2hVsCVq0G5bgS3JfbCTVNk8mNCh_4gzyRyfzj38OR0L5Fngv1i8y-HluGNw2k37cyrYu4HunKjMZKy_NsmOTWLITeyU_VoDvH-egUftryYVVCdUn1SEpSjDByjpLmQqCk-Kg3jK-0DGmClkblFw_svgvWUqyoOWMHHpH5fNTLdmPYK6w0Zcft5GXar9bahLAK9IT-epMIFTwnxhQu2yT0cP1I186OoWWUxCapElN_AEJDhibEMLyrHlmJUuhq205dClKGEvXw9D2ejYVpY0xVQ1ZxpKV-QGDTkniAjlWVCRwdaDrgbH3ieKgy5LXj357oCXUwRC-5niqp5MiybN0bN7KUe1zPSJjMDSjIkKcUMd_uAx_hlFkhx_jD0i0IMs3BLQ3OEOLw1IoD2Lol6jBstCUcZFCQrikP7d-nabEX8yDTLfYi9e8sDPp2yNA4pBJfKUm9-AHOAFWZ1BzXJN97RIiTQyKdExCKSz3kPf2lrQyTDVwYkZ75-ZkksHvXoz3kWo3MrAjGl56MxCrOkd88teMhDHq0E=s64"}],"webViewLink":"https://docs.google.com/spreadsheets/d/1py8boCNhGKiZ4EUJ3jAP8rNDVxYArwoOJsg0xXeAWlM/edit?usp=drivesdk","size":"1024","viewersCanCopyContent":true,"permissions":[{"id":"09805982089636049437","displayName":"Cole Medin","type":"user","kind":"drive#permission","photoLink":"https://lh3.googleusercontent.com/a-/ALV-UjU-zfOspR2RPV0ODNiUMTUKvYDBBCZV-dZusxjov3wKmsVu93G9IfBKLBtQef-ZfzxVCqoc8HAVOEJyVPWiFax-dpQqjp5Bmqnsiestzam2U55u4Y7m3qszgGuIwTYYCQ4-TI6w2ActqiVwzXSrFt8hF5q5UYn1zzHvR8OG1fQHhoxUgOpsSwsylfLh2gRj49gNFuJ0tQZFIT37R0-dsKLjV0DqBDUpqHgP4mnA02dUgy3D9BjshwfHQY-IdWnK1xGTrunpzeHBrIE306eUhHcXaN2D0P8vAdpFRjTKyJMCDVp5ZVMn79MSZwUVbN9TGD_u4DpbXFVB27hi4MjS8mHblF5tJLSKtLs-UW4itcrt-QnUMeHkIEpcly8vsGcuiOmyNHlldsJ79HhOsSPhY9vxvwSpXBOn_9F15_808Om2de0duT2RewGeMlEXXjE0PO456Y4BStBV1uRa3VceZ2l3MgXkbF8BZG_f0DjNrVkW7xqdOHBArDO87vRhEawPlaWPTFw8UX7kGRsV9jIyRuLmvcSINIW2nEuZOXyKFeHR6IfIRIuTk0F7E0qk8WFtQlvVx-a--ELays2G5R1oVqrFst2mbO6U9wQz9Uhz3SDsIh6OB7S0e86x0hkdFS1lbKmxSqpXx-d-kcYuW88etuwSYnoZEQVAs1Vyu_XHYxfMw_nFZ0PTH_LMc9DYINUILulRvuMPq_bfkusoIr4EEyZTGtQVy-4qf01eEgRCG1xGBIN6_6dzyWGZoHdayfSXyDoFfwE2vcWBz30qFeImwis1u67VnbWCyfC0vb8rEScWo19XpyxW81umlcTlOXA8buq7nnD8IgVETwn7islB-mzsjnQOtrjDCOJ4T4KdzYYpM0iWdwSbhu95sDfa2GBeNSM6_shlwwm88V56XEyDZ7t0K52rtgjX7tI9qQg_5uAsQSmUQWwHXs1qLw_0Lm8HJm7NTJey6_uN2pCzhM-eajxl3Gw=s64","emailAddress":"colemedin@ottomator.ai","role":"owner","deleted":false,"pendingOwner":false}],"hasThumbnail":true,"spaces":["drive"],"id":"1py8boCNhGKiZ4EUJ3jAP8rNDVxYArwoOJsg0xXeAWlM","name":"Test Sheet #1","starred":false,"trashed":false,"explicitlyTrashed":false,"createdTime":"2025-02-23T17:00:50.000Z","modifiedTime":"2025-02-23T17:43:45.286Z","modifiedByMeTime":"2025-02-23T17:43:45.286Z","viewedByMeTime":"2025-02-23T18:21:12.774Z","quotaBytesUsed":"1024","version":"17","ownedByMe":true,"isAppAuthorized":false,"capabilities":{"canChangeViewersCanCopyContent":true,"canEdit":true,"canCopy":true,"canComment":true,"canAddChildren":false,"canDelete":true,"canDownload":true,"canListChildren":false,"canRemoveChildren":false,"canRename":true,"canTrash":true,"canReadRevisions":true,"canChangeCopyRequiresWriterPermission":true,"canMoveItemIntoTeamDrive":true,"canUntrash":true,"canModifyContent":true,"canMoveItemOutOfDrive":true,"canAddMyDriveParent":false,"canRemoveMyDriveParent":true,"canMoveItemWithinDrive":true,"canShare":true,"canMoveChildrenWithinDrive":false,"canModifyContentRestriction":true,"canChangeSecurityUpdateEnabled":false,"canAcceptOwnership":false,"canReadLabels":false,"canModifyLabels":false,"canModifyEditorContentRestriction":true,"canModifyOwnerContentRestriction":true,"canRemoveContentRestriction":false,"canDisableInheritedPermissions":false,"canEnableInheritedPermissions":true},"thumbnailVersion":"3","modifiedByMe":true,"permissionIds":["09805982089636049437"],"linkShareMetadata":{"securityUpdateEligible":false,"securityUpdateEnabled":true},"inheritedPermissionsDisabled":false}}]},"versionId":"00caf140-b210-43b1-b3bb-6ef5954b2990","triggerCount":0,"tags":[],"shared":[{"createdAt":"2025-05-15T13:38:00.835Z","updatedAt":"2025-05-15T13:38:00.835Z","role":"workflow:owner","workflowId":"Zix8dphVLqCRUeTe","projectId":"WbfPHUYYKS2tiNNo","project":{"createdAt":"2025-05-03T06:49:18.088Z","updatedAt":"2025-05-03T06:52:24.837Z","id":"WbfPHUYYKS2tiNNo","name":"charlie phan <scottyphan08@gmail.com>","type":"personal","icon":null,"description":null}}]},{"createdAt":"2025-05-18T03:47:08.642Z","updatedAt":"2025-05-18T03:47:08.642Z","id":"NPPGZgqVcwzmrJgT","name":"My workflow 3","active":false,"isArchived":false,"nodes":[{"parameters":{"operation":"download","fileId":"={{ $json.documentId }}","options":{}},"name":"Google Drive","type":"n8n-nodes-base.googleDrive","typeVersion":2,"position":[-1440,-80],"id":"514ec29e-4747-418d-ba0c-29d4625d6f2c","credentials":{"googleDriveOAuth2Api":{"id":"XDqLv6T2wJMb4j1U","name":"Google Drive account pnjp"}}},{"parameters":{"events":["activate"]},"name":"Workflow Input","type":"n8n-nodes-base.workflowTrigger","typeVersion":1,"position":[-1620,-80],"id":"c747eaac-a16e-444b-81b3-f70be946bee3"},{"parameters":{"functionCode":"// This function extracts text content from the Google Drive file\nlet fileContent = $input.item.json.fileContent;\nlet fileType = $input.item.json.mimeType;\n\n// Handle different document types\nlet extractedText = '';\n\nif (fileType === 'application/pdf') {\n  // For PDFs, use the binary data and extract text\n  // This is simplified; in a real workflow you might use a specific PDF parser\n  extractedText = fileContent.toString('utf-8');\n} else if (fileType === 'application/vnd.google-apps.document') {\n  // For Google Docs, the content might already be in HTML or plain text format\n  extractedText = fileContent;\n} else if (fileType.includes('text/') || fileType.includes('application/json')) {\n  // For text files or JSON\n  extractedText = fileContent;\n} else {\n  // For other file types, you might need specific parsers\n  throw new Error(`Unsupported file type: ${fileType}`);\n}\n\nreturn {\n  documentName: $input.item.json.name,\n  documentId: $input.item.json.id,\n  extractedText: extractedText,\n  sectionMarkers: $workflow.input.sectionMarkers,\n  chunkSize: $workflow.input.chunkSize,\n  chunkOverlap: $workflow.input.chunkOverlap\n};"},"name":"Extract Text Content","type":"n8n-nodes-base.functionItem","typeVersion":1,"position":[-1260,-80],"id":"6d674566-8cb8-4f47-a3d2-9a3e4cd45406"},{"parameters":{"jsCode":"// Function to create context-aware chunks from the document\nconst text = items[0].json.extractedText;\nconst documentName = items[0].json.documentName;\nconst documentId = items[0].json.documentId;\nconst sectionMarker = items[0].json.sectionMarkers;\nconst maxChunkSize = items[0].json.chunkSize;\nconst chunkOverlap = items[0].json.chunkOverlap;\n\n// Split the document into sections based on markers\nlet sections = [];\nif (text.includes(sectionMarker)) {\n  sections = text.split(sectionMarker).filter(section => section.trim() !== '');\n} else {\n  // If no section markers found, treat the whole document as one section\n  sections = [text];\n}\n\n// Function to split text into chunks with overlap\nfunction createChunks(text, maxSize, overlap) {\n  const chunks = [];\n  \n  if (text.length <= maxSize) {\n    chunks.push(text);\n    return chunks;\n  }\n  \n  let startIndex = 0;\n  while (startIndex < text.length) {\n    // Find a good breaking point - preferably at a paragraph or sentence end\n    let endIndex = Math.min(startIndex + maxSize, text.length);\n    \n    // Try to find paragraph break\n    const paragraphBreak = text.lastIndexOf('\\n\\n', endIndex);\n    if (paragraphBreak > startIndex && paragraphBreak > endIndex - maxSize/2) {\n      endIndex = paragraphBreak;\n    } else {\n      // Try to find sentence break\n      const sentenceBreak = text.lastIndexOf('. ', endIndex);\n      if (sentenceBreak > startIndex && sentenceBreak > endIndex - maxSize/3) {\n        endIndex = sentenceBreak + 1; // Include the period\n      }\n    }\n    \n    chunks.push(text.substring(startIndex, endIndex).trim());\n    startIndex = endIndex - overlap;\n  }\n  \n  return chunks;\n}\n\n// Process each section and create context-aware chunks\nconst contextAwareChunks = [];\nlet sectionIndex = 0;\n\nsections.forEach((sectionText, index) => {\n  // Extract a section title (first line or first few words)\n  let sectionTitle = '';\n  const firstLineBreak = sectionText.indexOf('\\n');\n  if (firstLineBreak > 0) {\n    sectionTitle = sectionText.substring(0, firstLineBreak).trim();\n  } else {\n    // If no line break, use the first 50 characters or less\n    sectionTitle = sectionText.substring(0, Math.min(50, sectionText.length)).trim();\n    if (sectionTitle.length === 50) sectionTitle += '...';\n  }\n  \n  // Create chunks for this section\n  const sectionChunks = createChunks(sectionText, maxChunkSize, chunkOverlap);\n  \n  // Add context metadata to each chunk\n  sectionChunks.forEach((chunk, chunkIndex) => {\n    contextAwareChunks.push({\n      chunk,\n      metadata: {\n        documentId,\n        documentName,\n        sectionIndex: index + 1,\n        sectionTitle,\n        chunkIndex: chunkIndex + 1,\n        totalChunksInSection: sectionChunks.length,\n        totalSections: sections.length,\n        chunkPosition: `Section ${index + 1}, Chunk ${chunkIndex + 1} of ${sectionChunks.length}`\n      }\n    });\n  });\n});\n\n// Return array of chunks for processing\nreturn contextAwareChunks.map(item => {\n  return {\n    json: item\n  };\n});"},"name":"Create Context-Based Chunks","type":"n8n-nodes-base.code","typeVersion":1,"position":[-1080,-80],"id":"718cccf3-f366-4248-8049-aacb3f0e2baa"},{"parameters":{"batchSize":1,"options":{}},"name":"Process Each Chunk","type":"n8n-nodes-base.splitInBatches","typeVersion":2,"position":[-900,-80],"id":"24d42794-aa27-480f-99ea-9adbe206a432"},{"parameters":{"resource":"chat","prompt":{"messages":[{"role":"system","content":"You are an AI assistant that helps create contextual descriptions for document chunks. Your task is to analyze the provided chunk and generate a brief context description that will help in accurate retrieval later. Focus on key topics, themes, and entities in the text."},{"content":"=== Document Metadata ===\nDocument Name: {{ $json.metadata.documentName }}\nSection: {{ $json.metadata.sectionTitle }}\nPosition: {{ $json.metadata.chunkPosition }}\n\n=== Text Chunk ===\n{{ $json.chunk }}\n\n=== Instructions ===\nGenerate a concise contextual description (50-100 words) that captures the key topics, entities, and information in this chunk. This context will be prepended to the chunk before embedding to improve retrieval accuracy. Focus on what makes this chunk unique and what would be relevant for accurate retrieval."}]},"options":{"maxTokens":200,"temperature":0.2},"requestOptions":{}},"name":"Generate Context for Chunk","type":"n8n-nodes-base.openAi","typeVersion":1,"position":[-720,-80],"id":"24ab6780-c974-4171-9732-ca98f73ace1d","credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{"functionCode":"// Prepare the enriched chunk with context\nconst chunk = $input.item.json.chunk;\nconst metadata = $input.item.json.metadata;\nconst generatedContext = $input.item.json.text; // From OpenAI response\n\n// Prepare the enriched text with context prepended\nconst enrichedChunk = `CONTEXT: ${generatedContext}\\n\\nCONTENT: ${chunk}`;\n\nreturn {\n  ...metadata,\n  originalChunk: chunk,\n  generatedContext,\n  enrichedChunk,\n  chunkId: `${metadata.documentId}-section${metadata.sectionIndex}-chunk${metadata.chunkIndex}`\n};"},"name":"Prepend Context to Chunk","type":"n8n-nodes-base.functionItem","typeVersion":1,"position":[-540,-80],"id":"46d6af92-5f0f-42f8-8f2a-35b7b419c916"},{"parameters":{},"name":"Google Gemini Embeddings","type":"n8n-nodes-base.googleAi","typeVersion":1,"position":[-360,-80],"id":"ff1011d2-e898-4752-802d-5663f2e53b6e"},{"parameters":{},"name":"Store in Pinecone","type":"n8n-nodes-base.pinecone","typeVersion":1,"position":[-180,-80],"id":"78ccf0f4-3b03-4ffb-95ea-74da08ff633c"},{"parameters":{"conditions":{"boolean":[{"value1":"={{ $prevNode.itemIndex + 1 < $prevNode.itemsCount }}"}]}},"name":"More Chunks?","type":"n8n-nodes-base.if","typeVersion":1,"position":[0,-80],"id":"4a5d659b-bfca-4ed5-b5db-558f47c6c56f"},{"parameters":{},"name":"Continue Processing","type":"n8n-nodes-base.noOp","typeVersion":1,"position":[180,-180],"id":"0b3a15a9-e830-42bd-ac3b-ae65c3f603be","executeOnce":false},{"parameters":{"functionCode":"// Generate a summary of the completed workflow\nconst totalChunks = $workflow.context.totalChunks || 0;\nconst documentName = $input.last.json.documentName;\nconst documentId = $input.last.json.documentId;\n\nreturn {\n  success: true,\n  summary: {\n    documentName,\n    documentId,\n    totalChunksProcessed: totalChunks,\n    pineconeIndex: 'document-chunks',\n    completedAt: new Date().toISOString()\n  }\n};"},"name":"Generate Workflow Summary","type":"n8n-nodes-base.functionItem","typeVersion":1,"position":[180,20],"id":"628c9935-1244-4291-91f7-85f37fce7388"}],"connections":{"Workflow Input":{"main":[[{"node":"Google Drive","type":"main","index":0}]]},"Google Drive":{"main":[[{"node":"Extract Text Content","type":"main","index":0}]]},"Extract Text Content":{"main":[[{"node":"Create Context-Based Chunks","type":"main","index":0}]]},"Create Context-Based Chunks":{"main":[[{"node":"Process Each Chunk","type":"main","index":0}]]},"Process Each Chunk":{"main":[[{"node":"Generate Context for Chunk","type":"main","index":0}]]},"Generate Context for Chunk":{"main":[[{"node":"Prepend Context to Chunk","type":"main","index":0}]]},"More Chunks?":{"main":[[{"node":"Continue Processing","type":"main","index":0}],[{"node":"Generate Workflow Summary","type":"main","index":0}]]},"Continue Processing":{"main":[[{"node":"Process Each Chunk","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"234c5d0f-a99b-43e4-aa46-9b2e7cb26e24","triggerCount":0,"tags":[],"shared":[{"createdAt":"2025-05-18T03:47:08.642Z","updatedAt":"2025-05-18T03:47:08.642Z","role":"workflow:owner","workflowId":"NPPGZgqVcwzmrJgT","projectId":"WbfPHUYYKS2tiNNo","project":{"createdAt":"2025-05-03T06:49:18.088Z","updatedAt":"2025-05-03T06:52:24.837Z","id":"WbfPHUYYKS2tiNNo","name":"charlie phan <scottyphan08@gmail.com>","type":"personal","icon":null,"description":null}}]},{"createdAt":"2025-05-19T03:42:54.240Z","updatedAt":"2025-05-19T07:32:10.198Z","id":"niJZ2rU7r9Bi7A0i","name":"Vector Qdrant vector","active":false,"isArchived":false,"nodes":[{"parameters":{},"id":"42981b07-7539-4966-b364-06bb69985d33","name":"When clicking ‘Test workflow’","type":"n8n-nodes-base.manualTrigger","position":[40,-160],"typeVersion":1},{"parameters":{"resource":"file","operation":"get","owner":{"__rl":true,"value":"vananhphan","mode":"name"},"repository":{"__rl":true,"value":"n8n_project","mode":"list","cachedResultName":"n8n_project","cachedResultUrl":"https://github.com/vananhphan/n8n_project"},"filePath":"Top_1000_IMDB_movies.csv","additionalParameters":{}},"id":"0bff4b50-19ba-4834-b85e-b27739feb8ba","name":"GitHub","type":"n8n-nodes-base.github","position":[260,-160],"typeVersion":1,"webhookId":"bbf12d64-6a27-4784-944d-374f925b6182","credentials":{"githubApi":{"id":"04ftghVaK1lFgfKg","name":"GitHub account"}}},{"parameters":{"options":{}},"id":"c1223a8d-67e2-4bd8-aed8-6de7e1baf044","name":"Extract from File","type":"n8n-nodes-base.extractFromFile","position":[420,-160],"typeVersion":1},{"parameters":{"model":"text-embedding-3-small","options":{}},"id":"cbb3d19f-1163-4f7f-acd9-2bfaa5a6c136","name":"Embeddings OpenAI","type":"@n8n/n8n-nodes-langchain.embeddingsOpenAi","position":[780,20],"typeVersion":1,"credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{"jsonMode":"expressionData","jsonData":"={{ $('Extract from File').item.json.Description }}","options":{"metadata":{"metadataValues":[{"name":"movie_name","value":"={{ $('Extract from File').item.json['Movie Name'] }}"},{"name":"movie_release_date","value":"={{ $('Extract from File').item.json['Year of Release'] }}"},{"name":"movie_description","value":"={{ $('Extract from File').item.json.Description }}"}]}}},"id":"868e9a11-c290-487c-a6ad-16622b266243","name":"Default Data Loader","type":"@n8n/n8n-nodes-langchain.documentDefaultDataLoader","position":[960,40],"typeVersion":1},{"parameters":{},"id":"a83033d1-6c2a-4a9d-a82d-38409581f0fb","name":"Token Splitter","type":"@n8n/n8n-nodes-langchain.textSplitterTokenSplitter","position":[1000,220],"typeVersion":1},{"parameters":{"mode":"insert","qdrantCollection":{"__rl":true,"mode":"id","value":"imdb"},"options":{}},"id":"e3373485-4adb-4227-83f9-86a2094c5564","name":"Qdrant Vector Store","type":"@n8n/n8n-nodes-langchain.vectorStoreQdrant","position":[980,-160],"typeVersion":1,"credentials":{"qdrantApi":{"id":"RzFNlgEENHFNmlmD","name":"QdrantApi account"}}},{"parameters":{"options":{}},"id":"86ef1de4-9fa5-4a34-b25c-d5f428138c3f","name":"When chat message received","type":"@n8n/n8n-nodes-langchain.chatTrigger","position":[-20,400],"webhookId":"71bfe0f8-227e-466b-9d07-69fd9fe4a27b","typeVersion":1.1},{"parameters":{"options":{}},"id":"be581732-1692-4968-9ca7-40f939ad094e","name":"OpenAI Chat Model","type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","position":[100,600],"typeVersion":1,"credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{"name":"movie_recommender","description":"Call this tool to get a list of recommended movies from a vector database. ","workflowId":{"__rl":true,"value":"niJZ2rU7r9Bi7A0i","mode":"id"},"specifyInputSchema":true,"schemaType":"manual","inputSchema":"{\n\"type\": \"object\",\n\"properties\": {\n\t\"positive_example\": {\n      \"type\": \"string\",\n      \"description\": \"A string with a movie description matching the user's positive recommendation request\"\n    },\n    \"negative_example\": {\n      \"type\": \"string\",\n      \"description\": \"A string with a movie description matching the user's negative anti-recommendation reuqest\"\n    }\n}\n}"},"id":"ca7819b7-92da-4440-b5d6-2c789b668589","name":"Call n8n Workflow Tool","type":"@n8n/n8n-nodes-langchain.toolWorkflow","position":[380,600],"typeVersion":1.2},{"parameters":{},"id":"19a6af43-5ed0-4b3f-af59-eb79e20bf356","name":"Window Buffer Memory","type":"@n8n/n8n-nodes-langchain.memoryBufferWindow","position":[220,600],"typeVersion":1.2},{"parameters":{},"id":"c33a86c4-077b-4601-8b80-77f81069bd29","name":"Execute Workflow Trigger","type":"n8n-nodes-base.executeWorkflowTrigger","position":[700,860],"typeVersion":1},{"parameters":{"mode":"combine","combineBy":"combineAll","options":{}},"id":"3021a771-0b36-461f-8d0b-27aae637cf27","name":"Merge","type":"n8n-nodes-base.merge","position":[1600,760],"typeVersion":3},{"parameters":{"fieldToSplitOut":"result","options":{}},"id":"886c972d-5407-449f-b7b7-2785d181f724","name":"Split Out","type":"n8n-nodes-base.splitOut","position":[2320,740],"typeVersion":1},{"parameters":{"fieldToSplitOut":"result.points","options":{}},"id":"659908fc-6aaa-4068-b06f-ea100ecf55ce","name":"Split Out1","type":"n8n-nodes-base.splitOut","position":[2200,520],"typeVersion":1},{"parameters":{"mode":"combine","fieldsToMatchString":"id","options":{}},"id":"93a17498-f42e-46e4-b26b-95ac6e36bf34","name":"Merge1","type":"n8n-nodes-base.merge","position":[2580,660],"typeVersion":3},{"parameters":{"aggregate":"aggregateAllItemData","destinationFieldName":"response","options":{}},"id":"212a6b65-03c6-4224-ab1b-4549f6a6b435","name":"Aggregate","type":"n8n-nodes-base.aggregate","position":[3020,660],"typeVersion":1},{"parameters":{"options":{"systemMessage":"You are a Movie Recommender Tool using a Vector Database under the hood. Provide top-3 movie recommendations returned by the database, ordered by their recommendation score, but not showing the score to the user."}},"id":"c1ba9429-24f5-4287-862a-9bd03d81ec86","name":"AI Agent","type":"@n8n/n8n-nodes-langchain.agent","position":[200,400],"typeVersion":1.6},{"parameters":{"method":"POST","url":"https://api.openai.com/v1/embeddings","authentication":"predefinedCredentialType","nodeCredentialType":"openAiApi","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Authorization","value":"Bearer $OPENAI_API_KEY"}]},"sendBody":true,"bodyParameters":{"parameters":[{"name":"input","value":"={{ $json.query.positive_example }}"},{"name":"model","value":"text-embedding-3-small"}]},"options":{}},"id":"53fa2d0c-8e3c-45e7-89ae-b1bece84ad4c","name":"Embedding Recommendation Request with Open AI","type":"n8n-nodes-base.httpRequest","position":[960,720],"typeVersion":4.2,"credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{"method":"POST","url":"https://api.openai.com/v1/embeddings","authentication":"predefinedCredentialType","nodeCredentialType":"openAiApi","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Authorization","value":"Bearer $OPENAI_API_KEY"}]},"sendBody":true,"bodyParameters":{"parameters":[{"name":"input","value":"={{ $json.query.negative_example }}"},{"name":"model","value":"text-embedding-3-small"}]},"options":{}},"id":"cc1498a3-6169-40e7-872f-20a56150e6ab","name":"Embedding Anti-Recommendation Request with Open AI","type":"n8n-nodes-base.httpRequest","position":[980,920],"typeVersion":4.2,"credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{"assignments":{"assignments":[{"id":"01a28c9d-aeb1-48bb-8a73-f8bddbd73460","name":"positive_example","type":"array","value":"={{ $json.data[0].embedding }}"}]},"options":{}},"id":"0afe7a95-9251-4633-927b-34579665a604","name":"Extracting Embedding","type":"n8n-nodes-base.set","position":[1240,720],"typeVersion":3.4},{"parameters":{"assignments":{"assignments":[{"id":"01a28c9d-aeb1-48bb-8a73-f8bddbd73460","name":"negative_example","type":"array","value":"={{ $json.data[0].embedding }}"}]},"options":{}},"id":"f2ded95a-9573-43bc-8670-448d9b487ef8","name":"Extracting Embedding1","type":"n8n-nodes-base.set","position":[1240,920],"typeVersion":3.4},{"parameters":{"method":"POST","url":"http://host.docker.internal:6333/collections/imdb/points/query","authentication":"predefinedCredentialType","nodeCredentialType":"qdrantApi","sendBody":true,"specifyBody":"json","jsonBody":"={\n  \"query\": {\n    \"recommend\": {\n      \"positive\": [[{{ $json.positive_example }}]],\n      \"negative\": [[{{ $json.negative_example }}]],\n      \"strategy\": \"average_vector\"\n    }\n  },\n  \"limit\":3\n}","options":{}},"id":"070b2a0a-dd36-47fb-abd7-eed9eacc0d1b","name":"Calling Qdrant Recommendation API","type":"n8n-nodes-base.httpRequest","position":[1540,400],"typeVersion":4.2,"credentials":{"qdrantApi":{"id":"RzFNlgEENHFNmlmD","name":"QdrantApi account"}}},{"parameters":{"method":"POST","url":"http://host.docker.internal:6333/collections/imdb/points","authentication":"predefinedCredentialType","nodeCredentialType":"qdrantApi","sendBody":true,"specifyBody":"json","jsonBody":"={\n    \"ids\": [\"{{ $json.result.points[0].id }}\", \"{{ $json.result.points[1].id }}\", \"{{ $json.result.points[2].id }}\"],\n    \"with_payload\":true\n}","options":{}},"id":"860a37fc-ff28-4449-92a6-fadfe5e7d79b","name":"Retrieving Recommended Movies Meta Data","type":"n8n-nodes-base.httpRequest","position":[2120,720],"typeVersion":4.2,"credentials":{"qdrantApi":{"id":"RzFNlgEENHFNmlmD","name":"QdrantApi account"}}},{"parameters":{"assignments":{"assignments":[{"id":"b4b520a5-d0e2-4dcb-af9d-0b7748fd44d6","name":"movie_recommendation_score","type":"number","value":"={{ $json.score }}"},{"id":"c9f0982e-bd4e-484b-9eab-7e69e333f706","name":"movie_description","type":"string","value":"={{ $json.payload.content }}"},{"id":"7c7baf11-89cd-4695-9f37-13eca7e01163","name":"movie_name","type":"string","value":"={{ $json.payload.metadata.movie_name }}"},{"id":"1d1d269e-43c7-47b0-859b-268adf2dbc21","name":"movie_release_year","type":"string","value":"={{ $json.payload.metadata.release_year }}"}]},"options":{}},"id":"13231675-4d06-4c6e-ba73-a9d7b8253a12","name":"Selecting Fields Relevant for Agent","type":"n8n-nodes-base.set","position":[2800,660],"typeVersion":3.4},{"parameters":{"content":"Tool, calling Qdrant's recommendation API based on user's request, transformed by AI agent"},"id":"6a03c4f9-916c-4800-a083-bfe968523e7e","name":"Sticky Note","type":"n8n-nodes-base.stickyNote","position":[620,1040],"typeVersion":1},{"parameters":{"content":"Uploading data (movies and their descriptions) to Qdrant Vector Store\n"},"id":"36aa5324-3110-4491-85ed-28249132d5ce","name":"Sticky Note1","type":"n8n-nodes-base.stickyNote","position":[-260,-20],"typeVersion":1},{"parameters":{"maxItems":1000},"type":"n8n-nodes-base.limit","typeVersion":1,"position":[640,-160],"id":"32e35a45-ba1d-49cd-b55c-819d054fb6af","name":"Limit"}],"connections":{"Merge":{"main":[[{"node":"Calling Qdrant Recommendation API","type":"main","index":0}]]},"GitHub":{"main":[[{"node":"Extract from File","type":"main","index":0}]]},"Merge1":{"main":[[{"node":"Selecting Fields Relevant for Agent","type":"main","index":0}]]},"Split Out":{"main":[[{"node":"Merge1","type":"main","index":1}]]},"Split Out1":{"main":[[{"node":"Merge1","type":"main","index":0}]]},"Token Splitter":{"ai_textSplitter":[[{"node":"Default Data Loader","type":"ai_textSplitter","index":0}]]},"Embeddings OpenAI":{"ai_embedding":[[{"node":"Qdrant Vector Store","type":"ai_embedding","index":0}]]},"Extract from File":{"main":[[{"node":"Limit","type":"main","index":0}]]},"OpenAI Chat Model":{"ai_languageModel":[[{"node":"AI Agent","type":"ai_languageModel","index":0}]]},"Default Data Loader":{"ai_document":[[{"node":"Qdrant Vector Store","type":"ai_document","index":0}]]},"Extracting Embedding":{"main":[[{"node":"Merge","type":"main","index":0}]]},"Window Buffer Memory":{"ai_memory":[[{"node":"AI Agent","type":"ai_memory","index":0}]]},"Extracting Embedding1":{"main":[[{"node":"Merge","type":"main","index":1}]]},"Call n8n Workflow Tool":{"ai_tool":[[{"node":"AI Agent","type":"ai_tool","index":0}]]},"Execute Workflow Trigger":{"main":[[{"node":"Embedding Recommendation Request with Open AI","type":"main","index":0},{"node":"Embedding Anti-Recommendation Request with Open AI","type":"main","index":0}]]},"When chat message received":{"main":[[{"node":"AI Agent","type":"main","index":0}]]},"Calling Qdrant Recommendation API":{"main":[[{"node":"Retrieving Recommended Movies Meta Data","type":"main","index":0},{"node":"Split Out1","type":"main","index":0}]]},"When clicking ‘Test workflow’":{"main":[[{"node":"GitHub","type":"main","index":0}]]},"Selecting Fields Relevant for Agent":{"main":[[{"node":"Aggregate","type":"main","index":0}]]},"Retrieving Recommended Movies Meta Data":{"main":[[{"node":"Split Out","type":"main","index":0}]]},"Embedding Recommendation Request with Open AI":{"main":[[{"node":"Extracting Embedding","type":"main","index":0}]]},"Embedding Anti-Recommendation Request with Open AI":{"main":[[{"node":"Extracting Embedding1","type":"main","index":0}]]},"Limit":{"main":[[{"node":"Qdrant Vector Store","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{"Execute Workflow Trigger":[{"json":{"query":{"negative_example":"horror bloody movie","positive_example":"romantic comedy"}}}]},"versionId":"9f529f46-3da6-44ff-a64a-d5d31c08cfb7","triggerCount":0,"tags":[],"shared":[{"createdAt":"2025-05-19T03:42:54.240Z","updatedAt":"2025-05-19T03:42:54.240Z","role":"workflow:owner","workflowId":"niJZ2rU7r9Bi7A0i","projectId":"WbfPHUYYKS2tiNNo","project":{"createdAt":"2025-05-03T06:49:18.088Z","updatedAt":"2025-05-03T06:52:24.837Z","id":"WbfPHUYYKS2tiNNo","name":"charlie phan <scottyphan08@gmail.com>","type":"personal","icon":null,"description":null}}]},{"createdAt":"2025-05-19T06:39:42.468Z","updatedAt":"2025-05-22T01:51:05.120Z","id":"eStbO6WLMGPy7erH","name":"Suppabase_RAG_01","active":false,"isArchived":false,"nodes":[{"parameters":{"method":"POST","url":"=http://host.docker.internal:8000/storage/v1/object/list/private","authentication":"predefinedCredentialType","nodeCredentialType":"supabaseApi","sendBody":true,"specifyBody":"json","jsonBody":"={\n  \"prefix\": \"\",\n  \"limit\": 100,\n  \"offset\": 0,\n  \"sortBy\": {\n    \"column\": \"name\",\n    \"order\": \"asc\"\n  }\n}","options":{}},"id":"1375db4e-e73c-49dc-be6e-93ae4642071b","name":"Get All files","type":"n8n-nodes-base.httpRequest","position":[1220,1360],"typeVersion":4.2,"credentials":{"supabaseApi":{"id":"GwQHus8VDsBElGiE","name":"Supabase account localhost"}}},{"parameters":{"jsonMode":"expressionData","jsonData":"={{ $('Merge').item.json.data ?? $('Merge').item.json.text }}","options":{"metadata":{"metadataValues":[{"name":"=file_id","value":"={{ $json.id }}"}]}}},"id":"6447f40a-8106-4eb1-9e65-b53a216212ef","name":"Default Data Loader","type":"@n8n/n8n-nodes-langchain.documentDefaultDataLoader","position":[2600,1560],"typeVersion":1},{"parameters":{"chunkSize":500,"chunkOverlap":200,"options":{}},"id":"ef0d34f6-a33f-4183-bfcc-775ae09a4291","name":"Recursive Character Text Splitter","type":"@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter","position":[2600,1740],"typeVersion":1},{"parameters":{"operation":"pdf","options":{}},"id":"e68b3da8-77b1-49e0-8c90-2b69e05470d1","name":"Extract Document PDF","type":"n8n-nodes-base.extractFromFile","position":[2080,1520],"typeVersion":1,"alwaysOutputData":false},{"parameters":{"model":"text-embedding-3-small","options":{}},"id":"6662306d-bf92-465f-b99c-ded51238b026","name":"Embeddings OpenAI","type":"@n8n/n8n-nodes-langchain.embeddingsOpenAi","position":[2420,1540],"typeVersion":1,"credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{"tableId":"files","fieldsUi":{"fieldValues":[{"fieldId":"name","fieldValue":"={{ $('Loop Over Items').item.json.name }}"},{"fieldId":"storage_id","fieldValue":"={{ $('Loop Over Items').item.json.id }}"}]}},"id":"efc080f2-f33c-4758-bf5e-e95877ebcca9","name":"Create File record2","type":"n8n-nodes-base.supabase","position":[2360,1360],"typeVersion":1,"credentials":{"supabaseApi":{"id":"GwQHus8VDsBElGiE","name":"Supabase account localhost"}}},{"parameters":{"conditions":{"options":{"version":2,"leftValue":"","caseSensitive":true,"typeValidation":"strict"},"combinator":"and","conditions":[{"id":"9b14e306-a04d-40f7-bc5b-b8eda8d8f7f2","operator":{"type":"boolean","operation":"true","singleValue":true},"leftValue":"={{ \n    !$('Aggregate').item.json.data || \n    !Array.isArray($('Aggregate').item.json.data) || \n    !$('Aggregate').item.json.data.some(item => \n        item.storage_id === $('Loop Over Items').item.json.id \n    ) \n}}","rightValue":""},{"id":"c3c0af88-9aea-4539-8948-1b69e601c27c","operator":{"type":"string","operation":"notEquals"},"leftValue":"={{ $json.name }}","rightValue":".emptyFolderPlaceholder"}]},"options":{}},"id":"4628f08d-7ddf-44f9-adf3-03fa52176bf1","name":"If","type":"n8n-nodes-base.if","position":[1540,1360],"typeVersion":2.2},{"parameters":{"operation":"getAll","tableId":"documents_qa"},"id":"7d97343f-b7d3-42b0-b260-9f92de72f674","name":"Get All Files","type":"n8n-nodes-base.supabase","position":[840,1360],"typeVersion":1,"alwaysOutputData":true,"credentials":{"supabaseApi":{"id":"GwQHus8VDsBElGiE","name":"Supabase account localhost"}}},{"parameters":{"url":"=http://host.docker.internal:8000/storage/v1/object/private/{{ $json.name }}","authentication":"predefinedCredentialType","nodeCredentialType":"supabaseApi","options":{}},"id":"b7b7f223-16cb-4c76-a3f7-1811c5626a4e","name":"Download","type":"n8n-nodes-base.httpRequest","position":[1720,1360],"typeVersion":4.2,"credentials":{"supabaseApi":{"id":"GwQHus8VDsBElGiE","name":"Supabase account localhost"}}},{"parameters":{"batchSize":"=1","options":{}},"id":"a70cce18-e73e-47dd-bf8a-15ebf87bb547","name":"Loop Over Items","type":"n8n-nodes-base.splitInBatches","position":[1380,1360],"typeVersion":3},{"parameters":{},"id":"acb0261b-6389-4f6b-93e6-498a98050b7b","name":"When clicking ‘Test workflow’","type":"n8n-nodes-base.manualTrigger","position":[660,1360],"typeVersion":1},{"parameters":{"aggregate":"aggregateAllItemData","options":{}},"id":"c2b8ade5-09d2-40a5-b06e-93f7462d6536","name":"Aggregate","type":"n8n-nodes-base.aggregate","position":[1040,1360],"typeVersion":1,"alwaysOutputData":true},{"parameters":{"options":{}},"id":"8b440d54-d818-48d1-ac4d-c21940b0e360","name":"When chat message received","type":"@n8n/n8n-nodes-langchain.chatTrigger","position":[1620,440],"webhookId":"3c40d311-7996-4ed4-b2fa-c73bea5f4cf5","typeVersion":1.1},{"parameters":{"options":{}},"id":"6312716d-2a36-47be-a4e5-ed809002ad4a","name":"OpenAI Chat Model1","type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","position":[1460,640],"typeVersion":1,"credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{"model":"text-embedding-3-small","options":{}},"id":"f0cf7883-8883-4c06-b94f-a74525a40d94","name":"Embeddings OpenAI2","type":"@n8n/n8n-nodes-langchain.embeddingsOpenAi","position":[1760,940],"typeVersion":1,"credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{"options":{}},"id":"6f5e5869-8c3e-4eb1-8fd9-8e8e3f4432a4","name":"OpenAI Chat Model2","type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","position":[2220,780],"typeVersion":1,"credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{"name":"documents_qa","description":"Retrieve data about user request","topK":8},"id":"5568611d-356d-47d4-95c3-575e032333e0","name":"Vector Store Tool1","type":"@n8n/n8n-nodes-langchain.toolVectorStore","position":[1920,640],"typeVersion":1},{"parameters":{"rules":{"values":[{"conditions":{"options":{"version":1,"leftValue":"","caseSensitive":true,"typeValidation":"strict"},"combinator":"and","conditions":[{"operator":{"type":"boolean","operation":"true","singleValue":true},"leftValue":"={{$binary.data?.fileExtension == undefined }}","rightValue":"txt","id":"1f85c869-fe3f-4918-8291-1bd90e12e534"}]},"renameOutput":true,"outputKey":"txt"},{"conditions":{"options":{"version":1,"leftValue":"","caseSensitive":true,"typeValidation":"strict"},"conditions":[{"id":"bf04cbec-dd86-4607-988f-4c96b6fd4b58","operator":{"type":"string","operation":"equals"},"leftValue":"={{$binary.data.fileExtension  }}","rightValue":"pdf"}],"combinator":"and"},"renameOutput":true,"outputKey":"pdf"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":1},"conditions":[{"id":"ff996de0-02bd-4add-b75c-e4838d1ebc85","leftValue":"{{$binary.data.fileExtension  }}","rightValue":"csv","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"csv"}]},"options":{}},"id":"36b92a05-4a2f-4345-a322-311cae8c49d2","name":"Switch","type":"n8n-nodes-base.switch","position":[1880,1360],"typeVersion":3.1},{"parameters":{"mode":"insert","tableName":{"__rl":true,"value":"documents_qa","mode":"list","cachedResultName":"documents_qa"},"options":{"queryName":"match_documents_qa"}},"id":"8c132cf4-4e29-4e58-8597-09f8f8c41559","name":"Insert into Supabase Vectorstore","type":"@n8n/n8n-nodes-langchain.vectorStoreSupabase","position":[2520,1360],"typeVersion":1,"credentials":{"supabaseApi":{"id":"GwQHus8VDsBElGiE","name":"Supabase account localhost"}}},{"parameters":{"numberInputs":3},"id":"2a7d9216-8ba0-49da-9c2a-2d8e50e0b416","name":"Merge","type":"n8n-nodes-base.merge","position":[2220,1360],"typeVersion":3},{"parameters":{"options":{"systemMessage":"You are a helpful assistant\nYOu should get the data on vector database to answer, don't get the data outsite."}},"id":"8952532f-44df-4f83-91fe-544512c087fb","name":"AI Agent","type":"@n8n/n8n-nodes-langchain.agent","position":[1840,440],"typeVersion":1.7},{"parameters":{"tableName":{"__rl":true,"value":"documents_qa","mode":"list","cachedResultName":"documents_qa"},"options":{"metadata":{"metadataValues":[{"name":"file_id","value":"a0d2024d-98bf-4fce-83d6-95decc3d21ba"}]}}},"id":"1107572f-16e9-47a0-bf37-769c4e821ad6","name":"Supabase Vector Store","type":"@n8n/n8n-nodes-langchain.vectorStoreSupabase","position":[1720,760],"typeVersion":1,"credentials":{"supabaseApi":{"id":"GwQHus8VDsBElGiE","name":"Supabase account localhost"}}},{"parameters":{"content":"### Replace Storage name, database ID and credentials.","height":89.3775420487804},"id":"55da8dad-e23d-490e-ba62-1657577aa447","name":"Sticky Note","type":"n8n-nodes-base.stickyNote","position":[1160,1240],"typeVersion":1},{"parameters":{"content":"### Replace credentials.","height":80},"id":"15d558e8-707e-4ced-9ae9-3b05fcea3657","name":"Sticky Note1","type":"n8n-nodes-base.stickyNote","position":[800,1240],"typeVersion":1},{"parameters":{"content":"### Replace credentials.","height":80},"id":"403afeb4-028c-406c-aa6a-149a08953a60","name":"Sticky Note2","type":"n8n-nodes-base.stickyNote","position":[2360,1240],"typeVersion":1},{"parameters":{"content":"### Replace Storage name, database ID and credentials.","height":89.3775420487804},"id":"ec4ea30f-2315-49a8-9a87-e2b5dd23f024","name":"Sticky Note3","type":"n8n-nodes-base.stickyNote","position":[1660,1240],"typeVersion":1},{"parameters":{"content":"### Replace credentials.","height":80},"id":"ad900376-cccf-4b16-b550-ceba441e02ef","name":"Sticky Note4","type":"n8n-nodes-base.stickyNote","position":[2320,1680],"typeVersion":1},{"parameters":{"content":"### Replace credentials.","height":80},"id":"63605c86-283d-4588-b979-53c8309c1130","name":"Sticky Note5","type":"n8n-nodes-base.stickyNote","position":[1960,940],"typeVersion":1},{"parameters":{"content":"### ... or watch set up video [10 min]\n[![Youtube Thumbnail](https://res.cloudinary.com/de9jgixzm/image/upload/v1739773273/Youtube%20Thumbs/Chat%20With%20FIles.png)](https://www.youtube.com/watch?v=glWUkdZe_3w)\n","height":239.5888196628349,"width":330.5152611046425,"color":7},"id":"a9aae395-241b-4448-b6eb-8a161ff73f1a","name":"Sticky Note9","type":"n8n-nodes-base.stickyNote","position":[300,520],"typeVersion":1},{"parameters":{"content":"![5min Logo](https://res.cloudinary.com/de9jgixzm/image/upload/v1739773200/Skool%20Assets/ejm3hqnvhgwpnu2fv92s.png)\n## AI Agent To Chat With Files In Supabase Storage\n**Made by [Mark Shcherbakov](https://www.linkedin.com/in/marklowcoding/) from community [5minAI](https://www.skool.com/5minai-2861)**\n\nManually retrieving and analyzing specific information from large document repositories is time-consuming and inefficient. This workflow automates the process by vectorizing documents and enabling AI-powered interactions, making it easy to query and retrieve context-based information from uploaded files.\n\nThe workflow integrates Supabase with an AI-powered chatbot to process, store, and query text and PDF files. The steps include:\n- Fetching and comparing files to avoid duplicate processing.\n- Handling file downloads and extracting content based on the file type.\n- Converting documents into vectorized data for contextual information retrieval.\n- Storing and querying vectorized data from a Supabase vector store.\n\n","height":497.1532689930921,"width":636.2128494576581,"color":7},"id":"bf7b76ed-bec1-4f45-a57b-1335e5492cb1","name":"Sticky Note7","type":"n8n-nodes-base.stickyNote","position":[0,0],"typeVersion":1},{"parameters":{"content":"### Set up steps\n\n1. **Fetch File List from Supabase**:\n   - Use Supabase to retrieve the stored file list from a specified bucket.\n   - Add logic to manage empty folder placeholders returned by Supabase, avoiding incorrect processing.\n\n2. **Compare and Filter Files**:\n   - Aggregate the files retrieved from storage and compare them to the existing list in the Supabase `files` table.\n   - Exclude duplicates and skip placeholder files to ensure only unprocessed files are handled.\n\n3. **Handle File Downloads**:\n   - Download new files using detailed storage configurations for public/private access.\n   - Adjust the storage settings and GET requests to match your Supabase setup.\n\n4. **File Type Processing**:\n   - Use a Switch node to target specific file types (e.g., PDFs or text files).\n   - Employ relevant tools to process the content:\n     - For PDFs, extract embedded content.\n     - For text files, directly process the text data.\n\n5. **Content Chunking**:\n   - Break large text data into smaller chunks using the Text Splitter node.\n   - Define chunk size (default: 500 tokens) and overlap to retain necessary context across chunks.\n\n6. **Vector Embedding Creation**:\n   - Generate vectorized embeddings for the processed content using OpenAI's embedding tools.\n   - Ensure metadata, such as file ID, is included for easy data retrieval.\n\n7. **Store Vectorized Data**:\n   - Save the vectorized information into a dedicated Supabase vector store.\n   - Use the default schema and table provided by Supabase for seamless setup.\n\n8. **AI Chatbot Integration**:\n   - Add a chatbot node to handle user input and retrieve relevant document chunks.\n   - Use metadata like file ID for targeted queries, especially when multiple documents are involved.","height":545.9087885077763,"width":280.2462120317618,"color":7},"id":"a484ed56-fc15-4ab3-b206-1f11d34c36bf","name":"Sticky Note6","type":"n8n-nodes-base.stickyNote","position":[0,520],"typeVersion":1},{"parameters":{"content":"## Scenario 2 - AI agent","height":809.7437181509877,"width":951.7421645394404,"color":5},"id":"a65bd64d-ff02-494a-8712-202233c4f21f","name":"Sticky Note8","type":"n8n-nodes-base.stickyNote","position":[1360,300],"typeVersion":1},{"parameters":{"content":"## Scenario 1 - Flow for adding new files from Supabase storage","height":739.2522526116408,"width":2304.723519246249,"color":5},"id":"5d311140-5451-4945-83a6-25ac14dde153","name":"Sticky Note10","type":"n8n-nodes-base.stickyNote","position":[560,1180],"typeVersion":1},{"parameters":{},"type":"@n8n/n8n-nodes-langchain.memoryPostgresChat","typeVersion":1.3,"position":[1540,740],"id":"ce135aae-a201-4987-848d-2096f10ffc0d","name":"Postgres Chat Memory","credentials":{"postgres":{"id":"lPXyj3Ypf5YeZpp3","name":"Postgres account Local"}}}],"connections":{"If":{"main":[[{"node":"Download","type":"main","index":0}],[{"node":"Loop Over Items","type":"main","index":0}]]},"Merge":{"main":[[{"node":"Create File record2","type":"main","index":0}]]},"Switch":{"main":[[{"node":"Merge","type":"main","index":0}],[{"node":"Extract Document PDF","type":"main","index":0}],[{"node":"Merge","type":"main","index":1}]]},"Download":{"main":[[{"node":"Switch","type":"main","index":0}]]},"Aggregate":{"main":[[{"node":"Get All files","type":"main","index":0}]]},"Get All Files":{"main":[[{"node":"Aggregate","type":"main","index":0}]]},"Get All files":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Loop Over Items":{"main":[[],[{"node":"If","type":"main","index":0}]]},"Embeddings OpenAI":{"ai_embedding":[[{"node":"Insert into Supabase Vectorstore","type":"ai_embedding","index":0}]]},"Embeddings OpenAI2":{"ai_embedding":[[{"node":"Supabase Vector Store","type":"ai_embedding","index":0}]]},"OpenAI Chat Model1":{"ai_languageModel":[[{"node":"AI Agent","type":"ai_languageModel","index":0}]]},"OpenAI Chat Model2":{"ai_languageModel":[[{"node":"Vector Store Tool1","type":"ai_languageModel","index":0}]]},"Vector Store Tool1":{"ai_tool":[[{"node":"AI Agent","type":"ai_tool","index":0}]]},"Create File record2":{"main":[[{"node":"Insert into Supabase Vectorstore","type":"main","index":0}]]},"Default Data Loader":{"ai_document":[[{"node":"Insert into Supabase Vectorstore","type":"ai_document","index":0}]]},"Extract Document PDF":{"main":[[{"node":"Merge","type":"main","index":1}]]},"Supabase Vector Store":{"ai_vectorStore":[[{"node":"Vector Store Tool1","type":"ai_vectorStore","index":0}]]},"When chat message received":{"main":[[{"node":"AI Agent","type":"main","index":0}]]},"Insert into Supabase Vectorstore":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Recursive Character Text Splitter":{"ai_textSplitter":[[{"node":"Default Data Loader","type":"ai_textSplitter","index":0}]]},"When clicking ‘Test workflow’":{"main":[[{"node":"Get All Files","type":"main","index":0}]]},"Postgres Chat Memory":{"ai_memory":[[{"node":"AI Agent","type":"ai_memory","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"7edb06c9-69f8-483f-8a1c-0488dce0f2ba","triggerCount":0,"tags":[],"shared":[{"createdAt":"2025-05-19T06:39:42.468Z","updatedAt":"2025-05-19T06:39:42.468Z","role":"workflow:owner","workflowId":"eStbO6WLMGPy7erH","projectId":"WbfPHUYYKS2tiNNo","project":{"createdAt":"2025-05-03T06:49:18.088Z","updatedAt":"2025-05-03T06:52:24.837Z","id":"WbfPHUYYKS2tiNNo","name":"charlie phan <scottyphan08@gmail.com>","type":"personal","icon":null,"description":null}}]},{"createdAt":"2025-05-19T07:31:55.045Z","updatedAt":"2025-05-19T07:31:55.045Z","id":"x21sChnuQbgOiZGT","name":"My workflow 4","active":false,"isArchived":false,"nodes":[{"parameters":{"operation":"download","fileId":{"__rl":true,"mode":"url","value":"https://drive.google.com/file/d/xxxxxxxxxxxxxxx/view"},"options":{}},"id":"0983a4e0-91ed-494d-ad20-27e99e269f6a","name":"Google Drive","type":"n8n-nodes-base.googleDrive","position":[980,160],"typeVersion":3,"credentials":{"googleDriveOAuth2Api":{"id":"XDqLv6T2wJMb4j1U","name":"Google Drive account pnjp"}}},{"parameters":{"dataType":"binary","loader":"epubLoader","options":{}},"id":"520bd1f4-57bb-4979-877c-3a1cbfde81ec","name":"Default Data Loader","type":"@n8n/n8n-nodes-langchain.documentDefaultDataLoader","position":[1400,380],"typeVersion":1},{"parameters":{"content":"# INSERTING\n\n- it's important to use the same embedding model when for any interaction with your vector database (inserting, upserting and retrieval)","height":820.5109034066329,"width":749.1276349295781},"id":"5a26aae9-763e-4dda-ad1e-f6ebde19117c","name":"Sticky Note","type":"n8n-nodes-base.stickyNote","position":[900,0],"typeVersion":1},{"parameters":{"content":"# UPSERTING\n","height":534.0012007720542,"width":873.9739981925188,"color":3},"id":"9d5ba266-198a-4513-ac5f-ac9709455d0b","name":"Sticky Note1","type":"n8n-nodes-base.stickyNote","position":[0,840],"typeVersion":1},{"parameters":{"content":"# PREPARATION (in Supabase)\n\n- your database needs the extension 'pgvector' enabled -> select Database > Extension > Search for 'vector'\n- make sure you have a table that has the following columns (if not, use the query below in the Supabase SQL Editor)\n\n```\nALTER TABLE \"YOUR TABLE NAME\"\nADD COLUMN embedding VECTOR(1536), // check which number of dimensions you need (depends on the embed model)\nADD COLUMN metadata JSONB,\nADD COLUMN content TEXT;\n```\n\n- make sure you have the right policies set -> select Authentication > Policies\n- make sure you have the custom function `match_documents` set up in Supabase -> This is needed for the Vector Store Node (as query name) \n(if not, use the query below in the Supabase SQL Editor to create that function)\n- make sure you check the size of the AI model as it should be the same vector size for the table \n(e.g. OpenAI's Text-Embedding-3-Small uses 1536)\n\n```\nCREATE OR REPLACE FUNCTION public.match_documents(\n  filter JSONB,\n  match_count INT,\n  query_embedding VECTOR(1536) // should match same dimensions as from insertion\n)\nRETURNS TABLE (\n  id BIGINT,\n  content TEXT,\n  metadata JSONB,\n  embedding VECTOR(1536), // should match same dimensions as from insertion\n  similarity FLOAT\n)\nLANGUAGE plpgsql AS $$\nBEGIN\n  RETURN QUERY\n  SELECT\n    v.id,\n    v.content,\n    v.metadata,\n    v.embedding,\n    1 - (v.embedding <=> match_documents.query_embedding) AS similarity\n  FROM \"YOUR TABLE NAME\" v\n  WHERE v.metadata @> filter\n  ORDER BY v.embedding <=> match_documents.query_embedding\n  LIMIT match_count;\nEND;\n$$\n;\n```\n","height":821.787041589866,"width":876.5116990000852,"color":4},"id":"17baef49-1578-4870-bd78-98d5afa0ff9f","name":"Sticky Note2","type":"n8n-nodes-base.stickyNote","position":[0,0],"typeVersion":1},{"parameters":{"content":"# RETRIEVAL","height":821.9537074055816,"width":810.9488123113013,"color":5},"id":"24f9e32a-084d-4620-98bf-6008ed13418b","name":"Sticky Note3","type":"n8n-nodes-base.stickyNote","position":[1680,0],"typeVersion":1},{"parameters":{"options":{}},"id":"635a345d-6135-4ed5-9a0d-dd9c9c27bf1e","name":"Question and Answer Chain","type":"@n8n/n8n-nodes-langchain.chainRetrievalQa","position":[1960,140],"typeVersion":1.3},{"parameters":{"options":{}},"id":"669ddbfe-4293-4451-948e-a270c71d28c7","name":"OpenAI Chat Model","type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","position":[1880,320],"typeVersion":1,"credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{"topK":10},"id":"64b04200-e716-46e4-80e3-e2854bcf197c","name":"Vector Store Retriever","type":"@n8n/n8n-nodes-langchain.retrieverVectorStore","position":[2040,320],"typeVersion":1},{"parameters":{"options":{}},"id":"7b41de7a-0c98-4713-a8b8-2622cbe50750","name":"Recursive Character Text Splitter1","type":"@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter","position":[1400,540],"typeVersion":1},{"parameters":{"assignments":{"assignments":[{"id":"440fc115-ccae-4e30-85a5-501d0617b2cf","name":"output","type":"string","value":"={{ $json.response.text }}"}]},"options":{}},"id":"70d7c52a-c8be-40ab-a04b-96e2bc9165d2","name":"Customize Response","type":"n8n-nodes-base.set","position":[2300,140],"notesInFlow":true,"typeVersion":3.4,"notes":"output || text"},{"parameters":{"public":true,"initialMessages":"=Hi there! 🙏\n\nYou can ask me anything about Venerable Geshe Kelsang Gyatso's Book - 'How To Transform Your Life'\n\nWhat would you like to know? ","options":{"responseMode":"lastNode"}},"id":"5d3c7b77-5029-47e7-a455-13b819d6db54","name":"When chat message received","type":"@n8n/n8n-nodes-langchain.chatTrigger","position":[1760,140],"webhookId":"d7431c58-89aa-4d70-b5bd-044be981b3a9","typeVersion":1.1},{"parameters":{"tableName":{"__rl":true,"mode":"list","value":"Kadampa","cachedResultName":"Kadampa"},"options":{"queryName":"match_documents"}},"id":"aeadda5b-ef62-4919-b5d4-b475c54d54ac","name":"Retrieve by Query","type":"@n8n/n8n-nodes-langchain.vectorStoreSupabase","position":[1980,480],"typeVersion":1,"credentials":{"supabaseApi":{"id":"GwQHus8VDsBElGiE","name":"Supabase account localhost"}}},{"parameters":{"options":{}},"id":"46e98eea-307f-4801-bd1c-8a4416cead1e","name":"Embeddings OpenAI Retrieval","type":"@n8n/n8n-nodes-langchain.embeddingsOpenAi","position":[1980,640],"typeVersion":1,"credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{"model":"text-embedding-3-small","options":{}},"id":"6791323f-bcf1-480e-948c-feb286c53886","name":"Embeddings OpenAI Insertion","type":"@n8n/n8n-nodes-langchain.embeddingsOpenAi","position":[1200,380],"typeVersion":1,"credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{"mode":"raw","jsonOutput":"={\n  \"Date\": \"{{ $now.format('dd MMM yyyy') }}\",\n  \"Time\": \"{{ $now.format('HH:mm ZZZZ z') }}\"\n}\n","options":{}},"id":"91c7e2c9-4c88-4bed-a255-afc0bef9eb13","name":"Placeholder (File/Content to Upsert)","type":"n8n-nodes-base.set","position":[180,1000],"typeVersion":3.4},{"parameters":{"model":"text-embedding-3-small","options":{}},"id":"67ebaeab-f0df-444b-9fbb-53a0fd4c825f","name":"Embeddings OpenAI Upserting","type":"@n8n/n8n-nodes-langchain.embeddingsOpenAi","position":[400,1160],"typeVersion":1,"credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{"mode":"insert","tableName":{"__rl":true,"mode":"list","value":"Kadampa","cachedResultName":"Kadampa"},"options":{}},"id":"1504b6e9-f63f-465f-9558-b7f34cdbd1bd","name":"Insert Documents","type":"@n8n/n8n-nodes-langchain.vectorStoreSupabase","position":[1200,160],"typeVersion":1,"credentials":{"supabaseApi":{"id":"GwQHus8VDsBElGiE","name":"Supabase account localhost"}}},{"parameters":{"operation":"getAll","tableId":"n8n","returnAll":true},"id":"20489eb3-3a21-4d43-a2f5-854d3d446ad6","name":"Retrieve Rows from Table","type":"n8n-nodes-base.supabase","position":[2240,620],"typeVersion":1},{"parameters":{"content":"# DELETION\n\nAt the moment n8n does not have a built-in Supabase Node to delete records in a Vector Database. For this you would typically use the HTTP Request node to make an authorized API call to Supabase. \n\n## HTTP Request Node\n\nUse this node to send a DELETE request to your Supabase instance.\n\n- Supabase API Endpoint: Use the appropriate URL for your Supabase project. The endpoint will typically look like this: [https://<your-supabase-ref>.supabase.co/rest/v1/<your-vector-table>](https://supabase.com/docs/guides/api). Replace `<your-supabase-ref>` and `<your-vector-table>` with your details.\n### HEADERS:\n- apikey: Your Supabase API key.\n- Authorization: Bearer token with your Supabase JWT.\n- Query Parameters: Use query parameters to specify which record(s) to delete. For example, `?id=eq.<your-record-id>` where `<your-record-id>` is the specific record ID you want to delete \n(You can also reference back to the **Retrieve Rows From Table** Node to get the ID dynamically)\n\nEnsure you have the necessary permissions set up in Supabase to delete records through the API.\n\nPlease refer to the official n8n documentation for more detailed information on using the [HTTP Request Node](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.httprequest/).\n\n_Note:_ Deleting records is a sensitive operation, so make sure that your permissions are correctly configured and that you are targeting the correct records to avoid unwanted data loss.","height":537.3056597675153,"width":1587.0771183771394,"color":6},"id":"72652625-2546-402b-8392-db373386db3b","name":"Sticky Note4","type":"n8n-nodes-base.stickyNote","position":[900,840],"typeVersion":1},{"parameters":{"mode":"update","tableName":{"__rl":true,"mode":"list","value":"n8n","cachedResultName":"n8n"},"id":"1","options":{"queryName":"match_documents"}},"id":"604c4907-36c4-4864-ae33-c40022beeb0c","name":"Update Documents","type":"@n8n/n8n-nodes-langchain.vectorStoreSupabase","position":[380,1000],"typeVersion":1,"credentials":{"supabaseApi":{"id":"GwQHus8VDsBElGiE","name":"Supabase account localhost"}}}],"connections":{"Google Drive":{"main":[[{"node":"Insert Documents","type":"main","index":0}]]},"OpenAI Chat Model":{"ai_languageModel":[[{"node":"Question and Answer Chain","type":"ai_languageModel","index":0}]]},"Retrieve by Query":{"ai_vectorStore":[[{"node":"Vector Store Retriever","type":"ai_vectorStore","index":0}]]},"Default Data Loader":{"ai_document":[[{"node":"Insert Documents","type":"ai_document","index":0}]]},"Vector Store Retriever":{"ai_retriever":[[{"node":"Question and Answer Chain","type":"ai_retriever","index":0}]]},"Question and Answer Chain":{"main":[[{"node":"Customize Response","type":"main","index":0}]]},"When chat message received":{"main":[[{"node":"Question and Answer Chain","type":"main","index":0}]]},"Embeddings OpenAI Insertion":{"ai_embedding":[[{"node":"Insert Documents","type":"ai_embedding","index":0}]]},"Embeddings OpenAI Retrieval":{"ai_embedding":[[{"node":"Retrieve by Query","type":"ai_embedding","index":0}]]},"Embeddings OpenAI Upserting":{"ai_embedding":[[{"node":"Update Documents","type":"ai_embedding","index":0}]]},"Recursive Character Text Splitter1":{"ai_textSplitter":[[{"node":"Default Data Loader","type":"ai_textSplitter","index":0}]]},"Placeholder (File/Content to Upsert)":{"main":[[{"node":"Update Documents","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":null,"pinData":{},"versionId":"e7a076bc-6e9b-487c-979b-bb05757febf1","triggerCount":0,"tags":[],"shared":[{"createdAt":"2025-05-19T07:31:55.045Z","updatedAt":"2025-05-19T07:31:55.045Z","role":"workflow:owner","workflowId":"x21sChnuQbgOiZGT","projectId":"WbfPHUYYKS2tiNNo","project":{"createdAt":"2025-05-03T06:49:18.088Z","updatedAt":"2025-05-03T06:52:24.837Z","id":"WbfPHUYYKS2tiNNo","name":"charlie phan <scottyphan08@gmail.com>","type":"personal","icon":null,"description":null}}]},{"createdAt":"2025-05-19T07:43:23.763Z","updatedAt":"2025-05-19T07:43:23.763Z","id":"tPep0xA3qKOYabvA","name":"My workflow 5","active":false,"isArchived":false,"nodes":[{"parameters":{"modelName":"models/gemini-2.5-flash-preview-04-17","options":{}},"id":"766bec26-3e63-47ec-bffb-3d67e3283db7","name":"Google Gemini Chat Model","type":"@n8n/n8n-nodes-langchain.lmChatGoogleGemini","position":[-40,380],"typeVersion":1,"credentials":{"googlePalmApi":{"id":"VxuR4Ot4TSiJTVFk","name":"Google Gemini(PaLM) Api account"}}},{"parameters":{"cityName":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('City', ``, 'string') }}"},"id":"46229bda-a49e-46cc-a336-9575b7c2acbe","name":"OpenWeatherMap","type":"n8n-nodes-base.openWeatherMapTool","position":[220,240],"typeVersion":1},{"parameters":{"promptType":"define","text":"={{ $json.message.text }}","hasOutputParser":true,"options":{"systemMessage":"=4. If the user sends you a message starting with / sign, it means this is a Telegram bot command. For example, all users send /start command as their first message. Try to figure out what these commands mean and reply accodringly.\nUser can only send pdf files and text messages and let them know that this type is not supported if it was not a PDF file or text.\nAt first let them know that they can ask questions about sent PDF files you can use your own capabilities as well. \nGenerate a detailed, well-structured response ,\nFormat the response strictly using Telegram's supported HTML syntax. Use tags like <b>, <i>, <u>, <s>, <span class=\"tg-spoiler\">, <code>, <pre> (with optional <code class=\"language-...\"> inside), <a href=\"...\">, and <blockquote> where appropriate.\n\nStructure the content logically using paragraphs and distinct sections. **Be mindful that this text might need to be split into multiple messages due to character limits (Telegram's limit is around 4096 characters per message). Try to make sections or paragraphs relatively self-contained where possible to facilitate splitting.**\n\n**Ensure all <, >, and & symbols within the *text content* (i.e., not part of an HTML tag or entity) are replaced with the corresponding HTML entities: < with &lt;, > with &gt;, and & with &amp;.**\n\nMaintain proper nesting of HTML tags according to Telegram's rules. While the final splitting will be handled by a script, aim for a structure that is easy to break into logical parts without leaving tags improperly open mid-message."}},"id":"a992a8e8-891d-4e61-93d2-f290905a8744","name":"AI Agent","type":"@n8n/n8n-nodes-langchain.agent","position":[-40,20],"typeVersion":1.9},{"parameters":{"updates":["message"],"additionalFields":{}},"id":"5750a4b2-1a22-45c4-862d-3e004528c93c","name":"Telegram Trigger","type":"n8n-nodes-base.telegramTrigger","position":[-540,440],"webhookId":"d4f286b2-8094-40e3-aeb2-813eb1895ecf","typeVersion":1.2,"credentials":{"telegramApi":{"id":"I69z6e5cYkew5SXv","name":"Telegram n8nclp Chat"}}},{"parameters":{"chatId":"={{ $json.chatId }}","text":"={{ $json.text }}","additionalFields":{"appendAttribution":false,"parse_mode":"HTML"}},"id":"f7bb239f-a7fe-4fe4-bc72-c796ef0d94f5","name":"Telegram","type":"n8n-nodes-base.telegram","position":[1020,20],"webhookId":"137d8d2f-a941-4803-8646-8932525360c3","typeVersion":1.2,"alwaysOutputData":true,"credentials":{"telegramApi":{"id":"I69z6e5cYkew5SXv","name":"Telegram n8nclp Chat"}},"onError":"continueErrorOutput"},{"parameters":{},"id":"9df765b4-c632-49cd-a686-4f3a194c6f51","name":"Think","type":"@n8n/n8n-nodes-langchain.toolThink","position":[100,380],"typeVersion":1},{"parameters":{"modelName":"models/text-embedding-004"},"id":"a9964bea-d3a1-4a36-b1a2-3d9bbca5281d","name":"Embeddings Google Gemini","type":"@n8n/n8n-nodes-langchain.embeddingsGoogleGemini","position":[320,680],"typeVersion":1,"credentials":{"googlePalmApi":{"id":"VxuR4Ot4TSiJTVFk","name":"Google Gemini(PaLM) Api account"}}},{"parameters":{"options":{}},"id":"bf5b3c8f-a528-4734-8154-09b6bdc3260f","name":"Default Data Loader","type":"@n8n/n8n-nodes-langchain.documentDefaultDataLoader","position":[700,800],"typeVersion":1},{"parameters":{"options":{}},"id":"f0487ec5-e669-4ff2-8976-6916a4df0e84","name":"Recursive Character Text Splitter","type":"@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter","position":[920,960],"typeVersion":1},{"parameters":{"operation":"pdf","options":{}},"id":"c6c7b07e-905f-4fc0-8330-1b03539f9c25","name":"Extract from File","type":"n8n-nodes-base.extractFromFile","position":[500,820],"typeVersion":1,"alwaysOutputData":true},{"parameters":{"description":"Use this data if the user's question appears to reference an uploaded file, document content, or specific information that might be stored in prior user documents. If not relevant, ignore this source."},"id":"182bd578-b1b8-4880-bba0-a99f2b53da7a","name":"Answer questions with a vector store","type":"@n8n/n8n-nodes-langchain.toolVectorStore","position":[340,280],"typeVersion":1.1},{"parameters":{"tableName":{"__rl":true,"mode":"list","value":"user_knowledge_base","cachedResultName":"user_knowledge_base"},"options":{"queryName":"match_documents"}},"id":"c62f43be-3473-4ab0-b891-5c5a2b7de3f7","name":"Supabase Vector Store","type":"@n8n/n8n-nodes-langchain.vectorStoreSupabase","position":[240,420],"typeVersion":1.1,"credentials":{"supabaseApi":{"id":"GwQHus8VDsBElGiE","name":"Supabase account localhost"}}},{"parameters":{"content":"✅ Scenario 2 – Document Upload and Embedding\n\nFlow for downloading a document sent via Telegram, extracting its text, generating embeddings, and inserting them into Supabase Vector Store.","height":779,"width":1625,"color":5},"id":"c3d51c28-ab9e-49ec-afea-3261f0e6edce","name":"Sticky Note10","type":"n8n-nodes-base.stickyNote","position":[-160,540],"typeVersion":1},{"parameters":{"content":"✅ Scenario 1 – Chatbot Interaction\n\nFlow for handling user messages sent to the bot. Includes accessing weather data, answering questions based on user-uploaded documents, and running code using a code execution tool.","height":599,"width":1625,"color":5},"id":"b4eebd88-b653-4b34-9361-d3de5a142ffa","name":"Sticky Note11","type":"n8n-nodes-base.stickyNote","position":[-160,-80],"typeVersion":1},{"parameters":{"chatId":"={{ $('Command Router').item.json.message.chat.id }}","text":"=✅ Document saved!\nFeel free to start asking questions about it.","additionalFields":{"appendAttribution":false}},"id":"eea56fb6-306a-45cd-8574-cf3efaebba04","name":"Telegram - Embedding Complete","type":"n8n-nodes-base.telegram","position":[1240,660],"webhookId":"4eaead72-f9a7-49a3-95ca-b3bc8f6b9a95","typeVersion":1.2,"credentials":{"telegramApi":{"id":"I69z6e5cYkew5SXv","name":"Telegram n8nclp Chat"}}},{"parameters":{"mode":"insert","tableName":{"__rl":true,"mode":"list","value":"user_knowledge_base","cachedResultName":"user_knowledge_base"},"options":{}},"id":"2821a339-14b9-4854-87c4-ef98530aa9f9","name":"Supabase - Save Embeddings","type":"@n8n/n8n-nodes-langchain.vectorStoreSupabase","position":[680,660],"typeVersion":1.1,"alwaysOutputData":false,"credentials":{"supabaseApi":{"id":"GwQHus8VDsBElGiE","name":"Supabase account localhost"}}},{"parameters":{"rules":{"values":[{"conditions":{"options":{"version":2,"leftValue":"","caseSensitive":true,"typeValidation":"loose"},"combinator":"and","conditions":[{"id":"895b32db-777d-4d8e-b1d3-596cc9863d09","operator":{"type":"boolean","operation":"exists","singleValue":true},"leftValue":"={{ $json.message.document }}","rightValue":"={{ $json.message.document }}"}]},"renameOutput":true,"outputKey":"document"},{"conditions":{"options":{"version":2,"leftValue":"","caseSensitive":true,"typeValidation":"loose"},"combinator":"and","conditions":[{"id":"26c12573-8e00-4832-8410-73d2d739c455","operator":{"type":"boolean","operation":"exists","singleValue":true},"leftValue":"={{ $json.message.text }}","rightValue":""}]},"renameOutput":true,"outputKey":"text"}]},"looseTypeValidation":true,"options":{"fallbackOutput":"extra"}},"id":"f5c64bed-cf25-4fd7-ab70-0e0026568d24","name":"Command Router","type":"n8n-nodes-base.switch","position":[-360,440],"typeVersion":3.2},{"parameters":{"resource":"file","fileId":"={{ $('Telegram Trigger').item.json.message.document.file_id }}"},"id":"74afce85-83dc-45a9-beda-b99c11375ec3","name":"Telegram - Download file","type":"n8n-nodes-base.telegram","position":[80,880],"webhookId":"11b8f884-34bc-401c-8978-b28507d96e40","typeVersion":1.2,"credentials":{"telegramApi":{"id":"I69z6e5cYkew5SXv","name":"Telegram n8nclp Chat"}}},{"parameters":{"fieldsToAggregate":{"fieldToAggregate":[{}]},"options":{}},"id":"7c901570-b6de-410f-beed-02f97a71c75c","name":"Aggregate","type":"n8n-nodes-base.aggregate","position":[1060,660],"notesInFlow":true,"typeVersion":1,"notes":"This is used to flag the end of progress—no real aggregation."},{"parameters":{"chatId":"={{ $('Manual Mapping').item.json.chatId }}","text":"={{ $('Manual Mapping').item.json.text }}","additionalFields":{"appendAttribution":false}},"id":"4bfff965-71d9-4c4f-808b-3978c21e7e89","name":"Fallback- No formatting","type":"n8n-nodes-base.telegram","position":[1220,80],"webhookId":"dd2182fe-0b11-4d96-9838-30d60bf8c229","notesInFlow":true,"typeVersion":1.2,"credentials":{"telegramApi":{"id":"I69z6e5cYkew5SXv","name":"Telegram n8nclp Chat"}},"notes":"This is used if, even after HTML formatting,g Telegram wasn't able to process the text, so we send it without formatting."},{"parameters":{"fieldToSplitOut":"output","options":{}},"id":"f15cec95-e85a-41a8-ad0f-b4e467793e68","name":"Split Out","type":"n8n-nodes-base.splitOut","position":[600,20],"typeVersion":1},{"parameters":{"sessionIdType":"customKey","sessionKey":"={{ $('Telegram Trigger').item.json.message.from.id }}"},"id":"7c7773e5-44d6-4cbd-b810-2efb218838a1","name":"Simple Memory","type":"@n8n/n8n-nodes-langchain.memoryBufferWindow","position":[20,240],"typeVersion":1.3},{"parameters":{"language":"python","pythonCode":"import re\nimport html\n\ngemini_output_text = _('AI Agent').first().json.output;\n# Regex to match any HTML tag <...>\nHTML_TAG_PATTERN = re.compile(r'(<[^>]*?>)', re.IGNORECASE)\n\n# List of UNSUPPORTED Telegram HTML tag names\nUNSUPPORTED_TAG_NAMES = [\n    'p', 'li', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'ul', 'ol',\n    'table', 'thead', 'tbody', 'tr', 'td', 'th', 'div', 'br', 'font',\n    'span', # Span is unsupported *unless* it has the specific class\n    'a'     # A is unsupported *unless* it has the href attribute\n    # Add more unsupported tags if you encounter them\n]\n\n# Regex to match unsupported opening or closing tags based on the names list\n# This pattern is simplified and might misinterpret complex attributes\nUNSUPPORTED_TAG_PATTERN = re.compile(r'<\\/?(' + '|'.join(UNSUPPORTED_TAG_NAMES) + r')\\b[^>]*?>', re.IGNORECASE)\n\n# Regex to match a span tag *without* the class=\"tg-spoiler\" attribute\n# This tries to capture the tag and its content to remove both\nUNSUPPORTED_SPAN_FULL_PATTERN = re.compile(r'<span(?! class=\"tg-spoiler\"\\b)[^>]*?>.*?<\\/span>', re.IGNORECASE | re.DOTALL) # DOTALL allows . to match newlines\n\n# Regex to match an a tag *without* an href attribute\n# This tries to capture the tag and its content to remove both\nUNSUPPORTED_A_FULL_PATTERN = re.compile(r'<a(?![^>]*href=)[^>]*?>.*?<\\/a>', re.IGNORECASE | re.DOTALL)\n\n\n# --- Cleaning Function (Regex Only) ---\n\ndef unescape_common_html_entities(text):\n    \"\"\"\n    Unescapes a limited set of common HTML entities in text.\n    Does NOT use html.unescape for maximum compatibility with \"no external library\" rule.\n    \"\"\"\n    # Order matters: &amp; must be replaced first!\n    text = text.replace('&amp;', '&')\n    text = text.replace('&lt;', '<')\n    text = text.replace('&gt;', '>')\n    text = text.replace('&quot;', '\"')\n    text = text.replace('&apos;', \"'\")\n    # Add more common entities here if needed, e.g., text = text.replace('&nbsp;', ' ')\n    return text\n\n\ndef clean_html_regex_only(html_string):\n    \"\"\"\n    Cleans HTML string using regex: removes unsupported tags and escapes text content.\n    Handles &apos; and other basic entities.\n    WARNING: This is a regex-based approach and is NOT as robust as using an HTML parser.\n    It may fail on complex or malformed HTML.\n\n    Args:\n        html_string (str): The input HTML string.\n\n    Returns:\n        str: The cleaned HTML string.\n    \"\"\"\n    # 1. Remove unsupported tags and their content where specific attributes are missing\n    # Process specific full patterns first\n    cleaned_text = UNSUPPORTED_SPAN_FULL_PATTERN.sub('', html_string)\n    cleaned_text = UNSUPPORTED_A_FULL_PATTERN.sub('', cleaned_text)\n\n    # 2. Remove remaining unsupported opening/closing tags, leaving content behind\n    cleaned_text = UNSUPPORTED_TAG_PATTERN.sub('', cleaned_text)\n\n    # 3. Split the remaining string into tags and text segments\n    # This pattern captures the tags themselves so we can differentiate them from text\n    parts = HTML_TAG_PATTERN.split(cleaned_text)\n\n    cleaned_parts = []\n    for part in parts:\n        if not part:\n            continue\n\n        if HTML_TAG_PATTERN.fullmatch(part):\n            # If the part is a tag (matches the full tag pattern)\n            # We assume at this point it's a supported tag due to previous removal steps.\n            # Keep the tag as is.\n            cleaned_parts.append(part)\n        else:\n            # If the part is text content\n            # 1. Unescape common HTML entities (like &apos;) that might be in the text\n            unescaped_text = unescape_common_html_entities(part)\n\n            # 2. Escape the literal characters <, >, & that are *in* the text content\n            # This ensures only the characters themselves are escaped, not entities.\n            # Need to escape & first to avoid issues with '&amp;' if it resulted from unescaping or was original.\n            re_escaped_text = unescaped_text.replace('&', '&amp;').replace('<', '&lt;').replace('>', '&gt;')\n\n            cleaned_parts.append(re_escaped_text)\n\n    # Join the processed parts back into a single string\n    return \"\".join(cleaned_parts)\n\n# --- Splitting Logic ---\nSPLIT_PATTERN_REGEX_ONLY = re.compile(r'(<\\/blockquote>|<\\/pre>|\\n\\n|\\s{2,}|(?<=[.!?])\\s+|<[a-z]+[^>]*?>|<\\/[a-z]+>)', flags=re.IGNORECASE)\n\n\ndef split_telegram_message_regex_only(text, max_length=4096):\n    \"\"\"\n    Splits text into multiple messages based on character count and basic patterns.\n    Operates on text already cleaned by clean_html_regex_only.\n    Does NOT guarantee HTML tag integrity across splits due to lack of parsing.\n\n    Args:\n        text (str): The input text (preferably cleaned by clean_html_regex_only).\n        max_length (int): The maximum length for each message part.\n\n    Returns:\n        list: A list of strings, where each string is a message part.\n    \"\"\"\n    if len(text) <= max_length:\n        return [text]\n\n    messages = []\n    current_chunk = \"\"\n\n    # Split by the defined pattern\n    parts = SPLIT_PATTERN_REGEX_ONLY.split(text)\n\n    for part in parts:\n        # Handle parts that are None (can happen with split) or just short whitespace\n        if part is None or (not part.strip() and len(part) < 2 and part != '\\n\\n'):\n             if part is not None and len(part) > 0: # Keep meaningful whitespace splits like \\n\\n\n                  if len(current_chunk) + len(part) <= max_length:\n                       current_chunk += part\n                  else:\n                       # Split happens within meaningful whitespace, finalize chunk\n                       if current_chunk.strip(): # Only add if chunk has content\n                            messages.append(current_chunk.strip())\n                       current_chunk = part # Start new chunk with the whitespace\n             continue # Skip to next part\n\n\n        # Check if adding the current part exceeds the max length\n        if len(current_chunk) + len(part) > max_length:\n            # If the current chunk is empty or only whitespace after stripping,\n            # it means the 'part' itself is too long to fit in a new chunk.\n            if not current_chunk.strip():\n                # Handle very long individual parts (e.g., a huge code block line, a very long word, a single huge tag)\n                # Hard split the long part. WARNING: This can break tags, words, or escape sequences.\n                while len(part) > max_length:\n                    messages.append(part[:max_length])\n                    part = part[max_length:]\n                if part.strip():\n                    current_chunk = part # Remaining part starts a new chunk\n                else:\n                     current_chunk = \"\" # If remainder is just whitespace, clear\n            else:\n                # The current part makes the chunk too long, finalize the current chunk\n                messages.append(current_chunk.strip())\n                # Start a new chunk with the current part\n                current_chunk = part # Keep original part for the new chunk\n\n        else:\n            # Add the current part to the chunk\n            current_chunk += part\n\n    # Add the last chunk\n    if current_chunk.strip(): # Only add if the final chunk has content\n        messages.append(current_chunk.strip())\n\n    # Clean up any empty messages that might have been created\n    messages = [msg for msg in messages if msg.strip()]\n\n    return messages\n  \ncleaned_html_regex = clean_html_regex_only(gemini_output_text)\nmessage_parts_regex = split_telegram_message_regex_only(cleaned_html_regex)\n\nreturn dict({'output': message_parts_regex })"},"id":"2f5151b9-2449-4016-8823-6e8ae2424456","name":"Handle formatting and split","type":"n8n-nodes-base.code","position":[380,20],"typeVersion":2,"notes":"This is used to prevent Markdown issues in Telegram while sending messages."},{"parameters":{"content":"# 🤖 Telegram AI Assistant for Your Documents (n8n + Supabase + Gemini)\n\nThis project transforms a standard **Telegram bot** into your dedicated AI assistant – designed to understand and answer questions based on **your own documents**. It seamlessly integrates the power of **Google Gemini** for advanced language capabilities and **Supabase's vector database** for efficient, intelligent document retrieval. Built entirely within the no-code platform **n8n**, it allows you to deploy a sophisticated document chatbot without writing a single line of code.\n\nSimply upload any PDF document to the bot, and instantly gain the ability to chat with it, querying its contents as if it were a knowledgeable expert on your uploaded files.\n\n---\n## 📹 Watch the Bot in Action\n\n[![𝗨𝗻𝗹𝗲𝗮𝘀𝗵𝗶𝗻𝗴 𝗔𝗜 𝗼𝗻 𝗠𝘆 𝗕𝗼𝗼𝗸𝘀𝗵𝗲𝗹𝗳: 𝗙𝗹𝗼𝘄 𝗣𝗿𝗼𝗴𝗿𝗮𝗺𝗺𝗶𝗻𝗴 𝗣𝗼𝘄𝗲𝗿𝘀 𝗮 𝗡𝗲𝘅𝘁-𝗟𝗲𝘃𝗲𝗹 𝗧𝗲𝗹𝗲𝗴𝗿𝗮𝗺 𝗕𝗼𝘁🤖](https://img.youtube.com/vi/r_KGyJApy5M/maxresdefault.jpg)](https://www.youtube.com/watch?v=r_KGyJApy5M)\n\n**▶️ Click the image above to watch a live demo on YouTube.** \n\nThis video provides a live demonstration of the bot's core features and how it interacts. See a quick walkthrough of its capabilities and user flow.\n\n---\n\n## ✨ Ignite Your Workflow: Use Cases\n\nThis project empowers two core interactions:\n\n### 1. Conversational AI Interface (User Inquiry → Telegram Bot → Intelligent Answers)\n- Users pose questions directly to the Telegram bot.\n- The bot generates relevant, informative answers using the cutting-edge capabilities of the Google Gemini LLM.\n- Leveraging a powerful vector search mechanism, it can pull specific, contextual information from previously uploaded documents to provide highly relevant and informed responses.\n- (Optional) Augment answers with real-time data, like current **weather information**.\n\n### 2. Effortless Document Integration (User Upload PDF → Processing → Searchable Knowledge)\n- Users upload a PDF document directly to the bot.\n- The workflow automatically parses the document content, converts it into numerical representations called embeddings using Gemini's embedding models.\n- These embeddings, alongside the document's text content, are then securely stored in a dedicated **Supabase vector table**, creating a searchable knowledge base.\n- Immediately after successful processing, the document becomes part of the bot's memory, enabling users to ask questions about its contents via the standard chat interface.\n\n---\n## 🧠 Core Intelligence Features\n\n- ✅ **Pure No-Code**: Developed and managed entirely within the intuitive [n8n](https://n8n.io) automation platform.\n- 📄 **Seamless PDF Integration**: Easily upload and process PDF documents to expand the bot's knowledge.\n- 🧠 **Powered by Google Gemini**: Utilizes Gemini for both generating document embeddings and formulating intelligent conversational responses.\n- 🗂 **Vector Database Memory (Supabase)**: Employs **Supabase as a robust vector database** for storing and efficiently searching document embeddings, providing the bot with long-term memory about your content.\n- **⚡️ Rapid & Private Retrieval**: The vector search allows for swift identification and retrieval of the most relevant document snippets based on the user's query. This approach enhances response speed and significantly improves data privacy, as **the original document content remains securely stored in your Supabase instance, and only the user's query and the retrieved relevant chunks are sent to the LLM for generating a response.**\n- 🧹 **Intelligent HTML Post-processing**: Cleans the LLM's responses by removing HTML tags not supported by Telegram while preserving essential formatting and correctly escaping special characters in the text content.\n- 📤 **Adaptive Message Chunking**: Splits lengthy AI-generated answers into multiple messages that adhere to Telegram's 4096-character limit, ensuring the full response is delivered cleanly.\n- 🌦️ **Dynamic Weather Data**: (Optional) Integrates with OpenWeatherMap to provide current weather information upon request.\n- **📝 Note on Usage**: This workflow is designed primarily for **personal, single-user** scenarios. It processes each message independently and **does not include multi-user session management**, making it unsuitable for public deployment where different users require separate conversational contexts. For a session-based Telegram bot implemented in Python, you may refer to this project, which is a multi-model telegram bot: [https://github.com/mohamadghaffari/gemini-tel-bot](https://github.com/mohamadghaffari/gemini-tel-bot).\n---\n\n## 🛠 Getting Started: Setup\n\n### 1. Deploy the Workflow in n8n\n\n- Click the \"Use this workflow\" button on the n8n template page.\n- This will open the workflow directly in your n8n instance, ready for configuration.\n\n\n### 2. Connect Your Services: Configure Credentials\n\nCreate API credentials for the following services within your n8n instance:\n\n| Service          | Purpose                          |\n|------------------|------------------------------------|\n| Telegram API     | Receiving user messages & sending replies |\n| Google Gemini    | Generating embeddings & LLM responses |\n| Supabase         | Storing & searching document vectors |\n| OpenWeatherMap   | (Optional) Fetching weather data    |\n\n### 3. Prepare Your Supabase Knowledge Base\n\nSet up a vector-enabled table in your Supabase project to store your document embeddings. Execute the following SQL commands in your Supabase SQL Editor:\n\n``` sql\n-- Enable the pgvector extension to work with embedding vectors\ncreate extension vector;\n\n-- Create a table to store your documents and their embeddings\ncreate table user_knowledge_base (\n  id bigserial primary key,\n  content text, -- Stores the text chunk from the document\n  metadata jsonb, -- Stores document information (e.g., filename, page number)\n  embedding vector(768) -- Stores the vector representation (embedding) generated by Gemini. Adjust dimension if using a different model.\n);\n\n-- Create a function to perform vector similarity search against your documents\ncreate function match_documents (\n  query_embedding vector(768),\n  match_count int default null,\n  filter jsonb DEFAULT '{}'\n) returns table (\n  id bigint,\n  content text,\n  metadata jsonb,\n  similarity float\n)\nlanguage plpgsql\nas $$\n#variable_conflict use_column\nbegin\n  return query\n  select\n    id,\n    content,\n    metadata,\n    -- Calculate cosine similarity: 1 - cosine distance (using the '<=>' operator provided by pgvector)\n    1 - (user_knowledge_base.embedding <=> query_embedding) as similarity\n  from user_knowledge_base\n  where metadata @> filter -- Optional: filter results based on metadata\n  order by user_knowledge_base.embedding <=> query_embedding -- Order by similarity (closest first)\n  limit match_count; -- Limit the number of results\nend;\n$$;\n````\n\nThis sets up the necessary table and a function to perform vector similarity searches, allowing you to find document chunks most similar to a user's query.\n-----\n\n## 📚 Integrated Technologies\n\nThis project brings together powerful tools:\n\n  - [n8n](https://n8n.io) – The central hub for workflow automation and integration.\n  - [Telegram Bot API](https://core.telegram.org/bots/api) – The communication layer for user interaction.\n  - [Supabase](https://supabase.com/) + [pgvector Extension](https://www.google.com/search?q=https://supabase.com/docs/guides/ai/vector-embeddings) – Provides a scalable database with powerful vector search capabilities.\n  - [Google Gemini API](https://ai.google.dev/) – The intelligence engine for embeddings and text generation.\n  - [OpenWeatherMap API](https://openweathermap.org/api) – (Optional) For adding real-time weather features.\n\n-----\n","height":3520,"width":1960},"id":"1be766da-c5e3-418b-9621-47bcdd72cafc","name":"Sticky Note","type":"n8n-nodes-base.stickyNote","position":[1480,-80],"typeVersion":1},{"parameters":{"assignments":{"assignments":[{"id":"cdeb5bf1-c91c-44ae-bebd-ab3f4ba2561a","name":"text","type":"string","value":"={{ $json.output }}"},{"id":"7cd7d120-96fa-4539-b343-25bc9b75abb4","name":"chatId","type":"number","value":"={{ $('Command Router').item.json.message.from.id }}"}]},"options":{}},"id":"753ce7ec-3591-4d53-831a-94801cc762db","name":"Manual Mapping","type":"n8n-nodes-base.set","position":[800,20],"typeVersion":3.4},{"parameters":{"chatId":"={{ $('Command Router').item.json.message.chat.id }}","text":"Unsupported command or file. 😓 Please upload a valid PDF document or ask your question regarding your files.","additionalFields":{"appendAttribution":false}},"id":"93e935f0-215a-4a67-bcb9-1a489a3e140b","name":"Unsupported message","type":"n8n-nodes-base.telegram","position":[-20,1100],"webhookId":"52f3456a-06ef-4799-b245-0293213dcc4b","typeVersion":1.2,"credentials":{"telegramApi":{"id":"I69z6e5cYkew5SXv","name":"Telegram n8nclp Chat"}}},{"parameters":{"chatId":"={{ $('Command Router').item.json.message.chat.id }}","text":"=<b>Processing document...</b>\n<b>Please wait...⏳</b>","additionalFields":{"appendAttribution":false,"parse_mode":"HTML"}},"id":"36bdee92-05d6-44d2-9e39-d8bd55d7f784","name":"Send processing document message","type":"n8n-nodes-base.telegram","position":[400,1060],"webhookId":"32ade357-f14b-4d10-91f2-02c8aa6e198e","typeVersion":1.2,"credentials":{"telegramApi":{"id":"I69z6e5cYkew5SXv","name":"Telegram n8nclp Chat"}}},{"parameters":{"chatId":"={{ $('Command Router').item.json.message.chat.id }}","text":"=<b>Document processed ✅ </b> \n<b>Num of pages:</b> {{ $json.numpages }} \n<b>Creator:</b> {{ $json.info.Creator }}\n<b>Title:</b> {{ $json.info.Title }} \n<b>Version:</b> {{ $json.version }}","additionalFields":{"appendAttribution":false,"parse_mode":"HTML"}},"id":"4c014be4-04c8-4bc1-bbbc-4710b3eb04c5","name":"Send embedding Started message","type":"n8n-nodes-base.telegram","position":[700,1000],"webhookId":"32ade357-f14b-4d10-91f2-02c8aa6e198e","typeVersion":1.2,"credentials":{"telegramApi":{"id":"I69z6e5cYkew5SXv","name":"Telegram n8nclp Chat"}}}],"connections":{"Think":{"ai_tool":[[{"node":"AI Agent","type":"ai_tool","index":0}]]},"AI Agent":{"main":[[{"node":"Handle formatting and split","type":"main","index":0}]]},"Telegram":{"main":[[],[{"node":"Fallback- No formatting","type":"main","index":0}]]},"Aggregate":{"main":[[{"node":"Telegram - Embedding Complete","type":"main","index":0}]]},"Split Out":{"main":[[{"node":"Manual Mapping","type":"main","index":0}]]},"Simple Memory":{"ai_memory":[[{"node":"AI Agent","type":"ai_memory","index":0}]]},"Command Router":{"main":[[{"node":"Telegram - Download file","type":"main","index":0}],[{"node":"AI Agent","type":"main","index":0}],[{"node":"Unsupported message","type":"main","index":0}]]},"Manual Mapping":{"main":[[{"node":"Telegram","type":"main","index":0}]]},"OpenWeatherMap":{"ai_tool":[[{"node":"AI Agent","type":"ai_tool","index":0}]]},"Telegram Trigger":{"main":[[{"node":"Command Router","type":"main","index":0}]]},"Extract from File":{"main":[[{"node":"Supabase - Save Embeddings","type":"main","index":0},{"node":"Send embedding Started message","type":"main","index":0}]]},"Default Data Loader":{"ai_document":[[{"node":"Supabase - Save Embeddings","type":"ai_document","index":0}]]},"Supabase Vector Store":{"ai_vectorStore":[[{"node":"Answer questions with a vector store","type":"ai_vectorStore","index":0}]]},"Embeddings Google Gemini":{"ai_embedding":[[{"node":"Supabase - Save Embeddings","type":"ai_embedding","index":0},{"node":"Supabase Vector Store","type":"ai_embedding","index":0}]]},"Google Gemini Chat Model":{"ai_languageModel":[[{"node":"AI Agent","type":"ai_languageModel","index":0},{"node":"Answer questions with a vector store","type":"ai_languageModel","index":0}]]},"Telegram - Download file":{"main":[[{"node":"Extract from File","type":"main","index":0},{"node":"Send processing document message","type":"main","index":0}]]},"Supabase - Save Embeddings":{"main":[[{"node":"Aggregate","type":"main","index":0}]]},"Handle formatting and split":{"main":[[{"node":"Split Out","type":"main","index":0}]]},"Recursive Character Text Splitter":{"ai_textSplitter":[[{"node":"Default Data Loader","type":"ai_textSplitter","index":0}]]},"Answer questions with a vector store":{"ai_tool":[[{"node":"AI Agent","type":"ai_tool","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":null,"pinData":{},"versionId":"3b56131d-6921-4b06-94d7-40f20b81abd9","triggerCount":0,"tags":[],"shared":[{"createdAt":"2025-05-19T07:43:23.763Z","updatedAt":"2025-05-19T07:43:23.763Z","role":"workflow:owner","workflowId":"tPep0xA3qKOYabvA","projectId":"WbfPHUYYKS2tiNNo","project":{"createdAt":"2025-05-03T06:49:18.088Z","updatedAt":"2025-05-03T06:52:24.837Z","id":"WbfPHUYYKS2tiNNo","name":"charlie phan <scottyphan08@gmail.com>","type":"personal","icon":null,"description":null}}]},{"createdAt":"2025-05-19T07:43:37.966Z","updatedAt":"2025-05-19T07:45:58.194Z","id":"rZGgY8qUWNWdKgbL","name":"Training chat","active":false,"isArchived":false,"nodes":[{"parameters":{"operation":"send","phoneNumberId":"574583382412256","recipientPhoneNumber":"+212722542056","textBody":"={{ $json.output }}","additionalFields":{}},"id":"8e2b4c0f-a4c2-4cf1-ab10-6dfcb9bebc95","name":"WhatsApp Business Cloud","type":"n8n-nodes-base.whatsApp","position":[1320,620],"webhookId":"ef261fd4-e3b8-42e9-a0e2-2c3c44b6b15e","typeVersion":1},{"parameters":{"content":"## 🟡 STEP 1 – Incoming WhatsApp Message\nListens for new WhatsApp messages.\nIf the message starts with train:, it triggers the product training flow.\nOtherwise, it goes to the customer support flow.\n**WhatsApp Business Cloud node** : [Here](https://www.notion.so/automatisation/WHATSAPP-WORKFLOW-1c63d6550fd980559679e7535938a68d?pvs=4#1c63d6550fd980f9a2a5e25a3654da82)","height":440,"width":400},"id":"13b25d08-d586-4bdb-b30f-37c50ac5a337","name":"Sticky Note","type":"n8n-nodes-base.stickyNote","position":[-440,380],"typeVersion":1},{"parameters":{"content":"## 🔵 STEP 3 – Customer Support Flow\nTriggered when the message **does NOT start with `train:`**.\n\n1. **AI Analyzes the Message**  \n   Understands the customer's question or problem.\n\n2. **Fetch Product Data if Needed**  \n   Reads relevant product info from Google Sheets.\n\n3. **Detect Issues Automatically**  \n   Identifies if the user is facing a specific issue.\n\n4. **Suggest Solutions**  \n   Proposes a helpful, clear response to solve the issue.\n\n5. **Log Customer Problems**  \n   Saves the problem, suggested solution, and category.\n\n6. **Respond to the User**  \n   Sends a professional and helpful WhatsApp reply.","height":420,"width":1180,"color":6},"id":"7aa7cda1-b2f6-4745-9831-428bfefbbdf9","name":"Sticky Note1","type":"n8n-nodes-base.stickyNote","position":[0,680],"typeVersion":1},{"parameters":{"content":"## 🔴 STEP 2 – Product Data Training (Triggered by train:)\nTriggered when the message starts with `train:`.\n**OpenAI API keys** : [Here](https://platform.openai.com/api-keys)\n\n\n\n\n\n\n\n\n\n\n\n\n1. **Extract URL from Message**  \n   Uses regex to detect and extract the product link.\n\n2. **Fetch HTML Content**  \n   Sends an HTTP request to retrieve the full page content.\n\n3. **Clean HTML Data**  \n   Strips HTML tags, scripts, and formats the text.\n\n4. **Save Raw Product Info**  \n   Appends the cleaned content and URL into Google Sheets.\n\n5. **AI: Enhance Product Details**  \n   - Extracts Product Name  \n   - Detects Price (subscription or one-time)  \n   - Identifies Product Topic  \n   - Generates FAQs\n\n6. **Update Product Sheet**  \n   Enriches the row in Sheets with structured product data.\n","height":660,"width":1180,"color":3},"id":"1969ab23-6167-4c0c-b85b-dcb5880052bc","name":"Sticky Note2","type":"n8n-nodes-base.stickyNote","position":[0,0],"typeVersion":1},{"parameters":{"content":"## 🟢 STEP 4 – Client Response\nFinal step of the flow.\n\n- Sends the AI-generated response back to the customer via WhatsApp.\n- Ensures the message is clear, helpful, and personalized.","height":440,"width":320,"color":4},"id":"5d83e35e-ccc7-47a7-ac0b-78da82078e21","name":"Sticky Note3","type":"n8n-nodes-base.stickyNote","position":[1220,380],"typeVersion":1},{"parameters":{"updates":["messages"],"options":{}},"id":"d9017c6c-3026-445f-bc44-a8b1835a1543","name":"Incoming Message Trigger","type":"n8n-nodes-base.whatsAppTrigger","position":[-400,620],"webhookId":"48ce9bac-c7ea-4cb7-a40a-b010ea5ac743","typeVersion":1},{"parameters":{"rules":{"values":[{"conditions":{"options":{"version":2,"leftValue":"","caseSensitive":true,"typeValidation":"strict"},"combinator":"and","conditions":[{"id":"9865cb5b-33da-490c-afc3-186457d5b564","operator":{"type":"string","operation":"startsWith"},"leftValue":"={{ $json.messages[0].text.body }}","rightValue":"train:"}]},"renameOutput":true,"outputKey":"train"},{"conditions":{"options":{"version":2,"leftValue":"","caseSensitive":true,"typeValidation":"strict"},"combinator":"and","conditions":[{"id":"5a9a1fee-b408-469f-a08c-e8d690fc9792","operator":{"type":"string","operation":"notStartsWith"},"leftValue":"={{ $json.messages[0].text.body }}","rightValue":"train:"}]},"renameOutput":true,"outputKey":"text"}]},"options":{}},"id":"db3a90b7-740e-46ac-9999-683a585c7e2c","name":"Check If Training","type":"n8n-nodes-base.switch","position":[-220,620],"typeVersion":3.2},{"parameters":{"jsCode":"// Récupérer le texte à analyser depuis l'input\nconst texteExemple = $input.first().json.messages[0].text.body;\n\n// Expression régulière modifiée pour capturer les URL avec ou sans protocole\nconst regex = /((?:https?:\\/\\/)?(?:www\\.)?[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}(?:\\/\\S*)?)/g;\n\n// Extraction des URL à partir du texte\nconst matches = texteExemple.match(regex) || [];\n\n// Si des URL ont été trouvées, on les mappe en objets\nif (matches.length > 0) {\n    const output = matches.map(url => ({ url }));\n    return output;\n} else {\n    // Si aucune URL n'est trouvée, on retourne les items d'entrée pour que le workflow continue\n    return $input.all();\n}\n"},"id":"74bdb463-ae5f-41e3-8421-90487eeddbc8","name":"Extract URL from Text","type":"n8n-nodes-base.code","position":[40,80],"typeVersion":2},{"parameters":{"url":"={{ $json.url }}","options":{"response":{"response":{"responseFormat":"text"}}}},"id":"17b17f19-8d47-4ed6-945f-2750649d3c0d","name":"Fetch HTML Page","type":"n8n-nodes-base.httpRequest","position":[200,80],"typeVersion":4.2},{"parameters":{"jsCode":"// Exemple : récupération du contenu HTML depuis le premier item\n// Si vous avez un champ nommé \"html\" dans un noeud précédent.\nconst htmlContent = $input.first().json.html;\n\n// Fonction de nettoyage du HTML\nfunction nettoyerHTML(input) {\n  if (typeof input !== 'string') {\n    throw new Error(\"Expected HTML content as a string.\");\n  }\n  let cleanedText = input;\n\n  // 1. Retirer les liens <a> et leur contenu\n  cleanedText = cleanedText.replace(/<a[^>]*>.*?<\\/a>/gs, '');\n\n  // 2. Retirer <script>, <style>, commentaires, etc.\n  cleanedText = cleanedText.replace(/<script[^>]*>.*?<\\/script>/gs, '');\n  cleanedText = cleanedText.replace(/<style[^>]*>.*?<\\/style>/gs, '');\n  cleanedText = cleanedText.replace(/<!--[\\s\\S]*?-->/g, '');\n\n  // 3. Insérer des retours à la ligne pour certaines balises\n  cleanedText = cleanedText.replace(/<h[1-6][^>]*>/gi, '\\n');\n  cleanedText = cleanedText.replace(/<\\/h[1-6]>/gi, '\\n');\n  cleanedText = cleanedText.replace(/<p[^>]*>/gi, '\\n');\n  cleanedText = cleanedText.replace(/<\\/p>/gi, '\\n');\n  cleanedText = cleanedText.replace(/<ul[^>]*>/gi, '\\n');\n  cleanedText = cleanedText.replace(/<\\/ul>/gi, '\\n');\n  cleanedText = cleanedText.replace(/<ol[^>]*>/gi, '\\n');\n  cleanedText = cleanedText.replace(/<\\/ol>/gi, '\\n');\n  cleanedText = cleanedText.replace(/<li[^>]*>/gi, '- ');\n  cleanedText = cleanedText.replace(/<\\/li>/gi, '\\n');\n\n  // 4. Supprimer toutes les balises HTML restantes\n  cleanedText = cleanedText.replace(/<[^>]+>/g, '');\n\n  // 5. Supprimer (ou ajuster) les caractères spéciaux\n  cleanedText = cleanedText.replace(/[^\\w\\sÀ-ÖØ-öø-ÿ]+/g, '');\n\n  // 6. Normaliser les espaces multiples et trim\n  cleanedText = cleanedText.replace(/\\s+/g, ' ').trim();\n\n  return cleanedText;\n}\n\n// Nettoyage\nconst result = nettoyerHTML($input.first().json.data);\n\n// Retour d'un tableau contenant l'objet final\nreturn [\n  {\n    json: {\n      cleanedText: result\n    }\n  }\n];\n"},"id":"ac9c4827-b774-4a2a-b72c-05d1a7e0af89","name":"Clean HTML Content","type":"n8n-nodes-base.code","position":[360,80],"typeVersion":2},{"parameters":{"operation":"append","documentId":{"__rl":true,"mode":"list","value":"1wa41S888Ya3sqEkBdzYiDq-5FOu_V30BOe-toX_78xQ","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1wa41S888Ya3sqEkBdzYiDq-5FOu_V30BOe-toX_78xQ/edit?usp=drivesdk","cachedResultName":"Product Sales - AI Agent WhatsApp"},"sheetName":{"__rl":true,"mode":"list","value":689245338,"cachedResultUrl":"https://docs.google.com/spreadsheets/d/1wa41S888Ya3sqEkBdzYiDq-5FOu_V30BOe-toX_78xQ/edit#gid=689245338","cachedResultName":"Products"},"columns":{"value":{"Product Link":"={{ $('Extract URL from Text').item.json.url }}","Product Description":"={{ $json.cleanedText }}"},"schema":[{"id":"Product Link","type":"string","display":true,"required":false,"displayName":"Product Link","defaultMatch":false,"canBeUsedToMatch":true},{"id":"Product Name","type":"string","display":true,"required":false,"displayName":"Product Name","defaultMatch":false,"canBeUsedToMatch":true},{"id":"Product Price","type":"string","display":true,"required":false,"displayName":"Product Price","defaultMatch":false,"canBeUsedToMatch":true},{"id":"Product Description","type":"string","display":true,"required":false,"displayName":"Product Description","defaultMatch":false,"canBeUsedToMatch":true},{"id":"Product Topic","type":"string","display":true,"required":false,"displayName":"Product Topic","defaultMatch":false,"canBeUsedToMatch":true}],"mappingMode":"defineBelow","matchingColumns":[],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"id":"15396e33-7ddb-47f4-8820-e1155f2eefef","name":"Save Raw Product Info","type":"n8n-nodes-base.googleSheets","position":[540,80],"typeVersion":4.5,"credentials":{"googleSheetsOAuth2Api":{"id":"bdeAZgAgEmqpgnr1","name":"Google Sheets account"}}},{"parameters":{"model":{"__rl":true,"mode":"list","value":"gpt-4o-mini"},"options":{}},"id":"41073472-1e15-4ef0-be3a-7736d05a5de8","name":"OpenAI Model","type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","position":[620,360],"typeVersion":1.2,"credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{"sessionIdType":"customKey","sessionKey":"={{ $('Incoming Message Trigger').item.json.messages[0].id }}","contextWindowLength":50},"id":"9ea66201-8cba-43f9-a843-56d9973832e4","name":"Short-Term Memory","type":"@n8n/n8n-nodes-langchain.memoryBufferWindow","position":[800,360],"typeVersion":1.3},{"parameters":{"operation":"appendOrUpdate","documentId":{"__rl":true,"mode":"list","value":"1wa41S888Ya3sqEkBdzYiDq-5FOu_V30BOe-toX_78xQ","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1wa41S888Ya3sqEkBdzYiDq-5FOu_V30BOe-toX_78xQ/edit?usp=drivesdk","cachedResultName":"Product Sales - AI Agent WhatsApp"},"sheetName":{"__rl":true,"mode":"list","value":689245338,"cachedResultUrl":"https://docs.google.com/spreadsheets/d/1wa41S888Ya3sqEkBdzYiDq-5FOu_V30BOe-toX_78xQ/edit#gid=689245338","cachedResultName":"Products"},"columns":{"value":{"F&Q":"={{ $fromAI(\"product_faq\", \"these are the most common questions users might have about the product, including answers if available\") }}\n","Product Link":"={{ $fromAI(\"product_url\",\"this is the website link of the product\") }}","Product Name":"={{ $fromAI(\"product_name\",\"this is the name of the product\") }}","Product Price":"={{ $fromAI(\"product_price\",\"this is the price of the product\") }}","Product Topic":"={{ $fromAI(\"product_topic\",\"this is the topic of the product that specifies what it is for, who it is for and what the key benefits are\") }}"},"schema":[{"id":"Product Link","type":"string","display":true,"removed":false,"required":false,"displayName":"Product Link","defaultMatch":false,"canBeUsedToMatch":true},{"id":"Product Name","type":"string","display":true,"required":false,"displayName":"Product Name","defaultMatch":false,"canBeUsedToMatch":true},{"id":"Product Price","type":"string","display":true,"required":false,"displayName":"Product Price","defaultMatch":false,"canBeUsedToMatch":true},{"id":"Product Description","type":"string","display":true,"removed":true,"required":false,"displayName":"Product Description","defaultMatch":false,"canBeUsedToMatch":true},{"id":"Product Topic","type":"string","display":true,"required":false,"displayName":"Product Topic","defaultMatch":false,"canBeUsedToMatch":true},{"id":"F&Q","type":"string","display":true,"removed":false,"required":false,"displayName":"F&Q","defaultMatch":false,"canBeUsedToMatch":true}],"mappingMode":"defineBelow","matchingColumns":["Product Link"],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"id":"0bb1bd15-851a-4c01-9de1-5885b5e8eeb2","name":"Update Product Sheet","type":"n8n-nodes-base.googleSheetsTool","position":[980,360],"typeVersion":4.5,"credentials":{"googleSheetsOAuth2Api":{"id":"bdeAZgAgEmqpgnr1","name":"Google Sheets account"}}},{"parameters":{"promptType":"define","text":"={{ $json.messages[0].text.body }}","options":{"systemMessage":"You are a helpful and intelligent customer support assistant.\n\nYou have access to a Google Sheets tool that allows you to read any content from a specific sheet to gather necessary information.\nNever mention to the user that you accessed Google Sheets to retrieve any data.\n\nYour main responsibilities:\n\nUnderstand the user’s request or issue.\n\nIf the user is asking about a product, retrieve the relevant product name, price, and details as needed.\n\nDetermine whether the product price is a subscription or a one-time payment, based on the description.\n\nIf you detect that the user is facing a problem:\n\nIdentify and describe the problem clearly.\n\nPropose a practical and helpful solution.\n\nLog this interaction by adding a new row to the Google Sheet with the following columns:\n\nProblem\n\nSuggested Solution\n\nCategory (e.g., payment, login, access, delivery, technical issue, etc.)\n\nBe professional, concise, and empathetic in your responses.\nAlways aim to resolve the issue or provide the next best action."}},"id":"448388f0-2213-4aa4-a239-30dc74a34a2e","name":"AI Agent -  Customer Support Agent","type":"@n8n/n8n-nodes-langchain.agent","position":[680,700],"typeVersion":1.7},{"parameters":{"promptType":"define","text":"=My product description :  {{ $json['Product Description'] }}\n\nMy product link : {{ $json['Product Link'] }}","options":{"systemMessage":"You are a helpful and intelligent assistant.\n\nYou receive the text content of a product page.\n\nYour tasks are:\n\nExtract the product name.\n\nExtract the product price, and determine whether it is a subscription or a one-time payment.\n\nIdentify the product topic.\n\nExtract the most frequently asked questions (FAQs) related to the product.\n\nYou have access to a Google Sheets tool that allows you to update specific columns and cells.\n\nAlways add the following data to the same row as the product URL in the Google Sheet:\n\nProduct Name\n\nProduct Price (with subscription/one-time label)\n\nProduct Topic\n\nFAQs\n\nBe accurate, structured, and consistent when filling in the sheet.\nDo not mention Google Sheets in your responses."}},"id":"0480d8cb-0b71-44f0-833e-becec2fd10c7","name":"AI Agent - Enhance Product Details","type":"@n8n/n8n-nodes-langchain.agent","position":[720,80],"typeVersion":1.8},{"parameters":{"model":{"__rl":true,"mode":"list","value":"gpt-4o-mini"},"options":{}},"id":"663f93f1-bc4f-43f7-9da7-8aba9010a9c7","name":"OpenAI Model1","type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","position":[520,960],"typeVersion":1.2,"credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{"sessionIdType":"customKey","sessionKey":"={{ $json.messages[0].id }}","contextWindowLength":50},"id":"a3253e6e-88c3-4855-9813-dd89dec4816f","name":"Conversation Memory","type":"@n8n/n8n-nodes-langchain.memoryBufferWindow","position":[700,960],"typeVersion":1.3},{"parameters":{"documentId":{"__rl":true,"mode":"list","value":"1wa41S888Ya3sqEkBdzYiDq-5FOu_V30BOe-toX_78xQ","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1wa41S888Ya3sqEkBdzYiDq-5FOu_V30BOe-toX_78xQ/edit?usp=drivesdk","cachedResultName":"Product Sales - AI Agent WhatsApp"},"sheetName":{"__rl":true,"mode":"list","value":689245338,"cachedResultUrl":"https://docs.google.com/spreadsheets/d/1wa41S888Ya3sqEkBdzYiDq-5FOu_V30BOe-toX_78xQ/edit#gid=689245338","cachedResultName":"Products"},"options":{"dataLocationOnSheet":{"values":{"rangeDefinition":"detectAutomatically","readRowsUntil":"firstEmptyRow"}}}},"id":"19992031-5425-496c-9ce3-5b935bbc94b2","name":"Read Product Sheet","type":"n8n-nodes-base.googleSheetsTool","position":[860,960],"typeVersion":4.5,"credentials":{"googleSheetsOAuth2Api":{"id":"bdeAZgAgEmqpgnr1","name":"Google Sheets account"}}},{"parameters":{"operation":"append","documentId":{"__rl":true,"mode":"list","value":"1wa41S888Ya3sqEkBdzYiDq-5FOu_V30BOe-toX_78xQ","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1wa41S888Ya3sqEkBdzYiDq-5FOu_V30BOe-toX_78xQ/edit?usp=drivesdk","cachedResultName":"Product Sales - AI Agent WhatsApp"},"sheetName":{"__rl":true,"mode":"list","value":1725207764,"cachedResultUrl":"https://docs.google.com/spreadsheets/d/1wa41S888Ya3sqEkBdzYiDq-5FOu_V30BOe-toX_78xQ/edit#gid=1725207764","cachedResultName":"Customer Issues"},"columns":{"value":{"Category":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Category', ``, 'string') }}","Solution":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Solution', ``, 'string') }}","Support Problem":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Support_Problem', ``, 'string') }}"},"schema":[{"id":"Support Problem","type":"string","display":true,"required":false,"displayName":"Support Problem","defaultMatch":false,"canBeUsedToMatch":true},{"id":"Solution","type":"string","display":true,"required":false,"displayName":"Solution","defaultMatch":false,"canBeUsedToMatch":true},{"id":"Category","type":"string","display":true,"required":false,"displayName":"Category","defaultMatch":false,"canBeUsedToMatch":true}],"mappingMode":"defineBelow","matchingColumns":[],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"id":"b658f8fb-e1ba-4223-b031-ed1336731ab3","name":"Log Customer Issues","type":"n8n-nodes-base.googleSheetsTool","position":[1040,960],"typeVersion":4.5,"credentials":{"googleSheetsOAuth2Api":{"id":"bdeAZgAgEmqpgnr1","name":"Google Sheets account"}}}],"connections":{"OpenAI Model":{"ai_languageModel":[[{"node":"AI Agent - Enhance Product Details","type":"ai_languageModel","index":0}]]},"OpenAI Model1":{"ai_languageModel":[[{"node":"AI Agent -  Customer Support Agent","type":"ai_languageModel","index":0}]]},"Fetch HTML Page":{"main":[[{"node":"Clean HTML Content","type":"main","index":0}]]},"Check If Training":{"main":[[{"node":"Extract URL from Text","type":"main","index":0}],[{"node":"AI Agent -  Customer Support Agent","type":"main","index":0}]]},"Short-Term Memory":{"ai_memory":[[{"node":"AI Agent - Enhance Product Details","type":"ai_memory","index":0}]]},"Clean HTML Content":{"main":[[{"node":"Save Raw Product Info","type":"main","index":0}]]},"Read Product Sheet":{"ai_tool":[[{"node":"AI Agent -  Customer Support Agent","type":"ai_tool","index":0}]]},"Conversation Memory":{"ai_memory":[[{"node":"AI Agent -  Customer Support Agent","type":"ai_memory","index":0}]]},"Log Customer Issues":{"ai_tool":[[{"node":"AI Agent -  Customer Support Agent","type":"ai_tool","index":0}]]},"Update Product Sheet":{"ai_tool":[[{"node":"AI Agent - Enhance Product Details","type":"ai_tool","index":0}]]},"Extract URL from Text":{"main":[[{"node":"Fetch HTML Page","type":"main","index":0}]]},"Save Raw Product Info":{"main":[[{"node":"AI Agent - Enhance Product Details","type":"main","index":0}]]},"Incoming Message Trigger":{"main":[[{"node":"Check If Training","type":"main","index":0}]]},"AI Agent -  Customer Support Agent":{"main":[[{"node":"WhatsApp Business Cloud","type":"main","index":0}]]},"AI Agent - Enhance Product Details":{"main":[[{"node":"WhatsApp Business Cloud","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":null,"pinData":{},"versionId":"e83ca4a8-d940-44fd-8d98-72afb182c830","triggerCount":0,"tags":[],"shared":[{"createdAt":"2025-05-19T07:43:37.966Z","updatedAt":"2025-05-19T07:43:37.966Z","role":"workflow:owner","workflowId":"rZGgY8qUWNWdKgbL","projectId":"WbfPHUYYKS2tiNNo","project":{"createdAt":"2025-05-03T06:49:18.088Z","updatedAt":"2025-05-03T06:52:24.837Z","id":"WbfPHUYYKS2tiNNo","name":"charlie phan <scottyphan08@gmail.com>","type":"personal","icon":null,"description":null}}]},{"createdAt":"2025-05-19T07:46:49.247Z","updatedAt":"2025-05-29T09:59:04.993Z","id":"6k3Et9pmyCyoOKQS","name":"Vector Qdrant vector _Q&A","active":false,"isArchived":false,"nodes":[{"parameters":{},"id":"bf730aba-5c43-47c5-86c6-466330ba84b3","name":"When clicking ‘Test workflow’","type":"n8n-nodes-base.manualTrigger","position":[60,-360],"typeVersion":1},{"parameters":{"resource":"file","operation":"get","owner":{"__rl":true,"value":"vananhphan","mode":"name"},"repository":{"__rl":true,"value":"n8n_project","mode":"list","cachedResultName":"n8n_project","cachedResultUrl":"https://github.com/vananhphan/n8n_project"},"filePath":"electronics_products_list.xlsx","additionalParameters":{}},"id":"93c14fbf-3931-4501-bdc6-57a0d4d5a20a","name":"GitHub","type":"n8n-nodes-base.github","position":[280,-360],"typeVersion":1,"webhookId":"31755a11-aa01-4eb2-969e-d6fdcb738f89","credentials":{"githubApi":{"id":"04ftghVaK1lFgfKg","name":"GitHub account"}}},{"parameters":{"operation":"xlsx","options":{}},"id":"0cb8d8e0-233c-42f3-a4da-fe2f028b9ad4","name":"Extract from File","type":"n8n-nodes-base.extractFromFile","position":[440,-360],"typeVersion":1},{"parameters":{"model":"text-embedding-3-small","options":{}},"id":"a28eb784-41ec-4ca2-b814-2770ac1f01f0","name":"Embeddings OpenAI","type":"@n8n/n8n-nodes-langchain.embeddingsOpenAi","position":[1080,-180],"typeVersion":1,"credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{"jsonMode":"expressionData","jsonData":"={{ $json['Tên sản phẩm'] }}","options":{"metadata":{"metadataValues":[{"name":"MaSP","value":"={{ $json['Mã SP'] }}"},{"name":"Ten_SP","value":"={{ $json['Tên sản phẩm'] }}"},{"name":"Danhmuc","value":"={{ $json['Danh mục'] }}"},{"name":"Giabanngaythuong","value":"={{ $json['Giá bán ngày thường'] }}"},{"name":"Giabangiamgia","value":"={{ $json['Giá bán giảm giá'] }}"},{"name":"phantramgiamgia","value":"={{ $json['Phần trăm giảm giá'] }}"},{"name":"SLtonkho","value":"={{ $json['Số lượng tồn kho'] }}"},{"name":"Thongsokythuat","value":"={{ $json['Thông số kỹ thuật'] }}"},{"name":"Tinhnang","value":"={{ $json['Tính năng'] }}"}]}}},"id":"11e4f4bd-bcb0-4a8d-b409-c8b1a488664b","name":"Default Data Loader","type":"@n8n/n8n-nodes-langchain.documentDefaultDataLoader","position":[1280,-160],"typeVersion":1},{"parameters":{},"id":"fdecb659-5389-4902-9556-075d97fe2eba","name":"Token Splitter","type":"@n8n/n8n-nodes-langchain.textSplitterTokenSplitter","position":[1340,180],"typeVersion":1},{"parameters":{"mode":"insert","qdrantCollection":{"__rl":true,"value":"dienmay","mode":"id"},"options":{}},"id":"27335de1-4390-485c-b151-37937c54b55b","name":"Qdrant Vector Store","type":"@n8n/n8n-nodes-langchain.vectorStoreQdrant","position":[960,-460],"typeVersion":1,"credentials":{"qdrantApi":{"id":"RzFNlgEENHFNmlmD","name":"QdrantApi account"}}},{"parameters":{"options":{}},"id":"19077da5-5aac-4a4c-93ed-3195f1d96e90","name":"When chat message received","type":"@n8n/n8n-nodes-langchain.chatTrigger","position":[-220,340],"webhookId":"87b358c6-ca16-4f2d-ab64-3a8ad8902d8f","typeVersion":1.1},{"parameters":{"options":{}},"id":"96baff6d-fd83-4275-a211-3665a7eaef13","name":"OpenAI Chat Model","type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","position":[140,480],"typeVersion":1,"credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{},"id":"3a124f43-177a-4400-8c3e-a8c2c5394170","name":"Execute Workflow Trigger","type":"n8n-nodes-base.executeWorkflowTrigger","position":[700,860],"typeVersion":1},{"parameters":{"mode":"combine","combineBy":"combineAll","options":{}},"id":"341e3cd7-1948-4b1f-b842-f382d1ec21ca","name":"Merge","type":"n8n-nodes-base.merge","position":[1600,760],"typeVersion":3},{"parameters":{"fieldToSplitOut":"result","options":{}},"id":"8d791208-a132-4564-99ac-b30188611b3f","name":"Split Out","type":"n8n-nodes-base.splitOut","position":[2320,740],"typeVersion":1},{"parameters":{"fieldToSplitOut":"result.points","options":{}},"id":"b4685f1e-1bf6-4fc3-a71c-de0d44067610","name":"Split Out1","type":"n8n-nodes-base.splitOut","position":[2200,520],"typeVersion":1},{"parameters":{"mode":"combine","fieldsToMatchString":"id","options":{}},"id":"44ce1a6c-5908-4149-9b8e-af94d3b75099","name":"Merge1","type":"n8n-nodes-base.merge","position":[2580,660],"typeVersion":3},{"parameters":{"aggregate":"aggregateAllItemData","destinationFieldName":"response","options":{}},"id":"5e37f09b-a666-4a16-83ad-dc185b4d5cd0","name":"Aggregate","type":"n8n-nodes-base.aggregate","position":[3020,660],"typeVersion":1},{"parameters":{"promptType":"define","text":"={{ $json.body.chatInput }}","options":{"systemMessage":"=# System Prompt cho AI Agent Hỗ Trợ Khách Hàng Điện Máy\n\n## Vai Trò và Nhiệm Vụ\nBạn là một AI assistant chuyên nghiệp hỗ trợ khách hàng về các sản phẩm điện máy. Nhiệm vụ chính của bạn là:\n\n- Trả lời các câu hỏi về thông tin sản phẩm (thông số kỹ thuật, tính năng, giá cả)\n- Tư vấn về chương trình khuyến mãi và giảm giá\n- Kiểm tra tồn kho sản phẩm\n- Hỗ trợ so sánh sản phẩm\n\n## Nguyên Tắc Hoạt Động\n\n### 1. Nguồn Thông Tin Duy Nhất\n- **CHỈ** sử dụng thông tin từ Qdrant Vector Database\n- **KHÔNG** được sử dụng kiến thức bên ngoài hoặc tự suy đoán\n- Nếu không tìm thấy thông tin trong database, phải trả lời rõ ràng \"Tôi không có thông tin về [vấn đề khách hàng hỏi]\"\n\n### 2. Cấu Trúc Dữ Liệu Sản Phẩm\nMỗi sản phẩm trong database có các trường thông tin sau:\n```\n- MaSP: Mã sản phẩm\n- Ten_SP: Tên sản phẩm\n- Danhmuc: Danh mục sản phẩm\n- Giabanngaythuong: Giá bán thường\n- Giabangiamgia: Giá bán sau giảm giá\n- phantramgiamgia: Phần trăm giảm giá\n- SLtonkho: Số lượng tồn kho\n- Thongsokythuat: Thông số kỹ thuật\n- Tinhnang: Tính năng đặc biệt\n```\n\n## Hướng Dẫn Trả Lời\n\n### Khi Có Thông Tin Đầy Đủ:\n1. **Thông tin sản phẩm**: Cung cấp tên, mã SP, danh mục, thông số kỹ thuật, tính năng\n2. **Thông tin giá**: \n   - Hiển thị giá gốc và giá sau giảm (nếu có)\n   - Tính toán và hiển thị số tiền tiết kiệm\n   - Phần trăm giảm giá\n3. **Tình trạng tồn kho**: Thông báo số lượng còn lại\n4. **Format tiền tệ**: Sử dụng định dạng VNĐ (ví dụ: 52.990.000 VNĐ)\n\n### Khi Thiếu Thông Tin:\n- Trả lời trực tiếp: \"Tôi không có thông tin về [nội dung cụ thể]\"\n- Không suy đoán hoặc đưa ra thông tin không chắc chắn\n- Có thể đề xuất liên hệ bộ phận tư vấn nếu cần thiết\n\n### Ví Dụ Trả Lời Mẫu:\n\n**Khách hàng hỏi**: \"Cho tôi biết thông tin về laptop Dell XPS 15\"\n\n**AI trả lời**:\n```\n📱 **Dell XPS 15 9530** (Mã SP: LP-DELL-XPS15L520)\n🏷️ **Danh mục**: Laptop\n\n💰 **Giá bán**:\n- Giá gốc: 59.990.000 VNĐ\n- Giá khuyến mãi: 52.990.000 VNĐ\n- Tiết kiệm: 7.000.000 VNĐ (11.7%)\n\n🔧 **Thông số kỹ thuật**: Intel Core i9-13900H, 32GB RAM, 1TB SSD, RTX 4070\n\n✨ **Tính năng nổi bật**: InfinityEdge Display, Quad Speaker, Fingerprint\n\n📦 **Tồn kho**: 10 sản phẩm\n```\n\n## Ngôn Ngữ và Phong Cách\n- Sử dụng tiếng Việt tự nhiên, thân thiện\n- Tránh dùng thuật ngữ kỹ thuật phức tạp\n- Sử dụng emoji phù hợp để làm nổi bật thông tin\n- Luôn lịch sự và chuyên nghiệp\n\n## Xử Lý Các Tình Huống Đặc Biệt\n\n### Khách hàng hỏi so sánh sản phẩm:\n- Chỉ so sánh nếu có thông tin đầy đủ của cả hai sản phẩm\n- Nếu thiếu thông tin một trong hai, thông báo rõ ràng\n\n### Khách hàng hỏi về khuyến mãi:\n- Chỉ thông báo thông tin giảm giá có trong database\n- Không đưa ra thông tin về thời hạn khuyến mãi nếu không có\n\n### Khách hàng hỏi về giao hàng/bảo hành:\n- Trả lời \"Tôi không có thông tin về chính sách giao hàng/bảo hành. Vui lòng liên hệ bộ phận tư vấn để được hỗ trợ chi tiết.\"\n\n## Lưu Ý Quan Trọng\n- **TUYỆT ĐỐI KHÔNG** tự suy luận thông tin không có trong database\n- Luôn kiểm tra kỹ thông tin trước khi trả lời\n- Nếu nghi ngờ về tính chính xác, hãy báo \"không có thông tin\"\n- Ưu tiên trả lời ngắn gọn, súc tích nhưng đầy đủ thông tin cần thiết"}},"id":"07b13998-8b2f-4dbd-921e-08babcc5406c","name":"AI Agent","type":"@n8n/n8n-nodes-langchain.agent","position":[440,-20],"typeVersion":1.6},{"parameters":{"method":"POST","url":"https://api.openai.com/v1/embeddings","authentication":"predefinedCredentialType","nodeCredentialType":"openAiApi","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Authorization","value":"Bearer $OPENAI_API_KEY"}]},"sendBody":true,"bodyParameters":{"parameters":[{"name":"input","value":"={{ $json.query.positive_example }}"},{"name":"model","value":"text-embedding-3-small"}]},"options":{}},"id":"ca5e3242-6918-4174-9fc7-b65d711210d5","name":"Embedding Recommendation Request with Open AI","type":"n8n-nodes-base.httpRequest","position":[960,720],"typeVersion":4.2,"credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{"method":"POST","url":"https://api.openai.com/v1/embeddings","authentication":"predefinedCredentialType","nodeCredentialType":"openAiApi","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Authorization","value":"Bearer $OPENAI_API_KEY"}]},"sendBody":true,"bodyParameters":{"parameters":[{"name":"input","value":"={{ $json.query.negative_example }}"},{"name":"model","value":"text-embedding-3-small"}]},"options":{}},"id":"0667b672-86e4-430a-948c-77a5c7835ee2","name":"Embedding Anti-Recommendation Request with Open AI","type":"n8n-nodes-base.httpRequest","position":[980,920],"typeVersion":4.2,"credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{"assignments":{"assignments":[{"id":"01a28c9d-aeb1-48bb-8a73-f8bddbd73460","name":"positive_example","type":"array","value":"={{ $json.data[0].embedding }}"}]},"options":{}},"id":"5663670b-7d04-44bd-85ed-16a76ada69ef","name":"Extracting Embedding","type":"n8n-nodes-base.set","position":[1240,720],"typeVersion":3.4},{"parameters":{"assignments":{"assignments":[{"id":"01a28c9d-aeb1-48bb-8a73-f8bddbd73460","name":"negative_example","type":"array","value":"={{ $json.data[0].embedding }}"}]},"options":{}},"id":"237c9784-6ccd-4b95-8d97-ecad63aa539d","name":"Extracting Embedding1","type":"n8n-nodes-base.set","position":[1240,920],"typeVersion":3.4},{"parameters":{"method":"POST","url":"http://host.docker.internal:6333/collections/imdb/points/query","authentication":"predefinedCredentialType","nodeCredentialType":"qdrantApi","sendBody":true,"specifyBody":"json","jsonBody":"={\n  \"query\": {\n    \"recommend\": {\n      \"positive\": [[{{ $json.positive_example }}]],\n      \"negative\": [[{{ $json.negative_example }}]],\n      \"strategy\": \"average_vector\"\n    }\n  },\n  \"limit\":3\n}","options":{}},"id":"ef95656e-e400-491e-98a0-15adfe87b6af","name":"Calling Qdrant Recommendation API","type":"n8n-nodes-base.httpRequest","position":[1540,400],"typeVersion":4.2,"credentials":{"qdrantApi":{"id":"RzFNlgEENHFNmlmD","name":"QdrantApi account"}}},{"parameters":{"method":"POST","url":"http://host.docker.internal:6333/collections/imdb/points","authentication":"predefinedCredentialType","nodeCredentialType":"qdrantApi","sendBody":true,"specifyBody":"json","jsonBody":"={\n    \"ids\": [\"{{ $json.result.points[0].id }}\", \"{{ $json.result.points[1].id }}\", \"{{ $json.result.points[2].id }}\"],\n    \"with_payload\":true\n}","options":{}},"id":"f252637a-35fe-4347-91a1-b97da92737ea","name":"Retrieving Recommended Movies Meta Data","type":"n8n-nodes-base.httpRequest","position":[2120,720],"typeVersion":4.2,"credentials":{"qdrantApi":{"id":"RzFNlgEENHFNmlmD","name":"QdrantApi account"}}},{"parameters":{"assignments":{"assignments":[{"id":"b4b520a5-d0e2-4dcb-af9d-0b7748fd44d6","name":"movie_recommendation_score","type":"number","value":"={{ $json.score }}"},{"id":"c9f0982e-bd4e-484b-9eab-7e69e333f706","name":"movie_description","type":"string","value":"={{ $json.payload.content }}"},{"id":"7c7baf11-89cd-4695-9f37-13eca7e01163","name":"movie_name","type":"string","value":"={{ $json.payload.metadata.movie_name }}"},{"id":"1d1d269e-43c7-47b0-859b-268adf2dbc21","name":"movie_release_year","type":"string","value":"={{ $json.payload.metadata.release_year }}"}]},"options":{}},"id":"a6c5df9a-4420-40bc-9e9e-38b26339ba7c","name":"Selecting Fields Relevant for Agent","type":"n8n-nodes-base.set","position":[2800,660],"typeVersion":3.4},{"parameters":{"content":"Tool, calling Qdrant's recommendation API based on user's request, transformed by AI agent"},"id":"22475957-2da5-417c-b9e5-985ed1947f21","name":"Sticky Note","type":"n8n-nodes-base.stickyNote","position":[620,1040],"typeVersion":1},{"parameters":{"content":"Uploading data (movies and their descriptions) to Qdrant Vector Store\n"},"id":"f406255d-ae9c-4219-aadc-d2ce080323a0","name":"Sticky Note1","type":"n8n-nodes-base.stickyNote","position":[-260,-20],"typeVersion":1},{"parameters":{"maxItems":1000},"type":"n8n-nodes-base.limit","typeVersion":1,"position":[660,-360],"id":"55f17ace-4d4b-4aa8-a0ff-1f1c631a4a54","name":"Limit"},{"parameters":{"mode":"retrieve-as-tool","toolName":"Dienmay","toolDescription":"work with qdrant data","qdrantCollection":{"__rl":true,"value":"dienmay","mode":"list","cachedResultName":"dienmay"},"topK":10,"options":{}},"type":"@n8n/n8n-nodes-langchain.vectorStoreQdrant","typeVersion":1.1,"position":[780,380],"id":"b2f629ee-8afc-41b1-ad26-49683fc6f1b6","name":"Qdrant Vector Store1","credentials":{"qdrantApi":{"id":"RzFNlgEENHFNmlmD","name":"QdrantApi account"}}},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.embeddingsOpenAi","typeVersion":1.2,"position":[620,560],"id":"8f3883cc-ff72-4f4b-bf70-f4b1155cfe2a","name":"Embeddings OpenAI1","credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{"sessionIdType":"customKey","sessionKey":"={{ $json.body.chatInput }}","contextWindowLength":50},"type":"@n8n/n8n-nodes-langchain.memoryPostgresChat","typeVersion":1.3,"position":[440,380],"id":"371d0ae6-732b-4458-bc77-ea5a1be71649","name":"Postgres Chat Memory","credentials":{"postgres":{"id":"lPXyj3Ypf5YeZpp3","name":"Postgres account Local"}}},{"parameters":{"updates":["messages"],"options":{}},"type":"n8n-nodes-base.whatsAppTrigger","typeVersion":1,"position":[20,-140],"id":"00d62cc2-ea80-4c5d-8db3-6bc2ad86aa2a","name":"WhatsApp Trigger","webhookId":"71038ddb-a825-4b8f-903e-a9a27180e6e3","credentials":{"whatsAppTriggerApi":{"id":"eAPBkIYpcDDhH3ia","name":"WhatsApp OAuth account"}}},{"parameters":{"operation":"send","recipientPhoneNumber":"+84903148128","textBody":"=","additionalFields":{}},"type":"n8n-nodes-base.whatsApp","typeVersion":1,"position":[840,-260],"id":"139ddf9b-6159-4c3f-9f56-c93f53c4e9a1","name":"WhatsApp Business Cloud","webhookId":"6774ca38-da14-44bc-9efd-dd2a8d6cf6b5","credentials":{"whatsAppApi":{"id":"SFrmXY3KZLL8DC0M","name":"WhatsApp account"}}},{"parameters":{"httpMethod":"POST","path":"chatagent","responseMode":"responseNode","options":{}},"type":"n8n-nodes-base.webhook","typeVersion":2,"position":[40,120],"id":"6041fbbd-5e43-4497-959e-0ae76b5d81c7","name":"Webhook","webhookId":"49cb8ae8-e3d7-4c47-859e-1b683120ce97"},{"parameters":{"respondWith":"allIncomingItems","options":{}},"type":"n8n-nodes-base.respondToWebhook","typeVersion":1.2,"position":[900,0],"id":"6f2df61a-ef81-4ee3-875c-62d8be463909","name":"Respond to Webhook"}],"connections":{"Merge":{"main":[[{"node":"Calling Qdrant Recommendation API","type":"main","index":0}]]},"GitHub":{"main":[[{"node":"Extract from File","type":"main","index":0}]]},"Merge1":{"main":[[{"node":"Selecting Fields Relevant for Agent","type":"main","index":0}]]},"Split Out":{"main":[[{"node":"Merge1","type":"main","index":1}]]},"Split Out1":{"main":[[{"node":"Merge1","type":"main","index":0}]]},"Token Splitter":{"ai_textSplitter":[[{"node":"Default Data Loader","type":"ai_textSplitter","index":0}]]},"Embeddings OpenAI":{"ai_embedding":[[{"node":"Qdrant Vector Store","type":"ai_embedding","index":0}]]},"Extract from File":{"main":[[{"node":"Limit","type":"main","index":0}]]},"OpenAI Chat Model":{"ai_languageModel":[[{"node":"AI Agent","type":"ai_languageModel","index":0}]]},"Default Data Loader":{"ai_document":[[{"node":"Qdrant Vector Store","type":"ai_document","index":0}]]},"Extracting Embedding":{"main":[[{"node":"Merge","type":"main","index":0}]]},"Extracting Embedding1":{"main":[[{"node":"Merge","type":"main","index":1}]]},"Execute Workflow Trigger":{"main":[[{"node":"Embedding Recommendation Request with Open AI","type":"main","index":0},{"node":"Embedding Anti-Recommendation Request with Open AI","type":"main","index":0}]]},"When chat message received":{"main":[[]]},"Calling Qdrant Recommendation API":{"main":[[{"node":"Retrieving Recommended Movies Meta Data","type":"main","index":0},{"node":"Split Out1","type":"main","index":0}]]},"When clicking ‘Test workflow’":{"main":[[{"node":"GitHub","type":"main","index":0}]]},"Selecting Fields Relevant for Agent":{"main":[[{"node":"Aggregate","type":"main","index":0}]]},"Retrieving Recommended Movies Meta Data":{"main":[[{"node":"Split Out","type":"main","index":0}]]},"Embedding Recommendation Request with Open AI":{"main":[[{"node":"Extracting Embedding","type":"main","index":0}]]},"Embedding Anti-Recommendation Request with Open AI":{"main":[[{"node":"Extracting Embedding1","type":"main","index":0}]]},"Limit":{"main":[[{"node":"Qdrant Vector Store","type":"main","index":0}]]},"Qdrant Vector Store1":{"ai_tool":[[{"node":"AI Agent","type":"ai_tool","index":0}]]},"Embeddings OpenAI1":{"ai_embedding":[[{"node":"Qdrant Vector Store1","type":"ai_embedding","index":0}]]},"Postgres Chat Memory":{"ai_memory":[[{"node":"AI Agent","type":"ai_memory","index":0}]]},"WhatsApp Trigger":{"main":[[]]},"AI Agent":{"main":[[{"node":"Respond to Webhook","type":"main","index":0}]]},"Webhook":{"main":[[{"node":"AI Agent","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{"Execute Workflow Trigger":[{"json":{"query":{"negative_example":"horror bloody movie","positive_example":"romantic comedy"}}}],"Webhook":[{"json":{"headers":{"host":"pnjp-ai-demo.pnj.com.vn","x-real-ip":"10.10.22.83","x-forwarded-for":"10.10.22.83","x-forwarded-proto":"https","connection":"upgrade","content-length":"230","authorization":"Bearer ...","content-type":"application/json","accept":"*/*","accept-encoding":"gzip, deflate","user-agent":"Python/3.11 aiohttp/3.11.11"},"params":{},"query":{},"body":{"sessionId":"636dcc16-c4a9-4199-a517-a17d45aa6a69","chatInput":"cho tôi giá laptop dell","user":{"id":"121dbdad-9ff1-4f0f-a4f2-31d0f789248e","email":"scottyphan08@gmail.com","name":"charlie","role":"admin"}},"webhookUrl":"https://pnjp-ai-demo.pnj.com.vn/webhook/chatagent","executionMode":"production"}}]},"versionId":"f457aabd-39e7-4bde-8e28-2cb43c988e3f","triggerCount":3,"tags":[],"shared":[{"createdAt":"2025-05-19T07:46:49.247Z","updatedAt":"2025-05-19T07:46:49.247Z","role":"workflow:owner","workflowId":"6k3Et9pmyCyoOKQS","projectId":"WbfPHUYYKS2tiNNo","project":{"createdAt":"2025-05-03T06:49:18.088Z","updatedAt":"2025-05-03T06:52:24.837Z","id":"WbfPHUYYKS2tiNNo","name":"charlie phan <scottyphan08@gmail.com>","type":"personal","icon":null,"description":null}}]},{"createdAt":"2025-05-19T08:50:55.556Z","updatedAt":"2025-05-23T02:40:10.392Z","id":"QWGjsZjqF0Jk27yu","name":"Vector Qdrant vector _Q&A câu hỏi","active":false,"isArchived":false,"nodes":[{"parameters":{},"id":"0d5b61be-2fc0-4120-a6c3-6e53e6d64783","name":"When clicking ‘Test workflow’","type":"n8n-nodes-base.manualTrigger","position":[40,-160],"typeVersion":1},{"parameters":{"resource":"file","operation":"get","owner":{"__rl":true,"value":"vananhphan","mode":"name"},"repository":{"__rl":true,"value":"n8n_project","mode":"list","cachedResultName":"n8n_project","cachedResultUrl":"https://github.com/vananhphan/n8n_project"},"filePath":"knowledge_qa 2.xlsx","additionalParameters":{}},"id":"9577608d-2936-4145-a862-7783752b453d","name":"GitHub","type":"n8n-nodes-base.github","position":[260,-160],"typeVersion":1,"webhookId":"3209a305-aa44-492e-9de2-d003955c34dd","credentials":{"githubApi":{"id":"04ftghVaK1lFgfKg","name":"GitHub account"}}},{"parameters":{"operation":"xlsx","options":{}},"id":"f00efb67-e9d1-46d8-b6fa-457e5239a066","name":"Extract from File","type":"n8n-nodes-base.extractFromFile","position":[420,-160],"typeVersion":1},{"parameters":{"model":"text-embedding-3-small","options":{}},"id":"5bf5dda8-a808-48be-a165-629eb70b9dcc","name":"Embeddings OpenAI","type":"@n8n/n8n-nodes-langchain.embeddingsOpenAi","position":[780,20],"typeVersion":1,"credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{"jsonMode":"expressionData","jsonData":"={{ $('Extract from File').item.json.Answer }}","options":{"metadata":{"metadataValues":[{"name":"Question","value":"={{ $('Extract from File').item.json.Question }}"},{"name":"Answer","value":"={{ $('Extract from File').item.json.Answer }}"}]}}},"id":"db663958-b0f9-433e-b5a5-478aba87b54c","name":"Default Data Loader","type":"@n8n/n8n-nodes-langchain.documentDefaultDataLoader","position":[960,40],"typeVersion":1},{"parameters":{},"id":"6756f417-82b1-42c5-b1a5-619dc3c5da9d","name":"Token Splitter","type":"@n8n/n8n-nodes-langchain.textSplitterTokenSplitter","position":[1000,220],"typeVersion":1},{"parameters":{"mode":"insert","qdrantCollection":{"__rl":true,"value":"question_Answer01","mode":"id"},"options":{}},"id":"876ba988-56c7-4c19-a294-4c384f067644","name":"Qdrant Vector Store","type":"@n8n/n8n-nodes-langchain.vectorStoreQdrant","position":[980,-160],"typeVersion":1,"credentials":{"qdrantApi":{"id":"RzFNlgEENHFNmlmD","name":"QdrantApi account"}}},{"parameters":{"options":{}},"id":"73073427-4d14-4924-ab5e-43d9bd3bb47e","name":"When chat message received","type":"@n8n/n8n-nodes-langchain.chatTrigger","position":[-380,260],"webhookId":"86d95c20-1cf5-469e-8863-6aef64f02f2d","typeVersion":1.1},{"parameters":{"options":{}},"id":"bbc0014d-aa1d-4c03-a6d6-c8cba5490490","name":"OpenAI Chat Model","type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","position":[-160,400],"typeVersion":1,"credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{"name":"movie_recommender","description":"Call this tool to get a list of recommended movies from a vector database. ","workflowId":{"__rl":true,"value":"niJZ2rU7r9Bi7A0i","mode":"id"},"specifyInputSchema":true,"schemaType":"manual","inputSchema":"{\n\"type\": \"object\",\n\"properties\": {\n\t\"positive_example\": {\n      \"type\": \"string\",\n      \"description\": \"A string with a movie description matching the user's positive recommendation request\"\n    },\n    \"negative_example\": {\n      \"type\": \"string\",\n      \"description\": \"A string with a movie description matching the user's negative anti-recommendation reuqest\"\n    }\n}\n}"},"id":"f1b0bb22-589e-4b0a-9c12-c49874697f28","name":"Call n8n Workflow Tool","type":"@n8n/n8n-nodes-langchain.toolWorkflow","position":[640,560],"typeVersion":1.2},{"parameters":{},"id":"d9efa415-9404-42ea-b13b-7eb38c486ac3","name":"Window Buffer Memory","type":"@n8n/n8n-nodes-langchain.memoryBufferWindow","position":[100,360],"typeVersion":1.2},{"parameters":{},"id":"e779d152-725c-4a46-aa48-e263ea06923e","name":"Execute Workflow Trigger","type":"n8n-nodes-base.executeWorkflowTrigger","position":[700,860],"typeVersion":1},{"parameters":{"mode":"combine","combineBy":"combineAll","options":{}},"id":"6e489903-9b4b-461c-9d61-69780830732a","name":"Merge","type":"n8n-nodes-base.merge","position":[1600,760],"typeVersion":3},{"parameters":{"fieldToSplitOut":"result","options":{}},"id":"a6f0cb41-9313-49fb-aae7-e3a7e0938e11","name":"Split Out","type":"n8n-nodes-base.splitOut","position":[2320,740],"typeVersion":1},{"parameters":{"fieldToSplitOut":"result.points","options":{}},"id":"4503395e-0b28-45a2-a6fb-7e552d0de338","name":"Split Out1","type":"n8n-nodes-base.splitOut","position":[2200,520],"typeVersion":1},{"parameters":{"mode":"combine","fieldsToMatchString":"id","options":{}},"id":"fbf8e0f5-a3a5-4d0d-b5e6-1e19dcbe505b","name":"Merge1","type":"n8n-nodes-base.merge","position":[2580,660],"typeVersion":3},{"parameters":{"aggregate":"aggregateAllItemData","destinationFieldName":"response","options":{}},"id":"8066cdc1-d657-401d-bdea-0ee460a4184e","name":"Aggregate","type":"n8n-nodes-base.aggregate","position":[3020,660],"typeVersion":1},{"parameters":{"options":{"systemMessage":"// 1. SYSTEM PROMPT CẤU HÌNH NGHIÊM NGẶT\nconst SYSTEM_PROMPT = `\nBạn là một trợ lý AI chuyên nghiệp. Quan trọng nhất là bạn CHỈ được trả lời dựa trên thông tin được cung cấp trong CONTEXT dưới đây.\n\nQUY TẮC NGHIÊM NGẶT:\n1. CHỈ sử dụng thông tin từ CONTEXT được cung cấp\n2. KHÔNG sử dụng kiến thức tổng quát hay thông tin từ bên ngoài\n3. Nếu CONTEXT không chứa thông tin cần thiết, hãy nói \"Tôi không tìm thấy thông tin này trong cơ sở dữ liệu.\"\n4. KHÔNG đoán mò hay suy luận vượt quá thông tin có sẵn\n5. Luôn trích dẫn nguồn từ CONTEXT khi có thể\n\nTrả lời bằng tiếng Việt một cách rõ ràng và chính xác.\n`;\n"}},"id":"5028a094-5699-41c6-a4b7-d85635c2b21c","name":"AI Agent","type":"@n8n/n8n-nodes-langchain.agent","position":[120,40],"typeVersion":1.6},{"parameters":{"method":"POST","url":"https://api.openai.com/v1/embeddings","authentication":"predefinedCredentialType","nodeCredentialType":"openAiApi","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Authorization","value":"Bearer $OPENAI_API_KEY"}]},"sendBody":true,"bodyParameters":{"parameters":[{"name":"input","value":"={{ $json.query.positive_example }}"},{"name":"model","value":"text-embedding-3-small"}]},"options":{}},"id":"a78c9205-f917-4401-a472-c9dad8b9759b","name":"Embedding Recommendation Request with Open AI","type":"n8n-nodes-base.httpRequest","position":[960,720],"typeVersion":4.2,"credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{"method":"POST","url":"https://api.openai.com/v1/embeddings","authentication":"predefinedCredentialType","nodeCredentialType":"openAiApi","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Authorization","value":"Bearer $OPENAI_API_KEY"}]},"sendBody":true,"bodyParameters":{"parameters":[{"name":"input","value":"={{ $json.query.negative_example }}"},{"name":"model","value":"text-embedding-3-small"}]},"options":{}},"id":"00806849-09b3-4290-ac4a-518a585bdec2","name":"Embedding Anti-Recommendation Request with Open AI","type":"n8n-nodes-base.httpRequest","position":[980,920],"typeVersion":4.2,"credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{"assignments":{"assignments":[{"id":"01a28c9d-aeb1-48bb-8a73-f8bddbd73460","name":"positive_example","type":"array","value":"={{ $json.data[0].embedding }}"}]},"options":{}},"id":"3e54918c-2f9e-4a7d-9938-294ccb1f8c9a","name":"Extracting Embedding","type":"n8n-nodes-base.set","position":[1240,720],"typeVersion":3.4},{"parameters":{"assignments":{"assignments":[{"id":"01a28c9d-aeb1-48bb-8a73-f8bddbd73460","name":"negative_example","type":"array","value":"={{ $json.data[0].embedding }}"}]},"options":{}},"id":"0990c88a-fcca-45b6-bed4-19b95095b6ec","name":"Extracting Embedding1","type":"n8n-nodes-base.set","position":[1240,920],"typeVersion":3.4},{"parameters":{"method":"POST","url":"http://host.docker.internal:6333/collections/imdb/points/query","authentication":"predefinedCredentialType","nodeCredentialType":"qdrantApi","sendBody":true,"specifyBody":"json","jsonBody":"={\n  \"query\": {\n    \"recommend\": {\n      \"positive\": [[{{ $json.positive_example }}]],\n      \"negative\": [[{{ $json.negative_example }}]],\n      \"strategy\": \"average_vector\"\n    }\n  },\n  \"limit\":3\n}","options":{}},"id":"33f81b78-4902-47ea-91cd-a51fb9b8c80e","name":"Calling Qdrant Recommendation API","type":"n8n-nodes-base.httpRequest","position":[1540,400],"typeVersion":4.2,"credentials":{"qdrantApi":{"id":"RzFNlgEENHFNmlmD","name":"QdrantApi account"}}},{"parameters":{"method":"POST","url":"http://host.docker.internal:6333/collections/imdb/points","authentication":"predefinedCredentialType","nodeCredentialType":"qdrantApi","sendBody":true,"specifyBody":"json","jsonBody":"={\n    \"ids\": [\"{{ $json.result.points[0].id }}\", \"{{ $json.result.points[1].id }}\", \"{{ $json.result.points[2].id }}\"],\n    \"with_payload\":true\n}","options":{}},"id":"208175cf-2dd6-411c-8a2b-b8818a2fbca3","name":"Retrieving Recommended Movies Meta Data","type":"n8n-nodes-base.httpRequest","position":[2120,720],"typeVersion":4.2,"credentials":{"qdrantApi":{"id":"RzFNlgEENHFNmlmD","name":"QdrantApi account"}}},{"parameters":{"assignments":{"assignments":[{"id":"b4b520a5-d0e2-4dcb-af9d-0b7748fd44d6","name":"movie_recommendation_score","type":"number","value":"={{ $json.score }}"},{"id":"c9f0982e-bd4e-484b-9eab-7e69e333f706","name":"movie_description","type":"string","value":"={{ $json.payload.content }}"},{"id":"7c7baf11-89cd-4695-9f37-13eca7e01163","name":"movie_name","type":"string","value":"={{ $json.payload.metadata.movie_name }}"},{"id":"1d1d269e-43c7-47b0-859b-268adf2dbc21","name":"movie_release_year","type":"string","value":"={{ $json.payload.metadata.release_year }}"}]},"options":{}},"id":"ac4b347e-d698-4b45-a213-d25a1c0da46f","name":"Selecting Fields Relevant for Agent","type":"n8n-nodes-base.set","position":[2800,660],"typeVersion":3.4},{"parameters":{"content":"Tool, calling Qdrant's recommendation API based on user's request, transformed by AI agent"},"id":"e9721505-fed4-41ba-838a-2e5d161163df","name":"Sticky Note","type":"n8n-nodes-base.stickyNote","position":[620,1040],"typeVersion":1},{"parameters":{"content":"Uploading data (movies and their descriptions) to Qdrant Vector Store\n"},"id":"4d83519d-4ff8-4065-a8bc-29e61f8b90dd","name":"Sticky Note1","type":"n8n-nodes-base.stickyNote","position":[-260,-20],"typeVersion":1},{"parameters":{"maxItems":1000},"type":"n8n-nodes-base.limit","typeVersion":1,"position":[600,-380],"id":"a735d5ac-0260-492f-9a76-eba32bddcaac","name":"Limit"},{"parameters":{"mode":"retrieve-as-tool","toolName":"QA","toolDescription":"Work with data collection in Qdrant","qdrantCollection":{"__rl":true,"value":"question_Answer01","mode":"list","cachedResultName":"question_Answer01"},"options":{}},"type":"@n8n/n8n-nodes-langchain.vectorStoreQdrant","typeVersion":1.1,"position":[520,300],"id":"6c212c0e-f147-47cb-b971-92408823e0e9","name":"Qdrant Vector Store1","credentials":{"qdrantApi":{"id":"RzFNlgEENHFNmlmD","name":"QdrantApi account"}}},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.embeddingsOpenAi","typeVersion":1.2,"position":[520,500],"id":"372491da-167e-4d99-b1c7-1c61affe2ac7","name":"Embeddings OpenAI1","credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{},"type":"@n8n/n8n-nodes-langchain.memoryPostgresChat","typeVersion":1.3,"position":[220,260],"id":"97b83dd6-0314-4438-8b9d-af6cb8ab2b50","name":"Postgres Chat Memory","credentials":{"postgres":{"id":"lPXyj3Ypf5YeZpp3","name":"Postgres account Local"}}}],"connections":{"Merge":{"main":[[{"node":"Calling Qdrant Recommendation API","type":"main","index":0}]]},"GitHub":{"main":[[{"node":"Extract from File","type":"main","index":0}]]},"Merge1":{"main":[[{"node":"Selecting Fields Relevant for Agent","type":"main","index":0}]]},"Split Out":{"main":[[{"node":"Merge1","type":"main","index":1}]]},"Split Out1":{"main":[[{"node":"Merge1","type":"main","index":0}]]},"Token Splitter":{"ai_textSplitter":[[{"node":"Default Data Loader","type":"ai_textSplitter","index":0}]]},"Embeddings OpenAI":{"ai_embedding":[[{"node":"Qdrant Vector Store","type":"ai_embedding","index":0}]]},"Extract from File":{"main":[[{"node":"Qdrant Vector Store","type":"main","index":0}]]},"OpenAI Chat Model":{"ai_languageModel":[[{"node":"AI Agent","type":"ai_languageModel","index":0}]]},"Default Data Loader":{"ai_document":[[{"node":"Qdrant Vector Store","type":"ai_document","index":0}]]},"Extracting Embedding":{"main":[[{"node":"Merge","type":"main","index":0}]]},"Window Buffer Memory":{"ai_memory":[[]]},"Extracting Embedding1":{"main":[[{"node":"Merge","type":"main","index":1}]]},"Call n8n Workflow Tool":{"ai_tool":[[]]},"Execute Workflow Trigger":{"main":[[{"node":"Embedding Recommendation Request with Open AI","type":"main","index":0},{"node":"Embedding Anti-Recommendation Request with Open AI","type":"main","index":0}]]},"When chat message received":{"main":[[{"node":"AI Agent","type":"main","index":0}]]},"Calling Qdrant Recommendation API":{"main":[[{"node":"Retrieving Recommended Movies Meta Data","type":"main","index":0},{"node":"Split Out1","type":"main","index":0}]]},"When clicking ‘Test workflow’":{"main":[[{"node":"GitHub","type":"main","index":0}]]},"Selecting Fields Relevant for Agent":{"main":[[{"node":"Aggregate","type":"main","index":0}]]},"Retrieving Recommended Movies Meta Data":{"main":[[{"node":"Split Out","type":"main","index":0}]]},"Embedding Recommendation Request with Open AI":{"main":[[{"node":"Extracting Embedding","type":"main","index":0}]]},"Embedding Anti-Recommendation Request with Open AI":{"main":[[{"node":"Extracting Embedding1","type":"main","index":0}]]},"Limit":{"main":[[]]},"Qdrant Vector Store1":{"ai_tool":[[{"node":"AI Agent","type":"ai_tool","index":0}]]},"Embeddings OpenAI1":{"ai_embedding":[[{"node":"Qdrant Vector Store1","type":"ai_embedding","index":0}]]},"Postgres Chat Memory":{"ai_memory":[[{"node":"AI Agent","type":"ai_memory","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{"Execute Workflow Trigger":[{"json":{"query":{"negative_example":"horror bloody movie","positive_example":"romantic comedy"}}}]},"versionId":"bba603c3-185c-4527-a647-4effe1fd8865","triggerCount":0,"tags":[],"shared":[{"createdAt":"2025-05-19T08:50:55.556Z","updatedAt":"2025-05-19T08:50:55.556Z","role":"workflow:owner","workflowId":"QWGjsZjqF0Jk27yu","projectId":"WbfPHUYYKS2tiNNo","project":{"createdAt":"2025-05-03T06:49:18.088Z","updatedAt":"2025-05-03T06:52:24.837Z","id":"WbfPHUYYKS2tiNNo","name":"charlie phan <scottyphan08@gmail.com>","type":"personal","icon":null,"description":null}}]},{"createdAt":"2025-05-20T04:26:29.414Z","updatedAt":"2025-05-20T05:05:28.691Z","id":"g9zXrHtJQRYwPFhA","name":"Finance Report","active":false,"isArchived":false,"nodes":[{"parameters":{"content":"## Step 2: Setup the Q&A \n### The incoming message from the webhook is queried from the Supabase Vector Store.  The response is provided in the response webhook.  ","height":733.5099670584011,"width":903.0896125323785,"color":6},"id":"b25bb89c-9af8-4ce2-bf99-d11f12db7b1b","name":"Sticky Note1","type":"n8n-nodes-base.stickyNote","position":[1820,100],"typeVersion":1},{"parameters":{},"id":"db41d719-1176-4706-9c57-3a30325f28ac","name":"When clicking \"Execute Workflow\"","type":"n8n-nodes-base.manualTrigger","position":[540,240],"typeVersion":1},{"parameters":{"operation":"download","fileId":{"__rl":true,"mode":"list","value":"1LZezppYrWpMStr4qJXtoIX-Dwzvgehll","cachedResultUrl":"https://drive.google.com/file/d/1LZezppYrWpMStr4qJXtoIX-Dwzvgehll/view?usp=drivesdk","cachedResultName":"crowdstrike.pdf"},"options":{}},"id":"48e3982e-13de-45b2-8a51-ad7cdde43006","name":"Google Drive","type":"n8n-nodes-base.googleDrive","position":[840,240],"typeVersion":3,"credentials":{"googleDriveOAuth2Api":{"id":"XDqLv6T2wJMb4j1U","name":"Google Drive account pnjp"}}},{"parameters":{"content":"## Step 1: Upserting the PDF\n### Fetch file from Google Drive, split it into chunks and insert into Supabase index\n\n","height":732.3675002130781,"width":772.0680602743597,"color":6},"id":"7f7c5663-50d4-4572-9c2b-49accc210f92","name":"Sticky Note","type":"n8n-nodes-base.stickyNote","position":[800,100],"typeVersion":1},{"parameters":{"content":"## Start here: Step-by Step Youtube Tutorial :star:\n\n[![Building an AI Crew to Analyze Financial Data with CrewAI and n8n](https://img.youtube.com/vi/pMvizUx5n1g/sddefault.jpg)](https://www.youtube.com/watch?v=pMvizUx5n1g)\n","height":726.4452519516944,"width":710.9124489067698,"color":6},"id":"fbe027a6-73ad-4391-b35a-b6f5a443426b","name":"Sticky Note2","type":"n8n-nodes-base.stickyNote","position":[-300,100],"typeVersion":1},{"parameters":{"dataType":"binary","options":{"splitPages":true}},"id":"262c154e-c541-4746-9c65-e24dc34102e6","name":"Default Data Loader","type":"@n8n/n8n-nodes-langchain.documentDefaultDataLoader","position":[1100,420],"typeVersion":1},{"parameters":{"chunkSize":3000,"chunkOverlap":200,"options":{}},"id":"1ac1c15e-f112-479a-b720-789d10fd5541","name":"Recursive Character Text Splitter1","type":"@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter","position":[1100,560],"typeVersion":1},{"parameters":{"mode":"insert","qdrantCollection":{"__rl":true,"mode":"id","value":"crowd"},"options":{}},"id":"383e1393-1a77-4fc6-be4e-2a5fcf3fa5c6","name":"Qdrant Vector Store","type":"@n8n/n8n-nodes-langchain.vectorStoreQdrant","position":[1180,240],"typeVersion":1.1,"credentials":{"qdrantApi":{"id":"RzFNlgEENHFNmlmD","name":"QdrantApi account"}}},{"parameters":{"options":{}},"id":"f4e04947-b9f0-4427-b0e0-f7cbd5b3f339","name":"When chat message received","type":"@n8n/n8n-nodes-langchain.chatTrigger","position":[1880,220],"webhookId":"551107fb-b349-4e2b-a888-febe5e282734","typeVersion":1.1},{"parameters":{"httpMethod":"POST","path":"19f5499a-3083-4783-93a0-e8ed76a9f742","responseMode":"responseNode","options":{}},"id":"1793f8db-43bb-48ed-9ffa-565e88b79831","name":"Webhook","type":"n8n-nodes-base.webhook","position":[1880,420],"webhookId":"55b825ad-8987-4618-ae92-d9b08966324b","typeVersion":2},{"parameters":{"promptType":"define","text":"={{ $json.chatInput || $json.body.input }}","options":{}},"id":"adceff14-213b-4e62-aafc-24a3c37dcdad","name":"Retrieval QA Chain","type":"@n8n/n8n-nodes-langchain.chainRetrievalQa","position":[2120,220],"typeVersion":1.5},{"parameters":{"topK":5},"id":"55032ee4-c01f-45e0-bc6a-7a0f2879ac54","name":"Vector Store Retriever","type":"@n8n/n8n-nodes-langchain.retrieverVectorStore","position":[2280,420],"typeVersion":1},{"parameters":{"qdrantCollection":{"__rl":true,"value":"={{ $json.body.company }}","mode":"id"},"options":{}},"id":"0a5a60d2-2e8a-47a9-a7a3-9372693b173a","name":"Qdrant Vector Store1","type":"@n8n/n8n-nodes-langchain.vectorStoreQdrant","position":[2240,560],"typeVersion":1.1,"credentials":{"qdrantApi":{"id":"RzFNlgEENHFNmlmD","name":"QdrantApi account"}}},{"parameters":{"model":{"__rl":true,"mode":"list","value":"gpt-4o-mini"},"options":{}},"id":"c43f3e7c-e4e1-448f-a887-c06ed44a2a02","name":"OpenAI Chat Model","type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","position":[2120,440],"typeVersion":1.2,"credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{"options":{}},"id":"5ab3990a-1480-413c-8fc9-e7f78edc36de","name":"Embeddings OpenAI1","type":"@n8n/n8n-nodes-langchain.embeddingsOpenAi","position":[2220,680],"typeVersion":1.2,"credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{"options":{}},"id":"51c137e2-a908-48a1-9b65-454fcdc20ab5","name":"Embeddings OpenAI","type":"@n8n/n8n-nodes-langchain.embeddingsOpenAi","position":[1400,420],"typeVersion":1.2,"credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{"respondWith":"text","responseBody":"={{ $json.response.text }}","options":{}},"id":"9ec19f38-c5db-4463-b3cd-2c1cc9cdc1b5","name":"Respond to Webhook","type":"n8n-nodes-base.respondToWebhook","position":[2540,220],"typeVersion":1.1}],"connections":{"Webhook":{"main":[[{"node":"Retrieval QA Chain","type":"main","index":0}]]},"Google Drive":{"main":[[{"node":"Qdrant Vector Store","type":"main","index":0}]]},"Embeddings OpenAI":{"ai_embedding":[[{"node":"Qdrant Vector Store","type":"ai_embedding","index":0}]]},"OpenAI Chat Model":{"ai_languageModel":[[{"node":"Retrieval QA Chain","type":"ai_languageModel","index":0}]]},"Embeddings OpenAI1":{"ai_embedding":[[{"node":"Qdrant Vector Store1","type":"ai_embedding","index":0}]]},"Retrieval QA Chain":{"main":[[{"node":"Respond to Webhook","type":"main","index":0}]]},"Default Data Loader":{"ai_document":[[{"node":"Qdrant Vector Store","type":"ai_document","index":0}]]},"Qdrant Vector Store1":{"ai_vectorStore":[[]]},"Vector Store Retriever":{"ai_retriever":[[{"node":"Retrieval QA Chain","type":"ai_retriever","index":0}]]},"When chat message received":{"main":[[{"node":"Retrieval QA Chain","type":"main","index":0}]]},"When clicking \"Execute Workflow\"":{"main":[[{"node":"Google Drive","type":"main","index":0}]]},"Recursive Character Text Splitter1":{"ai_textSplitter":[[{"node":"Default Data Loader","type":"ai_textSplitter","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"ff2847f6-5719-4ccb-9f34-c708f775e331","triggerCount":0,"tags":[],"shared":[{"createdAt":"2025-05-20T04:26:29.414Z","updatedAt":"2025-05-20T04:26:29.414Z","role":"workflow:owner","workflowId":"g9zXrHtJQRYwPFhA","projectId":"WbfPHUYYKS2tiNNo","project":{"createdAt":"2025-05-03T06:49:18.088Z","updatedAt":"2025-05-03T06:52:24.837Z","id":"WbfPHUYYKS2tiNNo","name":"charlie phan <scottyphan08@gmail.com>","type":"personal","icon":null,"description":null}}]},{"createdAt":"2025-05-20T08:13:36.749Z","updatedAt":"2025-05-20T08:13:36.749Z","id":"ZMYwoqVBSRmKus34","name":"My workflow 6","active":false,"isArchived":false,"nodes":[{"parameters":{},"id":"bf4e3e38-c6d8-4894-b166-738d0e1aeb97","name":"When clicking \"Test workflow\"","type":"n8n-nodes-base.manualTrigger","typeVersion":1,"position":[0,0]},{"parameters":{"url":"https://bitcoin.org/bitcoin.pdf","options":{}},"id":"00b2f413-db10-4f8f-bf10-6f214ec50a1d","name":"HTTP Request","type":"n8n-nodes-base.httpRequest","typeVersion":4.1,"position":[220,0]},{"parameters":{"operation":"pdf","options":{}},"id":"c93c0f1e-578c-431a-97cc-ed202731c85d","name":"Extract from File","type":"n8n-nodes-base.extractFromFile","typeVersion":1,"position":[440,0]},{"parameters":{"fieldToSplitOut":"text","options":{}},"id":"7b2b4efc-9536-43ee-bbee-d8a19d6e33b5","name":"Split Out","type":"n8n-nodes-base.splitOut","typeVersion":1,"position":[880,0]},{"parameters":{"model":"text-embedding-3-small","options":{"stripNewLines":true}},"id":"cbfa0ef9-3625-4725-a06c-f8af016f00c0","name":"Embeddings OpenAI","type":"@n8n/n8n-nodes-langchain.embeddingsOpenAi","typeVersion":1,"position":[1460,180],"credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{"jsonMode":"expressionData","jsonData":"=Chunk:\n{{ $('Split Out').item.json.text }}\n\nChunk Summary:\n{{ $json.text }}","options":{}},"id":"5ab1f372-fbd6-41b0-a6f4-9459d5fce908","name":"Default Data Loader","type":"@n8n/n8n-nodes-langchain.documentDefaultDataLoader","typeVersion":1,"position":[1600,180]},{"parameters":{"chunkSize":4000},"id":"a4b0ce46-0ac0-4b0c-8fb0-53c2bccd326e","name":"Token Splitter","type":"@n8n/n8n-nodes-langchain.textSplitterTokenSplitter","typeVersion":1,"position":[1600,340]},{"parameters":{"promptType":"define","text":"=Please write a concise summary of the following document chunk:\n\n {{ $json.text }}"},"id":"2f5c6ec8-4b2d-4573-b023-c2dd64f5b6be","name":"Summarize Chunk","type":"@n8n/n8n-nodes-langchain.chainLlm","typeVersion":1.4,"position":[1120,0]},{"parameters":{"assignments":{"assignments":[{"id":"f2306385-ae09-4016-bc4b-1ff0ce64ea1a","name":"text","value":"={{ $json.text.split('\\n\\n') }}","type":"array"}]},"options":{}},"id":"ce3a724b-a442-44b6-99da-a921f7c1d059","name":"Chunk Text","type":"n8n-nodes-base.set","typeVersion":3.3,"position":[660,0]},{"parameters":{"mode":"insert","memoryKey":"btc_store"},"id":"783926b1-b05f-4d1f-903f-50740c36b345","name":"In-Memory Vector Store","type":"@n8n/n8n-nodes-langchain.vectorStoreInMemory","typeVersion":1,"position":[1520,0]},{"parameters":{"model":{"__rl":true,"mode":"list","value":"gpt-4o-mini"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[1220,220],"id":"a3014b80-16d2-4af5-aa59-2baf3f50896b","name":"OpenAI Chat Model","credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}}],"connections":{"When clicking \"Test workflow\"":{"main":[[{"node":"HTTP Request","type":"main","index":0}]]},"HTTP Request":{"main":[[{"node":"Extract from File","type":"main","index":0}]]},"Extract from File":{"main":[[{"node":"Chunk Text","type":"main","index":0}]]},"Split Out":{"main":[[{"node":"Summarize Chunk","type":"main","index":0}]]},"Embeddings OpenAI":{"ai_embedding":[[{"node":"In-Memory Vector Store","type":"ai_embedding","index":0}]]},"Default Data Loader":{"ai_document":[[{"node":"In-Memory Vector Store","type":"ai_document","index":0}]]},"Token Splitter":{"ai_textSplitter":[[{"node":"Default Data Loader","type":"ai_textSplitter","index":0}]]},"Summarize Chunk":{"main":[[{"node":"In-Memory Vector Store","type":"main","index":0}]]},"Chunk Text":{"main":[[{"node":"Split Out","type":"main","index":0}]]},"OpenAI Chat Model":{"ai_languageModel":[[{"node":"Summarize Chunk","type":"ai_languageModel","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"f33ae9a5-d6e5-4cae-8292-4b2ef5b9ebc7","triggerCount":0,"tags":[],"shared":[{"createdAt":"2025-05-20T08:13:36.749Z","updatedAt":"2025-05-20T08:13:36.749Z","role":"workflow:owner","workflowId":"ZMYwoqVBSRmKus34","projectId":"WbfPHUYYKS2tiNNo","project":{"createdAt":"2025-05-03T06:49:18.088Z","updatedAt":"2025-05-03T06:52:24.837Z","id":"WbfPHUYYKS2tiNNo","name":"charlie phan <scottyphan08@gmail.com>","type":"personal","icon":null,"description":null}}]},{"createdAt":"2025-05-20T08:26:04.064Z","updatedAt":"2025-05-23T02:27:39.093Z","id":"Et6Be96J8HnUzoF9","name":"Vector Qdrant vector _Q&A copy","active":false,"isArchived":false,"nodes":[{"parameters":{},"id":"5eee8b11-6a8c-479e-a2eb-3c8422aec64a","name":"When clicking ‘Test workflow’","type":"n8n-nodes-base.manualTrigger","position":[40,-160],"typeVersion":1},{"parameters":{"resource":"file","operation":"get","owner":{"__rl":true,"value":"vananhphan","mode":"name"},"repository":{"__rl":true,"value":"n8n_project","mode":"list","cachedResultName":"n8n_project","cachedResultUrl":"https://github.com/vananhphan/n8n_project"},"filePath":"electronics_products_list.xlsx","additionalParameters":{},"path":"c5524c4d-a26b-4039-a067-efa887f19a87"},"id":"df888985-3e2b-49b5-8aa6-8bfd82555e26","name":"GitHub","type":"n8n-nodes-base.github","position":[260,-160],"typeVersion":1,"webhookId":"c5524c4d-a26b-4039-a067-efa887f19a87","credentials":{"githubApi":{"id":"04ftghVaK1lFgfKg","name":"GitHub account"}}},{"parameters":{"operation":"xlsx","options":{}},"id":"f4e769b4-cdc9-4909-b30e-9620cb9bbed1","name":"Extract from File","type":"n8n-nodes-base.extractFromFile","position":[420,-160],"typeVersion":1},{"parameters":{"model":"text-embedding-3-small","options":{}},"id":"55784c41-35e8-499c-9b98-3d478d6cb02d","name":"Embeddings OpenAI","type":"@n8n/n8n-nodes-langchain.embeddingsOpenAi","position":[780,20],"typeVersion":1,"credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{"jsonMode":"expressionData","jsonData":"={{ $json['Tên sản phẩm'] }}","options":{"metadata":{"metadataValues":[{"name":"MaSP","value":"={{ $json['Mã SP'] }}"},{"name":"Ten_SP","value":"={{ $json['Tên sản phẩm'] }}"},{"name":"Danhmuc","value":"={{ $json['Danh mục'] }}"},{"name":"Giabanngaythuong","value":"={{ $json['Giá bán ngày thường'] }}"},{"name":"Giabangiamgia","value":"={{ $json['Giá bán giảm giá'] }}"},{"name":"phantramgiamgia","value":"={{ $json['Phần trăm giảm giá'] }}"},{"name":"SLtonkho","value":"={{ $json['Số lượng tồn kho'] }}"},{"name":"Thongsokythuat","value":"={{ $json['Thông số kỹ thuật'] }}"},{"name":"Tinhnang","value":"={{ $json['Tính năng'] }}"}]}}},"id":"b336416a-fb1d-4123-9bca-0301bd313766","name":"Default Data Loader","type":"@n8n/n8n-nodes-langchain.documentDefaultDataLoader","position":[960,40],"typeVersion":1},{"parameters":{},"id":"f2822a9e-11c8-46b6-93f6-ef173bb8bf3e","name":"Token Splitter","type":"@n8n/n8n-nodes-langchain.textSplitterTokenSplitter","position":[1000,220],"typeVersion":1},{"parameters":{"mode":"insert","qdrantCollection":{"__rl":true,"value":"dienmay","mode":"id"},"options":{}},"id":"33664b1b-7e19-4307-b580-f955014b14a9","name":"Qdrant Vector Store","type":"@n8n/n8n-nodes-langchain.vectorStoreQdrant","position":[980,-160],"typeVersion":1,"credentials":{"qdrantApi":{"id":"RzFNlgEENHFNmlmD","name":"QdrantApi account"}}},{"parameters":{"options":{},"path":"7e88c72a-f11b-4312-9570-f12a27e03794"},"id":"e007f3c0-be1e-46ca-a91f-66b437fe3d3b","name":"When chat message received","type":"@n8n/n8n-nodes-langchain.chatTrigger","position":[-20,400],"webhookId":"7e88c72a-f11b-4312-9570-f12a27e03794","typeVersion":1.1},{"parameters":{"options":{}},"id":"c69cbaa8-d1ee-4328-a34a-ee3beeaf6209","name":"OpenAI Chat Model","type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","position":[100,600],"typeVersion":1,"credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{"name":"movie_recommender","description":"Call this tool to get a list of recommended movies from a vector database. ","workflowId":{"__rl":true,"value":"niJZ2rU7r9Bi7A0i","mode":"id"},"specifyInputSchema":true,"schemaType":"manual","inputSchema":"{\n\"type\": \"object\",\n\"properties\": {\n\t\"positive_example\": {\n      \"type\": \"string\",\n      \"description\": \"A string with a movie description matching the user's positive recommendation request\"\n    },\n    \"negative_example\": {\n      \"type\": \"string\",\n      \"description\": \"A string with a movie description matching the user's negative anti-recommendation reuqest\"\n    }\n}\n}"},"id":"e4437159-5ba7-4668-bd8c-90d620e5b3c8","name":"Call n8n Workflow Tool","type":"@n8n/n8n-nodes-langchain.toolWorkflow","position":[880,580],"typeVersion":1.2},{"parameters":{},"id":"8d0fb8de-c7b4-4e5d-92c2-108e1115ee47","name":"Window Buffer Memory","type":"@n8n/n8n-nodes-langchain.memoryBufferWindow","position":[360,600],"typeVersion":1.2},{"parameters":{},"id":"91a12490-c4a1-4ab9-96bb-2b8a1e480629","name":"Execute Workflow Trigger","type":"n8n-nodes-base.executeWorkflowTrigger","position":[700,860],"typeVersion":1},{"parameters":{"mode":"combine","combineBy":"combineAll","options":{}},"id":"280f640e-9e14-4661-8d4e-9256959e273e","name":"Merge","type":"n8n-nodes-base.merge","position":[1600,760],"typeVersion":3},{"parameters":{"fieldToSplitOut":"result","options":{}},"id":"1f3962d7-92a6-45e3-af6b-4a2c606a1883","name":"Split Out","type":"n8n-nodes-base.splitOut","position":[2320,740],"typeVersion":1},{"parameters":{"fieldToSplitOut":"result.points","options":{}},"id":"652037a3-930b-4c6d-95f4-9490f1276442","name":"Split Out1","type":"n8n-nodes-base.splitOut","position":[2200,520],"typeVersion":1},{"parameters":{"mode":"combine","fieldsToMatchString":"id","options":{}},"id":"48fcab9c-f9dd-4dab-9a88-d2a358fc1844","name":"Merge1","type":"n8n-nodes-base.merge","position":[2580,660],"typeVersion":3},{"parameters":{"aggregate":"aggregateAllItemData","destinationFieldName":"response","options":{}},"id":"13f193ba-08b8-4a16-9da0-90f0ad6bf677","name":"Aggregate","type":"n8n-nodes-base.aggregate","position":[3020,660],"typeVersion":1},{"parameters":{"options":{"systemMessage":"=// Improved prompt construction with context management\nfunction createPrompt(query, retrievedDocs) {\n  const context = retrievedDocs\n    .map(doc => `[Document ${doc.metadata.source}]: ${doc.content}`)\n    .join('\\n\\n');\n  \n  return `\nYou are a helpful assistant answering questions based on the provided knowledge base.\nBase your answer ONLY on the following context. If you can't find the answer in the context, say \"I don't have enough information about this topic.\"\n\nCONTEXT:\n${context}\n\nQUESTION: ${query}\n\nANSWER:`;\n}"}},"id":"e7cda0ae-26c3-4b3c-81e0-da9c3d55ff97","name":"AI Agent","type":"@n8n/n8n-nodes-langchain.agent","position":[360,280],"typeVersion":1.6},{"parameters":{"method":"POST","url":"https://api.openai.com/v1/embeddings","authentication":"predefinedCredentialType","nodeCredentialType":"openAiApi","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Authorization","value":"Bearer $OPENAI_API_KEY"}]},"sendBody":true,"bodyParameters":{"parameters":[{"name":"input","value":"={{ $json.query.positive_example }}"},{"name":"model","value":"text-embedding-3-small"}]},"options":{}},"id":"83b24fc8-cca9-4832-a9da-829a6aca997b","name":"Embedding Recommendation Request with Open AI","type":"n8n-nodes-base.httpRequest","position":[960,720],"typeVersion":4.2,"credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{"method":"POST","url":"https://api.openai.com/v1/embeddings","authentication":"predefinedCredentialType","nodeCredentialType":"openAiApi","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Authorization","value":"Bearer $OPENAI_API_KEY"}]},"sendBody":true,"bodyParameters":{"parameters":[{"name":"input","value":"={{ $json.query.negative_example }}"},{"name":"model","value":"text-embedding-3-small"}]},"options":{}},"id":"1c32ce2b-d441-48a2-b169-b52a7489b79a","name":"Embedding Anti-Recommendation Request with Open AI","type":"n8n-nodes-base.httpRequest","position":[980,920],"typeVersion":4.2,"credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{"assignments":{"assignments":[{"id":"01a28c9d-aeb1-48bb-8a73-f8bddbd73460","name":"positive_example","type":"array","value":"={{ $json.data[0].embedding }}"}]},"options":{}},"id":"0f217a98-1335-4205-9ada-18f0c6221430","name":"Extracting Embedding","type":"n8n-nodes-base.set","position":[1240,720],"typeVersion":3.4},{"parameters":{"assignments":{"assignments":[{"id":"01a28c9d-aeb1-48bb-8a73-f8bddbd73460","name":"negative_example","type":"array","value":"={{ $json.data[0].embedding }}"}]},"options":{}},"id":"483365fc-7047-464c-a63a-d1e5f2f277d3","name":"Extracting Embedding1","type":"n8n-nodes-base.set","position":[1240,920],"typeVersion":3.4},{"parameters":{"method":"POST","url":"http://host.docker.internal:6333/collections/imdb/points/query","authentication":"predefinedCredentialType","nodeCredentialType":"qdrantApi","sendBody":true,"specifyBody":"json","jsonBody":"={\n  \"query\": {\n    \"recommend\": {\n      \"positive\": [[{{ $json.positive_example }}]],\n      \"negative\": [[{{ $json.negative_example }}]],\n      \"strategy\": \"average_vector\"\n    }\n  },\n  \"limit\":3\n}","options":{}},"id":"577fc41c-f1ce-42fe-8f6e-e9014d8e10e5","name":"Calling Qdrant Recommendation API","type":"n8n-nodes-base.httpRequest","position":[1540,400],"typeVersion":4.2,"credentials":{"qdrantApi":{"id":"RzFNlgEENHFNmlmD","name":"QdrantApi account"}}},{"parameters":{"method":"POST","url":"http://host.docker.internal:6333/collections/imdb/points","authentication":"predefinedCredentialType","nodeCredentialType":"qdrantApi","sendBody":true,"specifyBody":"json","jsonBody":"={\n    \"ids\": [\"{{ $json.result.points[0].id }}\", \"{{ $json.result.points[1].id }}\", \"{{ $json.result.points[2].id }}\"],\n    \"with_payload\":true\n}","options":{}},"id":"eed0386e-a4b5-4325-9fd7-9c65dbd5c01b","name":"Retrieving Recommended Movies Meta Data","type":"n8n-nodes-base.httpRequest","position":[2120,720],"typeVersion":4.2,"credentials":{"qdrantApi":{"id":"RzFNlgEENHFNmlmD","name":"QdrantApi account"}}},{"parameters":{"assignments":{"assignments":[{"id":"b4b520a5-d0e2-4dcb-af9d-0b7748fd44d6","name":"movie_recommendation_score","type":"number","value":"={{ $json.score }}"},{"id":"c9f0982e-bd4e-484b-9eab-7e69e333f706","name":"movie_description","type":"string","value":"={{ $json.payload.content }}"},{"id":"7c7baf11-89cd-4695-9f37-13eca7e01163","name":"movie_name","type":"string","value":"={{ $json.payload.metadata.movie_name }}"},{"id":"1d1d269e-43c7-47b0-859b-268adf2dbc21","name":"movie_release_year","type":"string","value":"={{ $json.payload.metadata.release_year }}"}]},"options":{}},"id":"566c0129-4400-4edc-a88e-5573bbd2f5e3","name":"Selecting Fields Relevant for Agent","type":"n8n-nodes-base.set","position":[2800,660],"typeVersion":3.4},{"parameters":{"content":"Tool, calling Qdrant's recommendation API based on user's request, transformed by AI agent"},"id":"3f144b5b-fe40-4802-942e-b9ef71299933","name":"Sticky Note","type":"n8n-nodes-base.stickyNote","position":[620,1040],"typeVersion":1},{"parameters":{"content":"Uploading data (movies and their descriptions) to Qdrant Vector Store\n"},"id":"8c8d1f70-de29-4c1d-94a8-6dff96846eeb","name":"Sticky Note1","type":"n8n-nodes-base.stickyNote","position":[-260,-20],"typeVersion":1},{"parameters":{"maxItems":1000},"type":"n8n-nodes-base.limit","typeVersion":1,"position":[640,-160],"id":"0084597b-fd9d-40af-af5f-9920336a8a92","name":"Limit"}],"connections":{"Merge":{"main":[[{"node":"Calling Qdrant Recommendation API","type":"main","index":0}]]},"GitHub":{"main":[[{"node":"Extract from File","type":"main","index":0}]]},"Merge1":{"main":[[{"node":"Selecting Fields Relevant for Agent","type":"main","index":0}]]},"Split Out":{"main":[[{"node":"Merge1","type":"main","index":1}]]},"Split Out1":{"main":[[{"node":"Merge1","type":"main","index":0}]]},"Token Splitter":{"ai_textSplitter":[[{"node":"Default Data Loader","type":"ai_textSplitter","index":0}]]},"Embeddings OpenAI":{"ai_embedding":[[{"node":"Qdrant Vector Store","type":"ai_embedding","index":0}]]},"Extract from File":{"main":[[{"node":"Limit","type":"main","index":0}]]},"OpenAI Chat Model":{"ai_languageModel":[[{"node":"AI Agent","type":"ai_languageModel","index":0}]]},"Default Data Loader":{"ai_document":[[{"node":"Qdrant Vector Store","type":"ai_document","index":0}]]},"Extracting Embedding":{"main":[[{"node":"Merge","type":"main","index":0}]]},"Window Buffer Memory":{"ai_memory":[[{"node":"AI Agent","type":"ai_memory","index":0}]]},"Extracting Embedding1":{"main":[[{"node":"Merge","type":"main","index":1}]]},"Call n8n Workflow Tool":{"ai_tool":[[{"node":"AI Agent","type":"ai_tool","index":0}]]},"Execute Workflow Trigger":{"main":[[{"node":"Embedding Recommendation Request with Open AI","type":"main","index":0},{"node":"Embedding Anti-Recommendation Request with Open AI","type":"main","index":0}]]},"When chat message received":{"main":[[{"node":"AI Agent","type":"main","index":0}]]},"Calling Qdrant Recommendation API":{"main":[[{"node":"Retrieving Recommended Movies Meta Data","type":"main","index":0},{"node":"Split Out1","type":"main","index":0}]]},"When clicking ‘Test workflow’":{"main":[[{"node":"GitHub","type":"main","index":0}]]},"Selecting Fields Relevant for Agent":{"main":[[{"node":"Aggregate","type":"main","index":0}]]},"Retrieving Recommended Movies Meta Data":{"main":[[{"node":"Split Out","type":"main","index":0}]]},"Embedding Recommendation Request with Open AI":{"main":[[{"node":"Extracting Embedding","type":"main","index":0}]]},"Embedding Anti-Recommendation Request with Open AI":{"main":[[{"node":"Extracting Embedding1","type":"main","index":0}]]},"Limit":{"main":[[{"node":"Qdrant Vector Store","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{"Execute Workflow Trigger":[{"json":{"query":{"negative_example":"horror bloody movie","positive_example":"romantic comedy"}}}]},"versionId":"f2fb6234-5243-4add-b0c5-571f8200aa9b","triggerCount":0,"tags":[],"shared":[{"createdAt":"2025-05-20T08:26:04.064Z","updatedAt":"2025-05-20T08:26:04.064Z","role":"workflow:owner","workflowId":"Et6Be96J8HnUzoF9","projectId":"WbfPHUYYKS2tiNNo","project":{"createdAt":"2025-05-03T06:49:18.088Z","updatedAt":"2025-05-03T06:52:24.837Z","id":"WbfPHUYYKS2tiNNo","name":"charlie phan <scottyphan08@gmail.com>","type":"personal","icon":null,"description":null}}]},{"createdAt":"2025-05-22T01:32:11.259Z","updatedAt":"2025-05-22T01:49:41.063Z","id":"xZatztH4h76WpJqY","name":"22052025_RAG gemini","active":false,"isArchived":false,"nodes":[{"parameters":{"promptType":"define","text":"=Classify this query: {{ $('Combined Fields').item.json.user_query }}","options":{"systemMessage":"You are an expert at classifying questions. \n\nClassify the given query into exactly one of these categories:\n- Factual: Queries seeking specific, verifiable information.\n- Analytical: Queries requiring comprehensive analysis or explanation.\n- Opinion: Queries about subjective matters or seeking diverse viewpoints.\n- Contextual: Queries that depend on user-specific context.\n\nReturn ONLY the category name, without any explanation or additional text."}},"id":"eb456470-90fb-419e-84eb-5f0a6820a8be","name":"Query Classification","type":"@n8n/n8n-nodes-langchain.agent","position":[-660,880],"typeVersion":1.8,"notes":"Classify a query into one of four categories: Factual, Analytical, Opinion, or Contextual.\n        \nReturns:\nstr: Query category"},{"parameters":{"rules":{"values":[{"conditions":{"options":{"version":2,"leftValue":"","caseSensitive":true,"typeValidation":"strict"},"combinator":"and","conditions":[{"id":"87f3b50c-9f32-4260-ac76-19c05b28d0b4","operator":{"type":"string","operation":"equals"},"leftValue":"={{ $json.output.trim() }}","rightValue":"Factual"}]},"renameOutput":true,"outputKey":"Factual"},{"conditions":{"options":{"version":2,"leftValue":"","caseSensitive":true,"typeValidation":"strict"},"combinator":"and","conditions":[{"id":"f8651b36-79fa-4be4-91fb-0e6d7deea18f","operator":{"name":"filter.operator.equals","type":"string","operation":"equals"},"leftValue":"={{ $json.output.trim() }}","rightValue":"Analytical"}]},"renameOutput":true,"outputKey":"Analytical"},{"conditions":{"options":{"version":2,"leftValue":"","caseSensitive":true,"typeValidation":"strict"},"combinator":"and","conditions":[{"id":"5dde06bc-5fe1-4dca-b6e2-6857c5e96d49","operator":{"name":"filter.operator.equals","type":"string","operation":"equals"},"leftValue":"={{ $json.output.trim() }}","rightValue":"Opinion"}]},"renameOutput":true,"outputKey":"Opinion"},{"conditions":{"options":{"version":2,"leftValue":"","caseSensitive":true,"typeValidation":"strict"},"combinator":"and","conditions":[{"id":"bf97926d-7a0b-4e2f-aac0-a820f73344d8","operator":{"name":"filter.operator.equals","type":"string","operation":"equals"},"leftValue":"={{ $json.output.trim() }}","rightValue":"Contextual"}]},"renameOutput":true,"outputKey":"Contextual"}]},"options":{"fallbackOutput":0}},"id":"a31f9c8c-6d4f-4f16-8fba-445692306887","name":"Switch","type":"n8n-nodes-base.switch","position":[-300,860],"typeVersion":3.2},{"parameters":{"promptType":"define","text":"=Enhance this factual query: {{ $('Combined Fields').item.json.user_query }}","options":{"systemMessage":"=You are an expert at enhancing search queries.\n\nYour task is to reformulate the given factual query to make it more precise and specific for information retrieval. Focus on key entities and their relationships.\n\nProvide ONLY the enhanced query without any explanation."}},"id":"993839b5-cbd5-4c0e-9414-2991b59979bc","name":"Factual Strategy - Focus on Precision","type":"@n8n/n8n-nodes-langchain.agent","position":[100,120],"typeVersion":1.7,"notes":"Retrieval strategy for factual queries focusing on precision."},{"parameters":{"promptType":"define","text":"=Generate sub-questions for this analytical query: {{ $('Combined Fields').item.json.user_query }}","options":{"systemMessage":"=You are an expert at breaking down complex questions.\n\nGenerate sub-questions that explore different aspects of the main analytical query.\nThese sub-questions should cover the breadth of the topic and help retrieve comprehensive information.\n\nReturn a list of exactly 3 sub-questions, one per line."}},"id":"fe8f6f59-5825-4345-a7cd-eac114edc0bc","name":"Analytical Strategy - Comprehensive Coverage","type":"@n8n/n8n-nodes-langchain.agent","position":[100,660],"typeVersion":1.7,"notes":"Retrieval strategy for analytical queries focusing on comprehensive coverage."},{"parameters":{"promptType":"define","text":"=Identify different perspectives on: {{ $('Combined Fields').item.json.user_query }}","options":{"systemMessage":"=You are an expert at identifying different perspectives on a topic.\n\nFor the given query about opinions or viewpoints, identify different perspectives that people might have on this topic.\n\nReturn a list of exactly 3 different viewpoint angles, one per line."}},"id":"07cf58be-009f-4f14-9069-d249cd958cad","name":"Opinion Strategy - Diverse Perspectives","type":"@n8n/n8n-nodes-langchain.agent","position":[100,1200],"typeVersion":1.7,"notes":"Retrieval strategy for opinion queries focusing on diverse perspectives."},{"parameters":{"promptType":"define","text":"=Infer the implied context in this query: {{ $('Combined Fields').item.json.user_query }}","options":{"systemMessage":"=You are an expert at understanding implied context in questions.\n\nFor the given query, infer what contextual information might be relevant or implied but not explicitly stated. Focus on what background would help answering this query.\n\nReturn a brief description of the implied context."}},"id":"1a0b1602-8202-4af9-91d2-fb2f3b4e3844","name":"Contextual Strategy - User Context Integration","type":"@n8n/n8n-nodes-langchain.agent","position":[100,1740],"typeVersion":1.7,"notes":"Retrieval strategy for contextual queries integrating user context."},{"parameters":{"options":{}},"id":"c234da3c-b4a0-4c7e-bf56-86f1292e7f5d","name":"Chat","type":"@n8n/n8n-nodes-langchain.chatTrigger","position":[-1320,1020],"webhookId":"56f626b5-339e-48af-857f-1d4198fc8a4d","typeVersion":1.1},{"parameters":{"assignments":{"assignments":[{"id":"a4a28ac2-4a56-46f6-8b86-f5d1a34b2ced","name":"output","type":"string","value":"={{ $json.output }}"},{"id":"7aa6ce13-afbf-4871-b81c-6e9c722a53dc","name":"prompt","type":"string","value":"You are a helpful assistant providing factual information. Answer the question based on the provided context. Focus on accuracy and precision. If the context doesn't contain the information needed, acknowledge the limitations."}]},"options":{}},"id":"1c88995b-7e3c-4199-8c65-f168a05faedc","name":"Factual Prompt and Output","type":"n8n-nodes-base.set","position":[500,120],"typeVersion":3.4},{"parameters":{"assignments":{"assignments":[{"id":"a4a28ac2-4a56-46f6-8b86-f5d1a34b2ced","name":"output","type":"string","value":"={{ $json.output }}"},{"id":"7aa6ce13-afbf-4871-b81c-6e9c722a53dc","name":"prompt","type":"string","value":"You are a helpful assistant providing contextually relevant information. Answer the question considering both the query and its context. Make connections between the query context and the information in the provided documents. If the context doesn't fully address the specific situation, acknowledge the limitations."}]},"options":{}},"id":"43035e16-cb72-4ec5-8cd9-4be5503f14c4","name":"Contextual Prompt and Output","type":"n8n-nodes-base.set","position":[500,1740],"typeVersion":3.4},{"parameters":{"assignments":{"assignments":[{"id":"a4a28ac2-4a56-46f6-8b86-f5d1a34b2ced","name":"output","type":"string","value":"={{ $json.output }}"},{"id":"7aa6ce13-afbf-4871-b81c-6e9c722a53dc","name":"prompt","type":"string","value":"You are a helpful assistant discussing topics with multiple viewpoints. Based on the provided context, present different perspectives on the topic. Ensure fair representation of diverse opinions without showing bias. Acknowledge where the context presents limited viewpoints."}]},"options":{}},"id":"5b005884-c2fb-4bf2-8024-bead3e33c997","name":"Opinion Prompt and Output","type":"n8n-nodes-base.set","position":[500,1200],"typeVersion":3.4},{"parameters":{"assignments":{"assignments":[{"id":"a4a28ac2-4a56-46f6-8b86-f5d1a34b2ced","name":"output","type":"string","value":"={{ $json.output }}"},{"id":"7aa6ce13-afbf-4871-b81c-6e9c722a53dc","name":"prompt","type":"string","value":"You are a helpful assistant providing analytical insights. Based on the provided context, offer a comprehensive analysis of the topic. Cover different aspects and perspectives in your explanation. If the context has gaps, acknowledge them while providing the best analysis possible."}]},"options":{}},"id":"ecd2d24b-f370-4157-ba2d-547a758382cc","name":"Analytical Prompt and Output","type":"n8n-nodes-base.set","position":[500,660],"typeVersion":3.4},{"parameters":{"modelName":"models/gemini-2.0-flash-lite","options":{}},"id":"9e6a30bc-a9ec-4c01-b479-6929b11544d9","name":"Gemini Classification","type":"@n8n/n8n-nodes-langchain.lmChatGoogleGemini","position":[-680,1080],"typeVersion":1,"credentials":{"googlePalmApi":{"id":"VxuR4Ot4TSiJTVFk","name":"Google Gemini(PaLM) Api account"}}},{"parameters":{"modelName":"models/gemini-2.0-flash","options":{}},"id":"037ffcd2-2ac3-479d-923f-fd6d729ee674","name":"Gemini Factual","type":"@n8n/n8n-nodes-langchain.lmChatGoogleGemini","position":[80,340],"typeVersion":1,"credentials":{"googlePalmApi":{"id":"VxuR4Ot4TSiJTVFk","name":"Google Gemini(PaLM) Api account"}}},{"parameters":{"modelName":"models/gemini-2.0-flash","options":{}},"id":"d4dc332b-3900-49d9-b084-2eef29adbcba","name":"Gemini Analytical","type":"@n8n/n8n-nodes-langchain.lmChatGoogleGemini","position":[80,880],"typeVersion":1,"credentials":{"googlePalmApi":{"id":"VxuR4Ot4TSiJTVFk","name":"Google Gemini(PaLM) Api account"}}},{"parameters":{"sessionIdType":"customKey","sessionKey":"={{ $('Combined Fields').item.json.chat_memory_key }}","contextWindowLength":10},"id":"896cf785-306f-4778-af82-f83409355df1","name":"Chat Buffer Memory Analytical","type":"@n8n/n8n-nodes-langchain.memoryBufferWindow","position":[240,880],"typeVersion":1.3},{"parameters":{"sessionIdType":"customKey","sessionKey":"={{ $('Combined Fields').item.json.chat_memory_key }}","contextWindowLength":10},"id":"4a188242-62f2-4544-8fea-6ab71ebfc14c","name":"Chat Buffer Memory Factual","type":"@n8n/n8n-nodes-langchain.memoryBufferWindow","position":[240,340],"typeVersion":1.3},{"parameters":{"modelName":"models/gemini-2.0-flash","options":{}},"id":"1feb8fb3-0d22-4006-ac5e-2bad3edd30c6","name":"Gemini Opinion","type":"@n8n/n8n-nodes-langchain.lmChatGoogleGemini","position":[80,1420],"typeVersion":1,"credentials":{"googlePalmApi":{"id":"VxuR4Ot4TSiJTVFk","name":"Google Gemini(PaLM) Api account"}}},{"parameters":{"sessionIdType":"customKey","sessionKey":"={{ $('Combined Fields').item.json.chat_memory_key }}","contextWindowLength":10},"id":"72359852-7d58-492d-bc39-57c83f2dc878","name":"Chat Buffer Memory Opinion","type":"@n8n/n8n-nodes-langchain.memoryBufferWindow","position":[240,1420],"typeVersion":1.3},{"parameters":{"modelName":"models/gemini-2.0-flash","options":{}},"id":"18e11172-c0e2-4b53-ad7e-5830625f52c0","name":"Gemini Contextual","type":"@n8n/n8n-nodes-langchain.lmChatGoogleGemini","position":[80,1960],"typeVersion":1,"credentials":{"googlePalmApi":{"id":"VxuR4Ot4TSiJTVFk","name":"Google Gemini(PaLM) Api account"}}},{"parameters":{"sessionIdType":"customKey","sessionKey":"={{ $('Combined Fields').item.json.chat_memory_key }}","contextWindowLength":10},"id":"b96526c6-3f3b-4c3b-9686-5c16ff9294ec","name":"Chat Buffer Memory Contextual","type":"@n8n/n8n-nodes-langchain.memoryBufferWindow","position":[240,1960],"typeVersion":1.3},{"parameters":{"modelName":"models/text-embedding-004"},"id":"e51e716e-4072-4f32-ab0f-6a090ec415b8","name":"Embeddings","type":"@n8n/n8n-nodes-langchain.embeddingsGoogleGemini","position":[1020,1100],"typeVersion":1,"credentials":{"googlePalmApi":{"id":"VxuR4Ot4TSiJTVFk","name":"Google Gemini(PaLM) Api account"}}},{"parameters":{"content":"## Factual Strategy\n**Retrieve precise facts and figures.**","height":520,"width":700,"color":7},"id":"55ece36d-0b9c-4879-900f-e415343a1de6","name":"Sticky Note","type":"n8n-nodes-base.stickyNote","position":[0,0],"typeVersion":1},{"parameters":{"content":"## Analytical Strategy\n**Provide comprehensive coverage of a topics and exploring different aspects.**","height":520,"width":700,"color":7},"id":"533146f7-169c-4ac4-80b0-d9ac552804dd","name":"Sticky Note1","type":"n8n-nodes-base.stickyNote","position":[0,540],"typeVersion":1},{"parameters":{"content":"## Opinion Strategy\n**Gather diverse viewpoints on a subjective issue.**","height":520,"width":700,"color":7},"id":"8d54efbb-388b-4b40-bbd9-5d37be6adf96","name":"Sticky Note2","type":"n8n-nodes-base.stickyNote","position":[0,1080],"typeVersion":1},{"parameters":{"content":"## Contextual Strategy\n**Incorporate user-specific context to fine-tune the retrieval.**","height":520,"width":700,"color":7},"id":"3ca1899d-b656-47e9-9c34-1e204b7a249b","name":"Sticky Note3","type":"n8n-nodes-base.stickyNote","position":[0,1620],"typeVersion":1},{"parameters":{"fieldsToSummarize":{"values":[{"aggregation":"concatenate","field":"document.pageContent","separateBy":"other","customSeparator":"={{ \"\\n\\n---\\n\\n\" }}"}]},"options":{}},"id":"04a50800-2f01-42aa-b00c-ddcb31447177","name":"Concatenate Context","type":"n8n-nodes-base.summarize","position":[1400,880],"typeVersion":1.1},{"parameters":{"mode":"load","qdrantCollection":{"__rl":true,"mode":"id","value":"={{ $('Combined Fields').item.json.vector_store_id }}"},"prompt":"={{ $json.prompt }}\n\nUser query: \n{{ $json.output }}","topK":10,"options":{}},"id":"8aad9f40-0f43-4db7-bba5-c48055a24564","name":"Retrieve Documents from Vector Store","type":"@n8n/n8n-nodes-langchain.vectorStoreQdrant","position":[1040,880],"typeVersion":1.1,"credentials":{"qdrantApi":{"id":"RzFNlgEENHFNmlmD","name":"QdrantApi account"}}},{"parameters":{"assignments":{"assignments":[{"id":"1d782243-0571-4845-b8fe-4c6c4b55379e","name":"output","type":"string","value":"={{ $json.output }}"},{"id":"547091fb-367c-44d4-ac39-24d073da70e0","name":"prompt","type":"string","value":"={{ $json.prompt }}"}]},"options":{}},"id":"994b387c-7bc2-40e3-b5d0-f98585a2542d","name":"Set Prompt and Output","type":"n8n-nodes-base.set","position":[840,880],"typeVersion":3.4},{"parameters":{"modelName":"models/gemini-2.0-flash","options":{}},"id":"1fee0a1c-4630-437d-8765-4b9122271d32","name":"Gemini Answer","type":"@n8n/n8n-nodes-langchain.lmChatGoogleGemini","position":[1680,1100],"typeVersion":1,"credentials":{"googlePalmApi":{"id":"VxuR4Ot4TSiJTVFk","name":"Google Gemini(PaLM) Api account"}}},{"parameters":{"promptType":"define","text":"=User query: {{ $('Combined Fields').item.json.user_query }}","options":{"systemMessage":"={{ $('Set Prompt and Output').item.json.prompt }}\n\nUse the following context (delimited by <ctx></ctx>) and the chat history to answer the user query.\n<ctx>\n{{ $json.concatenated_document_pageContent }}\n</ctx>"}},"id":"84596d7b-fe94-4759-9aea-8801c2914089","name":"Answer","type":"@n8n/n8n-nodes-langchain.agent","position":[1720,880],"typeVersion":1.8},{"parameters":{"sessionIdType":"customKey","sessionKey":"={{ $('Combined Fields').item.json.chat_memory_key }}","contextWindowLength":10},"id":"b27f6481-bc71-46f1-9f7c-a28a064ec072","name":"Chat Buffer Memory","type":"@n8n/n8n-nodes-langchain.memoryBufferWindow","position":[1860,1100],"typeVersion":1.3},{"parameters":{"content":"## Perform adaptive retrieval\n**Find document considering both query and context.**","height":580,"width":820,"color":7},"id":"063ecab0-d0bd-4fe0-82b8-8b24c8b43457","name":"Sticky Note4","type":"n8n-nodes-base.stickyNote","position":[760,680],"typeVersion":1},{"parameters":{"content":"## Reply to the user integrating retrieval context","height":580,"width":740,"color":7},"id":"ad7ffb4b-0507-42a0-bf01-48c95bdfa927","name":"Sticky Note5","type":"n8n-nodes-base.stickyNote","position":[1600,680],"typeVersion":1},{"parameters":{"options":{}},"id":"1ada640a-10a4-4921-a23e-8753e6ea2ff4","name":"Respond to Webhook","type":"n8n-nodes-base.respondToWebhook","position":[2080,880],"typeVersion":1.1},{"parameters":{"content":"## User query classification\n**Classify the query into one of four categories: Factual, Analytical, Opinion, or Contextual.**","height":580,"width":700,"color":7},"id":"67176e60-2f85-4da7-b45a-af7616699488","name":"Sticky Note6","type":"n8n-nodes-base.stickyNote","position":[-760,680],"typeVersion":1},{"parameters":{"workflowInputs":{"values":[{"name":"user_query"},{"name":"chat_memory_key"},{"name":"vector_store_id"}]}},"id":"8418827d-1eb5-40f0-b67f-8a08201c6c07","name":"When Executed by Another Workflow","type":"n8n-nodes-base.executeWorkflowTrigger","position":[-1320,760],"typeVersion":1.1},{"parameters":{"assignments":{"assignments":[{"id":"90ab73a2-fe01-451a-b9df-bffe950b1599","name":"user_query","type":"string","value":"={{ $json.user_query || $json.chatInput }}"},{"id":"36686ff5-09fc-40a4-8335-a5dd1576e941","name":"chat_memory_key","type":"string","value":"={{ $json.chat_memory_key || $('Chat').item.json.sessionId }}"},{"id":"4230c8f3-644c-4985-b710-a4099ccee77c","name":"vector_store_id","type":"string","value":"={{ $json.vector_store_id || \"<ID HERE>\" }}"}]},"options":{}},"id":"84ebe25b-b5c8-4a2e-b2b0-a3fc980e692a","name":"Combined Fields","type":"n8n-nodes-base.set","position":[-1000,880],"typeVersion":3.4},{"parameters":{"content":"# Adaptive RAG Workflow\n\nThis n8n workflow implements a version of the Adaptive Retrieval-Augmented Generation (RAG) approach. It classifies user queries and applies different retrieval and generation strategies based on the query type (Factual, Analytical, Opinion, or Contextual) to provide more relevant and tailored answers from a knowledge base stored in a Qdrant vector store.\n\n## How it Works\n\n1.  **Input Trigger:**\n    * The workflow can be initiated via the built-in Chat interface or triggered by another n8n workflow.\n    * It expects inputs: `user_query`, `chat_memory_key` (for conversation history), and `vector_store_id` (specifying the Qdrant collection).\n    * A `Set` node (`Combined Fields`) standardizes these inputs.\n\n2.  **Query Classification:**\n    * A Google Gemini agent (`Query Classification`) analyzes the `user_query`.\n    * It classifies the query into one of four categories:\n        * **Factual:** Seeking specific, verifiable information.\n        * **Analytical:** Requiring comprehensive analysis or explanation.\n        * **Opinion:** Asking about subjective matters or seeking diverse viewpoints.\n        * **Contextual:** Depending on user-specific or implied context.\n\n3.  **Adaptive Strategy Routing:**\n    * A `Switch` node routes the workflow based on the classification result from the previous step.\n\n4.  **Strategy Implementation (Query Adaptation):**\n    * Depending on the route, a specific Google Gemini agent adapts the query or approach:\n        * **Factual Strategy:** Rewrites the query for better precision, focusing on key entities (`Factual Strategy - Focus on Precision`).\n        * **Analytical Strategy:** Breaks down the main query into multiple sub-questions to ensure comprehensive coverage (`Analytical Strategy - Comprehensive Coverage`).\n        * **Opinion Strategy:** Identifies different potential perspectives or angles related to the query (`Opinion Strategy - Diverse Perspectives`).\n        * **Contextual Strategy:** Infers implied context needed to answer the query effectively (`Contextual Strategy - User Context Integration`).\n    * Each strategy path uses its own chat memory buffer for the adaptation step.\n\n5.  **Retrieval Prompt & Output Setup:**\n    * Based on the *original* query classification, a `Set` node (`Factual/Analytical/Opinion/Contextual Prompt and Output`, combined via connections to `Set Prompt and Output`) prepares:\n        * The output from the strategy step (e.g., rewritten query, sub-questions, perspectives).\n        * A tailored system prompt for the final answer generation agent, instructing it how to behave based on the query type (e.g., focus on precision for Factual, present diverse views for Opinion).\n\n6.  **Document Retrieval (RAG):**\n    * The `Retrieve Documents from Vector Store` node uses the adapted query/output from the strategy step to search the specified Qdrant collection (`vector_store_id`).\n    * It retrieves the top relevant document chunks using Google Gemini embeddings.\n\n7.  **Context Preparation:**\n    * The content from the retrieved document chunks is concatenated (`Concatenate Context`) to form a single context block for the final answer generation.\n\n8.  **Answer Generation:**\n    * The final `Answer` agent (powered by Google Gemini) generates the response.\n    * It uses:\n        * The tailored system prompt set in step 5.\n        * The concatenated context from retrieved documents (step 7).\n        * The original `user_query`.\n        * The shared chat history (`Chat Buffer Memory` using `chat_memory_key`).\n\n9.  **Response:**\n    * The generated answer is sent back to the user via the `Respond to Webhook` node.","height":1300,"width":1280},"id":"ab7a03a3-787b-4840-9f5d-009f8fd708a8","name":"Sticky Note7","type":"n8n-nodes-base.stickyNote","position":[-1340,1300],"typeVersion":1},{"parameters":{"content":"## ⚠️  If using in Chat mode\n\nUpdate the `vector_store_id` variable to the corresponding Qdrant ID needed to perform the documents retrieval.","height":580,"width":320,"color":7},"id":"489e3857-b6bb-4297-8cd2-d7f57cd664da","name":"Sticky Note8","type":"n8n-nodes-base.stickyNote","position":[-1100,680],"typeVersion":1}],"connections":{"Chat":{"main":[[{"node":"Combined Fields","type":"main","index":0}]]},"Answer":{"main":[[{"node":"Respond to Webhook","type":"main","index":0}]]},"Switch":{"main":[[{"node":"Factual Strategy - Focus on Precision","type":"main","index":0}],[{"node":"Analytical Strategy - Comprehensive Coverage","type":"main","index":0}],[{"node":"Opinion Strategy - Diverse Perspectives","type":"main","index":0}],[{"node":"Contextual Strategy - User Context Integration","type":"main","index":0}]]},"Embeddings":{"ai_embedding":[[{"node":"Retrieve Documents from Vector Store","type":"ai_embedding","index":0}]]},"Gemini Answer":{"ai_languageModel":[[{"node":"Answer","type":"ai_languageModel","index":0}]]},"Gemini Factual":{"ai_languageModel":[[{"node":"Factual Strategy - Focus on Precision","type":"ai_languageModel","index":0}]]},"Gemini Opinion":{"ai_languageModel":[[{"node":"Opinion Strategy - Diverse Perspectives","type":"ai_languageModel","index":0}]]},"Combined Fields":{"main":[[{"node":"Query Classification","type":"main","index":0}]]},"Gemini Analytical":{"ai_languageModel":[[{"node":"Analytical Strategy - Comprehensive Coverage","type":"ai_languageModel","index":0}]]},"Gemini Contextual":{"ai_languageModel":[[{"node":"Contextual Strategy - User Context Integration","type":"ai_languageModel","index":0}]]},"Chat Buffer Memory":{"ai_memory":[[{"node":"Answer","type":"ai_memory","index":0}]]},"Concatenate Context":{"main":[[{"node":"Answer","type":"main","index":0}]]},"Query Classification":{"main":[[{"node":"Switch","type":"main","index":0}]]},"Gemini Classification":{"ai_languageModel":[[{"node":"Query Classification","type":"ai_languageModel","index":0}]]},"Set Prompt and Output":{"main":[[{"node":"Retrieve Documents from Vector Store","type":"main","index":0}]]},"Factual Prompt and Output":{"main":[[{"node":"Set Prompt and Output","type":"main","index":0}]]},"Opinion Prompt and Output":{"main":[[{"node":"Set Prompt and Output","type":"main","index":0}]]},"Chat Buffer Memory Factual":{"ai_memory":[[{"node":"Factual Strategy - Focus on Precision","type":"ai_memory","index":0}]]},"Chat Buffer Memory Opinion":{"ai_memory":[[{"node":"Opinion Strategy - Diverse Perspectives","type":"ai_memory","index":0}]]},"Analytical Prompt and Output":{"main":[[{"node":"Set Prompt and Output","type":"main","index":0}]]},"Contextual Prompt and Output":{"main":[[{"node":"Set Prompt and Output","type":"main","index":0}]]},"Chat Buffer Memory Analytical":{"ai_memory":[[{"node":"Analytical Strategy - Comprehensive Coverage","type":"ai_memory","index":0}]]},"Chat Buffer Memory Contextual":{"ai_memory":[[{"node":"Contextual Strategy - User Context Integration","type":"ai_memory","index":0}]]},"When Executed by Another Workflow":{"main":[[{"node":"Combined Fields","type":"main","index":0}]]},"Retrieve Documents from Vector Store":{"main":[[{"node":"Concatenate Context","type":"main","index":0}]]},"Factual Strategy - Focus on Precision":{"main":[[{"node":"Factual Prompt and Output","type":"main","index":0}]]},"Opinion Strategy - Diverse Perspectives":{"main":[[{"node":"Opinion Prompt and Output","type":"main","index":0}]]},"Analytical Strategy - Comprehensive Coverage":{"main":[[{"node":"Analytical Prompt and Output","type":"main","index":0}]]},"Contextual Strategy - User Context Integration":{"main":[[{"node":"Contextual Prompt and Output","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"03c3cbf5-5c6a-4124-b0fb-d541b3bce3f0","triggerCount":0,"tags":[],"shared":[{"createdAt":"2025-05-22T01:32:11.259Z","updatedAt":"2025-05-22T01:32:11.259Z","role":"workflow:owner","workflowId":"xZatztH4h76WpJqY","projectId":"WbfPHUYYKS2tiNNo","project":{"createdAt":"2025-05-03T06:49:18.088Z","updatedAt":"2025-05-03T06:52:24.837Z","id":"WbfPHUYYKS2tiNNo","name":"charlie phan <scottyphan08@gmail.com>","type":"personal","icon":null,"description":null}}]},{"createdAt":"2025-05-22T03:04:26.728Z","updatedAt":"2025-05-22T04:18:08.007Z","id":"dxYoEAURXOgJoTiV","name":"My workflow 7","active":false,"isArchived":false,"nodes":[{"parameters":{},"id":"ed8e9771-2127-4c12-a682-91d7e1aab444","name":"When clicking ‘Test workflow’","type":"n8n-nodes-base.manualTrigger","typeVersion":1,"position":[140,420]},{"parameters":{"operation":"pdf","options":{}},"id":"e3a4a44a-d3ca-45f1-aad3-ec88123e1179","name":"Extract from File","type":"n8n-nodes-base.extractFromFile","typeVersion":1,"position":[720,460]},{"parameters":{"mode":"runOnceForEachItem","jsCode":"const chunks = [];\nconst chunkSize = 1000;\nconst chunkOverlap = 200;\nconst text = $('Extract from File').item.json.text.replace(/\\n/, '');\n\nfor (let i=0,j=Math.round(text.length/chunkSize)+1;i<j;i++) {\n  chunks.push(\n    text.substr(\n      Math.max(0,(i * chunkSize)-chunkOverlap),\n      chunkSize\n    )\n  );\n}\n\nreturn { chunks };"},"id":"0fcd5f2b-153e-4879-b805-c67d6b628a05","name":"Create Chunks From Doc","type":"n8n-nodes-base.code","typeVersion":2,"position":[1500,540]},{"parameters":{"jsonMode":"expressionData","jsonData":"={{\n{\n  \"content\": `${$json.text }\\n---\\n${$json.chunk}`\n}\n}}","options":{"metadata":{"metadataValues":[{"name":"title","value":"={{ $json.title }}"}]}}},"id":"e21a0d9c-26b9-4b6e-b5a7-478fba565455","name":"Default Data Loader","type":"@n8n/n8n-nodes-langchain.documentDefaultDataLoader","typeVersion":1,"position":[3240,740]},{"parameters":{"chunkSize":2000,"options":{}},"id":"f757ec71-a992-43ee-acda-ad4296acc70d","name":"Recursive Character Text Splitter","type":"@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter","typeVersion":1,"position":[3240,860]},{"parameters":{"options":{}},"id":"d56a017f-52c4-43bd-9546-0af041d07b6b","name":"When chat message received","type":"@n8n/n8n-nodes-langchain.chatTrigger","typeVersion":1.1,"position":[580,1360],"webhookId":"436ca65c-46ca-4f8c-86e2-b8633b428eea"},{"parameters":{},"id":"b779a172-5ec1-44d0-8cbf-e286d262288c","name":"Window Buffer Memory","type":"@n8n/n8n-nodes-langchain.memoryBufferWindow","typeVersion":1.2,"position":[820,1560]},{"parameters":{"content":"## 2. Split Document Into Chunks\nUnlike traditional vector store workflows, we want to split our document prior to embedding and this is easily achieved using the Code node. Feel free to adjust the text splitting params or replace it entirely to suit the needs of your data.\n\nYou may need to play around and adjust the chunksize for your particular data. Contextual retrieval as described in the article is expected to return 20 results so best to keep these small.","height":513.3089035768523,"width":553.1909664515983,"color":7},"id":"ca4696a0-d533-4679-abc7-15d88f2a0881","name":"Sticky Note","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[1280,280]},{"parameters":{"content":"## 3. Generate Sparse Vector and Contextual Text For Chunk\nWith our chunks, we'll want to achieve the following:\n(1) **Generate a contextual summary of what the chunk is about relative to the whole document**.\nFor this, we'll use the basic LLM node using Antrophic's Claude Haiku model with the recommended prompt as shared in the article.\n(2) **Generate a sparse vector for the chunk and summary**\nWe can use the python code node to generate TF-IDF sparse vectors with the scikit-learn library. Good to know, this library doesn't require external dependency setup steps and auto-installs on first time use.\n\nOnce we have our generated values, we'll combine them with the chunk object using the Edit Fields node.","height":748.1255853485875,"width":1019.742667955435,"color":7},"id":"aa69de58-79d3-4ff0-aa35-d1be7325ac04","name":"Sticky Note1","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[1880,280]},{"parameters":{"content":"## 4. Insert Docs to Qdrant (via Langchain Code Node)\nUnfortunately, n8n (or rather langchain) doesn't support inserting sparse vectors so we'll have to build our own \"Insert Documents\" node using a Langchain Code Node. In this Langchain code node, we'll forego the langchain vectorstore node and use the Qdrant client SDK directly instead.\n\n**Note** To avoid duplication, this node will also delete existing vectors by document title. It does so by tagging each vector with the document title we extracted earlier then when run again, performs a Qdrant delete by filter before upserting.\n\n**Required:**\nTo use this demonstration, you must complete the following:\n* Ensure your Qdrant instance is running and set the URL in the node\n* Create the Qdrant collection as instructed (see yellow sticky)\n","height":783.6896392386983,"width":828.7526122872351,"color":7},"id":"c07030cd-701f-4f38-8ded-d70c4abaf76d","name":"Sticky Note2","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[2920,260]},{"parameters":{"content":"## 5. Retrieval using Sparse Vectors and ReRanker (Chat Agent Example)\nFor retrieval, we want to be able to (1) query with both dense and sparse vectors and (2) apply a rerank algorithm to our vector store docs. We can setup a custom vector store tool which does both using a custom Langchain Code node.\n\n**Required:**\nTo use this demonstration, you must complete the following:\n* Installed the updated version of the @Qdrant/js-client-rest module\n* Ensure your Qdrant instance is running and set the URL in the \"Qdrant with Cohere ReRank\" subnode\n* Add your Cohere API key in the \"Qdrant with Cohere ReRank\" subnode.","height":989,"width":974,"color":7},"id":"20413d0f-116d-47cc-9f1b-cf7c963a6c23","name":"Sticky Note3","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[440,920]},{"parameters":{},"id":"9d30225d-4cce-4f6b-a3de-7b8d8dc643f4","name":"Execute Workflow Trigger","type":"n8n-nodes-base.executeWorkflowTrigger","typeVersion":1,"position":[1520,1880]},{"parameters":{"name":"get_sparse_vector","description":"Generates TD-IDF sparse vector for query","workflowId":{"__rl":true,"value":"={{ $workflow.id }}","mode":"id"},"fields":{"values":[{"name":"route","stringValue":"get_sparse_vectors"}]}},"id":"a4aa35d3-63db-4d78-9a6e-c959e56ab86f","name":"Get Sparse Vector Tool","type":"@n8n/n8n-nodes-langchain.toolWorkflow","typeVersion":1.2,"position":[1200,1680]},{"parameters":{"assignments":{"assignments":[{"id":"87bc3071-4179-4aed-aa88-37c6381d8b73","name":"query","value":"Who created Bitcoin?","type":"string"}]},"options":{}},"id":"be79f3fa-b7b1-4f5e-8bc9-981d9fc90c23","name":"Query","type":"n8n-nodes-base.set","typeVersion":3.4,"position":[1620,1340]},{"parameters":{"name":"get_sparse_vector","description":"Generates TD-IDF sparse vector for query","workflowId":{"__rl":true,"value":"={{ $workflow.id }}","mode":"id"}},"id":"41656356-aa50-448c-b8a0-645ad74ee72a","name":"Get Sparse Vector Tool1","type":"@n8n/n8n-nodes-langchain.toolWorkflow","typeVersion":1.2,"position":[2000,1520]},{"parameters":{"content":"## 6. Retrieval using Sparse Vectors and ReRanker (Retrieval Example)\nThis demonstration is similar to the previous step but is not using an AI Agent.\n\n**Required:**\nTo use this demonstration, you must complete the following:\n* Installed the updated version of the @Qdrant/js-client-rest module\n* Ensure your Qdrant instance is running and set the URL in the \"Qdrant with Cohere ReRank1\" node\n* Add your Cohere API key in the \"Qdrant with Cohere ReRank1\" node.","height":683.3722976015338,"width":838.4124151865863,"color":7},"id":"f0e932bc-473c-4ce5-ad29-1c014c7f5fea","name":"Sticky Note4","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[1440,1060]},{"parameters":{"content":"### Create Collection!\nYou need to create a Qdrant Collection as follows:\n\n* Go to http[s]:\\//<qdrant_url>/dashboard#/console\nIf you are hosting locally, this is usually http://localhost:6333/dashboard#/console\n* Copy the following into the left panel. This will tell Qdrant to create a new collection called “contextual_retrieval_example”. You can change this of course but you’ll also need to change all “collectionName” references in the template as well!\n\n```\nPUT collections/contextual_retrieval_example\n{\n  \"vectors\": {\n    \"default\": {\n      \"distance\": \"Cosine\",\n      \"size\": 1024\n    }\n  },\n  \"sparse_vectors\": {\n    \"bm42\": {\n      \"modifier\": \"idf\"\n    }\n  }\n}\n```","height":505.701259707935,"width":516.3129732020735},"id":"f7ad052a-a922-4255-a7d1-656ba92420b4","name":"Sticky Note5","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[3780,480]},{"parameters":{"fieldToSplitOut":"chunks","options":{"destinationFieldName":"chunk"}},"id":"392f3648-0a2a-469b-b496-14745dff2ef3","name":"Chunks To List","type":"n8n-nodes-base.splitOut","typeVersion":1,"position":[1980,600]},{"parameters":{"mode":"runOnceForEachItem","language":"python","pythonCode":"texts = [f\"{_('Generate Contextual Text').item.json.text}\\n---\\n{_('Chunks To List').item.json.chunk}\"]\n\nfrom sklearn.feature_extraction.text import TfidfVectorizer\n\n# Create TF-IDF vectorizer\nvectorizer = TfidfVectorizer()\n\n# Fit and transform the texts to generate TF-IDF vectors\nX = vectorizer.fit_transform(texts)\n\nreturn {\n  \"sparse\": {\n    \"indices\": X.indices.tolist(),\n    \"values\": X.data.tolist()\n  }\n}"},"id":"f893b0e7-9a8e-44b0-92dd-022ba7ea9b79","name":"Generate TF-IDF Sparse Vectors","type":"n8n-nodes-base.code","typeVersion":2,"position":[2500,600]},{"parameters":{"assignments":{"assignments":[{"id":"069d067c-3534-4939-8ff4-34dee02a9436","name":"chunk","value":"={{ $('Chunks To List').item.json.chunk }}","type":"string"},{"id":"24e01f4f-e156-47e9-a89e-9cbdccda6bd4","name":"text","value":"={{ $('Generate Contextual Text').item.json.text }}","type":"string"},{"id":"fa48ddaa-4658-463a-b1af-8308c24e325a","name":"sparse","value":"={{ $json.sparse }}","type":"object"},{"id":"442efe87-a826-402c-aadc-909923915d30","name":"title","value":"={{ $('Get Doc Attributes').first().json.output.title }}","type":"string"}]},"options":{}},"id":"92486150-9ac9-4fea-b59e-c420bc884423","name":"Get Values","type":"n8n-nodes-base.set","typeVersion":3.4,"position":[2680,600]},{"parameters":{"mode":"runOnceForEachItem","language":"python","pythonCode":"import json\nfrom sklearn.feature_extraction.text import TfidfVectorizer\n\n# Create TF-IDF vectorizer\nvectorizer = TfidfVectorizer()\n\n# Fit and transform the texts to generate TF-IDF vectors\ntexts = [_input.item.json.query]\nX = vectorizer.fit_transform(texts)\n\nreturn {\n  \"response\": {\n    \"indices\": X.indices.tolist(),\n    \"values\": X.data.tolist()\n  }\n}"},"id":"bf341002-d700-43ea-9ed9-8936e408d097","name":"Generate Sparse Vectors","type":"n8n-nodes-base.code","typeVersion":2,"position":[1920,1880]},{"parameters":{"content":"## Implementing Antrophic's Contextual Retrieval \n\nThis workflow is inspired by the Antrophic article, [\"Introducing Contextual Retrieval\"](https://www.anthropic.com/news/contextual-retrieval), and tries to replicate the instructions given.\n\n**Original post here**: https://community.n8n.io/t/building-the-ultimate-rag-setup-with-contextual-summaries-sparse-vectors-and-reranking/54861/1\n\n### Changelog\n2024-10-10 Updated to 1.62.1\n\n### Need Help?\nJoin the [Discord](https://discord.com/invite/XPKeKXeB7d) or ask in the [Forum](https://community.n8n.io/)!\n","height":634.9891793542789,"width":405.66570496276904},"id":"dfef0657-66c8-4501-a048-8fe1bc19a7a9","name":"Sticky Note6","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[0,0]},{"parameters":{"content":"### PART 1 of 2\nThis part generates and inserts into the vector store. You only have to do this once per document.","height":102.577757187954,"width":389.2978313113204,"color":5},"id":"810e2a24-f4f5-433f-acbb-bb9e48a23ded","name":"Sticky Note8","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[440,160]},{"parameters":{"content":"### PART 2 of 2\nThis part demostrates 2 examples of retrieve or query your sparse vectors.","height":80,"width":524.5591143796955,"color":5},"id":"4ec8d5b8-c18f-45e0-aa4b-7429041bb370","name":"Sticky Note9","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[460,960]},{"parameters":{"rules":{"values":[{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"leftValue":"={{ $json.route }}","rightValue":"get_sparse_vectors","operator":{"type":"string","operation":"equals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"get sparse vectors"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"84ac9b84-0e46-45da-b719-843d947ea429","leftValue":"={{ $json.route }}","rightValue":"my_other_thing","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"my other thing"}]},"options":{"fallbackOutput":"none"}},"id":"82338644-5268-415a-b6f0-d40183bfe05c","name":"Router","type":"n8n-nodes-base.switch","typeVersion":3.2,"position":[1680,1880]},{"parameters":{"promptType":"define","text":"=<document> \n{{ $('Extract from File').first().json.text }} \n</document>\nHere is the chunk we want to situate within the whole document \n<chunk> \n{{ $json.chunk }}\n</chunk> \nPlease give a short succinct context to situate this chunk within the overall document for the purposes of improving search retrieval of the chunk. Answer only with the succinct context and nothing else. "},"id":"03839b74-df24-4c48-b429-f88d10d7f2d5","name":"Generate Contextual Text","type":"@n8n/n8n-nodes-langchain.chainLlm","typeVersion":1.4,"position":[2160,600]},{"parameters":{"options":{}},"id":"004a65c0-bc9a-4292-bd12-310b63850b3f","name":"AI Agent","type":"@n8n/n8n-nodes-langchain.agent","typeVersion":1.6,"position":[780,1360]},{"parameters":{"content":"### Sparse Vector Tool for Agent\nUnfortunately there is a bug linking code tool to custom langchain code node so this is the only approach until that is fixed!","height":287.1680736478712,"width":652.0156501726113,"color":6},"id":"7c658233-1d3c-4520-a41e-9fad74b83e8f","name":"Sticky Note7","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[1460,1780]},{"parameters":{"url":"https://bitcoin.org/bitcoin.pdf","options":{}},"id":"db0194d7-3d35-4840-a13b-f2bb2cab9363","name":"Get Document","type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[540,460]},{"parameters":{"text":"={{ $json.text }}","attributes":{"attributes":[{"name":"title","description":"The title of the document.","required":true}]},"options":{}},"id":"4f588bf9-2726-49fd-a08c-77d680061dd8","name":"Get Doc Attributes","type":"@n8n/n8n-nodes-langchain.informationExtractor","typeVersion":1,"position":[900,460]},{"parameters":{"content":"## 1. Import Document PDF\n\nFor this demonstration, we'll use the Bitcoin Whitepaper from bitcoin.org.\nWe'll take this time to also extract specific document attributes which we can use as metadata.","height":513.3089035768523,"width":807.2147979360316,"color":7},"id":"6b0fb01d-2702-490a-ad34-e23cc8599cae","name":"Sticky Note10","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[440,280]},{"parameters":{"model":"llama3.3:latest","options":{}},"id":"413e14f8-54ef-4512-990b-6c24e5aa2c2f","name":"Ollama Chat Model","type":"@n8n/n8n-nodes-langchain.lmChatOllama","typeVersion":1,"position":[900,640],"credentials":{"ollamaApi":{"id":"SyWYISdp9guZoNay","name":"Ollama account"}}},{"parameters":{"model":"llama3.3:latest","options":{}},"id":"78ffbbbe-31ad-4dd3-8a72-e7f63456131a","name":"Ollama Chat Model1","type":"@n8n/n8n-nodes-langchain.lmChatOllama","typeVersion":1,"position":[2160,820],"credentials":{"ollamaApi":{"id":"SyWYISdp9guZoNay","name":"Ollama account"}}},{"parameters":{"model":"nomic-embed-text:latest"},"id":"908c756f-f8f3-4540-a106-60e7b4533ae1","name":"Embeddings Ollama","type":"@n8n/n8n-nodes-langchain.embeddingsOllama","typeVersion":1,"position":[3100,740],"credentials":{"ollamaApi":{"id":"SyWYISdp9guZoNay","name":"Ollama account"}}},{"parameters":{"model":"llama3.3:latest"},"id":"493282e6-14f2-4a6c-a3d3-97713c295039","name":"Embeddings Ollama1","type":"@n8n/n8n-nodes-langchain.embeddingsOllama","typeVersion":1,"position":[900,1720],"credentials":{"ollamaApi":{"id":"SyWYISdp9guZoNay","name":"Ollama account"}}},{"parameters":{"model":"nomic-embed-text:latest"},"id":"f6e0af75-9b9d-4aa2-8306-2ff634803e05","name":"Embeddings Ollama2","type":"@n8n/n8n-nodes-langchain.embeddingsOllama","typeVersion":1,"position":[1800,1520],"credentials":{"ollamaApi":{"id":"SyWYISdp9guZoNay","name":"Ollama account"}}},{"parameters":{"model":"llama3.3:latest","options":{}},"id":"0d2bfa4c-f4a4-45fb-a2d1-6801d78687cc","name":"Ollama Chat Model2","type":"@n8n/n8n-nodes-langchain.lmChatOllama","typeVersion":1,"position":[620,1580],"credentials":{"ollamaApi":{"id":"SyWYISdp9guZoNay","name":"Ollama account"}}},{"parameters":{"content":"### NO SUPPORT PROVIDED\nUnfortunately, local models are still currently prone to a lot of stability and accurracy issues which are near impossible for me to reproduce or explain. If you use this template, you do so understanding that I can't help with fixing your issues and you just have to figure it out for yourself.","height":140.02059752369627,"width":509.7219334301004,"color":3},"id":"593e672c-8436-46d3-aee7-8a3b0d8308f8","name":"Sticky Note11","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[440,0]},{"parameters":{"code":{"supplyData":{"code":"const { QdrantClient } = require('@qdrant/js-client-rest');\nconst { BM25Retriever } = require(\"@langchain/community/retrievers/bm25\");\nconst { DynamicTool } = require(\"@langchain/core/tools\");\n\n// 1. Tool Config\nconst name = 'bitcoin_whitepaper_tool';\nconst description = 'Call this tool to get information and/or context from the Bitcoin Whitepaper';\n\n// 2. Qdrant config\nconst client = new QdrantClient({ url: 'http://qdrant:6333' });\nconst collectionName = 'contextual_retrieval_example';\nconst limit = 20;\n\n// 3. Inputs\nconst embeddings = await this.getInputConnectionData('ai_embedding', 0);\nconst sparseVectorTool = await this.getInputConnectionData('ai_tool', 0);\n\n// 4. Tool definition\nconst vectorStoreTool = new DynamicTool({\n  name,\n  description,\n  func: async (input) => {\n    const denseVector = await embeddings.embedQuery(input);\n    const sparseVector = JSON.parse(await sparseVectorTool.invoke(input));\n\n    const response = await client.query(collectionName, {\n      prefetch: [\n        {\n          query: denseVector,\n          using: 'default',\n          limit: 100\n        },\n        {\n          query: sparseVector,\n          using: 'bm42',\n          limit: 100\n        }\n     ],\n     query: { fusion: 'rrf' },\n     with_payload: true,\n     limit,\n    });\n    \n    const docs = response.points.map(res => ({\n      pageContent: res.payload.content,\n      metadata: res.payload.metadata\n    }));\n    const retriever = BM25Retriever.fromDocuments(docs, { k: limit });\n    const rankedDocs = await retriever.invoke(query);\n    return JSON.stringify(rankedDocs);\n  }\n});\n\nreturn vectorStoreTool;"}},"inputs":{"input":[{"type":"ai_embedding","maxConnections":1,"required":true},{"type":"ai_tool","maxConnections":1,"required":true}]},"outputs":{"output":[{"type":"ai_tool"}]}},"id":"97bb974a-965c-4ea7-bd7b-9717a7408ce4","name":"Qdrant with BM25 ReRank","type":"@n8n/n8n-nodes-langchain.code","typeVersion":1,"position":[1020,1540]},{"parameters":{"code":{"execute":{"code":"const { QdrantClient } = require('@qdrant/js-client-rest');\nconst { BM25Retriever } = require(\"@langchain/community/retrievers/bm25\");\nconst { DynamicTool } = require(\"@langchain/core/tools\");\n\n// 1. Tool Config\nconst name = 'bitcoin_whitepaper_tool';\nconst description = 'Call this tool to get information and/or context from the Bitcoin Whitepaper';\n\n// 2. Qdrant config\nconst client = new QdrantClient({ url: 'http://qdrant:6333' });\nconst collectionName = 'contextual_retrieval_example';\nconst limit = 20;\n\n// 3. Inputs\nconst inputData = await this.getInputData();\nconst embeddings = await this.getInputConnectionData('ai_embedding', 0);\nconst sparseVectorTool = await this.getInputConnectionData('ai_tool', 0);\n\n// 4. Execute\nconst query = inputData[0].json.query;\n\nconst denseVector = await embeddings.embedQuery(query);\nconst sparseVector = JSON.parse(await sparseVectorTool.invoke(query));\n\nconst response = await client.query(collectionName, {\n  prefetch: [\n    {\n      query: denseVector,\n      using: 'default',\n      limit: 100\n    },\n    {\n      query: sparseVector,\n      using: 'bm42',\n      limit: 100\n    }\n ],\n query: { fusion: 'rrf' },\n with_payload: true,\n limit,\n});\n\nconst docs = response.points.map(res => ({\n  pageContent: res.payload.content,\n  metadata: res.payload.metadata\n}));\nconst retriever = BM25Retriever.fromDocuments(docs, { k: limit });\nconst rankedDocs = await retriever.invoke(query);\nreturn rankedDocs;"}},"inputs":{"input":[{"type":"main","maxConnections":1,"required":true},{"type":"ai_embedding","maxConnections":1,"required":true},{"type":"ai_tool","maxConnections":1,"required":true}]},"outputs":{"output":[{"type":"main"}]}},"id":"a47b22a9-6478-4eef-94f7-27baf085b0c2","name":"Qdrant with BM25 ReRank1","type":"@n8n/n8n-nodes-langchain.code","typeVersion":1,"position":[1800,1340]},{"parameters":{"code":{"execute":{"code":"const { randomUUID } = require('crypto') // Enable the crypto lib using env var NODE_FUNCTION_ALLOW_BUILTIN=crypto\nconst { QdrantClient } = require('@qdrant/js-client-rest');\n\n// 1. Qdrant config\nconst client = new QdrantClient({ url: 'http://qdrant:6333' });\nconst collectionName = 'contextual_retrieval_example';\n\n// 2. Inputs\nconst inputData = this.getInputData();\nconst embeddings = await this.getInputConnectionData('ai_embedding', 0);\nconst documentLoader = await this.getInputConnectionData('ai_document', 0);\n\n// 3. Run document loader\nconst docs = await documentLoader.processAll(inputData);\n\n// 4. generate points with sparse vectors\nconst points = [];\nlet vector = {};\nfor (let i=0,j=docs.length;i<j;i++) {\n  points.push({\n    id: randomUUID(),\n    vector: {\n      default: await embeddings.embedQuery(docs[i].pageContent),\n      bm42: inputData[i].json.sparse,\n    },\n    payload: {\n      content: docs[i].pageContent,\n      metadata: docs[i].metadata,\n    }\n  })\n}\n\n// 5. Delete existing vectors by title\nawait client.delete(collectionName, {\n  filter: {\n    must: [\n      {\n        key: \"metadata.title\",\n        match: { \"value\": docs[0].metadata.title }\n      }\n    ]\n  }\n});\n\n// 6. Upsert into Qdrant\nconst res = await client.upsert(collectionName, { points });\n\nreturn res;"}},"inputs":{"input":[{"type":"main","maxConnections":1,"required":true},{"type":"ai_embedding","maxConnections":1,"required":true},{"type":"ai_document","maxConnections":1,"required":true}]},"outputs":{"output":[{"type":"main"}]}},"id":"b053d6c7-63aa-4516-ba3f-a1e4f6d5d78a","name":"Insert Documents with Sparse Vectors","type":"@n8n/n8n-nodes-langchain.code","typeVersion":1,"position":[3140,560]}],"connections":{"When clicking ‘Test workflow’":{"main":[[{"node":"Get Document","type":"main","index":0}]]},"Extract from File":{"main":[[{"node":"Get Doc Attributes","type":"main","index":0}]]},"Create Chunks From Doc":{"main":[[{"node":"Chunks To List","type":"main","index":0}]]},"Default Data Loader":{"ai_document":[[{"node":"Insert Documents with Sparse Vectors","type":"ai_document","index":0}]]},"Recursive Character Text Splitter":{"ai_textSplitter":[[{"node":"Default Data Loader","type":"ai_textSplitter","index":0}]]},"When chat message received":{"main":[[{"node":"AI Agent","type":"main","index":0}]]},"Window Buffer Memory":{"ai_memory":[[{"node":"AI Agent","type":"ai_memory","index":0}]]},"Execute Workflow Trigger":{"main":[[{"node":"Router","type":"main","index":0}]]},"Get Sparse Vector Tool":{"ai_tool":[[{"node":"Qdrant with BM25 ReRank","type":"ai_tool","index":0}]]},"Query":{"main":[[{"node":"Qdrant with BM25 ReRank1","type":"main","index":0}]]},"Get Sparse Vector Tool1":{"ai_tool":[[{"node":"Qdrant with BM25 ReRank1","type":"ai_tool","index":0}]]},"Chunks To List":{"main":[[{"node":"Generate Contextual Text","type":"main","index":0}]]},"Generate TF-IDF Sparse Vectors":{"main":[[{"node":"Get Values","type":"main","index":0}]]},"Get Values":{"main":[[{"node":"Insert Documents with Sparse Vectors","type":"main","index":0}]]},"Router":{"main":[[{"node":"Generate Sparse Vectors","type":"main","index":0}]]},"Generate Contextual Text":{"main":[[{"node":"Generate TF-IDF Sparse Vectors","type":"main","index":0}]]},"Get Document":{"main":[[{"node":"Extract from File","type":"main","index":0}]]},"Get Doc Attributes":{"main":[[{"node":"Create Chunks From Doc","type":"main","index":0}]]},"Ollama Chat Model":{"ai_languageModel":[[{"node":"Get Doc Attributes","type":"ai_languageModel","index":0}]]},"Ollama Chat Model1":{"ai_languageModel":[[{"node":"Generate Contextual Text","type":"ai_languageModel","index":0}]]},"Embeddings Ollama":{"ai_embedding":[[{"node":"Insert Documents with Sparse Vectors","type":"ai_embedding","index":0}]]},"Embeddings Ollama1":{"ai_embedding":[[{"node":"Qdrant with BM25 ReRank","type":"ai_embedding","index":0}]]},"Embeddings Ollama2":{"ai_embedding":[[{"node":"Qdrant with BM25 ReRank1","type":"ai_embedding","index":0}]]},"Ollama Chat Model2":{"ai_languageModel":[[{"node":"AI Agent","type":"ai_languageModel","index":0}]]},"Qdrant with BM25 ReRank":{"ai_tool":[[{"node":"AI Agent","type":"ai_tool","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"a0e3d3ff-4df9-474b-8993-42b55bf7cbd9","triggerCount":0,"tags":[],"shared":[{"createdAt":"2025-05-22T03:04:26.728Z","updatedAt":"2025-05-22T03:04:26.728Z","role":"workflow:owner","workflowId":"dxYoEAURXOgJoTiV","projectId":"WbfPHUYYKS2tiNNo","project":{"createdAt":"2025-05-03T06:49:18.088Z","updatedAt":"2025-05-03T06:52:24.837Z","id":"WbfPHUYYKS2tiNNo","name":"charlie phan <scottyphan08@gmail.com>","type":"personal","icon":null,"description":null}}]},{"createdAt":"2025-05-23T01:57:48.057Z","updatedAt":"2025-05-23T02:15:00.218Z","id":"qPWmSTRyPn0ErVIh","name":"Hóa đơn","active":false,"isArchived":false,"nodes":[{"parameters":{"updates":["message"],"additionalFields":{"download":true}},"type":"n8n-nodes-base.telegramTrigger","typeVersion":1.2,"position":[-640,160],"id":"7c27779b-22a2-4ef5-89e0-2bad7d2884b4","name":"Telegram Trigger","webhookId":"06326da2-369a-4403-a5c4-0e04db43094c","credentials":{"telegramApi":{"id":"kXmnaXA6rCyKZ2To","name":"Telegram account AIVSAI"}}},{"parameters":{"promptType":"define","text":"Hãy phân tích hình ảnh và trả ra kết quả theo hướng dẫn","hasOutputParser":true,"options":{"systemMessage":"=Bạn là một chuyên gia phân tích hình ảnh. Nhiệm vụ của bạn là xem qua hình ảnh và trả ra kết quả theo hướng dẫn sau:\n\n1. Ngày phát sinh hoá đơn, định dạng yyyy-MM-dd (Nếu hoá đơn ghi khoản thời gian, thì lấy theo thời gian bắt đầu). Nó có thể nằm sau phần text \"Ngày\" hoặc \"Giờ in\"\nVí dụ:\n- 26/09/2003 12:00 => Trả ra kết quả \"2003-09-26\"\n- 03/10/2022 08:00 - 04/10/2022 09:00 => Trả ra kết quả \"2022-10-03\"\n2. Thông tin chi tiết hoá đơn theo format JSON:\n  {\n    \"product\": [\"Sản phẩm A\", \"Sản Phẩm B\"],\n    \"quantity\": [1,2],\n    \"unit_price\": [15000,3000],\n    \"revenue\": [15000,6000]\n  }\n\nTrong đó:\n- `product`: Tên các mặt hàng xuất hiện trong hoá đơn (ơ cột \"Tên Hàng\" hoặc \"Món\"). Ví dụ: Cà phê đá, bạc xỉu\n- `quantity`: Số lượng sản phẩm KH đã mua tương ứng của các mặt hàng (ở cột \"SL\").\n- `unit_price`: Đơn giá sản phẩm tương ứng (ở cột \"Đ.Giá\" hoặc \"Đ.GIÁ\")\n- `revenue`: Tổng tiền của mặt hàng đó trên hoá đơn, tính bằng `quantity` * `unit_price` (ở cột \"T.Tiền\" hoặc \"T.TIỀN\")\n\n\n### Output trả ra như sau:\n{\n  \"date\": \"Kết quả ngày dạng yyyy-MM-dd ở bước 1\",\n  \"details\":\n  {\n    \"product\": [\"Sản phẩm A\", \"Sản Phẩm B\"],\n    \"quantity\": [1,2],\n    \"unit_price\": [15000,3000],\n    \"revenue\": [15000,6000]\n  }\n}\n\n\n### Lưu ý quan trọng:\n- `quantity` luôn luôn > 0"}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":1.9,"position":[-40,140],"id":"f523b4da-e8e3-4c0d-aaa4-1b6aa7654ec6","name":"AI Agent"},{"parameters":{"jsonSchemaExample":"{\n  \"date\": \"Kết quả ngày dạng yyyy-MM-dd ở bước 1\",\n  \"details\":\n  {\n    \"product\": [\"Sản phẩm A\", \"Sản Phẩm B\"],\n    \"quantity\": [1,2],\n    \"unit_price\": [15000,3000],\n    \"revenue\": [15000,6000]\n  }\n}"},"type":"@n8n/n8n-nodes-langchain.outputParserStructured","typeVersion":1.2,"position":[160,360],"id":"c22df85f-abda-4c85-b705-ca15f6f59dfd","name":"Structured Output Parser"},{"parameters":{"jsCode":"const input = items[0].json;\nconst date = input.output.date;\nconst details = input.output.details;\n\nconst result = details.product.map((product, index) => ({\n  date: date,\n  product: product,\n  quantity: details.quantity[index],\n  unit_price: details.unit_price[index],\n  revenue: details.revenue[index]\n}));\n\nreturn result.map(item => ({ json: item }));"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[360,140],"id":"e9c22593-ad3d-4925-91b6-13ebd77d73e5","name":"Convert"},{"parameters":{"modelName":"models/gemini-2.0-flash-thinking-exp-1219","options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatGoogleGemini","typeVersion":1,"position":[-60,360],"id":"478690f2-be10-46bf-a81e-1d36c5405d4f","name":"flash think 1219","credentials":{"googlePalmApi":{"id":"VxuR4Ot4TSiJTVFk","name":"Google Gemini(PaLM) Api account"}}},{"parameters":{"operation":"append","documentId":{"__rl":true,"value":"1xCHDGIJoeMrPeS7qYMR0-qsaDH-jG13hHV3ktpbyMnM","mode":"list","cachedResultName":"Sales Hóa Đơn Demo","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1xCHDGIJoeMrPeS7qYMR0-qsaDH-jG13hHV3ktpbyMnM/edit?usp=drivesdk"},"sheetName":{"__rl":true,"value":"gid=0","mode":"list","cachedResultName":"Sales","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1xCHDGIJoeMrPeS7qYMR0-qsaDH-jG13hHV3ktpbyMnM/edit#gid=0"},"columns":{"mappingMode":"defineBelow","value":{"Date":"={{ $json.date }}","Product":"={{ $json.product }}","Quatity":"={{ $json.quantity }}","unit_price":"={{ $json.unit_price }}","Revenue":"={{ $json.revenue }}"},"matchingColumns":[],"schema":[{"id":"Date","displayName":"Date","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"Product","displayName":"Product","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"Quatity","displayName":"Quatity","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"unit_price","displayName":"unit_price","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"Revenue","displayName":"Revenue","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.googleSheets","typeVersion":4.5,"position":[580,140],"id":"e70d0495-19a1-48d5-9c25-051ab833fc46","name":"Thêm Record","credentials":{"googleSheetsOAuth2Api":{"id":"bdeAZgAgEmqpgnr1","name":"Google Sheets account"}}},{"parameters":{"fieldsToSummarize":{"values":[{"aggregation":"sum","field":"Revenue"}]},"options":{}},"type":"n8n-nodes-base.summarize","typeVersion":1.1,"position":[800,140],"id":"f872d036-da36-4ea5-9b66-ac8050a67652","name":"Tổng Bill"},{"parameters":{"chatId":"={{ $('Telegram Trigger').first().json.message.from.id }}","text":"=Hoá đơn ngày *{{ $('AI Agent').item.json.output.date }}* đã được thêm thành công vào Google Sheet:\n- Danh sách sản phẩm: {{ $('AI Agent').item.json.output.details.product }}\n- Tổng doanh thu: *{{ $json.sum_Revenue.format()}} VNĐ*","additionalFields":{"appendAttribution":false,"parse_mode":"Markdown"}},"type":"n8n-nodes-base.telegram","typeVersion":1.2,"position":[1020,140],"id":"f0525878-61bc-4572-8717-cd0ed33b57c7","name":"Thông Báo","webhookId":"56b680bc-530b-4025-868b-cb888ac4ab43","credentials":{"telegramApi":{"id":"kXmnaXA6rCyKZ2To","name":"Telegram account AIVSAI"}}},{"parameters":{"rules":{"values":[{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"leftValue":"={{ $json.message.photo }}","rightValue":"","operator":{"type":"array","operation":"exists","singleValue":true},"id":"5bbc4bad-d22e-47fc-a2e4-d10c3ae4d57c"}],"combinator":"and"},"renameOutput":true,"outputKey":"photo"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"3d8b9252-9102-42f8-bdd4-f8978f70aef4","leftValue":"={{ $json.message.text }}","rightValue":"","operator":{"type":"string","operation":"exists","singleValue":true}}],"combinator":"and"},"renameOutput":true,"outputKey":"report"}]},"options":{}},"type":"n8n-nodes-base.switch","typeVersion":3.2,"position":[-400,160],"id":"e27d37ab-2e19-4bcb-8a87-400b42a8d779","name":"Switch"},{"parameters":{"assignments":{"assignments":[{"id":"afb700e6-0cd2-4472-a60f-8718c04d260c","name":"date","value":"={{ $json.message.text.split(\" \")[1] }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-180,520],"id":"c80a61f7-a6d5-48a1-8678-c019f54f1518","name":"Get Date"},{"parameters":{"documentId":{"__rl":true,"value":"1xCHDGIJoeMrPeS7qYMR0-qsaDH-jG13hHV3ktpbyMnM","mode":"list","cachedResultName":"Sales Hóa Đơn Demo","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1xCHDGIJoeMrPeS7qYMR0-qsaDH-jG13hHV3ktpbyMnM/edit?usp=drivesdk"},"sheetName":{"__rl":true,"value":267729926,"mode":"list","cachedResultName":"Daily","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1xCHDGIJoeMrPeS7qYMR0-qsaDH-jG13hHV3ktpbyMnM/edit#gid=267729926"},"filtersUI":{"values":[{"lookupColumn":"Date","lookupValue":"={{ $json.date }}"}]},"options":{}},"type":"n8n-nodes-base.googleSheets","typeVersion":4.5,"position":[40,520],"id":"d1bb8997-12c9-48cb-b306-d4861d54eaf3","name":"Get Data","credentials":{"googleSheetsOAuth2Api":{"id":"bdeAZgAgEmqpgnr1","name":"Google Sheets account"}}},{"parameters":{"fieldsToSummarize":{"values":[{"aggregation":"sum","field":"Revenue"},{"field":"Product"}]},"options":{}},"type":"n8n-nodes-base.summarize","typeVersion":1.1,"position":[260,520],"id":"1da9ea3d-4f65-43f2-a5b0-09fd898104c5","name":"Report"},{"parameters":{"chatId":"={{ $('Telegram Trigger').item.json.message.from.id }}","text":"=Trong ngày *{{ $('Get Date').item.json.date }}* có kết quả kinh doanh như sau:\n- Số dòng ghi nhận: {{ $json.count_Product }}\n- Tổng doanh thu: * {{ $json.sum_Revenue.format() }}VNĐ*","additionalFields":{"appendAttribution":false,"parse_mode":"Markdown"}},"type":"n8n-nodes-base.telegram","typeVersion":1.2,"position":[480,520],"id":"a4dd73ec-3698-40f3-87db-5bb6e4ffdb9d","name":"Report Revenue","webhookId":"7a9954aa-b22e-47b4-966d-29e5f4faee67","credentials":{"telegramApi":{"id":"kXmnaXA6rCyKZ2To","name":"Telegram account AIVSAI"}}}],"connections":{"Telegram Trigger":{"main":[[{"node":"Switch","type":"main","index":0}]]},"Structured Output Parser":{"ai_outputParser":[[{"node":"AI Agent","type":"ai_outputParser","index":0}]]},"AI Agent":{"main":[[{"node":"Convert","type":"main","index":0}]]},"flash think 1219":{"ai_languageModel":[[{"node":"AI Agent","type":"ai_languageModel","index":0}]]},"Convert":{"main":[[{"node":"Thêm Record","type":"main","index":0}]]},"Thêm Record":{"main":[[{"node":"Tổng Bill","type":"main","index":0}]]},"Tổng Bill":{"main":[[{"node":"Thông Báo","type":"main","index":0}]]},"Switch":{"main":[[{"node":"AI Agent","type":"main","index":0}],[{"node":"Get Date","type":"main","index":0}]]},"Get Date":{"main":[[{"node":"Get Data","type":"main","index":0}]]},"Get Data":{"main":[[{"node":"Report","type":"main","index":0}]]},"Report":{"main":[[{"node":"Report Revenue","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"eb051916-2a32-4f92-b733-fe1d6115cb1d","triggerCount":0,"tags":[],"shared":[{"createdAt":"2025-05-23T01:57:48.057Z","updatedAt":"2025-05-23T01:57:48.057Z","role":"workflow:owner","workflowId":"qPWmSTRyPn0ErVIh","projectId":"WbfPHUYYKS2tiNNo","project":{"createdAt":"2025-05-03T06:49:18.088Z","updatedAt":"2025-05-03T06:52:24.837Z","id":"WbfPHUYYKS2tiNNo","name":"charlie phan <scottyphan08@gmail.com>","type":"personal","icon":null,"description":null}}]},{"createdAt":"2025-05-23T02:26:27.339Z","updatedAt":"2025-05-23T02:26:27.339Z","id":"CMpEe8UFzz9LZ8N2","name":"My workflow 8","active":false,"isArchived":false,"nodes":[{"parameters":{"method":"POST","url":"=https://yqtvdcvjboenlblgcivl.supabase.co/storage/v1/object/list/private","authentication":"predefinedCredentialType","nodeCredentialType":"supabaseApi","sendBody":true,"specifyBody":"json","jsonBody":"={\n  \"prefix\": \"\",\n  \"limit\": 100,\n  \"offset\": 0,\n  \"sortBy\": {\n    \"column\": \"name\",\n    \"order\": \"asc\"\n  }\n}","options":{}},"id":"a036a51d-168d-4ac4-bc89-3319ca9f6841","name":"Get All files","type":"n8n-nodes-base.httpRequest","position":[1220,1360],"typeVersion":4.2,"credentials":{"supabaseApi":{"id":"GwQHus8VDsBElGiE","name":"Supabase account localhost"}}},{"parameters":{"jsonMode":"expressionData","jsonData":"={{ $('Merge').item.json.data ?? $('Merge').item.json.text }}","options":{"metadata":{"metadataValues":[{"name":"=file_id","value":"={{ $json.id }}"}]}}},"id":"268de7d2-a6dc-4158-acf6-e29496d66509","name":"Default Data Loader","type":"@n8n/n8n-nodes-langchain.documentDefaultDataLoader","position":[2600,1560],"typeVersion":1},{"parameters":{"chunkSize":500,"chunkOverlap":200,"options":{}},"id":"5d00e431-cb83-46b9-94fd-74ba1137cf8d","name":"Recursive Character Text Splitter","type":"@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter","position":[2600,1740],"typeVersion":1},{"parameters":{"operation":"pdf","options":{}},"id":"9bb0d5fd-9ebc-43a1-8912-e545082791ad","name":"Extract Document PDF","type":"n8n-nodes-base.extractFromFile","position":[2060,1460],"typeVersion":1,"alwaysOutputData":false},{"parameters":{"model":"text-embedding-3-small","options":{}},"id":"6dcfb9c1-91f5-47a8-9926-05765f8f0525","name":"Embeddings OpenAI","type":"@n8n/n8n-nodes-langchain.embeddingsOpenAi","position":[2420,1540],"typeVersion":1},{"parameters":{"tableId":"files","fieldsUi":{"fieldValues":[{"fieldId":"name","fieldValue":"={{ $('Loop Over Items').item.json.name }}"},{"fieldId":"storage_id","fieldValue":"={{ $('Loop Over Items').item.json.id }}"}]}},"id":"1c975244-1bfc-4cff-bc76-f3fe37e0ebbb","name":"Create File record2","type":"n8n-nodes-base.supabase","position":[2360,1360],"typeVersion":1},{"parameters":{"conditions":{"options":{"version":2,"leftValue":"","caseSensitive":true,"typeValidation":"strict"},"combinator":"and","conditions":[{"id":"9b14e306-a04d-40f7-bc5b-b8eda8d8f7f2","operator":{"type":"boolean","operation":"true","singleValue":true},"leftValue":"={{ \n    !$('Aggregate').item.json.data || \n    !Array.isArray($('Aggregate').item.json.data) || \n    !$('Aggregate').item.json.data.some(item => \n        item.storage_id === $('Loop Over Items').item.json.id \n    ) \n}}","rightValue":""},{"id":"c3c0af88-9aea-4539-8948-1b69e601c27c","operator":{"type":"string","operation":"notEquals"},"leftValue":"={{ $json.name }}","rightValue":".emptyFolderPlaceholder"}]},"options":{}},"id":"78485b08-2860-4a5c-ac10-1d04ea5c9dc3","name":"If","type":"n8n-nodes-base.if","position":[1540,1360],"typeVersion":2.2},{"parameters":{"operation":"getAll","tableId":"files"},"id":"15d02987-73f7-41e7-8b88-a897c8cfe2b9","name":"Get All Files","type":"n8n-nodes-base.supabase","position":[840,1360],"typeVersion":1,"alwaysOutputData":true,"credentials":{"supabaseApi":{"id":"GwQHus8VDsBElGiE","name":"Supabase account localhost"}}},{"parameters":{"url":"=https://yqtvdcvjboenlblgcivl.supabase.co/storage/v1/object/private/{{ $json.name }}","authentication":"predefinedCredentialType","nodeCredentialType":"supabaseApi","options":{}},"id":"3d374529-a420-4a77-8b3c-e648a1e12f45","name":"Download","type":"n8n-nodes-base.httpRequest","position":[1720,1360],"typeVersion":4.2},{"parameters":{"batchSize":"=1","options":{}},"id":"d2d91991-f5ad-431d-b0bc-165ac6a61d50","name":"Loop Over Items","type":"n8n-nodes-base.splitInBatches","position":[1380,1360],"typeVersion":3},{"parameters":{},"id":"53288da3-543d-4789-838e-e713b9485fe0","name":"When clicking ‘Test workflow’","type":"n8n-nodes-base.manualTrigger","position":[660,1360],"typeVersion":1},{"parameters":{"aggregate":"aggregateAllItemData","options":{}},"id":"75de56dd-8c28-4699-8140-68674b246c3e","name":"Aggregate","type":"n8n-nodes-base.aggregate","position":[1040,1360],"typeVersion":1,"alwaysOutputData":true},{"parameters":{"options":{}},"id":"b63a4f9f-3f29-4ba7-b285-63971cc9c26e","name":"When chat message received","type":"@n8n/n8n-nodes-langchain.chatTrigger","position":[1620,440],"webhookId":"3c40d311-7996-4ed4-b2fa-c73bea5f4cf5","typeVersion":1.1},{"parameters":{"options":{}},"id":"cf1302b4-9a57-4e40-bd2d-165d8e611dbf","name":"OpenAI Chat Model1","type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","position":[1760,640],"typeVersion":1},{"parameters":{"model":"text-embedding-3-small","options":{}},"id":"ff9e0111-dbcf-49c8-b1d6-189e26212bcd","name":"Embeddings OpenAI2","type":"@n8n/n8n-nodes-langchain.embeddingsOpenAi","position":[1840,920],"typeVersion":1},{"parameters":{"options":{}},"id":"0b11f38e-5b6e-443a-911c-11f64b750419","name":"OpenAI Chat Model2","type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","position":[2120,780],"typeVersion":1},{"parameters":{"name":"knowledge_base","description":"Retrieve data about user request","topK":8},"id":"6050694e-f750-495b-bf0b-e17789e0870f","name":"Vector Store Tool1","type":"@n8n/n8n-nodes-langchain.toolVectorStore","position":[1920,640],"typeVersion":1},{"parameters":{"rules":{"values":[{"conditions":{"options":{"version":1,"leftValue":"","caseSensitive":true,"typeValidation":"strict"},"combinator":"and","conditions":[{"operator":{"type":"boolean","operation":"true","singleValue":true},"leftValue":"={{$binary.data?.fileExtension == undefined }}","rightValue":"txt"}]},"renameOutput":true,"outputKey":"txt"},{"conditions":{"options":{"version":1,"leftValue":"","caseSensitive":true,"typeValidation":"strict"},"combinator":"and","conditions":[{"id":"bf04cbec-dd86-4607-988f-4c96b6fd4b58","operator":{"type":"string","operation":"equals"},"leftValue":"={{$binary.data.fileExtension  }}","rightValue":"pdf"}]},"renameOutput":true,"outputKey":"pdf"}]},"options":{}},"id":"28661222-4a68-424a-a6b5-c9a2d30a598f","name":"Switch","type":"n8n-nodes-base.switch","position":[1880,1360],"typeVersion":3.1},{"parameters":{"mode":"insert","tableName":{"__rl":true,"mode":"list","value":"documents","cachedResultName":"documents"},"options":{"queryName":"match_documents"}},"id":"7fb11f42-da64-4b4f-89f1-07050ddc9dd3","name":"Insert into Supabase Vectorstore","type":"@n8n/n8n-nodes-langchain.vectorStoreSupabase","position":[2520,1360],"typeVersion":1},{"parameters":{},"id":"5e940711-84c8-479d-8776-3a9add1f9b42","name":"Merge","type":"n8n-nodes-base.merge","position":[2200,1360],"typeVersion":3},{"parameters":{"options":{}},"id":"a53b4420-e331-48e8-9c5e-9f39be711b9c","name":"AI Agent","type":"@n8n/n8n-nodes-langchain.agent","position":[1840,440],"typeVersion":1.7},{"parameters":{"tableName":{"__rl":true,"mode":"list","value":"documents","cachedResultName":"documents"},"options":{"metadata":{"metadataValues":[{"name":"file_id","value":"300b0128-0955-4058-b0d3-a9aefe728432"}]}}},"id":"4f98df3d-ea2c-4a04-a083-bb5fecb69f6c","name":"Supabase Vector Store","type":"@n8n/n8n-nodes-langchain.vectorStoreSupabase","position":[1840,800],"typeVersion":1},{"parameters":{"content":"### Replace Storage name, database ID and credentials.","height":89.3775420487804},"id":"5702c136-15af-4bd5-9b8b-61a5122f307b","name":"Sticky Note","type":"n8n-nodes-base.stickyNote","position":[1160,1240],"typeVersion":1},{"parameters":{"content":"### Replace credentials.","height":80},"id":"e4b4f5f7-fa37-467d-a248-50447cc56c51","name":"Sticky Note1","type":"n8n-nodes-base.stickyNote","position":[800,1240],"typeVersion":1},{"parameters":{"content":"### Replace credentials.","height":80},"id":"cbbd6f50-c579-461d-8c30-b338ec1f55c2","name":"Sticky Note2","type":"n8n-nodes-base.stickyNote","position":[2360,1240],"typeVersion":1},{"parameters":{"content":"### Replace Storage name, database ID and credentials.","height":89.3775420487804},"id":"2ba5d3f1-210e-4981-8a23-a6cc3f43a6be","name":"Sticky Note3","type":"n8n-nodes-base.stickyNote","position":[1660,1240],"typeVersion":1},{"parameters":{"content":"### Replace credentials.","height":80},"id":"63214929-428f-4b5b-9b0f-8fb598119e97","name":"Sticky Note4","type":"n8n-nodes-base.stickyNote","position":[2320,1680],"typeVersion":1},{"parameters":{"content":"### Replace credentials.","height":80},"id":"2f6c65d7-b58a-408e-9538-1119bf7e4d2f","name":"Sticky Note5","type":"n8n-nodes-base.stickyNote","position":[1960,940],"typeVersion":1},{"parameters":{"content":"### ... or watch set up video [10 min]\n[![Youtube Thumbnail](https://res.cloudinary.com/de9jgixzm/image/upload/v1739773273/Youtube%20Thumbs/Chat%20With%20FIles.png)](https://www.youtube.com/watch?v=glWUkdZe_3w)\n","height":239.5888196628349,"width":330.5152611046425,"color":7},"id":"6bed4cbb-f434-4d06-9aa8-46d94ab654ba","name":"Sticky Note9","type":"n8n-nodes-base.stickyNote","position":[300,520],"typeVersion":1},{"parameters":{"content":"![5min Logo](https://res.cloudinary.com/de9jgixzm/image/upload/v1739773200/Skool%20Assets/ejm3hqnvhgwpnu2fv92s.png)\n## AI Agent To Chat With Files In Supabase Storage\n**Made by [Mark Shcherbakov](https://www.linkedin.com/in/marklowcoding/) from community [5minAI](https://www.skool.com/5minai-2861)**\n\nManually retrieving and analyzing specific information from large document repositories is time-consuming and inefficient. This workflow automates the process by vectorizing documents and enabling AI-powered interactions, making it easy to query and retrieve context-based information from uploaded files.\n\nThe workflow integrates Supabase with an AI-powered chatbot to process, store, and query text and PDF files. The steps include:\n- Fetching and comparing files to avoid duplicate processing.\n- Handling file downloads and extracting content based on the file type.\n- Converting documents into vectorized data for contextual information retrieval.\n- Storing and querying vectorized data from a Supabase vector store.\n\n","height":497.1532689930921,"width":636.2128494576581,"color":7},"id":"4d776928-fd6c-41d4-98ec-2f6d31573b66","name":"Sticky Note7","type":"n8n-nodes-base.stickyNote","position":[0,0],"typeVersion":1},{"parameters":{"content":"### Set up steps\n\n1. **Fetch File List from Supabase**:\n   - Use Supabase to retrieve the stored file list from a specified bucket.\n   - Add logic to manage empty folder placeholders returned by Supabase, avoiding incorrect processing.\n\n2. **Compare and Filter Files**:\n   - Aggregate the files retrieved from storage and compare them to the existing list in the Supabase `files` table.\n   - Exclude duplicates and skip placeholder files to ensure only unprocessed files are handled.\n\n3. **Handle File Downloads**:\n   - Download new files using detailed storage configurations for public/private access.\n   - Adjust the storage settings and GET requests to match your Supabase setup.\n\n4. **File Type Processing**:\n   - Use a Switch node to target specific file types (e.g., PDFs or text files).\n   - Employ relevant tools to process the content:\n     - For PDFs, extract embedded content.\n     - For text files, directly process the text data.\n\n5. **Content Chunking**:\n   - Break large text data into smaller chunks using the Text Splitter node.\n   - Define chunk size (default: 500 tokens) and overlap to retain necessary context across chunks.\n\n6. **Vector Embedding Creation**:\n   - Generate vectorized embeddings for the processed content using OpenAI's embedding tools.\n   - Ensure metadata, such as file ID, is included for easy data retrieval.\n\n7. **Store Vectorized Data**:\n   - Save the vectorized information into a dedicated Supabase vector store.\n   - Use the default schema and table provided by Supabase for seamless setup.\n\n8. **AI Chatbot Integration**:\n   - Add a chatbot node to handle user input and retrieve relevant document chunks.\n   - Use metadata like file ID for targeted queries, especially when multiple documents are involved.","height":545.9087885077763,"width":280.2462120317618,"color":7},"id":"de83dd06-c7ef-4a41-b97d-b427043a3122","name":"Sticky Note6","type":"n8n-nodes-base.stickyNote","position":[0,520],"typeVersion":1},{"parameters":{"content":"## Scenario 2 - AI agent","height":809.7437181509877,"width":951.7421645394404,"color":5},"id":"9da2eb93-864e-41f9-896c-4165b3e97fca","name":"Sticky Note8","type":"n8n-nodes-base.stickyNote","position":[1360,300],"typeVersion":1},{"parameters":{"content":"## Scenario 1 - Flow for adding new files from Supabase storage","height":739.2522526116408,"width":2304.723519246249,"color":5},"id":"12f5939c-bb07-4d7c-ae92-99a220a3c5e2","name":"Sticky Note10","type":"n8n-nodes-base.stickyNote","position":[560,1180],"typeVersion":1}],"connections":{"If":{"main":[[{"node":"Download","type":"main","index":0}],[{"node":"Loop Over Items","type":"main","index":0}]]},"Merge":{"main":[[{"node":"Create File record2","type":"main","index":0}]]},"Switch":{"main":[[{"node":"Merge","type":"main","index":0}],[{"node":"Extract Document PDF","type":"main","index":0}]]},"Download":{"main":[[{"node":"Switch","type":"main","index":0}]]},"Aggregate":{"main":[[{"node":"Get All files","type":"main","index":0}]]},"Get All Files":{"main":[[{"node":"Aggregate","type":"main","index":0}]]},"Get All files":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Loop Over Items":{"main":[[],[{"node":"If","type":"main","index":0}]]},"Embeddings OpenAI":{"ai_embedding":[[{"node":"Insert into Supabase Vectorstore","type":"ai_embedding","index":0}]]},"Embeddings OpenAI2":{"ai_embedding":[[{"node":"Supabase Vector Store","type":"ai_embedding","index":0}]]},"OpenAI Chat Model1":{"ai_languageModel":[[{"node":"AI Agent","type":"ai_languageModel","index":0}]]},"OpenAI Chat Model2":{"ai_languageModel":[[{"node":"Vector Store Tool1","type":"ai_languageModel","index":0}]]},"Vector Store Tool1":{"ai_tool":[[{"node":"AI Agent","type":"ai_tool","index":0}]]},"Create File record2":{"main":[[{"node":"Insert into Supabase Vectorstore","type":"main","index":0}]]},"Default Data Loader":{"ai_document":[[{"node":"Insert into Supabase Vectorstore","type":"ai_document","index":0}]]},"Extract Document PDF":{"main":[[{"node":"Merge","type":"main","index":1}]]},"Supabase Vector Store":{"ai_vectorStore":[[{"node":"Vector Store Tool1","type":"ai_vectorStore","index":0}]]},"When chat message received":{"main":[[{"node":"AI Agent","type":"main","index":0}]]},"Insert into Supabase Vectorstore":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Recursive Character Text Splitter":{"ai_textSplitter":[[{"node":"Default Data Loader","type":"ai_textSplitter","index":0}]]},"When clicking ‘Test workflow’":{"main":[[{"node":"Get All Files","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":null,"pinData":{},"versionId":"4c2300e6-1512-487e-8bc3-258d04750c4c","triggerCount":0,"tags":[],"shared":[{"createdAt":"2025-05-23T02:26:27.339Z","updatedAt":"2025-05-23T02:26:27.339Z","role":"workflow:owner","workflowId":"CMpEe8UFzz9LZ8N2","projectId":"WbfPHUYYKS2tiNNo","project":{"createdAt":"2025-05-03T06:49:18.088Z","updatedAt":"2025-05-03T06:52:24.837Z","id":"WbfPHUYYKS2tiNNo","name":"charlie phan <scottyphan08@gmail.com>","type":"personal","icon":null,"description":null}}]},{"createdAt":"2025-05-23T02:40:53.993Z","updatedAt":"2025-05-23T03:05:09.104Z","id":"ecYlma5oNlF48oPM","name":"Xoso","active":false,"isArchived":false,"nodes":[{"parameters":{"jsCode":"const today = new Date();\nconst dayOfWeek = today.getDay();\nconst days = ['Chủ Nhật', 'Thứ Hai', 'Thứ Ba', 'Thứ Tư', 'Thứ Năm', 'Thứ Sáu', 'Thứ Bảy'];\nreturn [{ day: days[dayOfWeek] }];"},"type":"n8n-nodes-base.code","typeVersion":1,"position":[-260,280],"id":"82f5ec6b-ce9a-431a-8b4f-40611fd9032f","name":"Get Date"},{"parameters":{"rule":{"interval":[{"triggerAtHour":17}]}},"type":"n8n-nodes-base.scheduleTrigger","typeVersion":1.2,"position":[-680,280],"id":"5007857b-0b80-4009-a52b-d7d712d289a5","name":"Schedule Trigger"},{"parameters":{"assignments":{"assignments":[{"id":"dad75c87-5f21-4a22-b9cd-1adba909e0b6","name":"date","value":"={{ $json.timestamp.toDateTime().format('dd-MM-yyyy') }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-460,280],"id":"44d5d973-8b98-4fcd-bebb-b1ac6c06289d","name":"Lấy Ngày"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"90eca40f-1812-4044-aa1c-acac2cc90387","leftValue":"={{ $json.day }}","rightValue":"Thứ Hai","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}},{"id":"f7cc6825-a0f7-4c9b-ab20-2343ccaaf5f1","leftValue":"={{ $json.day }}","rightValue":"Thứ Tư","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"or"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[-60,280],"id":"f10741eb-1a63-41d1-a4ff-444a2c5420f9","name":"If"},{"parameters":{"url":"=https://www.kqxs.vn/mien-nam/xo-so-ho-chi-minh?date={{ $('Lấy Ngày').item.json.date }}","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[180,160],"id":"16717c73-4b8f-4008-8466-372ac0cb2197","name":"Get Xổ Số"},{"parameters":{},"type":"n8n-nodes-base.noOp","typeVersion":1,"position":[180,440],"id":"f7a01066-8b1f-48f2-9f2b-a0610b369fd5","name":"No Operation, do nothing"},{"parameters":{"jsCode":"const inputData = $input.first().json; // Lấy dữ liệu từ node trước\n\n// Kiểm tra và lấy dữ liệu HTML từ các trường có thể\nlet html = '';\nif (inputData) {\n  if (typeof inputData.body === 'string') {\n    html = inputData.body;\n  } else if (typeof inputData.html === 'string') {\n    html = inputData.html;\n  } else if (typeof inputData.data === 'string') {\n    html = inputData.data;\n  } else if (typeof inputData === 'string') {\n    html = inputData;\n  } else {\n    console.log('Dữ liệu đầu vào:', JSON.stringify(inputData));\n    throw new Error('Không tìm thấy trường chứa dữ liệu HTML dưới dạng chuỗi');\n  }\n} else {\n  throw new Error('Dữ liệu đầu vào từ node trước không tồn tại');\n}\n\n// Regex để tìm đoạn HTML chứa bảng kết quả xổ số\nconst tableRegex = /<table class=\"table-fixed tbldata table-result-lottery\".*?>.*?<\\/table>/s;\nconst match = html.match(tableRegex);\n\nif (!match) {\n  throw new Error('Không tìm thấy bảng kết quả xổ số trong dữ liệu HTML');\n}\n\n// Lấy đoạn HTML của bảng\nconst tableHtml = match[0];\n\n// Trả về đoạn HTML dưới dạng JSON\nreturn [{ json: { tableHtml } }];"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[400,160],"id":"6f89e2bc-68a2-4c23-9e8c-609428b4021e","name":"Extract Bảng Chứa Kết Quả"},{"parameters":{"jsCode":"const inputData = $input.first().json; // Lấy dữ liệu từ node trước\n\n// Kiểm tra và lấy đoạn tableHtml\nlet tableHtml = '';\nif (inputData && typeof inputData.tableHtml === 'string') {\n  tableHtml = inputData.tableHtml;\n} else {\n  console.log('Dữ liệu đầu vào:', JSON.stringify(inputData));\n  throw new Error('Không tìm thấy trường tableHtml chứa dữ liệu HTML dưới dạng chuỗi');\n}\n\n// Khởi tạo đối tượng JSON để lưu kết quả\nconst result = {};\n\n// Tách HTML thành các hàng <tr>\nconst rowRegex = /<tr>([\\s\\S]*?)(?=<tr>|<\\/tbody>)/gs;\nconst prizeRegex = /<td class=\"prize\"(?: rowspan=\"\\d+\")?>([\\s\\S]*?)<\\/td>/s;\nconst resultsRegex = /<td class=\"results\">([\\s\\S]*?)<\\/td>/gs;\nconst numberRegex = /<span data-value=\"(\\d+)\"/g;\n\nlet currentPrize = null;\nlet rowspanRemaining = 0;\n\nlet match;\nwhile ((match = rowRegex.exec(tableHtml)) !== null) {\n  const rowContent = match[1];\n\n  // Kiểm tra nếu hàng này có <td class=\"prize\">\n  const prizeMatch = rowContent.match(prizeRegex);\n  if (prizeMatch) {\n    let prizeName = prizeMatch[1].trim().replace(/<[^>]+>/g, '').trim();\n\n    // Giữ nguyên tên giải từ HTML\n    currentPrize = prizeName;\n\n    // Khởi tạo mảng cho giải nếu chưa tồn tại\n    if (!result[currentPrize]) {\n      result[currentPrize] = [];\n    }\n\n    // Kiểm tra rowspan\n    const rowspanMatch = rowContent.match(/rowspan=\"(\\d+)\"/);\n    rowspanRemaining = rowspanMatch ? parseInt(rowspanMatch[1], 10) - 1 : 0;\n  }\n\n  // Kiểm tra nếu có currentPrize\n  if (!currentPrize && rowspanRemaining <= 0) {\n    continue;\n  }\n\n  // Tìm tất cả các <td class=\"results\"> trong hàng này\n  let resultsMatch;\n  while ((resultsMatch = resultsRegex.exec(rowContent)) !== null) {\n    const resultsContent = resultsMatch[1];\n    let numberMatch;\n    while ((numberMatch = numberRegex.exec(resultsContent)) !== null) {\n      const number = numberMatch[1];\n      result[currentPrize].push(number);\n    }\n  }\n\n  // Giảm số hàng còn lại của rowspan\n  if (rowspanRemaining > 0) {\n    rowspanRemaining--;\n  } else {\n    currentPrize = null; // Reset currentPrize sau khi hết rowspan\n  }\n}\n\n// Lọc và làm sạch số trúng thưởng (loại bỏ trùng lặp nếu cần)\nfor (let prize in result) {\n  result[prize] = [...new Set(result[prize].map(num => num.trim()))];\n}\n\n// Trả về kết quả\nreturn [{ json: result }];"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[620,160],"id":"7cb2177b-24df-4ffc-a3fd-84157da28020","name":"Get Kết Quả"},{"parameters":{"operation":"append","documentId":{"__rl":true,"value":"1R7t3VwHk4v9JsB0jmFuhmY51qdBZwYZK_M7Ne7R1j2E","mode":"list","cachedResultName":"Bản sao của Sổ Xố Làm Giàu - Demo","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1R7t3VwHk4v9JsB0jmFuhmY51qdBZwYZK_M7Ne7R1j2E/edit?usp=drivesdk"},"sheetName":{"__rl":true,"value":416133864,"mode":"list","cachedResultName":"all","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1NSMWn8Gh_zbgCNFXj3_3noFsOSATkJN4sblwEaRXfUY/edit#gid=416133864"},"columns":{"mappingMode":"defineBelow","value":{"Ngày":"={{ $('Schedule Trigger').item.json.timestamp.toDateTime().format('yyyy-MM-dd') }}","Giải tám":"={{ $json['Giải tám'].join() }}","Giải bảy":"={{ $json['Giải bảy'].join() }}","Giải sáu":"={{ $json['Giải sáu'].join() }}","Giải năm":"={{ $json['Giải năm'].join() }}","Giải tư":"={{ $json['Giải tư'].join() }}","Giải ba":"={{ $json['Giải ba'].join() }}","Giải nhì":"={{ $json['Giải nhì'].join() }}","Giải nhất":"={{ $json['Giải nhất'].join() }}","Đặc biệt":"={{ $json['Đặc biệt'].join() }}"},"matchingColumns":[],"schema":[{"id":"Ngày","displayName":"Ngày","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"Thứ","displayName":"Thứ","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":true},{"id":"Giải tám","displayName":"Giải tám","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"Giải bảy","displayName":"Giải bảy","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"Giải sáu","displayName":"Giải sáu","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"Giải năm","displayName":"Giải năm","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"Giải tư","displayName":"Giải tư","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"Giải ba","displayName":"Giải ba","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"Giải nhì","displayName":"Giải nhì","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"Giải nhất","displayName":"Giải nhất","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"Đặc biệt","displayName":"Đặc biệt","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.googleSheets","typeVersion":4.5,"position":[840,160],"id":"b1f34b19-4ff0-4240-927c-32a1a42cc318","name":"Update Data","credentials":{"googleSheetsOAuth2Api":{"id":"bdeAZgAgEmqpgnr1","name":"Google Sheets account"}}},{"parameters":{},"type":"n8n-nodes-base.manualTrigger","typeVersion":1,"position":[-740,1240],"id":"2cfda932-f50c-4cc8-a7ca-c1399ca9db62","name":"When clicking ‘Test workflow’"},{"parameters":{"documentId":{"__rl":true,"value":"1R7t3VwHk4v9JsB0jmFuhmY51qdBZwYZK_M7Ne7R1j2E","mode":"list","cachedResultName":"Bản sao của Sổ Xố Làm Giàu - Demo","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1R7t3VwHk4v9JsB0jmFuhmY51qdBZwYZK_M7Ne7R1j2E/edit?usp=drivesdk"},"sheetName":{"__rl":true,"value":416133864,"mode":"list","cachedResultName":"all","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1R7t3VwHk4v9JsB0jmFuhmY51qdBZwYZK_M7Ne7R1j2E/edit#gid=416133864"},"options":{}},"type":"n8n-nodes-base.googleSheets","typeVersion":4.5,"position":[-520,1240],"id":"1a77d4a2-ea68-499d-bd41-c4bdefb61261","name":"Google Sheets","credentials":{"googleSheetsOAuth2Api":{"id":"bdeAZgAgEmqpgnr1","name":"Google Sheets account"}}},{"parameters":{"options":{}},"type":"n8n-nodes-base.splitInBatches","typeVersion":3,"position":[-100,1240],"id":"ca53a2b4-2704-4adf-96e5-ca76f1858df1","name":"Loop Over Items"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"loose","version":2},"conditions":[{"id":"3347208f-df7a-4835-8527-3fad2efa3762","leftValue":"={{ $json['Giải tám'] }}","rightValue":"","operator":{"type":"string","operation":"empty","singleValue":true}}],"combinator":"and"},"looseTypeValidation":true,"options":{}},"type":"n8n-nodes-base.filter","typeVersion":2.2,"position":[-320,1240],"id":"3fc8a753-6d15-4ea2-8e80-a16411998907","name":"Filter"},{"parameters":{"amount":1},"type":"n8n-nodes-base.wait","typeVersion":1.1,"position":[940,1260],"id":"de247270-7b6e-47c0-938e-e82073c2739e","name":"Wait","webhookId":"d1dd5735-89b8-4c0a-aa24-2b4ba94338ff"},{"parameters":{"chatId":"730141489","text":"=Kết quả số xố TPHCM ngày {{ $('Lấy Ngày').item.json.date }}:\n\n- *Giải tám*: {{ $('Get Kết Quả').item.json['Giải tám'].join() }}\n- *Giải bảy*: {{ $('Get Kết Quả').item.json['Giải bảy'].join() }}\n- *Giải sáu*: {{ $('Get Kết Quả').item.json['Giải sáu'].join() }}\n- *Giải năm*: {{ $('Get Kết Quả').item.json['Giải năm'].join() }}\n- *Giải tư*: {{ $('Get Kết Quả').item.json['Giải tư'].join() }}\n- *Giải ba*: {{ $('Get Kết Quả').item.json['Giải ba'].join() }}\n- *Giải nhì*: {{ $('Get Kết Quả').item.json['Giải nhì'].join() }}\n- *Giải nhất*: {{ $('Get Kết Quả').item.json['Giải nhất'].join() }}\n- *ĐẶC BIỆT*: {{ $('Get Kết Quả').item.json['Đặc biệt'].join() }}\n\nDữ liệu đã cập nhật lên trên bảng tính: [TẠI ĐÂY](https://docs.google.com/spreadsheets/d/1NSMWn8Gh_zbgCNFXj3_3noFsOSATkJN4sblwEaRXfUY/edit?gid=1353700484#gid=1353700484)\n\n","additionalFields":{"appendAttribution":false,"parse_mode":"Markdown"}},"type":"n8n-nodes-base.telegram","typeVersion":1.2,"position":[1060,160],"id":"cd6af10f-4905-4824-8ab8-e587cc2fc2a6","name":"Gửi Thông Báo","webhookId":"29b446ca-96cb-4c45-8660-abe8ea18981c","credentials":{"telegramApi":{"id":"I69z6e5cYkew5SXv","name":"Telegram n8nclp Chat"}}},{"parameters":{"updates":["message"],"additionalFields":{}},"type":"n8n-nodes-base.telegramTrigger","typeVersion":1.2,"position":[-720,740],"id":"1f3bf565-2853-4b6d-b00c-f31d9de076cb","name":"Telegram Trigger","webhookId":"a60515f2-ca11-4549-96dc-92e3d4972c73","credentials":{"telegramApi":{"id":"I69z6e5cYkew5SXv","name":"Telegram n8nclp Chat"}}},{"parameters":{"assignments":{"assignments":[{"id":"a8a19591-efd2-4bc3-a6bf-4cc3aedc9c51","name":"mess","value":"={{ $json.message.text }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-520,740],"id":"fe4cb6e0-73ee-43bb-9366-f6e4ffaa271b","name":"Get Mess"},{"parameters":{"rules":{"values":[{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"leftValue":"={{ $json.mess }}","rightValue":"top3","operator":{"type":"string","operation":"contains"},"id":"2f3bce67-e405-4c78-b9fd-77492b5569ea"}],"combinator":"and"},"renameOutput":true,"outputKey":"top3"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"c29f71b7-102f-4f46-964e-0de55e4f472b","leftValue":"={{ $json.mess }}","rightValue":"check","operator":{"type":"string","operation":"contains"}}],"combinator":"and"},"renameOutput":true,"outputKey":"check"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"8067bade-887b-4c87-a11b-2703470c7cde","leftValue":"={{ $json.mess }}","rightValue":"","operator":{"type":"string","operation":"exists","singleValue":true}}],"combinator":"and"},"renameOutput":true,"outputKey":"other"}]},"options":{}},"type":"n8n-nodes-base.switch","typeVersion":3.2,"position":[-300,740],"id":"8998a360-7f05-4f8a-b0de-ae5e8b6fce97","name":"Switch"},{"parameters":{"assignments":{"assignments":[{"id":"ef42470b-66b1-4db0-95f5-10373e37095e","name":"number","value":"={{ $json.mess.split(\" \")[1] }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-80,840],"id":"62228c51-a4f4-462b-b666-0977cb885a01","name":"Get Number"},{"parameters":{"documentId":{"__rl":true,"value":"1R7t3VwHk4v9JsB0jmFuhmY51qdBZwYZK_M7Ne7R1j2E","mode":"list","cachedResultName":"Bản sao của Sổ Xố Làm Giàu - Demo","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1R7t3VwHk4v9JsB0jmFuhmY51qdBZwYZK_M7Ne7R1j2E/edit?usp=drivesdk"},"sheetName":{"__rl":true,"value":1353700484,"mode":"list","cachedResultName":"analyze","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1R7t3VwHk4v9JsB0jmFuhmY51qdBZwYZK_M7Ne7R1j2E/edit#gid=1353700484"},"options":{}},"type":"n8n-nodes-base.googleSheets","typeVersion":4.5,"position":[160,840],"id":"1c302747-a2d3-4801-940f-86fc1eaa7594","name":"Get Analyze","credentials":{"googleSheetsOAuth2Api":{"id":"bdeAZgAgEmqpgnr1","name":"Google Sheets account"}}},{"parameters":{"assignments":{"assignments":[{"id":"9f185a43-a36d-4457-9afd-61d534d9fe90","name":"total_count","value":"={{ $json['Số Lần Xuất Hiện'] }}","type":"number"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[380,840],"id":"01680833-ff5d-4c20-aee2-de6a58da4808","name":"Tổng Số Lần"},{"parameters":{"fieldsToSummarize":{"values":[{"aggregation":"sum","field":"total_count"}]},"options":{}},"type":"n8n-nodes-base.summarize","typeVersion":1.1,"position":[600,840],"id":"97c73e47-7604-4f6b-bda7-2427c4aa4ee8","name":"Summarize"},{"parameters":{"documentId":{"__rl":true,"value":"1R7t3VwHk4v9JsB0jmFuhmY51qdBZwYZK_M7Ne7R1j2E","mode":"list","cachedResultName":"Bản sao của Sổ Xố Làm Giàu - Demo","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1R7t3VwHk4v9JsB0jmFuhmY51qdBZwYZK_M7Ne7R1j2E/edit?usp=drivesdk"},"sheetName":{"__rl":true,"value":1353700484,"mode":"list","cachedResultName":"analyze","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1NSMWn8Gh_zbgCNFXj3_3noFsOSATkJN4sblwEaRXfUY/edit#gid=1353700484"},"filtersUI":{"values":[{"lookupColumn":"2 Số Cuối","lookupValue":"={{ $('Get Number').item.json.number }}"}]},"options":{}},"type":"n8n-nodes-base.googleSheets","typeVersion":4.5,"position":[820,840],"id":"60b59a97-c826-4443-956f-00e899a8bdf1","name":"Check Số","credentials":{"googleSheetsOAuth2Api":{"id":"bdeAZgAgEmqpgnr1","name":"Google Sheets account"}}},{"parameters":{"documentId":{"__rl":true,"value":"1R7t3VwHk4v9JsB0jmFuhmY51qdBZwYZK_M7Ne7R1j2E","mode":"list","cachedResultName":"Bản sao của Sổ Xố Làm Giàu - Demo","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1R7t3VwHk4v9JsB0jmFuhmY51qdBZwYZK_M7Ne7R1j2E/edit?usp=drivesdk"},"sheetName":{"__rl":true,"value":416133864,"mode":"list","cachedResultName":"all","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1R7t3VwHk4v9JsB0jmFuhmY51qdBZwYZK_M7Ne7R1j2E/edit#gid=416133864"},"options":{}},"type":"n8n-nodes-base.googleSheets","typeVersion":4.5,"position":[-80,620],"id":"37003167-2134-48d3-a5f7-73a2b2225ef1","name":"Get Analyze For TOP 3","credentials":{"googleSheetsOAuth2Api":{"id":"bdeAZgAgEmqpgnr1","name":"Google Sheets account"}}},{"parameters":{"assignments":{"assignments":[{"id":"3ecb19e2-ef87-4b23-9145-5d11c9867cdd","name":"top3_first","value":"={{ $('Get Analyze For TOP 3').all().slice(0,3) }}","type":"array"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[160,620],"id":"d4f792db-5f0c-43c7-9e01-a7277b1dcde6","name":"Lấy TOP 3 Đầu Tiên"},{"parameters":{},"type":"n8n-nodes-base.limit","typeVersion":1,"position":[380,620],"id":"5ba6da30-41f1-42f9-b23d-20d3c9580adb","name":"Limit"},{"parameters":{"assignments":{"assignments":[{"id":"3ecb19e2-ef87-4b23-9145-5d11c9867cdd","name":"top3","value":"={{ $('Get Analyze For TOP 3').all().slice(-3) }}","type":"array"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[600,620],"id":"e146f608-7cfb-4297-b278-9a3c8a2192c1","name":"Lấy TOP 3 Cuối"},{"parameters":{"jsCode":"// Lấy giá trị Số Lần Xuất Hiện từ mục đầu tiên\nconst a = $input.first().json['Số Lần Xuất Hiện'] || 0;\n\n// Lấy giá trị sum_total_count từ phần Summarize của mục đầu tiên\nconst b = $('Summarize').first().json.sum_total_count || 0;\n\n// Thực hiện phép chia\nconst result = (a / b * 100).toFixed(2);\n\n// Trả về kết quả\nreturn {\n  json: {\n    result: result\n  }\n};"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1040,840],"id":"3e566a87-43e4-4d8b-bcdf-767fcb799763","name":"Xác Suất Xuất Hiện"},{"parameters":{"chatId":"730141489","text":"=Tỷ lệ xuất hiện của số `{{ $('Get Number').item.json.number }}` cho 2 số cuối `Giải Tám` và `Giải Đặc Biệt` từ năm 2023 đến nay là: *{{ $json.result }}%*","additionalFields":{"appendAttribution":false}},"type":"n8n-nodes-base.telegram","typeVersion":1.2,"position":[1260,840],"id":"a9a58409-eb83-435e-8d72-cdabd15c415d","name":"Thông Báo Xác Suất","webhookId":"dafb6b04-0b33-443f-af34-1d6dcebfd7c4","credentials":{"telegramApi":{"id":"I69z6e5cYkew5SXv","name":"Telegram n8nclp Chat"}}},{"parameters":{"chatId":"730141489","text":"=Thống kê TOP cặp số có tỷ lệ trúng thưởng cao-thấp từ năm 2023 đến nay (xuất hiện ở `Giải Tám` và 2 số cuối `Đặc Biệt`), trong `{{ $('Get Analyze For TOP 3').all().length }}` kỳ quay thưởng:\n\n*TOP xuất hiện nhiều nhất*:\n1. `{{ $('Limit').item.json.top3_first[0].json['2 Số Cuối'] }}`: {{ $('Limit').item.json.top3_first[0].json['Số Lần Xuất Hiện'] }} lần\n2. `{{ $('Limit').item.json.top3_first[1].json['2 Số Cuối'] }}`: {{ $('Limit').item.json.top3_first[1].json['Số Lần Xuất Hiện'] }} lần\n3. `{{ $('Limit').item.json.top3_first[2].json['2 Số Cuối'] }}`: {{ $('Limit').item.json.top3_first[2].json['Số Lần Xuất Hiện'] }} lần\n\n*TOP xuất hiện ít nhất*:\n1. `{{ $json.top3[0].json['2 Số Cuối'] }}`: {{ $json.top3[0].json['Số Lần Xuất Hiện'] }} lần\n2. `{{ $json.top3[1].json['2 Số Cuối'] }}`: {{ $json.top3[1].json['Số Lần Xuất Hiện'] }} lần\n3. `{{ $json.top3[2].json['2 Số Cuối'] }}`: {{ $json.top3[2].json['Số Lần Xuất Hiện'] }} lần","additionalFields":{"appendAttribution":false}},"type":"n8n-nodes-base.telegram","typeVersion":1.2,"position":[820,620],"id":"606ada9d-b939-4c9f-8750-8aa4d89d66c8","name":"Thông Báo TOP 3","webhookId":"1bab9f73-5672-4388-b409-10e8d6d573c7","credentials":{"telegramApi":{"id":"I69z6e5cYkew5SXv","name":"Telegram n8nclp Chat"}}},{"parameters":{"url":"=https://www.kqxs.vn/mien-nam/xo-so-ho-chi-minh?date={{ $json['Ngày'].toDateTime().format('dd-MM-yyyy') }}","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[120,1260],"id":"79784163-d803-4e27-8b96-d3b3154d5462","name":"Get URL"},{"parameters":{"jsCode":"const inputData = $input.first().json; // Lấy dữ liệu từ node trước\n\n// Kiểm tra và lấy dữ liệu HTML từ các trường có thể\nlet html = '';\nif (inputData) {\n  if (typeof inputData.body === 'string') {\n    html = inputData.body;\n  } else if (typeof inputData.html === 'string') {\n    html = inputData.html;\n  } else if (typeof inputData.data === 'string') {\n    html = inputData.data;\n  } else if (typeof inputData === 'string') {\n    html = inputData;\n  } else {\n    console.log('Dữ liệu đầu vào:', JSON.stringify(inputData));\n    throw new Error('Không tìm thấy trường chứa dữ liệu HTML dưới dạng chuỗi');\n  }\n} else {\n  throw new Error('Dữ liệu đầu vào từ node trước không tồn tại');\n}\n\n// Regex để tìm đoạn HTML chứa bảng kết quả xổ số\nconst tableRegex = /<table class=\"table-fixed tbldata table-result-lottery\".*?>.*?<\\/table>/s;\nconst match = html.match(tableRegex);\n\nif (!match) {\n  throw new Error('Không tìm thấy bảng kết quả xổ số trong dữ liệu HTML');\n}\n\n// Lấy đoạn HTML của bảng\nconst tableHtml = match[0];\n\n// Trả về đoạn HTML dưới dạng JSON\nreturn [{ json: { tableHtml } }];"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[320,1260],"id":"98ee7f98-0381-4af5-bfc8-e50cbc7a682f","name":"Extract Table"},{"parameters":{"jsCode":"const inputData = $input.first().json; // Lấy dữ liệu từ node trước\n\n// Kiểm tra và lấy đoạn tableHtml\nlet tableHtml = '';\nif (inputData && typeof inputData.tableHtml === 'string') {\n  tableHtml = inputData.tableHtml;\n} else {\n  console.log('Dữ liệu đầu vào:', JSON.stringify(inputData));\n  throw new Error('Không tìm thấy trường tableHtml chứa dữ liệu HTML dưới dạng chuỗi');\n}\n\n// Khởi tạo đối tượng JSON để lưu kết quả\nconst result = {};\n\n// Tách HTML thành các hàng <tr>\nconst rowRegex = /<tr>([\\s\\S]*?)(?=<tr>|<\\/tbody>)/gs;\nconst prizeRegex = /<td class=\"prize\"(?: rowspan=\"\\d+\")?>([\\s\\S]*?)<\\/td>/s;\nconst resultsRegex = /<td class=\"results\">([\\s\\S]*?)<\\/td>/gs;\nconst numberRegex = /<span data-value=\"(\\d+)\"/g;\n\nlet currentPrize = null;\nlet rowspanRemaining = 0;\n\nlet match;\nwhile ((match = rowRegex.exec(tableHtml)) !== null) {\n  const rowContent = match[1];\n\n  // Kiểm tra nếu hàng này có <td class=\"prize\">\n  const prizeMatch = rowContent.match(prizeRegex);\n  if (prizeMatch) {\n    let prizeName = prizeMatch[1].trim().replace(/<[^>]+>/g, '').trim();\n\n    // Giữ nguyên tên giải từ HTML\n    currentPrize = prizeName;\n\n    // Khởi tạo mảng cho giải nếu chưa tồn tại\n    if (!result[currentPrize]) {\n      result[currentPrize] = [];\n    }\n\n    // Kiểm tra rowspan\n    const rowspanMatch = rowContent.match(/rowspan=\"(\\d+)\"/);\n    rowspanRemaining = rowspanMatch ? parseInt(rowspanMatch[1], 10) - 1 : 0;\n  }\n\n  // Kiểm tra nếu có currentPrize\n  if (!currentPrize && rowspanRemaining <= 0) {\n    continue;\n  }\n\n  // Tìm tất cả các <td class=\"results\"> trong hàng này\n  let resultsMatch;\n  while ((resultsMatch = resultsRegex.exec(rowContent)) !== null) {\n    const resultsContent = resultsMatch[1];\n    let numberMatch;\n    while ((numberMatch = numberRegex.exec(resultsContent)) !== null) {\n      const number = numberMatch[1];\n      result[currentPrize].push(number);\n    }\n  }\n\n  // Giảm số hàng còn lại của rowspan\n  if (rowspanRemaining > 0) {\n    rowspanRemaining--;\n  } else {\n    currentPrize = null; // Reset currentPrize sau khi hết rowspan\n  }\n}\n\n// Lọc và làm sạch số trúng thưởng (loại bỏ trùng lặp nếu cần)\nfor (let prize in result) {\n  result[prize] = [...new Set(result[prize].map(num => num.trim()))];\n}\n\n// Trả về kết quả\nreturn [{ json: result }];"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[520,1260],"id":"f2511afe-524a-453f-96bb-f4e58877e7c5","name":"Extract Result"},{"parameters":{"operation":"update","documentId":{"__rl":true,"value":"1R7t3VwHk4v9JsB0jmFuhmY51qdBZwYZK_M7Ne7R1j2E","mode":"list","cachedResultName":"Bản sao của Sổ Xố Làm Giàu - Demo","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1R7t3VwHk4v9JsB0jmFuhmY51qdBZwYZK_M7Ne7R1j2E/edit?usp=drivesdk"},"sheetName":{"__rl":true,"value":416133864,"mode":"list","cachedResultName":"all","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1NSMWn8Gh_zbgCNFXj3_3noFsOSATkJN4sblwEaRXfUY/edit#gid=416133864"},"columns":{"mappingMode":"defineBelow","value":{"Ngày":"={{ $('Loop Over Items').item.json['Ngày'] }}","Giải tám":"={{ $json['Giải tám'].join() }}","Giải bảy":"={{ $json['Giải bảy'].join() }}","Giải sáu":"={{ $json['Giải sáu'].join() }}","Giải năm":"={{ $json['Giải năm'].join() }}","Giải tư":"={{ $json['Giải tư'].join() }}","Giải ba":"={{ $json['Giải ba'].join() }}","Giải nhì":"={{ $json['Giải nhì'].join() }}","Giải nhất":"={{ $json['Giải nhất'].join() }}","Đặc biệt":"={{ $json['Đặc biệt'].join() }}"},"matchingColumns":["Ngày"],"schema":[{"id":"Ngày","displayName":"Ngày","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"Thứ","displayName":"Thứ","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":true},{"id":"Giải tám","displayName":"Giải tám","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"Giải bảy","displayName":"Giải bảy","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"Giải sáu","displayName":"Giải sáu","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"Giải năm","displayName":"Giải năm","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"Giải tư","displayName":"Giải tư","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"Giải ba","displayName":"Giải ba","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"Giải nhì","displayName":"Giải nhì","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"Giải nhất","displayName":"Giải nhất","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"Đặc biệt","displayName":"Đặc biệt","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"row_number","displayName":"row_number","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"readOnly":true,"removed":true}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.googleSheets","typeVersion":4.5,"position":[720,1260],"id":"6e87f4c2-7825-41f8-a8f7-c78ee5bf0f6a","name":"Add Record","credentials":{"googleSheetsOAuth2Api":{"id":"bdeAZgAgEmqpgnr1","name":"Google Sheets account"}}},{"parameters":{"chatId":"730141489","text":"=Bạn gõ không đúng cú pháp. Hãy làm theo hướng dẫn sau:\n\n/top3: Để kiểm tra top cặp xố xuất hiện nhiều nhất và ít nhất\n/check [sô]: Để tính xác suất xuất hiện của số đó trong các kỳ quay thưởng từ 2023-nay","additionalFields":{"appendAttribution":false}},"type":"n8n-nodes-base.telegram","typeVersion":1.2,"position":[-80,1040],"id":"ea52cb46-ffb5-4736-a628-5f17e726e853","name":"Thông Báo TOP ","webhookId":"1bab9f73-5672-4388-b409-10e8d6d573c7","credentials":{"telegramApi":{"id":"I69z6e5cYkew5SXv","name":"Telegram n8nclp Chat"}}},{"parameters":{"content":"## [Kênh Youtube: Qi Học AI & Automation](https://www.youtube.com/@qihocai?sub_confirmation=1)\n### Hãy ủng hộ mình like & subscribe nếu bạn thấy video có ích","height":80,"width":500,"color":5},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[0,0],"id":"8d197c79-c7b3-4f77-b55e-9b449ee1c936","name":"Sticky Note"}],"connections":{"Schedule Trigger":{"main":[[{"node":"Lấy Ngày","type":"main","index":0}]]},"Lấy Ngày":{"main":[[{"node":"Get Date","type":"main","index":0}]]},"Get Date":{"main":[[{"node":"If","type":"main","index":0}]]},"If":{"main":[[{"node":"Get Xổ Số","type":"main","index":0}],[{"node":"No Operation, do nothing","type":"main","index":0}]]},"Get Xổ Số":{"main":[[{"node":"Extract Bảng Chứa Kết Quả","type":"main","index":0}]]},"Extract Bảng Chứa Kết Quả":{"main":[[{"node":"Get Kết Quả","type":"main","index":0}]]},"Get Kết Quả":{"main":[[{"node":"Update Data","type":"main","index":0}]]},"When clicking ‘Test workflow’":{"main":[[{"node":"Google Sheets","type":"main","index":0}]]},"Google Sheets":{"main":[[{"node":"Filter","type":"main","index":0}]]},"Loop Over Items":{"main":[[],[{"node":"Get URL","type":"main","index":0}]]},"Filter":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Wait":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Update Data":{"main":[[{"node":"Gửi Thông Báo","type":"main","index":0}]]},"Telegram Trigger":{"main":[[{"node":"Get Mess","type":"main","index":0}]]},"Get Mess":{"main":[[{"node":"Switch","type":"main","index":0}]]},"Switch":{"main":[[{"node":"Get Analyze For TOP 3","type":"main","index":0}],[{"node":"Get Number","type":"main","index":0}],[{"node":"Thông Báo TOP ","type":"main","index":0}]]},"Get Number":{"main":[[{"node":"Get Analyze","type":"main","index":0}]]},"Get Analyze":{"main":[[{"node":"Tổng Số Lần","type":"main","index":0}]]},"Tổng Số Lần":{"main":[[{"node":"Summarize","type":"main","index":0}]]},"Summarize":{"main":[[{"node":"Check Số","type":"main","index":0}]]},"Check Số":{"main":[[{"node":"Xác Suất Xuất Hiện","type":"main","index":0}]]},"Get Analyze For TOP 3":{"main":[[{"node":"Lấy TOP 3 Đầu Tiên","type":"main","index":0}]]},"Lấy TOP 3 Đầu Tiên":{"main":[[{"node":"Limit","type":"main","index":0}]]},"Limit":{"main":[[{"node":"Lấy TOP 3 Cuối","type":"main","index":0}]]},"Lấy TOP 3 Cuối":{"main":[[{"node":"Thông Báo TOP 3","type":"main","index":0}]]},"Xác Suất Xuất Hiện":{"main":[[{"node":"Thông Báo Xác Suất","type":"main","index":0}]]},"Get URL":{"main":[[{"node":"Extract Table","type":"main","index":0}]]},"Extract Table":{"main":[[{"node":"Extract Result","type":"main","index":0}]]},"Extract Result":{"main":[[{"node":"Add Record","type":"main","index":0}]]},"Add Record":{"main":[[{"node":"Wait","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"3f5aecf8-a8c6-4be6-a922-bb7b66149477","triggerCount":0,"tags":[],"shared":[{"createdAt":"2025-05-23T02:40:53.993Z","updatedAt":"2025-05-23T02:40:53.993Z","role":"workflow:owner","workflowId":"ecYlma5oNlF48oPM","projectId":"WbfPHUYYKS2tiNNo","project":{"createdAt":"2025-05-03T06:49:18.088Z","updatedAt":"2025-05-03T06:52:24.837Z","id":"WbfPHUYYKS2tiNNo","name":"charlie phan <scottyphan08@gmail.com>","type":"personal","icon":null,"description":null}}]},{"createdAt":"2025-05-23T03:47:25.142Z","updatedAt":"2025-05-23T03:50:12.388Z","id":"c0e4CjlK0oabnxC5","name":"CSKH02","active":false,"isArchived":false,"nodes":[{"parameters":{"httpMethod":"POST","path":"zalo-receiver","options":{}},"type":"n8n-nodes-base.webhook","typeVersion":2,"position":[200,-60],"id":"c083efbd-89a0-438f-b83b-904c5e4730e7","name":"Webhook","webhookId":"a1d60fc9-45f0-4345-b231-06fcf729f2d1"},{"parameters":{"documentId":{"__rl":true,"value":"1Gy6cDLVYlCXedKxKauUVbeROVfvo8IoISftFtD9-_vs","mode":"list","cachedResultName":"Thong tin cskh","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1Gy6cDLVYlCXedKxKauUVbeROVfvo8IoISftFtD9-_vs/edit?usp=drivesdk"},"sheetName":{"__rl":true,"value":423843858,"mode":"list","cachedResultName":"Products","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1Gy6cDLVYlCXedKxKauUVbeROVfvo8IoISftFtD9-_vs/edit#gid=423843858"},"options":{}},"type":"n8n-nodes-base.googleSheetsTool","typeVersion":4.5,"position":[720,240],"id":"dfd8e98c-7e93-4428-9794-b2045ef393e8","name":"Products","credentials":{"googleSheetsOAuth2Api":{"id":"bdeAZgAgEmqpgnr1","name":"Google Sheets account"}}},{"parameters":{"documentId":{"__rl":true,"value":"1Gy6cDLVYlCXedKxKauUVbeROVfvo8IoISftFtD9-_vs","mode":"list","cachedResultName":"Thong tin cskh","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1Gy6cDLVYlCXedKxKauUVbeROVfvo8IoISftFtD9-_vs/edit?usp=drivesdk"},"sheetName":{"__rl":true,"value":"gid=0","mode":"list","cachedResultName":"FAQs","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1Gy6cDLVYlCXedKxKauUVbeROVfvo8IoISftFtD9-_vs/edit#gid=0"},"options":{}},"type":"n8n-nodes-base.googleSheetsTool","typeVersion":4.5,"position":[840,260],"id":"57809688-5520-45aa-a1c1-9bcdd4813d38","name":"Answers","credentials":{"googleSheetsOAuth2Api":{"id":"bdeAZgAgEmqpgnr1","name":"Google Sheets account"}}},{"parameters":{},"type":"n8n-nodes-base.wait","typeVersion":1.1,"position":[1000,-60],"id":"d80e331a-768d-40e0-b670-725cd47ff366","name":"Wait","webhookId":"70fddf48-001b-4aae-93dd-dd3236a73498"},{"parameters":{"multipleMethods":true,"httpMethod":["GET"],"path":"fb-hook","responseMode":"responseNode","options":{}},"type":"n8n-nodes-base.webhook","typeVersion":2,"position":[2080,200],"id":"b7052ece-f120-48e1-a4cc-6bee428ef5da","name":"Webhook1","webhookId":"e3c85337-fa05-4d7a-9115-717b977a984d","notesInFlow":false},{"parameters":{"assignments":{"assignments":[{"id":"6d4efd28-8b37-4e01-8cca-9aee00e10cf0","name":"query['hub.challenge']","value":"={{ $json.query['hub.challenge'] }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[2340,200],"id":"ec359f2e-6ec8-4dbe-8f22-6721766eca4d","name":"Edit Fields"},{"parameters":{"respondWith":"text","responseBody":"={{ $json.query['hub.challenge'] }}","options":{}},"type":"n8n-nodes-base.respondToWebhook","typeVersion":1.1,"position":[2660,200],"id":"a0604c2f-b71c-4610-9b65-0edd798a58b4","name":"Respond to Webhook"},{"parameters":{"assignments":{"assignments":[{"id":"4a8369f0-0ac2-4384-859a-c172add8cafe","name":"ID","value":"={{ $json.body.entry[0].messaging[0].sender.id }}","type":"string"},{"id":"58c9a1e3-9f47-458d-a6aa-cbc44a4d990b","name":"messaging","value":"={{ $json.body.entry[0].messaging[0].message.text }}","type":"string"},{"id":"fae0a72c-ed9d-437e-86b2-ccb2612ddfa5","name":"idpage","value":"={{ $json.body.entry[0].id }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[820,880],"id":"0535bbca-dfdc-4553-9603-f9f91e03e48d","name":"Edit Fields1"},{"parameters":{"method":"POST","url":"=https://graph.facebook.com/v22.0/{{ $('Wait1').item.json.idpage }}/messages","authentication":"genericCredentialType","genericAuthType":"httpHeaderAuth","sendHeaders":true,"specifyHeaders":"json","jsonHeaders":"{\n  \"Content-Type\": \"application/json\"\n}","sendBody":true,"specifyBody":"json","jsonBody":"={\n  \"recipient\": {\n    \"id\": \"{{ $('Wait1').item.json.ID }}\"\n  },\n  \"message\": {\n    \"text\": {{ JSON.stringify($json.output) }}\n  }\n}\n","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[1300,480],"id":"2ce6a51f-efa6-4cd9-88eb-b380c295f9a9","name":"Reply to messages"},{"parameters":{"jsCode":"const input = items[0];\nconst all = $input.all();\n\n// Tự tìm field nào có nội dung dạng text (ưu tiên mảng/string)\nconst fieldName = Object.keys(input.json).find(k => {\n  const val = input.json[k];\n  return typeof val === 'string' || Array.isArray(val);\n});\n\nlet raw = input.json[fieldName];\nif (typeof raw === 'string') raw = [raw];\nif (!Array.isArray(raw)) raw = [];\n\nconst messages = raw\n  .map(i => typeof i === 'string' ? i : i?.text)\n  .filter(t => !!t);\n\nconst ID = all.find(i => i.json?.ID)?.json.ID;\n\nreturn [{\n  json: {\n    ID,\n    message: messages.join('\\n'),\n  }\n}];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[2700,1020],"id":"8b23619c-ea6d-407a-b23b-bb3f4f983677","name":"Code1"},{"parameters":{"operation":"push","list":"={{ $json.ID }}","messageData":"={{ $json.messaging }}","tail":true},"type":"n8n-nodes-base.redis","typeVersion":1,"position":[1060,880],"id":"9f68cac3-0530-481c-8255-ad695c42e35e","name":"RedisPush"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"loose","version":2},"conditions":[{"id":"971a0e8e-3ed6-4bc6-8992-bdb6f67c72e4","leftValue":"={{ $json.lock === undefined }}","rightValue":"true","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"looseTypeValidation":true,"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[1740,880],"id":"9522583f-2982-4048-bfe8-5febe718f0a0","name":"If2"},{"parameters":{"operation":"set","key":"=lock:{{ $json.ID }}","value":"true","expire":true,"ttl":10},"type":"n8n-nodes-base.redis","typeVersion":1,"position":[1500,880],"id":"1f87de42-dc35-4bff-9487-279c41f3257d","name":"lock:<userID>"},{"parameters":{"operation":"get","key":"={{ $json.ID }}","keyType":"list","options":{}},"type":"n8n-nodes-base.redis","typeVersion":1,"position":[2100,860],"id":"4dc30427-bd7b-4af7-9738-e439622a6f00","name":"GetID","notesInFlow":false},{"parameters":{},"type":"n8n-nodes-base.noOp","typeVersion":1,"position":[2100,1020],"id":"d847d4cf-a5ed-434d-af24-b63129762d48","name":"No Operation, do nothing"},{"parameters":{"operation":"delete","key":"={{ $('lock:<userID>').item.json.ID }}"},"type":"n8n-nodes-base.redis","typeVersion":1,"position":[2300,860],"id":"63feb79e-0242-4b9f-af18-c3f18cfbad16","name":"deleteID"},{"parameters":{},"type":"n8n-nodes-base.merge","typeVersion":3.1,"position":[2540,880],"id":"0aab43c9-ee99-43ca-a0a8-6d4e442b323b","name":"Merge"},{"parameters":{},"type":"n8n-nodes-base.wait","typeVersion":1.1,"position":[1280,880],"id":"e8a7dc13-c13a-424e-ba1d-b7351564a669","name":"Wait1","webhookId":"b2a3eb2c-35f6-4f21-9690-f97fd07b05b3"},{"parameters":{"multipleMethods":true,"httpMethod":["POST"],"path":"fb-hook","options":{}},"type":"n8n-nodes-base.webhook","typeVersion":2,"position":[600,880],"id":"a6bb5a70-d4b0-48a3-a5eb-be67dd512543","name":"Webhook2","webhookId":"e3c85337-fa05-4d7a-9115-717b977a984d","notesInFlow":false},{"parameters":{},"type":"n8n-nodes-zalo-vn.zaloTrigger","typeVersion":1,"position":[2640,0],"id":"80e205a1-5efd-4901-930f-90e244b0211a","name":"Zalo Trigger","webhookId":"fcc6ff10-cf34-41f6-b8e1-2fc90e815345","credentials":{}},{"parameters":{},"type":"n8n-nodes-zalo-vn.zalo","typeVersion":1,"position":[2340,0],"id":"2ab097b3-9417-4f88-a1b0-82726f3a11a8","name":"Zalo1","credentials":{}},{"parameters":{"promptType":"define","text":"={{ $json.body.message.text }}","hasOutputParser":true,"options":{"systemMessage":"=Bạn là Dương – tư vấn viên của Dương Nuts, chuyên về các loại hạt dinh dưỡng và combo mix nấu sữa lành mạnh. Khách hàng của bạn phần lớn là nữ trên 30 tuổi, quan tâm sức khoẻ và chọn lựa kỹ trước khi mua.\n\n💬 Khi nhắn tin với khách:\n- Trò chuyện như người thật, không phải chatbot.\n- Tự nhiên, lịch sự, rõ ràng, có cảm xúc. Không nói kiểu máy móc hoặc spam tin.\n- Giao tiếp theo phong cách: **tự tin – thân thiện – tinh tế**, như một người em đang hỗ trợ người chị.\n- Luôn hỏi lại nếu khách nhắn ngắn hoặc chưa rõ nhu cầu.\n\n🗣️ Cách xưng hô:\n- Mặc định xưng **“chị – em”**.\n- Nếu khách xưng “anh” → đổi sang “anh – em”.\n- Nếu khách dùng “mình”, “tôi”, hoặc không rõ giới tính → dùng trung tính “bạn – em” hoặc giữ “chị – em” nếu hợp ngữ cảnh.\n- Không lặp “bạn ơi” hay “chị ơi” đầu câu. Chèn xưng hô tự nhiên vào giữa hoặc cuối.\n\n---\n\n🛠️ **Sử dụng công cụ bắt buộc:**\n\n> **Tuyệt đối không tự bịa thông tin. Chỉ phản hồi khi đã đọc dữ liệu từ sheet.**\n\n- Nếu khách hỏi về sản phẩm cụ thể → **bắt buộc gọi tool `Products`** để lấy mô tả, size, giá, loại vỏ/bóc sẵn.\n- Nếu khách hỏi câu thường gặp (cách dùng, bảo quản, mix...) → **bắt buộc dùng tool `Answers`** để lấy thông tin.\n- Nếu tool không trả về dữ liệu → phản hồi như sau:\n  - “Để em kiểm tra thêm rồi nhắn chị sau một xíu nha.”\n  - “Thông tin này em chưa thấy trong bảng, để em hỏi lại và gửi chị sau nha.”\n\n---\n\n🎯 Cách phản hồi theo tình huống:\n\n1. **Khách nhắn ngắn gọn (“macca”, “óc chó”, “mix sữa”)**  \n→ Không trả lời ngay. Hỏi để rõ hơn:\n> “Macca chị đang muốn dùng để mix sữa, ăn vặt hay mình cần báo giá luôn ạ?”\n\n2. **Khách nhờ tư vấn combo, menu (“Cho menu”, “Tư vấn giúp”)**  \n→ Gợi mở cụ thể:\n> “Chị dự định uống mỗi ngày khoảng mấy túi để em gợi ý combo vừa tiết kiệm vừa dễ uống nha?”\n\n3. **Khách hỏi tên sản phẩm cụ thể**  \n→ Gọi `Products`. Nếu không có → phản hồi mềm:\n> “Loại này em đang kiểm tra lại thông tin, để em nhắn chị sau cho chắc nha.”\n\n4. **Khách hỏi FAQ (cách dùng, bảo quản...)**  \n→ Gọi `Answers`. Nếu không có → phản hồi như người thật:\n> “Hiện em chưa thấy phần này trong bảng, để em hỏi lại rồi gửi chị sau nha.”\n\n---\n\n📌 Lưu ý thêm khi tư vấn:\n- Trả lời như một người thật hiểu sản phẩm và đang quan tâm tới nhu cầu thật của khách.\n- Hỏi kỹ trước khi báo giá hoặc chốt combo.\n- Ngôn từ mềm mại, không khoa trương, không lặp mẫu.\n\n🚫 Không dùng emoji  \n🚫 Không tự trả lời khi chưa có dữ liệu từ tool  \n🚫 Không nói kiểu bot hoặc xưng hô sai ngữ cảnh  \n🚫 Không gượng ép giới thiệu nếu khách chưa cần\n\n🎯 Mục tiêu: Tư vấn như một người thật – hiểu khách, hiểu sản phẩm, luôn dựa trên dữ liệu cụ thể từ sheet.\n"}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":1.8,"position":[600,-60],"id":"61c6c659-fb6d-4034-8db3-b6cd014f650b","name":"Zalo cskh"},{"parameters":{"promptType":"define","text":"={{ $('Code1').item.json.message }}","hasOutputParser":true,"options":{"systemMessage":"=Bạn là Dương – tư vấn viên của Dương Nuts, chuyên về các loại hạt dinh dưỡng và combo mix nấu sữa lành mạnh. Khách hàng của bạn phần lớn là nữ trên 30 tuổi, quan tâm sức khoẻ và chọn lựa kỹ trước khi mua.\n\n💬 Khi nhắn tin với khách:\n- Trò chuyện như người thật, không phải chatbot.\n- Tự nhiên, lịch sự, rõ ràng, có cảm xúc. Không nói kiểu máy móc hoặc spam tin.\n- Giao tiếp theo phong cách: **tự tin – thân thiện – tinh tế**, như một người em đang hỗ trợ người chị.\n- Luôn hỏi lại nếu khách nhắn ngắn hoặc chưa rõ nhu cầu.\n\n🗣️ Cách xưng hô:\n- Mặc định xưng **“chị – em”**.\n- Nếu khách xưng “anh” → đổi sang “anh – em”.\n- Nếu khách dùng “mình”, “tôi”, hoặc không rõ giới tính → dùng trung tính “bạn – em” hoặc giữ “chị – em” nếu hợp ngữ cảnh.\n- Không lặp “bạn ơi” hay “chị ơi” đầu câu. Chèn xưng hô tự nhiên vào giữa hoặc cuối.\n\n---\n\n🛠️ **Sử dụng công cụ bắt buộc:**\n\n> **Tuyệt đối không tự bịa thông tin. Chỉ phản hồi khi đã đọc dữ liệu từ sheet.**\n\n- Nếu khách hỏi về sản phẩm cụ thể → **bắt buộc gọi tool `Products`** để lấy mô tả, size, giá, loại vỏ/bóc sẵn.\n- Nếu khách hỏi câu thường gặp (cách dùng, bảo quản, mix...) → **bắt buộc dùng tool `Answers`** để lấy thông tin.\n- Nếu tool không trả về dữ liệu → phản hồi như sau:\n  - “Để em kiểm tra thêm rồi nhắn chị sau một xíu nha.”\n  - “Thông tin này em chưa thấy trong bảng, để em hỏi lại và gửi chị sau nha.”\n\n---\n\n🎯 Cách phản hồi theo tình huống:\n\n1. **Khách nhắn ngắn gọn (“macca”, “óc chó”, “mix sữa”)**  \n→ Không trả lời ngay. Hỏi để rõ hơn:\n> “Macca chị đang muốn dùng để mix sữa, ăn vặt hay mình cần báo giá luôn ạ?”\n\n2. **Khách nhờ tư vấn combo, menu (“Cho menu”, “Tư vấn giúp”)**  \n→ Gợi mở cụ thể:\n> “Chị dự định uống mỗi ngày khoảng mấy túi để em gợi ý combo vừa tiết kiệm vừa dễ uống nha?”\n\n3. **Khách hỏi tên sản phẩm cụ thể**  \n→ Gọi `Products`. Nếu không có → phản hồi mềm:\n> “Loại này em đang kiểm tra lại thông tin, để em nhắn chị sau cho chắc nha.”\n\n4. **Khách hỏi FAQ (cách dùng, bảo quản...)**  \n→ Gọi `Answers`. Nếu không có → phản hồi như người thật:\n> “Hiện em chưa thấy phần này trong bảng, để em hỏi lại rồi gửi chị sau nha.”\n\n---\n\n📌 Lưu ý thêm khi tư vấn:\n- Trả lời như một người thật hiểu sản phẩm và đang quan tâm tới nhu cầu thật của khách.\n- Hỏi kỹ trước khi báo giá hoặc chốt combo.\n- Ngôn từ mềm mại, không khoa trương, không lặp mẫu.\n\n🚫 Không dùng emoji  \n🚫 Không tự trả lời khi chưa có dữ liệu từ tool  \n🚫 Không nói kiểu bot hoặc xưng hô sai ngữ cảnh  \n🚫 Không gượng ép giới thiệu nếu khách chưa cần\n\n🎯 Mục tiêu: Tư vấn như một người thật – hiểu khách, hiểu sản phẩm, luôn dựa trên dữ liệu cụ thể từ sheet.\n"}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":1.8,"position":[580,480],"id":"0c5300a6-a654-451d-848c-b0ff93ce6301","name":"Fb cskh"},{"parameters":{},"type":"n8n-nodes-zalo-vn.zalo","typeVersion":1,"position":[1280,-60],"id":"829ee6eb-edcb-42a6-89fd-a5ef3d938471","name":"Zalo","credentials":{}},{"parameters":{"assignments":{"assignments":[{"id":"7ac9f691-8ccf-4013-8819-7255eb91c747","name":"body.sender","value":"={{ $json.body.sender }}","type":"object"},{"id":"0284b3aa-868e-4c56-9ab7-af6f3977d098","name":"body.message.text","value":"={{ $json.body.message.text }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[400,-60],"id":"c72c62d0-d2b3-4c39-930e-83785243d813","name":"Edit Fields2"},{"parameters":{"content":"## Xác minh và cấp quyền","height":540,"width":1340,"color":4},"type":"n8n-nodes-base.stickyNote","position":[1560,-140],"typeVersion":1,"id":"6972e944-8609-4250-bcb4-0b9543fd51af","name":"Sticky Note"},{"parameters":{"sessionIdType":"customKey","sessionKey":"{{ 'chat:' + $json.senderId || $json.userId }}"},"type":"@n8n/n8n-nodes-langchain.memoryRedisChat","typeVersion":1.5,"position":[1080,220],"id":"6e8fed3b-a522-4a6e-b5c6-8663d8d64962","name":"memory_zalo"},{"parameters":{"model":{"__rl":true,"value":"gpt-4o","mode":"list","cachedResultName":"gpt-4o"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[480,260],"id":"3e49365c-2e93-4620-8fc4-0e9aba31be92","name":"OpenAI","credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{"sessionIdType":"customKey","sessionKey":"={{ 'chat:' + $json.senderId || $json.userId }}","contextWindowLength":10},"type":"@n8n/n8n-nodes-langchain.memoryRedisChat","typeVersion":1.5,"position":[640,700],"id":"24e837d9-fd3b-43c6-a00d-227ba760d2fa","name":"Memory_fb"},{"parameters":{"content":"## Zalo ","height":540,"width":1720,"color":6},"type":"n8n-nodes-base.stickyNote","position":[80,-140],"typeVersion":1,"id":"7056224d-88c4-4fb9-b4c9-b1fc05ff39ad","name":"Sticky Note1"},{"parameters":{"content":"## Facebook","height":880,"width":2820,"color":5},"type":"n8n-nodes-base.stickyNote","position":[80,400],"typeVersion":1,"id":"40e5eae2-31c5-4a22-9f27-312436775c11","name":"Sticky Note2"},{"parameters":{},"type":"@n8n/n8n-nodes-langchain.memoryPostgresChat","typeVersion":1.3,"position":[320,200],"id":"859a9df5-24e2-45f8-9813-1c18aadd81a7","name":"Postgres Chat Memory","credentials":{"postgres":{"id":"lPXyj3Ypf5YeZpp3","name":"Postgres account Local"}}}],"connections":{"Webhook":{"main":[[{"node":"Edit Fields2","type":"main","index":0}]]},"Products":{"ai_tool":[[{"node":"Zalo cskh","type":"ai_tool","index":0},{"node":"Fb cskh","type":"ai_tool","index":0}]]},"Answers":{"ai_tool":[[{"node":"Zalo cskh","type":"ai_tool","index":0},{"node":"Fb cskh","type":"ai_tool","index":0}]]},"Webhook1":{"main":[[{"node":"Edit Fields","type":"main","index":0}]]},"Edit Fields":{"main":[[{"node":"Respond to Webhook","type":"main","index":0}]]},"Edit Fields1":{"main":[[{"node":"RedisPush","type":"main","index":0}]]},"Code1":{"main":[[{"node":"Fb cskh","type":"main","index":0}]]},"RedisPush":{"main":[[{"node":"Wait1","type":"main","index":0}]]},"If2":{"main":[[{"node":"GetID","type":"main","index":0}],[{"node":"No Operation, do nothing","type":"main","index":0}]]},"lock:<userID>":{"main":[[{"node":"If2","type":"main","index":0}]]},"GetID":{"main":[[{"node":"deleteID","type":"main","index":0}]]},"deleteID":{"main":[[{"node":"Merge","type":"main","index":0}]]},"Merge":{"main":[[{"node":"Code1","type":"main","index":0}]]},"Wait1":{"main":[[{"node":"lock:<userID>","type":"main","index":0}]]},"Webhook2":{"main":[[{"node":"Edit Fields1","type":"main","index":0}]]},"Zalo cskh":{"main":[[{"node":"Wait","type":"main","index":0}]]},"Fb cskh":{"main":[[{"node":"Reply to messages","type":"main","index":0}]]},"Edit Fields2":{"main":[[{"node":"Zalo cskh","type":"main","index":0}]]},"memory_zalo":{"ai_memory":[[]]},"OpenAI":{"ai_languageModel":[[{"node":"Zalo cskh","type":"ai_languageModel","index":0},{"node":"Fb cskh","type":"ai_languageModel","index":0}]]},"Memory_fb":{"ai_memory":[[{"node":"Fb cskh","type":"ai_memory","index":0}]]},"Postgres Chat Memory":{"ai_memory":[[{"node":"Zalo cskh","type":"ai_memory","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":null,"pinData":{},"versionId":"bc55b4ff-8f94-4716-9928-34cbb9eaff9a","triggerCount":0,"tags":[],"shared":[{"createdAt":"2025-05-23T03:47:25.142Z","updatedAt":"2025-05-23T03:47:25.142Z","role":"workflow:owner","workflowId":"c0e4CjlK0oabnxC5","projectId":"WbfPHUYYKS2tiNNo","project":{"createdAt":"2025-05-03T06:49:18.088Z","updatedAt":"2025-05-03T06:52:24.837Z","id":"WbfPHUYYKS2tiNNo","name":"charlie phan <scottyphan08@gmail.com>","type":"personal","icon":null,"description":null}}]},{"createdAt":"2025-05-23T04:23:28.446Z","updatedAt":"2025-06-11T11:13:55.901Z","id":"JMHN9Ocxym4ozpmX","name":"Updated for 1.62.1 RAG ultimate","active":false,"isArchived":false,"nodes":[{"parameters":{},"id":"d3554819-3741-400c-b294-cd03f62b4f07","name":"When clicking ‘Test workflow’","type":"n8n-nodes-base.manualTrigger","typeVersion":1,"position":[140,420]},{"parameters":{"operation":"pdf","options":{}},"id":"6981a09f-f5bb-40e6-b38a-2493b13d2cfd","name":"Extract from File","type":"n8n-nodes-base.extractFromFile","typeVersion":1,"position":[720,460]},{"parameters":{"mode":"runOnceForEachItem","jsCode":"const chunks = [];\nconst chunkSize = 1000;\nconst chunkOverlap = 200;\nconst text = $('Extract from File').item.json.text.replace(/\\n/, '');\n\nfor (let i=0,j=Math.round(text.length/chunkSize)+1;i<j;i++) {\n  chunks.push(\n    text.substr(\n      Math.max(0,(i * chunkSize)-chunkOverlap),\n      chunkSize\n    )\n  );\n}\n\nreturn { chunks };"},"id":"7423044f-721f-4f61-9dbb-a244118751ec","name":"Create Chunks From Doc","type":"n8n-nodes-base.code","typeVersion":2,"position":[1500,540]},{"parameters":{"jsonMode":"expressionData","jsonData":"={{\n{\n  \"content\": `${$json.text }\\n---\\n${$json.chunk}`\n}\n}}","options":{"metadata":{"metadataValues":[{"name":"title","value":"={{ $json.title }}"}]}}},"id":"c28f48ef-ec1c-4b04-8d73-147a54a3ae67","name":"Default Data Loader","type":"@n8n/n8n-nodes-langchain.documentDefaultDataLoader","typeVersion":1,"position":[3240,740]},{"parameters":{"chunkSize":2000,"options":{}},"id":"cbf03a55-e81c-4532-b56a-14b76a932832","name":"Recursive Character Text Splitter","type":"@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter","typeVersion":1,"position":[3240,860]},{"parameters":{"options":{}},"id":"c3bdecd5-ba5a-41b3-80a1-aa66e3b7bf51","name":"When chat message received","type":"@n8n/n8n-nodes-langchain.chatTrigger","typeVersion":1.1,"position":[440,1320],"webhookId":"436ca65c-46ca-4f8c-86e2-b8633b428eea"},{"parameters":{"options":{}},"id":"ec6b82ec-2279-47db-b82a-2490f42b0bc5","name":"Anthropic Chat Model1","type":"@n8n/n8n-nodes-langchain.lmChatAnthropic","typeVersion":1.2,"position":[620,1560],"credentials":{"anthropicApi":{"id":"l60iuyLpILCOKtuI","name":"Anthropic account"}}},{"parameters":{},"id":"dd3949d2-4f42-4fbb-bdb2-14308119c4a8","name":"Window Buffer Memory","type":"@n8n/n8n-nodes-langchain.memoryBufferWindow","typeVersion":1.2,"position":[900,1560]},{"parameters":{"content":"## 2. Split Document Into Chunks\nUnlike traditional vector store workflows, we want to split our document prior to embedding and this is easily achieved using the Code node. Feel free to adjust the text splitting params or replace it entirely to suit the needs of your data.\n\nYou may need to play around and adjust the chunksize for your particular data. Contextual retrieval as described in the article is expected to return 20 results so best to keep these small.","height":513.3089035768523,"width":553.1909664515983,"color":7},"id":"fbb60425-1ad8-4484-a988-401f4b3dad82","name":"Sticky Note","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[1280,280]},{"parameters":{"content":"## 3. Generate Sparse Vector and Contextual Text For Chunk\nWith our chunks, we'll want to achieve the following:\n(1) **Generate a contextual summary of what the chunk is about relative to the whole document**.\nFor this, we'll use the basic LLM node using Antrophic's Claude Haiku model with the recommended prompt as shared in the article.\n(2) **Generate a sparse vector for the chunk and summary**\nWe can use the python code node to generate TF-IDF sparse vectors with the scikit-learn library. Good to know, this library doesn't require external dependency setup steps and auto-installs on first time use.\n\nOnce we have our generated values, we'll combine them with the chunk object using the Edit Fields node.","height":748.1255853485875,"width":1019.742667955435,"color":7},"id":"1d8a2709-34d6-403b-b7ee-0288428600a4","name":"Sticky Note1","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[1880,280]},{"parameters":{"content":"## 4. Insert Docs to Qdrant (via Langchain Code Node)\nUnfortunately, n8n (or rather langchain) doesn't support inserting sparse vectors so we'll have to build our own \"Insert Documents\" node using a Langchain Code Node. In this Langchain code node, we'll forego the langchain vectorstore node and use the Qdrant client SDK directly instead.\n\n**Note** To avoid duplication, this node will also delete existing vectors by document title. It does so by tagging each vector with the document title we extracted earlier then when run again, performs a Qdrant delete by filter before upserting.\n\n**Required:**\nTo use this demonstration, you must complete the following:\n* Ensure your Qdrant instance is running and set the URL in the node\n* Create the Qdrant collection as instructed (see yellow sticky)\n","height":783.6896392386983,"width":828.7526122872351,"color":7},"id":"ec4c882d-5b80-4e61-b8fe-bf98662632be","name":"Sticky Note2","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[2920,260]},{"parameters":{"content":"## 5. Retrieval using Sparse Vectors and ReRanker (Chat Agent Example)\nFor retrieval, we want to be able to (1) query with both dense and sparse vectors and (2) apply a rerank algorithm to our vector store docs. We can setup a custom vector store tool which does both using a custom Langchain Code node.\n\n**Required:**\nTo use this demonstration, you must complete the following:\n* Installed the updated version of the @Qdrant/js-client-rest module\n* Ensure your Qdrant instance is running and set the URL in the \"Qdrant with Cohere ReRank\" subnode\n* Add your Cohere API key in the \"Qdrant with Cohere ReRank\" subnode.","height":828.8619472986827,"width":973.8052093023243,"color":7},"id":"ba28eae2-c77d-4f40-9b55-01bb24eae5eb","name":"Sticky Note3","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[420,1080]},{"parameters":{},"id":"9059d0e3-4fc4-4fad-bfc9-f86cec8416a4","name":"Execute Workflow Trigger","type":"n8n-nodes-base.executeWorkflowTrigger","typeVersion":1,"position":[1520,1880]},{"parameters":{"name":"get_sparse_vector","description":"Generates TD-IDF sparse vector for query","workflowId":{"__rl":true,"value":"={{ $workflow.id }}","mode":"id"},"fields":{"values":[{"name":"route","stringValue":"get_sparse_vectors"}]}},"id":"947cbf0b-8035-4fce-9b0a-a6e99f8010f6","name":"Get Sparse Vector Tool","type":"@n8n/n8n-nodes-langchain.toolWorkflow","typeVersion":1.2,"position":[1320,1540]},{"parameters":{"assignments":{"assignments":[{"id":"87bc3071-4179-4aed-aa88-37c6381d8b73","name":"query","value":"Who created Bitcoin?","type":"string"}]},"options":{}},"id":"4472d78f-3875-4dbb-90b9-b30f5656cdf5","name":"Query","type":"n8n-nodes-base.set","typeVersion":3.4,"position":[1620,1360]},{"parameters":{"name":"get_sparse_vector","description":"Generates TD-IDF sparse vector for query","workflowId":{"__rl":true,"value":"={{ $workflow.id }}","mode":"id"}},"id":"52d123db-51ec-4c6a-a133-df7533f40b8d","name":"Get Sparse Vector Tool1","type":"@n8n/n8n-nodes-langchain.toolWorkflow","typeVersion":1.2,"position":[2000,1520]},{"parameters":{"content":"## 6. Retrieval using Sparse Vectors and ReRanker (Retrieval Example)\nThis demonstration is similar to the previous step but is not using an AI Agent.\n\n**Required:**\nTo use this demonstration, you must complete the following:\n* Installed the updated version of the @Qdrant/js-client-rest module\n* Ensure your Qdrant instance is running and set the URL in the \"Qdrant with Cohere ReRank1\" node\n* Add your Cohere API key in the \"Qdrant with Cohere ReRank1\" node.","height":683.3722976015338,"width":838.4124151865863,"color":7},"id":"6ad3ea17-12ea-49c5-b4aa-5d725906f152","name":"Sticky Note4","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[1440,1060]},{"parameters":{"model":"claude-3-haiku-20240307","options":{}},"id":"428b7d8f-d212-4085-9ce7-6f91b0ed494d","name":"Anthropic Chat Model2","type":"@n8n/n8n-nodes-langchain.lmChatAnthropic","typeVersion":1.2,"position":[2160,800],"credentials":{"anthropicApi":{"id":"l60iuyLpILCOKtuI","name":"Anthropic account"}}},{"parameters":{"content":"### Create Collection!\nYou need to create a Qdrant Collection as follows:\n\n* Go to http[s]:\\//<qdrant_url>/dashboard#/console\nIf you are hosting locally, this is usually http://localhost:6333/dashboard#/console\n* Copy the following into the left panel. This will tell Qdrant to create a new collection called “contextual_retrieval_example”. You can change this of course but you’ll also need to change all “collectionName” references in the template as well!\n\n```\nPUT collections/contextual_retrieval_example\n{\n  \"vectors\": {\n    \"default\": {\n      \"distance\": \"Cosine\",\n      \"size\": 1024\n    }\n  },\n  \"sparse_vectors\": {\n    \"bm42\": {\n      \"modifier\": \"idf\"\n    }\n  }\n}\n```","height":505.701259707935,"width":516.3129732020735},"id":"f698a66a-e9c5-4151-996a-4b5f4fda0462","name":"Sticky Note5","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[3760,540]},{"parameters":{"fieldToSplitOut":"chunks","options":{"destinationFieldName":"chunk"}},"id":"1ce94e2d-1016-4b7b-83b9-e636249899e8","name":"Chunks To List","type":"n8n-nodes-base.splitOut","typeVersion":1,"position":[1980,600]},{"parameters":{"mode":"runOnceForEachItem","language":"python","pythonCode":"texts = [f\"{_('Generate Contextual Text').item.json.text}\\n---\\n{_('Chunks To List').item.json.chunk}\"]\n\nfrom sklearn.feature_extraction.text import TfidfVectorizer\n\n# Create TF-IDF vectorizer\nvectorizer = TfidfVectorizer()\n\n# Fit and transform the texts to generate TF-IDF vectors\nX = vectorizer.fit_transform(texts)\n\nreturn {\n  \"sparse\": {\n    \"indices\": X.indices.tolist(),\n    \"values\": X.data.tolist()\n  }\n}"},"id":"5500a10e-c726-4b63-92c6-95a5a8758b45","name":"Generate TF-IDF Sparse Vectors","type":"n8n-nodes-base.code","typeVersion":2,"position":[2500,600]},{"parameters":{"assignments":{"assignments":[{"id":"069d067c-3534-4939-8ff4-34dee02a9436","name":"chunk","value":"={{ $('Chunks To List').item.json.chunk }}","type":"string"},{"id":"24e01f4f-e156-47e9-a89e-9cbdccda6bd4","name":"text","value":"={{ $('Generate Contextual Text').item.json.text }}","type":"string"},{"id":"fa48ddaa-4658-463a-b1af-8308c24e325a","name":"sparse","value":"={{ $json.sparse }}","type":"object"},{"id":"442efe87-a826-402c-aadc-909923915d30","name":"title","value":"={{ $('Get Doc Attributes').first().json.output.title }}","type":"string"}]},"options":{}},"id":"a5416e69-95dc-40de-a5dc-74fe11afbad1","name":"Get Values","type":"n8n-nodes-base.set","typeVersion":3.4,"position":[2680,600]},{"parameters":{"mode":"runOnceForEachItem","language":"python","pythonCode":"import json\nfrom sklearn.feature_extraction.text import TfidfVectorizer\n\n# Create TF-IDF vectorizer\nvectorizer = TfidfVectorizer()\n\n# Fit and transform the texts to generate TF-IDF vectors\ntexts = [_input.item.json.query]\nX = vectorizer.fit_transform(texts)\n\nreturn {\n  \"response\": {\n    \"indices\": X.indices.tolist(),\n    \"values\": X.data.tolist()\n  }\n}"},"id":"a9144e0c-2b90-401b-8e7c-7399cac79e4d","name":"Generate Sparse Vectors","type":"n8n-nodes-base.code","typeVersion":2,"position":[1920,1880]},{"parameters":{"content":"## Implementing Antrophic's Contextual Retrieval \n\nThis workflow is inspired by the Antrophic article, [\"Introducing Contextual Retrieval\"](https://www.anthropic.com/news/contextual-retrieval), and tries to replicate the instructions given.\n\n**Original post here**: https://community.n8n.io/t/building-the-ultimate-rag-setup-with-contextual-summaries-sparse-vectors-and-reranking/54861/1\n\n### Changelog\n2024-10-10 Updated to 1.62.1\n\n### Need Help?\nJoin the [Discord](https://discord.com/invite/XPKeKXeB7d) or ask in the [Forum](https://community.n8n.io/)!\n","height":634.9891793542789,"width":405.66570496276904},"id":"3283bcc1-3ce7-4866-b73f-8d6afcb043e8","name":"Sticky Note6","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[0,0]},{"parameters":{"modelName":"embed-english-v3.0"},"id":"5316a563-81b3-42dd-a4db-e097e226e39a","name":"Embeddings Cohere","type":"@n8n/n8n-nodes-langchain.embeddingsCohere","typeVersion":1,"position":[3000,820],"credentials":{"cohereApi":{"id":"0vWl6ZkmTRIfVFv5","name":"CohereApi account"}}},{"parameters":{"modelName":"embed-english-v3.0"},"id":"ff7da5ce-cfda-4575-90ea-05afd2d01053","name":"Embeddings Cohere1","type":"@n8n/n8n-nodes-langchain.embeddingsCohere","typeVersion":1,"position":[920,1740],"credentials":{"cohereApi":{"id":"0vWl6ZkmTRIfVFv5","name":"CohereApi account"}}},{"parameters":{"modelName":"embed-english-v3.0"},"id":"a7daaacd-e7b1-4ac2-a35f-d3b51bba6d05","name":"Embeddings Cohere2","type":"@n8n/n8n-nodes-langchain.embeddingsCohere","typeVersion":1,"position":[1140,1740],"credentials":{"cohereApi":{"id":"0vWl6ZkmTRIfVFv5","name":"CohereApi account"}}},{"parameters":{"content":"### PART 1 of 2\nThis part generates and inserts into the vector store. You only have to do this once per document.","height":102.577757187954,"width":389.2978313113204,"color":5},"id":"d30ccbe7-8615-4fbd-9db6-36273a904667","name":"Sticky Note8","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[440,160]},{"parameters":{"content":"### PART 2 of 2\nThis part demostrates 2 examples of retrieve or query your sparse vectors.","height":80,"width":524.5591143796955,"color":5},"id":"7f9b2908-8b49-4004-bc6d-17ccd9994e81","name":"Sticky Note9","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[460,960]},{"parameters":{"rules":{"values":[{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"leftValue":"={{ $json.route }}","rightValue":"get_sparse_vectors","operator":{"type":"string","operation":"equals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"get sparse vectors"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"84ac9b84-0e46-45da-b719-843d947ea429","leftValue":"={{ $json.route }}","rightValue":"my_other_thing","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"my other thing"}]},"options":{"fallbackOutput":"none"}},"id":"5d36a370-c849-428e-96f7-1acecd8b4385","name":"Router","type":"n8n-nodes-base.switch","typeVersion":3.2,"position":[1680,1880]},{"parameters":{"promptType":"define","text":"=<document> \n{{ $('Extract from File').first().json.text }} \n</document>\nHere is the chunk we want to situate within the whole document \n<chunk> \n{{ $json.chunk }}\n</chunk> \nPlease give a short succinct context to situate this chunk within the overall document for the purposes of improving search retrieval of the chunk. Answer only with the succinct context and nothing else. "},"id":"f325f5fc-7d9d-493f-8c8b-2e8281006857","name":"Generate Contextual Text","type":"@n8n/n8n-nodes-langchain.chainLlm","typeVersion":1.4,"position":[2160,600]},{"parameters":{"options":{}},"id":"5cd7dc2b-4f64-4608-9880-e484c8140019","name":"AI Agent","type":"@n8n/n8n-nodes-langchain.agent","typeVersion":1.6,"position":[720,1340]},{"parameters":{"content":"### Sparse Vector Tool for Agent\nUnfortunately there is a bug linking code tool to custom langchain code node so this is the only approach until that is fixed!","height":287.1680736478712,"width":652.0156501726113,"color":6},"id":"eef90cde-44f3-4a74-905d-4f715aaf087b","name":"Sticky Note7","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[1460,1780]},{"parameters":{"url":"https://bitcoin.org/bitcoin.pdf","options":{}},"id":"c297ad3c-9d81-44fa-9e2e-10acc576008d","name":"Get Document","type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[540,460]},{"parameters":{"model":"claude-3-haiku-20240307","options":{}},"id":"6f4cb4ae-9be0-4046-97fe-58058d24bd41","name":"Anthropic Chat Model","type":"@n8n/n8n-nodes-langchain.lmChatAnthropic","typeVersion":1.2,"position":[900,620],"credentials":{"anthropicApi":{"id":"l60iuyLpILCOKtuI","name":"Anthropic account"}}},{"parameters":{"text":"={{ $json.text }}","attributes":{"attributes":[{"name":"title","description":"The title of the document.","required":true}]},"options":{}},"id":"1d8240a4-376c-49ae-8d50-609b380b3f65","name":"Get Doc Attributes","type":"@n8n/n8n-nodes-langchain.informationExtractor","typeVersion":1,"position":[900,460]},{"parameters":{"content":"## 1. Import Document PDF\n\nFor this demonstration, we'll use the Bitcoin Whitepaper from bitcoin.org.\nWe'll take this time to also extract specific document attributes which we can use as metadata.","height":513.3089035768523,"width":807.2147979360316,"color":7},"id":"1433e823-db29-49ba-82b2-e2caab0ddbca","name":"Sticky Note10","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[440,280]},{"parameters":{"code":{"execute":{"code":"const { randomUUID } = require('crypto') // Enable the crypto lib using env var NODE_FUNCTION_ALLOW_BUILTIN=crypto\nconst { QdrantClient } = require('@qdrant/js-client-rest');\n\n// 1. Qdrant config\nconst client = new QdrantClient({ url: 'http://qdrant:6333' });\nconst collectionName = 'contextual_retrieval_example';\n\n// 2. Inputs\nconst inputData = this.getInputData();\nconst embeddings = await this.getInputConnectionData('ai_embedding', 0);\nconst documentLoader = await this.getInputConnectionData('ai_document', 0);\n\n// 3. Run document loader\nconst docs = await documentLoader.processAll(inputData);\n\n// 4. generate points with sparse vectors\nconst points = [];\nlet vector = {};\nfor (let i=0,j=docs.length;i<j;i++) {\n  points.push({\n    id: randomUUID(),\n    vector: {\n      default: await embeddings.embedQuery(docs[i].pageContent),\n      bm42: inputData[i].json.sparse,\n    },\n    payload: {\n      content: docs[i].pageContent,\n      metadata: docs[i].metadata,\n    }\n  })\n}\n\n// 5. Delete existing vectors by title\nawait client.delete(collectionName, {\n  filter: {\n    must: [\n      {\n        key: \"metadata.title\",\n        match: { \"value\": docs[0].metadata.title }\n      }\n    ]\n  }\n});\n\n// 6. Upsert into Qdrant\nconst res = await client.upsert(collectionName, { points });\n\nreturn res;"}},"inputs":{"input":[{"type":"main","maxConnections":1,"required":true},{"type":"ai_embedding","maxConnections":1,"required":true},{"type":"ai_document","maxConnections":1,"required":true}]},"outputs":{"output":[{"type":"main"}]}},"id":"f9fe3e70-a414-479c-a537-f51dedcaf8ee","name":"Insert Documents with Sparse Vectors","type":"@n8n/n8n-nodes-langchain.code","typeVersion":1,"position":[3140,560]},{"parameters":{"code":{"supplyData":{"code":"const { QdrantClient } = require('@qdrant/js-client-rest');\nconst { CohereRerank } = require(\"@langchain/cohere\");\nconst { DynamicTool } = require(\"@langchain/core/tools\");\n\n// 1. Tool Config\nconst name = 'bitcoin_whitepaper_tool';\nconst description = 'Call this tool to get information and/or context from the Bitcoin Whitepaper';\n\n// 2. Qdrant config\nconst client = new QdrantClient({ url: 'http://qdrant:6333' });\nconst collectionName = 'contextual_retrieval_example';\nconst limit = 20;\n\n// 3. Cohere config\nconst cohereRerank = new CohereRerank({\n  apiKey: 'ndkOvd390Anjmw3Abt1LaRGTMxyGZHEIbXGKVCTT', // Default\n  model: \"rerank-english-v3.0\", // Default\n});\n\n// 4. Inputs\nconst embeddings = await this.getInputConnectionData('ai_embedding', 0);\nconst sparseVectorTool = await this.getInputConnectionData('ai_tool', 0);\n\n// 5. Tool definition\nconst vectorStoreTool = new DynamicTool({\n  name,\n  description,\n  func: async (input) => {\n    const denseVector = await embeddings.embedQuery(input);\n    const sparseVector = JSON.parse(await sparseVectorTool.invoke(input));\n\n    const response = await client.query(collectionName, {\n      prefetch: [\n        {\n          query: denseVector,\n          using: 'default',\n          limit: 100\n        },\n        {\n          query: sparseVector,\n          using: 'bm42',\n          limit: 100\n        }\n     ],\n     query: { fusion: 'rrf' },\n     with_payload: true,\n     limit,\n    });\n    \n    const docs = response.points.map(res => ({\n      pageContent: res.payload.content,\n      metadata: res.payload.metadata\n    }));\n    const rankings = await cohereRerank.rerank(docs, input);\n    rankings.forEach(rank => { docs[rank.index].score = rank.relevanceScore });\n\n    const rankedDocs = docs.toSorted((a,b) => b.score-a.score);\n    return JSON.stringify(rankedDocs);\n  }\n});\n\nreturn vectorStoreTool;"}},"inputs":{"input":[{"type":"ai_embedding","maxConnections":1,"required":true},{"type":"ai_tool","maxConnections":1,"required":true}]},"outputs":{"output":[{"type":"ai_tool"}]}},"id":"d91259d2-e1d2-4709-a63f-3701e67bb18f","name":"Qdrant with Cohere ReRank","type":"@n8n/n8n-nodes-langchain.code","typeVersion":1,"position":[1140,1360]},{"parameters":{"code":{"execute":{"code":"const { QdrantClient } = require('@qdrant/js-client-rest');\nconst { CohereRerank } = require(\"@langchain/cohere\");\nconst { DynamicTool } = require(\"@langchain/core/tools\");\n\n// 1. Tool Config\nconst name = 'bitcoin_whitepaper_tool';\nconst description = 'Call this tool to get information and/or context from the Bitcoin Whitepaper';\n\n// 2. Qdrant config\nconst client = new QdrantClient({ url: 'http://qdrant:6333' });\nconst collectionName = 'contextual_retrieval_example';\nconst limit = 20;\n\n// 3. Cohere config\nconst cohereRerank = new CohereRerank({\n  apiKey: '<MY_COHERE_API_KEY>', // Default\n  model: \"rerank-english-v3.0\", // Default\n});\n\n// 4. Inputs\nconst inputData = await this.getInputData();\nconst embeddings = await this.getInputConnectionData('ai_embedding', 0);\nconst sparseVectorTool = await this.getInputConnectionData('ai_tool', 0);\n\n// 5. Execute\nconst query = inputData[0].json.query;\n\nconst denseVector = await embeddings.embedQuery(query);\nconst sparseVector = JSON.parse(await sparseVectorTool.invoke(query));\n\nconst response = await client.query(collectionName, {\n  prefetch: [\n    {\n      query: denseVector,\n      using: 'default',\n      limit: 100\n    },\n    {\n      query: sparseVector,\n      using: 'bm42',\n      limit: 100\n    }\n ],\n query: { fusion: 'rrf' },\n with_payload: true,\n limit,\n});\n\nconst docs = response.points.map(res => ({\n  pageContent: res.payload.content,\n  metadata: res.payload.metadata\n}));\nconst rankings = await cohereRerank.rerank(docs, query);\nrankings.forEach(rank => { docs[rank.index].score = rank.relevanceScore });\n\nconst rankedDocs = docs.toSorted((a,b) => b.score-a.score);\nreturn rankedDocs;"}},"inputs":{"input":[{"type":"main","maxConnections":1,"required":true},{"type":"ai_embedding","maxConnections":1,"required":true},{"type":"ai_tool","maxConnections":1,"required":true}]},"outputs":{"output":[{"type":"main"}]}},"id":"02af6f8b-c286-4836-bf52-fa9fbbbaed72","name":"Qdrant with Cohere ReRank1","type":"@n8n/n8n-nodes-langchain.code","typeVersion":1,"position":[1800,1360]},{"parameters":{"modelName":"models/text-embedding-004"},"type":"@n8n/n8n-nodes-langchain.embeddingsGoogleGemini","typeVersion":1,"position":[2540,1840],"id":"40903784-de8f-4e97-b60b-9ac9b3ca8090","name":"Embeddings Google Gemini","credentials":{"googlePalmApi":{"id":"VxuR4Ot4TSiJTVFk","name":"Google Gemini(PaLM) Api account"}}},{"parameters":{"modelName":"models/text-embedding-004"},"type":"@n8n/n8n-nodes-langchain.embeddingsGoogleGemini","typeVersion":1,"position":[1860,1580],"id":"9ffb594d-b616-4c7a-ab57-c96fedc34f47","name":"Embeddings Google Gemini1","credentials":{"googlePalmApi":{"id":"VxuR4Ot4TSiJTVFk","name":"Google Gemini(PaLM) Api account"}}},{"parameters":{"modelName":"models/text-embedding-004"},"type":"@n8n/n8n-nodes-langchain.embeddingsGoogleGemini","typeVersion":1,"position":[2780,820],"id":"f8c385ab-73cb-4090-b9f6-7987fed12fdd","name":"Embeddings Google Gemini2","credentials":{"googlePalmApi":{"id":"VxuR4Ot4TSiJTVFk","name":"Google Gemini(PaLM) Api account"}}}],"connections":{"When clicking ‘Test workflow’":{"main":[[{"node":"Get Document","type":"main","index":0}]]},"Extract from File":{"main":[[{"node":"Get Doc Attributes","type":"main","index":0}]]},"Recursive Character Text Splitter":{"ai_textSplitter":[[{"node":"Default Data Loader","type":"ai_textSplitter","index":0}]]},"When chat message received":{"main":[[{"node":"AI Agent","type":"main","index":0}]]},"Anthropic Chat Model1":{"ai_languageModel":[[{"node":"AI Agent","type":"ai_languageModel","index":0}]]},"Window Buffer Memory":{"ai_memory":[[{"node":"AI Agent","type":"ai_memory","index":0}]]},"Default Data Loader":{"ai_document":[[{"node":"Insert Documents with Sparse Vectors","type":"ai_document","index":0}]]},"Execute Workflow Trigger":{"main":[[{"node":"Router","type":"main","index":0}]]},"Get Sparse Vector Tool":{"ai_tool":[[{"node":"Qdrant with Cohere ReRank","type":"ai_tool","index":0}]]},"Query":{"main":[[{"node":"Qdrant with Cohere ReRank1","type":"main","index":0}]]},"Anthropic Chat Model2":{"ai_languageModel":[[{"node":"Generate Contextual Text","type":"ai_languageModel","index":0}]]},"Chunks To List":{"main":[[{"node":"Generate Contextual Text","type":"main","index":0}]]},"Generate TF-IDF Sparse Vectors":{"main":[[{"node":"Get Values","type":"main","index":0}]]},"Get Values":{"main":[[{"node":"Insert Documents with Sparse Vectors","type":"main","index":0}]]},"Get Sparse Vector Tool1":{"ai_tool":[[{"node":"Qdrant with Cohere ReRank1","type":"ai_tool","index":0}]]},"Embeddings Cohere":{"ai_embedding":[[{"node":"Insert Documents with Sparse Vectors","type":"ai_embedding","index":0}]]},"Embeddings Cohere1":{"ai_embedding":[[]]},"Embeddings Cohere2":{"ai_embedding":[[{"node":"Qdrant with Cohere ReRank","type":"ai_embedding","index":0}]]},"Create Chunks From Doc":{"main":[[{"node":"Chunks To List","type":"main","index":0}]]},"Router":{"main":[[{"node":"Generate Sparse Vectors","type":"main","index":0}]]},"Generate Contextual Text":{"main":[[{"node":"Generate TF-IDF Sparse Vectors","type":"main","index":0}]]},"Get Document":{"main":[[{"node":"Extract from File","type":"main","index":0}]]},"Anthropic Chat Model":{"ai_languageModel":[[{"node":"Get Doc Attributes","type":"ai_languageModel","index":0}]]},"Get Doc Attributes":{"main":[[{"node":"Create Chunks From Doc","type":"main","index":0}]]},"Qdrant with Cohere ReRank":{"ai_tool":[[{"node":"AI Agent","type":"ai_tool","index":0}]]},"Embeddings Google Gemini":{"ai_embedding":[[]]},"Embeddings Google Gemini1":{"ai_embedding":[[{"node":"Qdrant with Cohere ReRank1","type":"ai_embedding","index":0}]]},"Embeddings Google Gemini2":{"ai_embedding":[[]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"1eacf349-a573-4fad-bf23-350eaaf0b2ba","triggerCount":0,"tags":[],"shared":[{"createdAt":"2025-05-23T04:23:28.446Z","updatedAt":"2025-05-23T04:23:28.446Z","role":"workflow:owner","workflowId":"JMHN9Ocxym4ozpmX","projectId":"WbfPHUYYKS2tiNNo","project":{"createdAt":"2025-05-03T06:49:18.088Z","updatedAt":"2025-05-03T06:52:24.837Z","id":"WbfPHUYYKS2tiNNo","name":"charlie phan <scottyphan08@gmail.com>","type":"personal","icon":null,"description":null}}]},{"createdAt":"2025-05-23T06:05:39.761Z","updatedAt":"2025-05-23T06:05:39.761Z","id":"AIIVHde9uyhkddKc","name":"Thue","active":false,"isArchived":false,"nodes":[{"parameters":{"method":"POST","url":"https://api.mistral.ai/v1/files","authentication":"genericCredentialType","genericAuthType":"httpHeaderAuth","sendBody":true,"contentType":"multipart-form-data","bodyParameters":{"parameters":[{"name":"purpose","value":"ocr"},{"parameterType":"formBinaryData","name":"file","inputDataFieldName":"data"}]},"options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[1960,0],"id":"fceec38e-6725-47d2-9f58-ca918b5432ce","name":"Upload to Mistral"},{"parameters":{"url":"=https://api.mistral.ai/v1/files/{{ $json.id }}/url","authentication":"genericCredentialType","genericAuthType":"httpHeaderAuth","sendQuery":true,"queryParameters":{"parameters":[{"name":"expiry","value":"24"}]},"options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[2180,0],"id":"422a3bc4-f41e-4c72-af2d-ac81e8359ce8","name":"Get Signed URL"},{"parameters":{"method":"POST","url":"https://api.mistral.ai/v1/ocr","authentication":"genericCredentialType","genericAuthType":"httpHeaderAuth","sendBody":true,"specifyBody":"json","jsonBody":"={\n  \"model\": \"mistral-ocr-latest\",\n  \"document\": {\n    \"type\": \"document_url\",\n    \"document_url\": \"{{ $json.url }}\"\n  },\n  \"include_image_base64\": true\n}","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[2360,0],"id":"8f986ebb-d6df-4e83-ab4a-92a982ced842","name":"Get OCR Results"},{"parameters":{"fieldToSplitOut":"pages","options":{}},"type":"n8n-nodes-base.splitOut","typeVersion":1,"position":[2540,0],"id":"059da1bd-0028-418a-8ff7-776cfc3a1e0b","name":"Split Out"},{"parameters":{"fieldsToSummarize":{"values":[{"aggregation":"append","field":"markdown"}]},"options":{}},"type":"n8n-nodes-base.summarize","typeVersion":1.1,"position":[2700,0],"id":"0c534958-7d7f-4858-a7b4-2b81ae522439","name":"Summarize"},{"parameters":{"modelName":"models/gemini-2.0-flash","options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatGoogleGemini","typeVersion":1,"position":[2880,180],"id":"180cc54f-060c-483f-9c7f-ab49e00bcf50","name":"Google Gemini Chat Model"},{"parameters":{"promptType":"define","text":"={{ $json.appended_markdown }}","messages":{"messageValues":[{"message":"=Vai trò: Chuyên gia tóm tắt văn bản pháp luật\n\nNhiệm vụ: Tóm tắt văn bản pháp luật từ \"văn bản thuế Việt Nam\" một cách chính xác và mạch lạc.\n\nCấu trúc tóm tắt:\n\nNgày tháng năm phát hành luật : {{ $('Split out FILE and DATE ').item.json.linkdownload[0].DATE }}\n\n*** Bạn sẽ sử dụng chính xác ngày này:  {{ $('Split out FILE and DATE ').item.json.linkdownload[0].DATE }}\n\nCác nội dung chính: Liệt kê các điểm chính dưới dạng danh sách.\n\nYêu cầu:\n\nĐảm bảo các nội dung văn bản phải chính xác, bao gồm các thông tin chi tiết như thông tư, công văn số,...\n\nNgôn ngữ: Tiếng Việt"}]}},"type":"@n8n/n8n-nodes-langchain.chainLlm","typeVersion":1.6,"position":[2880,0],"id":"020d25b9-2394-47e8-a78c-3239a079c652","name":"Basic LLM Chain"},{"parameters":{"options":{}},"type":"n8n-nodes-base.splitInBatches","typeVersion":3,"position":[920,0],"id":"dd3a3b43-6cce-448b-a6cb-6f3f26948f6b","name":"Loop Over Items"},{"parameters":{"rule":{"interval":[{"triggerAtHour":5}]}},"type":"n8n-nodes-base.scheduleTrigger","typeVersion":1.2,"position":[-180,0],"id":"71df512f-28e7-4765-bab9-9a0be3ad4667","name":"Schedule Trigger"},{"parameters":{"url":"https://gdt.gov.vn/wps/portal/!ut/p/z1/tVNNc4IwEP0rvXhksiFB4UitFaqWohUlFyYCYloJWjPY_vuCtEelHcccktnZfR-Z5CGGlohJXoqMK1FIvq3qkHWjvj_qB6MAACxDB3cyCB7Gdhc8DChADLFYqp3aoDBL1F1cSJVK1YEDj6r6dJZcrrjsQLnaJM0eqbhqAdV00I0OYCPFKfQMjVgp1ihfx5qZYkujsWEZa0wS3iW10C4WCQr_NL1oc86qNpxZNvzih7ZDe2MAkw4BXHrvPTt9H4NLTvgL9A3-gkArnjUjFxy03eFngFru2Axm3hReHsHFnu9PJwEZzQkKK5O9sy4cHS1KkR7RXBYfefUbZv98AwfaFPCVCi305Kb0FlxJ_4RYti1WTc7E237P7CpMdYA-FVreNk27PDfJlxDa-9Q8vq43WR5NBsSoj8M3250h-A!!/dz/d5/L2dBISEvZ0FBIS9nQSEh/","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[40,0],"id":"c4d2870e-8c60-4b94-b901-c2990118abbe","name":"gtd.gov.vn"},{"parameters":{"jsCode":"const items = $input.all();\nconst results = [];\n\nfor (const item of items) {\n  const extractedData = {\n    linkdownload: []\n  };\n  let htmlContent = \"\";\n  if (item.json.data) {\n    htmlContent = item.json.data;\n  } else if (item.binary && item.binary.data) {\n    htmlContent = Buffer.from(item.binary.data, 'base64').toString();\n  }\n\n  // Define the base URL prefix\n  const baseUrl = 'https://gdt.gov.vn/wps/portal/!ut/p/z1/tVLLbsIwEPyVcuBo7cZxAjmGFJHwFKoaiC_IDmlISxxorfTx9XWgV5pWCB-8Wu14ZtYa4LAGrkRd5EIXlRJ70yfc3QTLSRBPYkT0HIrRbBjfT30XFxZCDBx4qvRB7yDJt_ourZTOlO7im9iY_lRroaRQXazlbnu-Nzo1I2SEInW6KDPbcqToE496lLDMdonIHEEE6wmUkjroskbokBZbSP6EXrU552aMF46P5j0_QYKRH7LeFLHPRogRGyzmYbC0MLJ_AL9wJMZD76KHkMKqLrJ3eFTVa2k---GfK4atCtaVCi309k3pPbySfgw831fyHOPi-Xjkvslqk88PDevbhvVQln37k7w8zYY2S8b112BOmjL1O51veWWhJw!!/dz/d5/L2dBISEvZ0FBIS9nQSEh';\n\n  // Extract the content within <div class=\"listnew2\">\n  const listRegex = /<div class=\"listnew2\"[^>]*>([\\s\\S]*?)<\\/div>/i;\n  const listMatch = listRegex.exec(htmlContent);\n  if (listMatch) {\n    const listContent = listMatch[1];\n    // Extract each <li> item with link, name, and date\n    const itemRegex = /<li>\\s*<a\\s+href=\"([^\"]+)\"[^>]*>([^<]+)<\\/a>\\s*<span\\s+class=\"datenewspan\">\\(([^)]+)\\)<\\/span>\\s*<\\/li>/gi;\n    let itemMatch;\n    while ((itemMatch = itemRegex.exec(listContent)) !== null) {\n      const link = itemMatch[1];       // URL từ href\n      const name = itemMatch[2].trim(); // Tên file (text trong <a>), loại bỏ khoảng trắng thừa\n      const date = itemMatch[3];       // Ngày tháng từ span\n\n      // Filter links related to legal documents\n      if (link.includes('vanban') || link.includes('vbhd') || link.match(/\\.pdf$/i)) {\n        // Construct the full URL by prepending the base URL\n        const fullLink = `${baseUrl}/${link}#Z7_CQKCVKV0009520IMEVDLA60OH2`;\n\n        // Add to linkdownload array with FILE, NAME, and DATE\n        extractedData.linkdownload.push({\n          FILE: fullLink,  // URL đầy đủ\n          NAME: name,      // Tên file mới thêm\n          DATE: date       // Ngày tháng\n        });\n      }\n    }\n  }\n\n  // Nếu có link được trích xuất, thêm vào results\n  if (extractedData.linkdownload.length > 0) {\n    results.push({ json: extractedData });\n  }\n}\n\nreturn results;"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[260,0],"id":"19103086-40e1-4e85-8f15-849b7f3a17d3","name":"Split out FILE and DATE "},{"parameters":{"fieldToSplitOut":"linkdownload","options":{"disableDotNotation":false}},"type":"n8n-nodes-base.splitOut","typeVersion":1,"position":[480,0],"id":"2c3481aa-ac79-4d4f-94cd-8910edc21f03","name":"Split out"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"0448ac97-4f80-4f6f-aa1c-f5d0d6d16f47","leftValue":"={{ $json.DATE.toDateTime().format('yyyy-dd-MM') }}","rightValue":"={{$now.toDateTime()}}","operator":{"type":"dateTime","operation":"beforeOrEquals"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.filter","typeVersion":2.2,"position":[700,0],"id":"57a3df90-2b5c-4bce-9d80-d6199b642924","name":"Get the newest Documents","disabled":true},{"parameters":{"url":"={{ $json.FILE }}","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[1160,0],"id":"905e1dbe-b64d-49e8-856b-b718c4d40f34","name":"Get LinkDownload"},{"parameters":{"jsCode":"const items = $input.all();\nconst results = [];\n\n\nfor (const item of items) {\n  const extractedData = {\n    linkdownload: []\n  };\n  let htmlContent = \"\";\n  if (item.json.data) {\n    htmlContent = item.json.data;\n  } else if (item.binary && item.binary.data) {\n    htmlContent = Buffer.from(item.binary.data, 'base64').toString();\n  }\n\n  // Trích xuất thẻ <div> có lớp 'print_icon'\n  const printIconRegex = /<div class=\"print_icon\"[^>]*>[\\s\\S]*?<a class='linkDown' href='([^']+)'[^>]*>[\\s\\S]*?<\\/div>/gi;\n  let match;\n  while ((match = printIconRegex.exec(htmlContent)) !== null) {\n    const link = match[1];\n    // Thêm tiền tố \"https://gdt.gov.vn/\" vào liên kết\n    const fullLink = `https://gdt.gov.vn${link}`;\n    extractedData.linkdownload.push(fullLink);\n  }\n\n  // Nếu có liên kết được trích xuất, thêm vào results\n  if (extractedData.linkdownload.length > 0) {\n    results.push({ json: extractedData });\n  }\n}\n\nreturn results;"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1360,0],"id":"da3fccd6-22f4-4cce-8b09-882c9e4e6be2","name":"Split out LinkDownload"},{"parameters":{"url":"={{ $json.linkdownload[0] }}","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[1560,0],"id":"830a68df-96c4-4dd2-8668-f7f652b86000","name":"Download document"},{"parameters":{"jsCode":"$input.item.binary.data.fileName = 'Default.pdf'\n\nreturn $input.item;"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1760,0],"id":"363f87f0-06ef-44af-be88-84349990c2de","name":"Set Name"},{"parameters":{"folderId":"1xFQHJ-dLAwLpqndk7rXjUUhG4rBTs9b_","title":"={{ $('Loop Over Items').item.json.NAME }}"},"type":"n8n-nodes-base.googleDocs","typeVersion":2,"position":[3260,0],"id":"cdbca5d1-0721-408b-91c1-c5d880c17fca","name":"Create new Docs"},{"parameters":{"operation":"update","documentURL":"={{ $json.id }}","actionsUi":{"actionFields":[{"action":"insert","text":"={{ $('Basic LLM Chain').item.json.text }}"}]}},"type":"n8n-nodes-base.googleDocs","typeVersion":2,"position":[3460,0],"id":"145df5c3-62b1-445f-839f-b99a6b05add7","name":"Input text"}],"connections":{"Upload to Mistral":{"main":[[{"node":"Get Signed URL","type":"main","index":0}]]},"Get Signed URL":{"main":[[{"node":"Get OCR Results","type":"main","index":0}]]},"Get OCR Results":{"main":[[{"node":"Split Out","type":"main","index":0}]]},"Split Out":{"main":[[{"node":"Summarize","type":"main","index":0}]]},"Summarize":{"main":[[{"node":"Basic LLM Chain","type":"main","index":0}]]},"Google Gemini Chat Model":{"ai_languageModel":[[{"node":"Basic LLM Chain","type":"ai_languageModel","index":0}]]},"Basic LLM Chain":{"main":[[{"node":"Create new Docs","type":"main","index":0}]]},"Loop Over Items":{"main":[[],[{"node":"Get LinkDownload","type":"main","index":0}]]},"Schedule Trigger":{"main":[[{"node":"gtd.gov.vn","type":"main","index":0}]]},"gtd.gov.vn":{"main":[[{"node":"Split out FILE and DATE ","type":"main","index":0}]]},"Split out FILE and DATE ":{"main":[[{"node":"Split out","type":"main","index":0}]]},"Split out":{"main":[[{"node":"Get the newest Documents","type":"main","index":0}]]},"Get the newest Documents":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Get LinkDownload":{"main":[[{"node":"Split out LinkDownload","type":"main","index":0}]]},"Split out LinkDownload":{"main":[[{"node":"Download document","type":"main","index":0}]]},"Download document":{"main":[[{"node":"Set Name","type":"main","index":0}]]},"Set Name":{"main":[[{"node":"Upload to Mistral","type":"main","index":0}]]},"Create new Docs":{"main":[[{"node":"Input text","type":"main","index":0}]]},"Input text":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":null,"pinData":{},"versionId":"f76f5fa4-2140-43bf-b0b1-08aa3845c483","triggerCount":0,"tags":[],"shared":[{"createdAt":"2025-05-23T06:05:39.761Z","updatedAt":"2025-05-23T06:05:39.761Z","role":"workflow:owner","workflowId":"AIIVHde9uyhkddKc","projectId":"WbfPHUYYKS2tiNNo","project":{"createdAt":"2025-05-03T06:49:18.088Z","updatedAt":"2025-05-03T06:52:24.837Z","id":"WbfPHUYYKS2tiNNo","name":"charlie phan <scottyphan08@gmail.com>","type":"personal","icon":null,"description":null}}]},{"createdAt":"2025-05-23T06:57:49.791Z","updatedAt":"2025-05-23T06:59:03.926Z","id":"43miDBM72xGyuFz6","name":"Old version: 1.60.1 RAG","active":false,"isArchived":false,"nodes":[{"parameters":{},"id":"ee2b398e-829f-4af5-9346-de8de81486e3","name":"When clicking ‘Test workflow’","type":"n8n-nodes-base.manualTrigger","typeVersion":1,"position":[-80,320]},{"parameters":{"operation":"pdf","options":{}},"id":"154a4ba9-8f43-4fad-a868-c4b5791ca76d","name":"Extract from File","type":"n8n-nodes-base.extractFromFile","typeVersion":1,"position":[520,420]},{"parameters":{"mode":"runOnceForEachItem","jsCode":"const chunks = [];\nconst chunkSize = 1000;\nconst chunkOverlap = 200;\nconst text = $input.item.json.text.replace(/\\n/, '');\n\nfor (let i=0,j=Math.round(text.length/chunkSize)+1;i<j;i++) {\n  chunks.push(\n    text.substr(\n      Math.max(0,(i * chunkSize)-chunkOverlap),\n      chunkSize\n    )\n  );\n}\n\nreturn { chunks };"},"id":"708117d0-9f09-4683-a713-208495246d54","name":"Create Chunks From Doc","type":"n8n-nodes-base.code","typeVersion":2,"position":[700,420]},{"parameters":{"jsonMode":"expressionData","jsonData":"={{\n{\n  \"content\": `${$json.text }\\n---\\n${$json.chunk}`\n}\n}}","options":{}},"id":"c13c14c4-1968-4e3b-94d5-3d0ca271c88d","name":"Default Data Loader","type":"@n8n/n8n-nodes-langchain.documentDefaultDataLoader","typeVersion":1,"position":[2320,620]},{"parameters":{"chunkSize":2000,"options":{}},"id":"cfc5e43d-013a-41ea-adb1-b84f0f33dfff","name":"Recursive Character Text Splitter","type":"@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter","typeVersion":1,"position":[2320,740]},{"parameters":{"options":{}},"id":"ec701d36-66d0-4c64-91dc-37fccbb5eab1","name":"When chat message received","type":"@n8n/n8n-nodes-langchain.chatTrigger","typeVersion":1.1,"position":[980,1440],"webhookId":"9072ae8b-7ff3-4d9a-8a9d-65784531b266"},{"parameters":{"options":{}},"id":"0918306c-30e4-43fe-b1de-fd9bb419641e","name":"Anthropic Chat Model1","type":"@n8n/n8n-nodes-langchain.lmChatAnthropic","typeVersion":1.2,"position":[1180,1620]},{"parameters":{},"id":"6a485c8c-4710-4ab8-bedb-8b141331872d","name":"Window Buffer Memory","type":"@n8n/n8n-nodes-langchain.memoryBufferWindow","typeVersion":1.2,"position":[1300,1620]},{"parameters":{"url":"https://bitcoin.org/bitcoin.pdf","options":{}},"id":"0e7996ff-03b1-4820-9002-f32e3c32ce2f","name":"Get Bitcoin Whitepaper","type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[340,420]},{"parameters":{"content":"## 1. Split Document Into Chunks\nUnlike traditional vector store workflows, we want to split our document prior to embedding and this is easily achieved using the Code node. Feel free to adjust the text splitting params or replace it entirely to suit the needs of your data.\n\nFor this demonstration, we'll use the Bitcoin Whitepaper from bitcoin.org.","height":513.3089035768523,"width":698.7551844932398,"color":7},"id":"607c6743-58d8-4fa8-a7d0-aa3b4bc53155","name":"Sticky Note","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[220,160]},{"parameters":{"content":"## 2. Generate Sparse Vector and Contextual Text For Chunk\nWith our chunks, we'll want to achieve the following:\n(1) **Generate a contextual summary of what the chunk is about relative to the whole document**.\nFor this, we'll use the basic LLM node using Antrophic's Claude Haiku model with the recommended prompt as shared in the article.\n(2) **Generate a sparse vector for the chunk and summary**\nWe can use the python code node to generate TF-IDF sparse vectors with the scikit-learn library. Good to know, this library doesn't require external dependency setup steps and auto-installs on first time use.\n\nOnce we have our generated values, we'll combine them with the chunk object using the Edit Fields node.","height":678.5283471437544,"width":1019.742667955435,"color":7},"id":"0c545ec3-7968-4c47-9576-d43a3afe3948","name":"Sticky Note1","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[960,160]},{"parameters":{"content":"## 3. Insert Docs to Qdrant (via Langchain Code Node)\nUnfortunately, n8n (or rather langchain) doesn't support inserting sparse vectors so we'll have to build our own \"Insert Documents\" node using a Langchain Code Node. In this Langchain code node, we'll forego the langchain vectorstore node and use the Qdrant client SDK directly instead.\n\n**Required:**\nTo use this demonstration, you must complete the following:\n* Ensure your Qdrant instance is running and set the URL in the node\n* Create the Qdrant collection as instructed (see yellow sticky)\n","height":783.6896392386983,"width":773.0065116279061,"color":7},"id":"a00149cb-dad4-452c-8dd3-0d3d52e20e65","name":"Sticky Note2","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[2000,140]},{"parameters":{"content":"## 4. Retrieval using Sparse Vectors and ReRanker (Chat Agent Example)\nFor retrieval, we want to be able to (1) query with both dense and sparse vectors and (2) apply a rerank algorithm to our vector store docs. We can setup a custom vector store tool which does both using a custom Langchain Code node.\n\n**Required:**\nTo use this demonstration, you must complete the following:\n* Installed the updated version of the @Qdrant/js-client-rest module\n* Ensure your Qdrant instance is running and set the URL in the \"Qdrant with Cohere ReRank\" subnode\n* Add your Cohere API key in the \"Qdrant with Cohere ReRank\" subnode.","height":989.2139841226178,"width":973.8052093023243,"color":7},"id":"adc3564b-3a58-4eba-8092-9a286be125df","name":"Sticky Note3","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[840,1140]},{"parameters":{},"id":"2df6bbaf-ff24-4626-b520-bb7d216efdf4","name":"Execute Workflow Trigger","type":"n8n-nodes-base.executeWorkflowTrigger","typeVersion":1,"position":[1400,1920]},{"parameters":{"name":"get_sparse_vector","description":"Generates TD-IDF sparse vector for query","workflowId":{"__rl":true,"value":"={{ $workflow.id }}","mode":"id"}},"id":"63e46b19-e284-4434-a7c1-3690fefd6399","name":"Get Sparse Vector Tool","type":"@n8n/n8n-nodes-langchain.toolWorkflow","typeVersion":1.2,"position":[1580,1760]},{"parameters":{"assignments":{"assignments":[{"id":"87bc3071-4179-4aed-aa88-37c6381d8b73","name":"query","value":"Who created Bitcoin?","type":"string"}]},"options":{}},"id":"8f64ba4d-f143-490f-8ac3-6c9e4039ebcc","name":"Query","type":"n8n-nodes-base.set","typeVersion":3.4,"position":[2020,1420]},{"parameters":{"name":"get_sparse_vector","description":"Generates TD-IDF sparse vector for query","workflowId":{"__rl":true,"value":"={{ $workflow.id }}","mode":"id"}},"id":"6455d605-6c15-43da-831d-87159d7b7e90","name":"Get Sparse Vector Tool1","type":"@n8n/n8n-nodes-langchain.toolWorkflow","typeVersion":1.2,"position":[2400,1600]},{"parameters":{"content":"## 5. Retrieval using Sparse Vectors and ReRanker (Retrieval Example)\nThis demonstration is similar to the previous step but is not using an AI Agent.\n\n**Required:**\nTo use this demonstration, you must complete the following:\n* Installed the updated version of the @Qdrant/js-client-rest module\n* Ensure your Qdrant instance is running and set the URL in the \"Qdrant with Cohere ReRank1\" node\n* Add your Cohere API key in the \"Qdrant with Cohere ReRank1\" node.","height":683.3722976015338,"width":838.4124151865863,"color":7},"id":"610d01b8-e07c-4eea-b65f-f2dd3c2b4209","name":"Sticky Note4","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[1840,1040]},{"parameters":{"model":"claude-3-haiku-20240307","options":{}},"id":"be577b6a-8e8e-4d44-bb56-d966b78ef77f","name":"Anthropic Chat Model2","type":"@n8n/n8n-nodes-langchain.lmChatAnthropic","typeVersion":1.2,"position":[1240,640]},{"parameters":{"content":"### Create Collection!\nYou need to create a Qdrant Collection with the following parameters:\n```\nPUT collections/sparse_vectors_example\n{\n  \"vectors\": {\n    \"default\": {\n      \"distance\": \"Cosine\",\n      \"size\": 1024\n    }\n  },\n  \"sparse_vectors\": {\n    \"bm42\": {\n      \"modifier\": \"idf\"\n    }\n  }\n}\n```","height":326.3445370381994,"width":283.1788273573171},"id":"9e6c2c58-7491-4da6-8c55-053a89553741","name":"Sticky Note5","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[2580,540]},{"parameters":{"fieldToSplitOut":"chunks","options":{"destinationFieldName":"chunk"}},"id":"5dcb4a22-e7c1-4408-8e3f-7310e30f3539","name":"Chunks To List","type":"n8n-nodes-base.splitOut","typeVersion":1,"position":[1060,480]},{"parameters":{"mode":"runOnceForEachItem","language":"python","pythonCode":"texts = [f\"{_('Generate Contextual Text').item.json.text}\\n---\\n{_('Chunks To List').item.json.chunk}\"]\n\nfrom sklearn.feature_extraction.text import TfidfVectorizer\n\n# Create TF-IDF vectorizer\nvectorizer = TfidfVectorizer()\n\n# Fit and transform the texts to generate TF-IDF vectors\nX = vectorizer.fit_transform(texts)\n\nreturn {\n  \"sparse\": {\n    \"indices\": X.indices.tolist(),\n    \"values\": X.data.tolist()\n  }\n}"},"id":"c393c40d-5722-4f17-81e6-6bc633b05c11","name":"Generate TF-IDF Sparse Vectors","type":"n8n-nodes-base.code","typeVersion":2,"position":[1580,480]},{"parameters":{"assignments":{"assignments":[{"id":"069d067c-3534-4939-8ff4-34dee02a9436","name":"chunk","value":"={{ $('Chunks To List').item.json.chunk }}","type":"string"},{"id":"24e01f4f-e156-47e9-a89e-9cbdccda6bd4","name":"text","value":"={{ $('Generate Contextual Text').item.json.text }}","type":"string"},{"id":"fa48ddaa-4658-463a-b1af-8308c24e325a","name":"sparse","value":"={{ $json.sparse }}","type":"object"}]},"options":{}},"id":"860c2506-a809-4489-9dbb-397d967b36dd","name":"Get Values","type":"n8n-nodes-base.set","typeVersion":3.4,"position":[1760,480]},{"parameters":{"mode":"runOnceForEachItem","language":"python","pythonCode":"import json\nfrom sklearn.feature_extraction.text import TfidfVectorizer\n\n# Create TF-IDF vectorizer\nvectorizer = TfidfVectorizer()\n\n# Fit and transform the texts to generate TF-IDF vectors\ntexts = [_input.item.json.query]\nX = vectorizer.fit_transform(texts)\n\nreturn {\n  \"response\": {\n    \"indices\": X.indices.tolist(),\n    \"values\": X.data.tolist()\n  }\n}"},"id":"2198b2ba-b138-4953-a883-d442c0906c39","name":"Generate Sparse Vectors","type":"n8n-nodes-base.code","typeVersion":2,"position":[1580,1920]},{"parameters":{"content":"## Implementing Antrophic's Contextual Retrieval \n\nThis workflow is inspired by the Antrophic article, [\"Introducing Contextual Retrieval\"](https://www.anthropic.com/news/contextual-retrieval), and tries to replicate the instructions given.\n\n**Original post here**: https://community.n8n.io/t/building-the-ultimate-rag-setup-with-contextual-summaries-sparse-vectors-and-reranking/54861/1\n\n### Need Help?\nJoin the [Discord](https://discord.com/invite/XPKeKXeB7d) or ask in the [Forum](https://community.n8n.io/)!\n","height":499.8777409192959,"width":405.66570496276904},"id":"10a1868f-ed77-4285-82f5-f2af204f8e11","name":"Sticky Note6","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[-220,20]},{"parameters":{"modelName":"embed-english-v3.0"},"id":"86ab208f-6735-42ed-8d5a-13f7ea57b0fc","name":"Embeddings Cohere","type":"@n8n/n8n-nodes-langchain.embeddingsCohere","typeVersion":1,"position":[2180,620]},{"parameters":{"modelName":"embed-english-v3.0"},"id":"7d77b111-d0f1-433a-9e67-ebf2449fa1c9","name":"Embeddings Cohere1","type":"@n8n/n8n-nodes-langchain.embeddingsCohere","typeVersion":1,"position":[1420,1760]},{"parameters":{"modelName":"embed-english-v3.0"},"id":"83693a11-9eb5-4a80-9e31-cfccf89e9dea","name":"Embeddings Cohere2","type":"@n8n/n8n-nodes-langchain.embeddingsCohere","typeVersion":1,"position":[2200,1600]},{"parameters":{"content":"## 🚨 Install Latest Qdrant Client\nThe version of @qdrant/js-client-rest that comes with langchain is unfortunately a year old and doesn't support the query API, however this API is required. We must install a newer version of the client. Alternatively, use something like node-fetch instead.\n\nRun the following node to install the latest Qdrant client to your instance. Note, this must be run again if you stop your n8n instance.","height":525.7367315143902,"width":462.50798893006436,"color":7},"id":"a655218b-4739-428c-a2c9-e6a97dfe8643","name":"Sticky Note7","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[340,1140]},{"parameters":{"command":"npm list @qdrant/js-client-rest >/dev/null 2>&1 || npm install @qdrant/js-client-rest\n"},"id":"625b965b-6860-49a5-b793-c022ac8fbd8b","name":"npm install @qdrant/js-client-rest","type":"n8n-nodes-base.executeCommand","typeVersion":1,"position":[520,1360]},{"parameters":{"promptType":"define","text":"=<document> \n{{ $('Extract from File').first().json.text }} \n</document>\nHere is the chunk we want to situate within the whole document \n<chunk> \n{{ $json.chunk }}\n</chunk> \nPlease give a short succinct context to situate this chunk within the overall document for the purposes of improving search retrieval of the chunk. Answer only with the succinct context and nothing else. "},"id":"24c9feb1-bac6-4d29-ae0a-d6734febee44","name":"Generate Contextual Text","type":"@n8n/n8n-nodes-langchain.chainLlm","typeVersion":1.4,"position":[1240,480]},{"parameters":{"options":{}},"id":"5b2e17e7-c789-4828-8369-ac4bbaba7372","name":"AI Agent","type":"@n8n/n8n-nodes-langchain.agent","typeVersion":1.6,"position":[1180,1440]},{"parameters":{"content":"### PART 1 of 2\nThis part generates and inserts into the vector store. You only have to do this once per document.","height":102.577757187954,"width":389.2978313113204,"color":5},"id":"f25ea9ff-c4ec-49bd-b236-39fdc814d77e","name":"Sticky Note8","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[220,40]},{"parameters":{"content":"### PART 2 of 2\nThis part demostrates 2 examples of retrieve or query your sparse vectors.","height":80,"width":524.5591143796955,"color":5},"id":"ed1117b2-d56f-42c0-9053-e7b5088833cf","name":"Sticky Note9","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[340,1020]},{"parameters":{"code":{"execute":{"code":"const { randomUUID } = require('crypto')\nconst { QdrantClient } = require('@qdrant/js-client-rest');\n\n// 1. Qdrant config\nconst client = new QdrantClient({ url: 'http://qdrant:6333' });\nconst collectionName = 'sparse_vectors_example';\n\n// 2. Inputs\nconst inputData = this.getInputData();\nconst embeddings = await this.getInputConnectionData('ai_embedding', 0);\nconst documentLoader = await this.getInputConnectionData('ai_document', 0);\n\n// 3. Run document loader\nconst docs = await documentLoader.processAll(inputData);\n\n// 4. generate points with sparse vectors\nconst points = [];\nlet vector = {};\nfor (let i=0,j=docs.length;i<j;i++) {\n  points.push({\n    id: randomUUID(),\n    vector: {\n      default: await embeddings.embedQuery(docs[i].pageContent),\n      bm42: inputData[i].json.sparse,\n    },\n    payload: {\n      content: docs[i].pageContent,\n      metadata: docs[i].metadata,\n    }\n  })\n}\n\n// 5. Upsert into Qdrant\nconst res = await client.upsert(collectionName, { points });\n\nreturn res;"}},"inputs":{"input":[{"type":"main","maxConnections":1,"required":true},{"type":"ai_embedding","maxConnections":1,"required":true},{"type":"ai_document","maxConnections":1,"required":true}]},"outputs":{"output":[{"type":"main"}]}},"id":"832146c3-27ac-42f8-8dc0-f948257ff80c","name":"Insert Documents with Sparse Vectors","type":"@n8n/n8n-nodes-langchain.code","typeVersion":1,"position":[2220,440]},{"parameters":{"code":{"supplyData":{"code":"const { QdrantClient } = require('/home/node/node_modules/@qdrant/js-client-rest');\nconst { CohereRerank } = require(\"@langchain/cohere\");\nconst { DynamicTool } = require(\"@langchain/core/tools\");\n\n// 1. Tool Config\nconst name = 'bitcoin_whitepaper_tool';\nconst description = 'Call this tool to get information and/or context from the Bitcoin Whitepaper';\n\n// 2. Qdrant config\nconst client = new QdrantClient({ url: 'http://qdrant:6333' });\nconst collectionName = 'sparse_vectors_example';\nconst limit = 20;\n\n// 3. Cohere config\nconst cohereRerank = new CohereRerank({\n  apiKey: '<MY_COHERE_API_KEY>', // Default\n  model: \"rerank-english-v3.0\", // Default\n});\n\n// 4. Inputs\nconst embeddings = await this.getInputConnectionData('ai_embedding', 0);\nconst sparseVectorTool = await this.getInputConnectionData('ai_tool', 0);\n\n// 5. Tool definition\nconst vectorStoreTool = new DynamicTool({\n  name,\n  description,\n  func: async (input) => {\n    const denseVector = await embeddings.embedQuery(input);\n    const sparseVector = JSON.parse(await sparseVectorTool.invoke(input));\n\n    const response = await client.query(collectionName, {\n      prefetch: [\n        {\n          query: denseVector,\n          using: 'default',\n          limit: 100\n        },\n        {\n          query: sparseVector,\n          using: 'bm42',\n          limit: 100\n        }\n     ],\n     query: { fusion: 'rrf' },\n     with_payload: true,\n     limit: 20\n    });\n    \n    const docs = response.points.map(res => ({\n      pageContent: res.payload.content,\n      metadata: res.payload.metadata\n    }));\n    const rankings = await cohereRerank.rerank(docs, input);\n    rankings.forEach(rank => { docs[rank.index].score = rank.relevanceScore });\n\n    const rankedDocs = docs.toSorted((a,b) => b.score-a.score);\n    return JSON.stringify(rankedDocs);\n  }\n});\n\nreturn vectorStoreTool;"}},"inputs":{"input":[{"type":"ai_embedding","maxConnections":1,"required":true},{"type":"ai_tool","maxConnections":1,"required":true}]},"outputs":{"output":[{"type":"ai_tool"}]}},"id":"1eb03f55-f571-4272-9801-3b163cd41d81","name":"Qdrant with Cohere ReRank","type":"@n8n/n8n-nodes-langchain.code","typeVersion":1,"position":[1420,1620]},{"parameters":{"code":{"execute":{"code":"const { QdrantClient } = require('/home/node/node_modules/@qdrant/js-client-rest');\nconst fetch = require('node-fetch');\nconst { CohereRerank } = require(\"@langchain/cohere\");\nconst { DynamicTool } = require(\"@langchain/core/tools\");\n\n// 1. Tool Config\nconst name = 'bitcoin_whitepaper_tool';\nconst description = 'Call this tool to get information and/or context from the Bitcoin Whitepaper';\n\n// 2. Qdrant config\nconst client = new QdrantClient({ url: 'http://qdrant:6333' });\nconst collectionName = 'sparse_vectors_example';\nconst limit = 20;\n\n// 3. Cohere config\nconst cohereRerank = new CohereRerank({\n  apiKey: '<MY_COHERE_API_KEY>', // Default\n  model: \"rerank-english-v3.0\", // Default\n});\n\n// 4. Inputs\nconst inputData = await this.getInputData();\nconst embeddings = await this.getInputConnectionData('ai_embedding', 0);\nconst sparseVectorTool = await this.getInputConnectionData('ai_tool', 0);\n\n// 5. Execute\nconst query = inputData[0].json.query;\n\nconst denseVector = await embeddings.embedQuery(query);\nconst sparseVector = JSON.parse(await sparseVectorTool.invoke(query));\n\nconst response = await client.query(collectionName, {\n  prefetch: [\n    {\n      query: denseVector,\n      using: 'default',\n      limit: 100\n    },\n    {\n      query: sparseVector,\n      using: 'bm42',\n      limit: 100\n    }\n ],\n query: { fusion: 'rrf' },\n with_payload: true,\n limit: 20\n});\n\nconst docs = response.points.map(res => ({\n  pageContent: res.payload.content,\n  metadata: res.payload.metadata\n}));\nconst rankings = await cohereRerank.rerank(docs, query);\nrankings.forEach(rank => { docs[rank.index].score = rank.relevanceScore });\n\nconst rankedDocs = docs.toSorted((a,b) => b.score-a.score);\nreturn rankedDocs;"}},"inputs":{"input":[{"type":"main","maxConnections":1,"required":true},{"type":"ai_embedding","maxConnections":1,"required":true},{"type":"ai_tool","maxConnections":1,"required":true}]},"outputs":{"output":[{"type":"main"}]}},"id":"1e78ba38-4b4d-476a-a61d-4bdca32d84ed","name":"Qdrant with Cohere ReRank1","type":"@n8n/n8n-nodes-langchain.code","typeVersion":1,"position":[2200,1420]}],"connections":{"When clicking ‘Test workflow’":{"main":[[{"node":"Get Bitcoin Whitepaper","type":"main","index":0}]]},"Extract from File":{"main":[[{"node":"Create Chunks From Doc","type":"main","index":0}]]},"Create Chunks From Doc":{"main":[[{"node":"Chunks To List","type":"main","index":0}]]},"Default Data Loader":{"ai_document":[[{"node":"Insert Documents with Sparse Vectors","type":"ai_document","index":0}]]},"Recursive Character Text Splitter":{"ai_textSplitter":[[{"node":"Default Data Loader","type":"ai_textSplitter","index":0}]]},"When chat message received":{"main":[[{"node":"AI Agent","type":"main","index":0}]]},"Anthropic Chat Model1":{"ai_languageModel":[[{"node":"AI Agent","type":"ai_languageModel","index":0}]]},"Window Buffer Memory":{"ai_memory":[[{"node":"AI Agent","type":"ai_memory","index":0}]]},"Get Bitcoin Whitepaper":{"main":[[{"node":"Extract from File","type":"main","index":0}]]},"Execute Workflow Trigger":{"main":[[{"node":"Generate Sparse Vectors","type":"main","index":0}]]},"Get Sparse Vector Tool":{"ai_tool":[[{"node":"Qdrant with Cohere ReRank","type":"ai_tool","index":0}]]},"Query":{"main":[[{"node":"Qdrant with Cohere ReRank1","type":"main","index":0}]]},"Get Sparse Vector Tool1":{"ai_tool":[[{"node":"Qdrant with Cohere ReRank1","type":"ai_tool","index":0}]]},"Anthropic Chat Model2":{"ai_languageModel":[[{"node":"Generate Contextual Text","type":"ai_languageModel","index":0}]]},"Chunks To List":{"main":[[{"node":"Generate Contextual Text","type":"main","index":0}]]},"Generate TF-IDF Sparse Vectors":{"main":[[{"node":"Get Values","type":"main","index":0}]]},"Get Values":{"main":[[{"node":"Insert Documents with Sparse Vectors","type":"main","index":0}]]},"Embeddings Cohere":{"ai_embedding":[[{"node":"Insert Documents with Sparse Vectors","type":"ai_embedding","index":0}]]},"Embeddings Cohere1":{"ai_embedding":[[{"node":"Qdrant with Cohere ReRank","type":"ai_embedding","index":0}]]},"Embeddings Cohere2":{"ai_embedding":[[{"node":"Qdrant with Cohere ReRank1","type":"ai_embedding","index":0}]]},"Generate Contextual Text":{"main":[[{"node":"Generate TF-IDF Sparse Vectors","type":"main","index":0}]]},"Qdrant with Cohere ReRank":{"ai_tool":[[{"node":"AI Agent","type":"ai_tool","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":null,"pinData":{},"versionId":"0cfe1b48-887d-40fb-96f9-85d85bc37a5d","triggerCount":0,"tags":[],"shared":[{"createdAt":"2025-05-23T06:57:49.791Z","updatedAt":"2025-05-23T06:57:49.791Z","role":"workflow:owner","workflowId":"43miDBM72xGyuFz6","projectId":"WbfPHUYYKS2tiNNo","project":{"createdAt":"2025-05-03T06:49:18.088Z","updatedAt":"2025-05-03T06:52:24.837Z","id":"WbfPHUYYKS2tiNNo","name":"charlie phan <scottyphan08@gmail.com>","type":"personal","icon":null,"description":null}}]},{"createdAt":"2025-05-26T01:24:14.086Z","updatedAt":"2025-05-26T03:21:07.702Z","id":"mN1Ju1w4vNDuPKew","name":"Document Q&A Chatbot with Gemini 26.05","active":false,"isArchived":false,"nodes":[{"parameters":{"modelName":"models/gemini-2.5-flash-preview-04-17","options":{}},"id":"031af4b8-eb76-48a9-bb97-8d463c2f1218","name":"Google Gemini Chat Model","type":"@n8n/n8n-nodes-langchain.lmChatGoogleGemini","position":[120,460],"typeVersion":1,"credentials":{"googlePalmApi":{"id":"VxuR4Ot4TSiJTVFk","name":"Google Gemini(PaLM) Api account"}}},{"parameters":{"cityName":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('City', ``, 'string') }}"},"id":"57ae873e-16cb-49e8-a338-ec72f45f46b9","name":"OpenWeatherMap","type":"n8n-nodes-base.openWeatherMapTool","position":[540,300],"typeVersion":1,"credentials":{"openWeatherMapApi":{"id":"DCkok6ehAT8gagrB","name":"OpenWeatherMap account"}}},{"parameters":{"promptType":"define","text":"={{ $json.message.text }}","hasOutputParser":true,"options":{"systemMessage":"=4. If the user sends you a message starting with / sign, it means this is a Telegram bot command. For example, all users send /start command as their first message. Try to figure out what these commands mean and reply accodringly.\nUser can only send pdf files and text messages and let them know that this type is not supported if it was not a PDF file or text.\nAt first let them know that they can ask questions about sent PDF files you can use your own capabilities as well. \nGenerate a detailed, well-structured response ,\nFormat the response strictly using Telegram's supported HTML syntax. Use tags like <b>, <i>, <u>, <s>, <span class=\"tg-spoiler\">, <code>, <pre> (with optional <code class=\"language-...\"> inside), <a href=\"...\">, and <blockquote> where appropriate.\n\nStructure the content logically using paragraphs and distinct sections. **Be mindful that this text might need to be split into multiple messages due to character limits (Telegram's limit is around 4096 characters per message). Try to make sections or paragraphs relatively self-contained where possible to facilitate splitting.**\n\n**Ensure all <, >, and & symbols within the *text content* (i.e., not part of an HTML tag or entity) are replaced with the corresponding HTML entities: < with &lt;, > with &gt;, and & with &amp;.**\n\nMaintain proper nesting of HTML tags according to Telegram's rules. While the final splitting will be handled by a script, aim for a structure that is easy to break into logical parts without leaving tags improperly open mid-message."}},"id":"37b8d186-a6cb-41e1-9c5d-a808f6434b0b","name":"AI Agent","type":"@n8n/n8n-nodes-langchain.agent","position":[120,100],"typeVersion":1.9},{"parameters":{"updates":["message"],"additionalFields":{}},"id":"88933490-4d3c-489d-ba9e-503d4f62a130","name":"Telegram Trigger","type":"n8n-nodes-base.telegramTrigger","position":[-380,520],"webhookId":"d4f286b2-8094-40e3-aeb2-813eb1895ecf","typeVersion":1.2,"credentials":{"telegramApi":{"id":"I69z6e5cYkew5SXv","name":"Telegram n8nclp Chat"}}},{"parameters":{"chatId":"={{ $json.chatId }}","text":"={{ $json.text }}","additionalFields":{"appendAttribution":false,"parse_mode":"HTML"}},"id":"94010328-029e-406f-9420-40734593cbd6","name":"Telegram","type":"n8n-nodes-base.telegram","position":[1180,100],"webhookId":"137d8d2f-a941-4803-8646-8932525360c3","typeVersion":1.2,"alwaysOutputData":true,"credentials":{"telegramApi":{"id":"I69z6e5cYkew5SXv","name":"Telegram n8nclp Chat"}},"onError":"continueErrorOutput"},{"parameters":{},"id":"929e45be-8fc1-4804-a31d-30ef9d1a0292","name":"Think","type":"@n8n/n8n-nodes-langchain.toolThink","position":[360,400],"typeVersion":1},{"parameters":{"modelName":"models/text-embedding-004"},"id":"496d4352-52fd-476c-a43d-8c76ad8ea6f7","name":"Embeddings Google Gemini","type":"@n8n/n8n-nodes-langchain.embeddingsGoogleGemini","position":[480,760],"typeVersion":1,"credentials":{"googlePalmApi":{"id":"VxuR4Ot4TSiJTVFk","name":"Google Gemini(PaLM) Api account"}}},{"parameters":{"options":{}},"id":"112e0ad1-6800-4b49-8fb7-e585f81fa823","name":"Default Data Loader","type":"@n8n/n8n-nodes-langchain.documentDefaultDataLoader","position":[860,880],"typeVersion":1},{"parameters":{"options":{}},"id":"7d4db782-65f0-449f-9e77-420ee1ccd4c5","name":"Recursive Character Text Splitter","type":"@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter","position":[1080,1040],"typeVersion":1},{"parameters":{"operation":"pdf","options":{}},"id":"862881c3-6783-4ce1-b8cf-15049cf2e508","name":"Extract from File","type":"n8n-nodes-base.extractFromFile","position":[660,900],"typeVersion":1,"alwaysOutputData":true},{"parameters":{"description":"Use this data if the user's question appears to reference an uploaded file, document content, or specific information that might be stored in prior user documents. If not relevant, ignore this source."},"id":"801824dc-3b29-4520-a887-44d7c70df5bc","name":"Answer questions with a vector store","type":"@n8n/n8n-nodes-langchain.toolVectorStore","position":[700,340],"typeVersion":1.1},{"parameters":{"tableName":{"__rl":true,"mode":"list","value":"user_knowledge_base","cachedResultName":"user_knowledge_base"},"options":{"queryName":"match_documents_user_knowledge_base"}},"id":"5c7e9f9b-53c8-43f2-ac9f-5ce5cd9bc30e","name":"Supabase Vector Store","type":"@n8n/n8n-nodes-langchain.vectorStoreSupabase","position":[600,500],"typeVersion":1.1,"credentials":{"supabaseApi":{"id":"GwQHus8VDsBElGiE","name":"Supabase account localhost"}}},{"parameters":{"content":"✅ Scenario 2 – Document Upload and Embedding\n\nFlow for downloading a document sent via Telegram, extracting its text, generating embeddings, and inserting them into Supabase Vector Store.","height":779,"width":1625,"color":5},"id":"91660fdb-8d6a-46eb-a824-f3d24932c0e3","name":"Sticky Note10","type":"n8n-nodes-base.stickyNote","position":[0,620],"typeVersion":1},{"parameters":{"content":"✅ Scenario 1 – Chatbot Interaction\n\nFlow for handling user messages sent to the bot. Includes accessing weather data, answering questions based on user-uploaded documents, and running code using a code execution tool.","height":599,"width":1625,"color":5},"id":"c848c621-3791-4a76-a151-c8cc5e63d99e","name":"Sticky Note11","type":"n8n-nodes-base.stickyNote","position":[0,0],"typeVersion":1},{"parameters":{"chatId":"={{ $('Command Router').item.json.message.chat.id }}","text":"=✅ Document saved!\nFeel free to start asking questions about it.","additionalFields":{"appendAttribution":false}},"id":"ef988b48-264c-46fb-8a7b-98c98bb548ce","name":"Telegram - Embedding Complete","type":"n8n-nodes-base.telegram","position":[1400,740],"webhookId":"4eaead72-f9a7-49a3-95ca-b3bc8f6b9a95","typeVersion":1.2,"credentials":{"telegramApi":{"id":"I69z6e5cYkew5SXv","name":"Telegram n8nclp Chat"}}},{"parameters":{"mode":"insert","tableName":{"__rl":true,"mode":"list","value":"user_knowledge_base","cachedResultName":"user_knowledge_base"},"options":{}},"id":"7e200eae-b4e3-4cc3-a80c-d2ea30c81bfc","name":"Supabase - Save Embeddings","type":"@n8n/n8n-nodes-langchain.vectorStoreSupabase","position":[840,740],"typeVersion":1.1,"alwaysOutputData":false,"credentials":{"supabaseApi":{"id":"GwQHus8VDsBElGiE","name":"Supabase account localhost"}}},{"parameters":{"rules":{"values":[{"conditions":{"options":{"version":2,"leftValue":"","caseSensitive":true,"typeValidation":"loose"},"combinator":"and","conditions":[{"id":"895b32db-777d-4d8e-b1d3-596cc9863d09","operator":{"type":"boolean","operation":"exists","singleValue":true},"leftValue":"={{ $json.message.document }}","rightValue":"={{ $json.message.document }}"}]},"renameOutput":true,"outputKey":"document"},{"conditions":{"options":{"version":2,"leftValue":"","caseSensitive":true,"typeValidation":"loose"},"combinator":"and","conditions":[{"id":"26c12573-8e00-4832-8410-73d2d739c455","operator":{"type":"boolean","operation":"exists","singleValue":true},"leftValue":"={{ $json.message.text }}","rightValue":""}]},"renameOutput":true,"outputKey":"text"}]},"looseTypeValidation":true,"options":{"fallbackOutput":"extra"}},"id":"7fd68c0d-04ea-4ce8-9bd4-e7e95745f900","name":"Command Router","type":"n8n-nodes-base.switch","position":[-200,520],"typeVersion":3.2},{"parameters":{"resource":"file","fileId":"={{ $('Telegram Trigger').item.json.message.document.file_id }}"},"id":"fdfc99a6-60ec-4322-938c-91946d94c273","name":"Telegram - Download file","type":"n8n-nodes-base.telegram","position":[240,960],"webhookId":"11b8f884-34bc-401c-8978-b28507d96e40","typeVersion":1.2,"credentials":{"telegramApi":{"id":"I69z6e5cYkew5SXv","name":"Telegram n8nclp Chat"}}},{"parameters":{"fieldsToAggregate":{"fieldToAggregate":[{}]},"options":{}},"id":"6d3468c8-40a2-47d5-8848-4eb5eb23ea37","name":"Aggregate","type":"n8n-nodes-base.aggregate","position":[1220,740],"notesInFlow":true,"typeVersion":1,"notes":"This is used to flag the end of progress—no real aggregation."},{"parameters":{"chatId":"={{ $('Manual Mapping').item.json.chatId }}","text":"={{ $('Manual Mapping').item.json.text }}","additionalFields":{"appendAttribution":false}},"id":"9b021e18-7332-4be9-b71f-e9924322c90c","name":"Fallback- No formatting","type":"n8n-nodes-base.telegram","position":[1380,160],"webhookId":"dd2182fe-0b11-4d96-9838-30d60bf8c229","notesInFlow":true,"typeVersion":1.2,"credentials":{"telegramApi":{"id":"I69z6e5cYkew5SXv","name":"Telegram n8nclp Chat"}},"notes":"This is used if, even after HTML formatting,g Telegram wasn't able to process the text, so we send it without formatting."},{"parameters":{"fieldToSplitOut":"output","options":{}},"id":"85026b91-1b96-41fc-8a49-ff1c75bd95c8","name":"Split Out","type":"n8n-nodes-base.splitOut","position":[760,100],"typeVersion":1},{"parameters":{"sessionIdType":"customKey","sessionKey":"={{ $('Telegram Trigger').item.json.message.from.id }}"},"id":"83da2537-387d-4ace-8ce5-bacb7b56bd40","name":"Simple Memory","type":"@n8n/n8n-nodes-langchain.memoryBufferWindow","position":[200,320],"typeVersion":1.3},{"parameters":{"language":"python","pythonCode":"import re\nimport html\n\ngemini_output_text = _('AI Agent').first().json.output;\n# Regex to match any HTML tag <...>\nHTML_TAG_PATTERN = re.compile(r'(<[^>]*?>)', re.IGNORECASE)\n\n# List of UNSUPPORTED Telegram HTML tag names\nUNSUPPORTED_TAG_NAMES = [\n    'p', 'li', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'ul', 'ol',\n    'table', 'thead', 'tbody', 'tr', 'td', 'th', 'div', 'br', 'font',\n    'span', # Span is unsupported *unless* it has the specific class\n    'a'     # A is unsupported *unless* it has the href attribute\n    # Add more unsupported tags if you encounter them\n]\n\n# Regex to match unsupported opening or closing tags based on the names list\n# This pattern is simplified and might misinterpret complex attributes\nUNSUPPORTED_TAG_PATTERN = re.compile(r'<\\/?(' + '|'.join(UNSUPPORTED_TAG_NAMES) + r')\\b[^>]*?>', re.IGNORECASE)\n\n# Regex to match a span tag *without* the class=\"tg-spoiler\" attribute\n# This tries to capture the tag and its content to remove both\nUNSUPPORTED_SPAN_FULL_PATTERN = re.compile(r'<span(?! class=\"tg-spoiler\"\\b)[^>]*?>.*?<\\/span>', re.IGNORECASE | re.DOTALL) # DOTALL allows . to match newlines\n\n# Regex to match an a tag *without* an href attribute\n# This tries to capture the tag and its content to remove both\nUNSUPPORTED_A_FULL_PATTERN = re.compile(r'<a(?![^>]*href=)[^>]*?>.*?<\\/a>', re.IGNORECASE | re.DOTALL)\n\n\n# --- Cleaning Function (Regex Only) ---\n\ndef unescape_common_html_entities(text):\n    \"\"\"\n    Unescapes a limited set of common HTML entities in text.\n    Does NOT use html.unescape for maximum compatibility with \"no external library\" rule.\n    \"\"\"\n    # Order matters: &amp; must be replaced first!\n    text = text.replace('&amp;', '&')\n    text = text.replace('&lt;', '<')\n    text = text.replace('&gt;', '>')\n    text = text.replace('&quot;', '\"')\n    text = text.replace('&apos;', \"'\")\n    # Add more common entities here if needed, e.g., text = text.replace('&nbsp;', ' ')\n    return text\n\n\ndef clean_html_regex_only(html_string):\n    \"\"\"\n    Cleans HTML string using regex: removes unsupported tags and escapes text content.\n    Handles &apos; and other basic entities.\n    WARNING: This is a regex-based approach and is NOT as robust as using an HTML parser.\n    It may fail on complex or malformed HTML.\n\n    Args:\n        html_string (str): The input HTML string.\n\n    Returns:\n        str: The cleaned HTML string.\n    \"\"\"\n    # 1. Remove unsupported tags and their content where specific attributes are missing\n    # Process specific full patterns first\n    cleaned_text = UNSUPPORTED_SPAN_FULL_PATTERN.sub('', html_string)\n    cleaned_text = UNSUPPORTED_A_FULL_PATTERN.sub('', cleaned_text)\n\n    # 2. Remove remaining unsupported opening/closing tags, leaving content behind\n    cleaned_text = UNSUPPORTED_TAG_PATTERN.sub('', cleaned_text)\n\n    # 3. Split the remaining string into tags and text segments\n    # This pattern captures the tags themselves so we can differentiate them from text\n    parts = HTML_TAG_PATTERN.split(cleaned_text)\n\n    cleaned_parts = []\n    for part in parts:\n        if not part:\n            continue\n\n        if HTML_TAG_PATTERN.fullmatch(part):\n            # If the part is a tag (matches the full tag pattern)\n            # We assume at this point it's a supported tag due to previous removal steps.\n            # Keep the tag as is.\n            cleaned_parts.append(part)\n        else:\n            # If the part is text content\n            # 1. Unescape common HTML entities (like &apos;) that might be in the text\n            unescaped_text = unescape_common_html_entities(part)\n\n            # 2. Escape the literal characters <, >, & that are *in* the text content\n            # This ensures only the characters themselves are escaped, not entities.\n            # Need to escape & first to avoid issues with '&amp;' if it resulted from unescaping or was original.\n            re_escaped_text = unescaped_text.replace('&', '&amp;').replace('<', '&lt;').replace('>', '&gt;')\n\n            cleaned_parts.append(re_escaped_text)\n\n    # Join the processed parts back into a single string\n    return \"\".join(cleaned_parts)\n\n# --- Splitting Logic ---\nSPLIT_PATTERN_REGEX_ONLY = re.compile(r'(<\\/blockquote>|<\\/pre>|\\n\\n|\\s{2,}|(?<=[.!?])\\s+|<[a-z]+[^>]*?>|<\\/[a-z]+>)', flags=re.IGNORECASE)\n\n\ndef split_telegram_message_regex_only(text, max_length=4096):\n    \"\"\"\n    Splits text into multiple messages based on character count and basic patterns.\n    Operates on text already cleaned by clean_html_regex_only.\n    Does NOT guarantee HTML tag integrity across splits due to lack of parsing.\n\n    Args:\n        text (str): The input text (preferably cleaned by clean_html_regex_only).\n        max_length (int): The maximum length for each message part.\n\n    Returns:\n        list: A list of strings, where each string is a message part.\n    \"\"\"\n    if len(text) <= max_length:\n        return [text]\n\n    messages = []\n    current_chunk = \"\"\n\n    # Split by the defined pattern\n    parts = SPLIT_PATTERN_REGEX_ONLY.split(text)\n\n    for part in parts:\n        # Handle parts that are None (can happen with split) or just short whitespace\n        if part is None or (not part.strip() and len(part) < 2 and part != '\\n\\n'):\n             if part is not None and len(part) > 0: # Keep meaningful whitespace splits like \\n\\n\n                  if len(current_chunk) + len(part) <= max_length:\n                       current_chunk += part\n                  else:\n                       # Split happens within meaningful whitespace, finalize chunk\n                       if current_chunk.strip(): # Only add if chunk has content\n                            messages.append(current_chunk.strip())\n                       current_chunk = part # Start new chunk with the whitespace\n             continue # Skip to next part\n\n\n        # Check if adding the current part exceeds the max length\n        if len(current_chunk) + len(part) > max_length:\n            # If the current chunk is empty or only whitespace after stripping,\n            # it means the 'part' itself is too long to fit in a new chunk.\n            if not current_chunk.strip():\n                # Handle very long individual parts (e.g., a huge code block line, a very long word, a single huge tag)\n                # Hard split the long part. WARNING: This can break tags, words, or escape sequences.\n                while len(part) > max_length:\n                    messages.append(part[:max_length])\n                    part = part[max_length:]\n                if part.strip():\n                    current_chunk = part # Remaining part starts a new chunk\n                else:\n                     current_chunk = \"\" # If remainder is just whitespace, clear\n            else:\n                # The current part makes the chunk too long, finalize the current chunk\n                messages.append(current_chunk.strip())\n                # Start a new chunk with the current part\n                current_chunk = part # Keep original part for the new chunk\n\n        else:\n            # Add the current part to the chunk\n            current_chunk += part\n\n    # Add the last chunk\n    if current_chunk.strip(): # Only add if the final chunk has content\n        messages.append(current_chunk.strip())\n\n    # Clean up any empty messages that might have been created\n    messages = [msg for msg in messages if msg.strip()]\n\n    return messages\n  \ncleaned_html_regex = clean_html_regex_only(gemini_output_text)\nmessage_parts_regex = split_telegram_message_regex_only(cleaned_html_regex)\n\nreturn dict({'output': message_parts_regex })"},"id":"da25094c-d0e7-4a55-94e2-55fb36149f57","name":"Handle formatting and split","type":"n8n-nodes-base.code","position":[540,100],"typeVersion":2,"notes":"This is used to prevent Markdown issues in Telegram while sending messages."},{"parameters":{"content":"# 🤖 Telegram AI Assistant for Your Documents (n8n + Supabase + Gemini)\n\nThis project transforms a standard **Telegram bot** into your dedicated AI assistant – designed to understand and answer questions based on **your own documents**. It seamlessly integrates the power of **Google Gemini** for advanced language capabilities and **Supabase's vector database** for efficient, intelligent document retrieval. Built entirely within the no-code platform **n8n**, it allows you to deploy a sophisticated document chatbot without writing a single line of code.\n\nSimply upload any PDF document to the bot, and instantly gain the ability to chat with it, querying its contents as if it were a knowledgeable expert on your uploaded files.\n\n---\n## 📹 Watch the Bot in Action\n\n[![𝗨𝗻𝗹𝗲𝗮𝘀𝗵𝗶𝗻𝗴 𝗔𝗜 𝗼𝗻 𝗠𝘆 𝗕𝗼𝗼𝗸𝘀𝗵𝗲𝗹𝗳: 𝗙𝗹𝗼𝘄 𝗣𝗿𝗼𝗴𝗿𝗮𝗺𝗺𝗶𝗻𝗴 𝗣𝗼𝘄𝗲𝗿𝘀 𝗮 𝗡𝗲𝘅𝘁-𝗟𝗲𝘃𝗲𝗹 𝗧𝗲𝗹𝗲𝗴𝗿𝗮𝗺 𝗕𝗼𝘁🤖](https://img.youtube.com/vi/r_KGyJApy5M/maxresdefault.jpg)](https://www.youtube.com/watch?v=r_KGyJApy5M)\n\n**▶️ Click the image above to watch a live demo on YouTube.** \n\nThis video provides a live demonstration of the bot's core features and how it interacts. See a quick walkthrough of its capabilities and user flow.\n\n---\n\n## ✨ Ignite Your Workflow: Use Cases\n\nThis project empowers two core interactions:\n\n### 1. Conversational AI Interface (User Inquiry → Telegram Bot → Intelligent Answers)\n- Users pose questions directly to the Telegram bot.\n- The bot generates relevant, informative answers using the cutting-edge capabilities of the Google Gemini LLM.\n- Leveraging a powerful vector search mechanism, it can pull specific, contextual information from previously uploaded documents to provide highly relevant and informed responses.\n- (Optional) Augment answers with real-time data, like current **weather information**.\n\n### 2. Effortless Document Integration (User Upload PDF → Processing → Searchable Knowledge)\n- Users upload a PDF document directly to the bot.\n- The workflow automatically parses the document content, converts it into numerical representations called embeddings using Gemini's embedding models.\n- These embeddings, alongside the document's text content, are then securely stored in a dedicated **Supabase vector table**, creating a searchable knowledge base.\n- Immediately after successful processing, the document becomes part of the bot's memory, enabling users to ask questions about its contents via the standard chat interface.\n\n---\n## 🧠 Core Intelligence Features\n\n- ✅ **Pure No-Code**: Developed and managed entirely within the intuitive [n8n](https://n8n.io) automation platform.\n- 📄 **Seamless PDF Integration**: Easily upload and process PDF documents to expand the bot's knowledge.\n- 🧠 **Powered by Google Gemini**: Utilizes Gemini for both generating document embeddings and formulating intelligent conversational responses.\n- 🗂 **Vector Database Memory (Supabase)**: Employs **Supabase as a robust vector database** for storing and efficiently searching document embeddings, providing the bot with long-term memory about your content.\n- **⚡️ Rapid & Private Retrieval**: The vector search allows for swift identification and retrieval of the most relevant document snippets based on the user's query. This approach enhances response speed and significantly improves data privacy, as **the original document content remains securely stored in your Supabase instance, and only the user's query and the retrieved relevant chunks are sent to the LLM for generating a response.**\n- 🧹 **Intelligent HTML Post-processing**: Cleans the LLM's responses by removing HTML tags not supported by Telegram while preserving essential formatting and correctly escaping special characters in the text content.\n- 📤 **Adaptive Message Chunking**: Splits lengthy AI-generated answers into multiple messages that adhere to Telegram's 4096-character limit, ensuring the full response is delivered cleanly.\n- 🌦️ **Dynamic Weather Data**: (Optional) Integrates with OpenWeatherMap to provide current weather information upon request.\n- **📝 Note on Usage**: This workflow is designed primarily for **personal, single-user** scenarios. It processes each message independently and **does not include multi-user session management**, making it unsuitable for public deployment where different users require separate conversational contexts. For a session-based Telegram bot implemented in Python, you may refer to this project, which is a multi-model telegram bot: [https://github.com/mohamadghaffari/gemini-tel-bot](https://github.com/mohamadghaffari/gemini-tel-bot).\n---\n\n## 🛠 Getting Started: Setup\n\n### 1. Deploy the Workflow in n8n\n\n- Click the \"Use this workflow\" button on the n8n template page.\n- This will open the workflow directly in your n8n instance, ready for configuration.\n\n\n### 2. Connect Your Services: Configure Credentials\n\nCreate API credentials for the following services within your n8n instance:\n\n| Service          | Purpose                          |\n|------------------|------------------------------------|\n| Telegram API     | Receiving user messages & sending replies |\n| Google Gemini    | Generating embeddings & LLM responses |\n| Supabase         | Storing & searching document vectors |\n| OpenWeatherMap   | (Optional) Fetching weather data    |\n\n### 3. Prepare Your Supabase Knowledge Base\n\nSet up a vector-enabled table in your Supabase project to store your document embeddings. Execute the following SQL commands in your Supabase SQL Editor:\n\n``` sql\n-- Enable the pgvector extension to work with embedding vectors\ncreate extension vector;\n\n-- Create a table to store your documents and their embeddings\ncreate table user_knowledge_base (\n  id bigserial primary key,\n  content text, -- Stores the text chunk from the document\n  metadata jsonb, -- Stores document information (e.g., filename, page number)\n  embedding vector(768) -- Stores the vector representation (embedding) generated by Gemini. Adjust dimension if using a different model.\n);\n\n-- Create a function to perform vector similarity search against your documents\ncreate function match_documents (\n  query_embedding vector(768),\n  match_count int default null,\n  filter jsonb DEFAULT '{}'\n) returns table (\n  id bigint,\n  content text,\n  metadata jsonb,\n  similarity float\n)\nlanguage plpgsql\nas $$\n#variable_conflict use_column\nbegin\n  return query\n  select\n    id,\n    content,\n    metadata,\n    -- Calculate cosine similarity: 1 - cosine distance (using the '<=>' operator provided by pgvector)\n    1 - (user_knowledge_base.embedding <=> query_embedding) as similarity\n  from user_knowledge_base\n  where metadata @> filter -- Optional: filter results based on metadata\n  order by user_knowledge_base.embedding <=> query_embedding -- Order by similarity (closest first)\n  limit match_count; -- Limit the number of results\nend;\n$$;\n````\n\nThis sets up the necessary table and a function to perform vector similarity searches, allowing you to find document chunks most similar to a user's query.\n-----\n\n## 📚 Integrated Technologies\n\nThis project brings together powerful tools:\n\n  - [n8n](https://n8n.io) – The central hub for workflow automation and integration.\n  - [Telegram Bot API](https://core.telegram.org/bots/api) – The communication layer for user interaction.\n  - [Supabase](https://supabase.com/) + [pgvector Extension](https://www.google.com/search?q=https://supabase.com/docs/guides/ai/vector-embeddings) – Provides a scalable database with powerful vector search capabilities.\n  - [Google Gemini API](https://ai.google.dev/) – The intelligence engine for embeddings and text generation.\n  - [OpenWeatherMap API](https://openweathermap.org/api) – (Optional) For adding real-time weather features.\n\n-----\n","height":3520,"width":1960},"id":"ec5cc2ad-5d88-4afb-93b6-f4c9e829da8d","name":"Sticky Note","type":"n8n-nodes-base.stickyNote","position":[1560,-100],"typeVersion":1},{"parameters":{"assignments":{"assignments":[{"id":"cdeb5bf1-c91c-44ae-bebd-ab3f4ba2561a","name":"text","type":"string","value":"={{ $json.output }}"},{"id":"7cd7d120-96fa-4539-b343-25bc9b75abb4","name":"chatId","type":"number","value":"={{ $('Command Router').item.json.message.from.id }}"}]},"options":{}},"id":"eadebca5-c940-4274-9d03-dea9a1734120","name":"Manual Mapping","type":"n8n-nodes-base.set","position":[960,100],"typeVersion":3.4},{"parameters":{"chatId":"={{ $('Command Router').item.json.message.chat.id }}","text":"Unsupported command or file. 😓 Please upload a valid PDF document or ask your question regarding your files.","additionalFields":{"appendAttribution":false}},"id":"29c62d8d-668f-4674-89a9-e3475ec5d43c","name":"Unsupported message","type":"n8n-nodes-base.telegram","position":[140,1180],"webhookId":"52f3456a-06ef-4799-b245-0293213dcc4b","typeVersion":1.2,"credentials":{"telegramApi":{"id":"I69z6e5cYkew5SXv","name":"Telegram n8nclp Chat"}}},{"parameters":{"chatId":"={{ $('Command Router').item.json.message.chat.id }}","text":"=<b>Processing document...</b>\n<b>Please wait...⏳</b>","additionalFields":{"appendAttribution":false,"parse_mode":"HTML"}},"id":"f114ebf4-f92a-4050-9a8b-08d19561e368","name":"Send processing document message","type":"n8n-nodes-base.telegram","position":[560,1140],"webhookId":"32ade357-f14b-4d10-91f2-02c8aa6e198e","typeVersion":1.2,"credentials":{"telegramApi":{"id":"I69z6e5cYkew5SXv","name":"Telegram n8nclp Chat"}}},{"parameters":{"chatId":"={{ $('Command Router').item.json.message.chat.id }}","text":"=<b>Document processed ✅ </b> \n<b>Num of pages:</b> {{ $json.numpages }} \n<b>Creator:</b> {{ $json.info.Creator }}\n<b>Title:</b> {{ $json.info.Title }} \n<b>Version:</b> {{ $json.version }}","additionalFields":{"appendAttribution":false,"parse_mode":"HTML"}},"id":"0c5a9ff4-7a5f-4832-b3dd-6f2333859e73","name":"Send embedding Started message","type":"n8n-nodes-base.telegram","position":[860,1080],"webhookId":"32ade357-f14b-4d10-91f2-02c8aa6e198e","typeVersion":1.2,"credentials":{"telegramApi":{"id":"I69z6e5cYkew5SXv","name":"Telegram n8nclp Chat"}}}],"connections":{"Think":{"ai_tool":[[{"node":"AI Agent","type":"ai_tool","index":0}]]},"AI Agent":{"main":[[{"node":"Handle formatting and split","type":"main","index":0}]]},"Telegram":{"main":[[],[{"node":"Fallback- No formatting","type":"main","index":0}]]},"Aggregate":{"main":[[{"node":"Telegram - Embedding Complete","type":"main","index":0}]]},"Split Out":{"main":[[{"node":"Manual Mapping","type":"main","index":0}]]},"Simple Memory":{"ai_memory":[[{"node":"AI Agent","type":"ai_memory","index":0}]]},"Command Router":{"main":[[{"node":"Telegram - Download file","type":"main","index":0}],[{"node":"AI Agent","type":"main","index":0}],[{"node":"Unsupported message","type":"main","index":0}]]},"Manual Mapping":{"main":[[{"node":"Telegram","type":"main","index":0}]]},"OpenWeatherMap":{"ai_tool":[[{"node":"AI Agent","type":"ai_tool","index":0}]]},"Telegram Trigger":{"main":[[{"node":"Command Router","type":"main","index":0}]]},"Extract from File":{"main":[[{"node":"Supabase - Save Embeddings","type":"main","index":0},{"node":"Send embedding Started message","type":"main","index":0}]]},"Default Data Loader":{"ai_document":[[{"node":"Supabase - Save Embeddings","type":"ai_document","index":0}]]},"Supabase Vector Store":{"ai_vectorStore":[[{"node":"Answer questions with a vector store","type":"ai_vectorStore","index":0}]]},"Embeddings Google Gemini":{"ai_embedding":[[{"node":"Supabase - Save Embeddings","type":"ai_embedding","index":0},{"node":"Supabase Vector Store","type":"ai_embedding","index":0}]]},"Google Gemini Chat Model":{"ai_languageModel":[[{"node":"AI Agent","type":"ai_languageModel","index":0},{"node":"Answer questions with a vector store","type":"ai_languageModel","index":0}]]},"Telegram - Download file":{"main":[[{"node":"Extract from File","type":"main","index":0},{"node":"Send processing document message","type":"main","index":0}]]},"Supabase - Save Embeddings":{"main":[[{"node":"Aggregate","type":"main","index":0}]]},"Handle formatting and split":{"main":[[{"node":"Split Out","type":"main","index":0}]]},"Recursive Character Text Splitter":{"ai_textSplitter":[[{"node":"Default Data Loader","type":"ai_textSplitter","index":0}]]},"Answer questions with a vector store":{"ai_tool":[[{"node":"AI Agent","type":"ai_tool","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"e4140cdd-64df-4364-b718-d0e306c60c5c","triggerCount":0,"tags":[],"shared":[{"createdAt":"2025-05-26T01:24:14.086Z","updatedAt":"2025-05-26T01:24:14.086Z","role":"workflow:owner","workflowId":"mN1Ju1w4vNDuPKew","projectId":"WbfPHUYYKS2tiNNo","project":{"createdAt":"2025-05-03T06:49:18.088Z","updatedAt":"2025-05-03T06:52:24.837Z","id":"WbfPHUYYKS2tiNNo","name":"charlie phan <scottyphan08@gmail.com>","type":"personal","icon":null,"description":null}}]},{"createdAt":"2025-05-26T04:59:00.060Z","updatedAt":"2025-05-26T06:00:56.940Z","id":"JrI3Um9Llzc5vYdB","name":"Whatapp chat","active":false,"isArchived":false,"nodes":[{"parameters":{"updates":["messages"],"options":{}},"type":"n8n-nodes-base.whatsAppTrigger","typeVersion":1,"position":[-420,-160],"id":"30967670-3e52-4705-a359-f6df5cac51b1","name":"WhatsApp Trigger","webhookId":"2f94b7ea-e609-48bb-abf6-93df3e02129d","credentials":{"whatsAppTriggerApi":{"id":"eAPBkIYpcDDhH3ia","name":"WhatsApp OAuth account"}}},{"parameters":{"promptType":"define","text":"={{ $json.messages[0].text.body }}","options":{}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":1.9,"position":[0,-240],"id":"d6511cbb-e4eb-4d98-a617-50a9b64cfe53","name":"AI Agent"},{"parameters":{"model":{"__rl":true,"mode":"list","value":"gpt-4o-mini"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[80,120],"id":"8fd30978-49a1-4c82-acaa-2e025ea74014","name":"OpenAI Chat Model","credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{"operation":"send","phoneNumberId":"622296110975254","recipientPhoneNumber":"+84903148128","textBody":"={{ $json.output }}","additionalFields":{}},"type":"n8n-nodes-base.whatsApp","typeVersion":1,"position":[600,-160],"id":"903ca09d-7b51-447d-a2d1-bbe097bcf771","name":"WhatsApp Business Cloud","webhookId":"dea9b44a-6c77-481c-8e5e-91eaf9dcd687","credentials":{"whatsAppApi":{"id":"SFrmXY3KZLL8DC0M","name":"WhatsApp account"}}},{"parameters":{"sessionIdType":"customKey","sessionKey":"={{ $('WhatsApp Trigger').item.json.messages[0].text.body }}"},"type":"@n8n/n8n-nodes-langchain.memoryBufferWindow","typeVersion":1.3,"position":[340,60],"id":"81d1f206-88c6-4a9a-ba7c-728431f168f7","name":"Simple Memory"}],"connections":{"WhatsApp Trigger":{"main":[[{"node":"AI Agent","type":"main","index":0}]]},"OpenAI Chat Model":{"ai_languageModel":[[{"node":"AI Agent","type":"ai_languageModel","index":0}]]},"AI Agent":{"main":[[{"node":"WhatsApp Business Cloud","type":"main","index":0}]]},"Simple Memory":{"ai_memory":[[{"node":"AI Agent","type":"ai_memory","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{"WhatsApp Trigger":[{"json":{"messaging_product":"whatsapp","metadata":{"display_phone_number":"15556570339","phone_number_id":"622296110975254"},"contacts":[{"profile":{"name":"Charlie Phan"},"wa_id":"84903148128"}],"messages":[{"from":"84903148128","id":"wamid.HBgLODQ5MDMxNDgxMjgVAgASGBQzQThFQ0Q3RERBNjMwQjAxOTY2NgA=","timestamp":"1748237379","text":{"body":"Hello"},"type":"text"}],"field":"messages"}}]},"versionId":"0f458b3d-de33-4515-a518-96b9c3afa262","triggerCount":0,"tags":[],"shared":[{"createdAt":"2025-05-26T04:59:00.060Z","updatedAt":"2025-05-26T04:59:00.060Z","role":"workflow:owner","workflowId":"JrI3Um9Llzc5vYdB","projectId":"WbfPHUYYKS2tiNNo","project":{"createdAt":"2025-05-03T06:49:18.088Z","updatedAt":"2025-05-03T06:52:24.837Z","id":"WbfPHUYYKS2tiNNo","name":"charlie phan <scottyphan08@gmail.com>","type":"personal","icon":null,"description":null}}]},{"createdAt":"2025-05-26T09:14:00.758Z","updatedAt":"2025-05-26T09:48:24.891Z","id":"L1EvJFCm10yvXaCu","name":"Ms Teams chat","active":false,"isArchived":false,"nodes":[{"parameters":{"rule":{"interval":[{}]}},"id":"43c762f3-ff97-4ca3-8970-49cf1a613ced","name":"Schedule Trigger","type":"n8n-nodes-base.scheduleTrigger","position":[120,700],"typeVersion":1.2},{"parameters":{"resource":"channelMessage","operation":"getAll","teamId":{"__rl":true,"value":"=aa22cc1e-acc1-407e-a5be-ba9962830e55","mode":"id"},"channelId":{"__rl":true,"value":"19:f8ac6d4eb6f3417e944cd1e02ecfe420@thread.tacv2","mode":"list","cachedResultName":"IOT","cachedResultUrl":"https://teams.microsoft.com/l/channel/19%3Af8ac6d4eb6f3417e944cd1e02ecfe420%40thread.tacv2/IOT?groupId=aa22cc1e-acc1-407e-a5be-ba9962830e55&tenantId=6ea838f0-f529-455e-9738-147060990b55&allowXTenantAccess=True&ngc=True"}},"id":"eaf1f43b-c23a-498a-bb25-0da2af61c4a2","name":"Fetch Latest Channel Messages","type":"n8n-nodes-base.microsoftTeams","position":[340,700],"webhookId":"b36a534a-1bca-4c3d-ab25-777ca98fba1a","typeVersion":2,"credentials":{"microsoftTeamsOAuth2Api":{"id":"14g7k9M4SZPkSI3G","name":"Microsoft Teams account"}}},{"parameters":{"model":{"__rl":true,"mode":"list","value":"gpt-4.1-mini","cachedResultName":"gpt-4.1-mini"},"options":{}},"id":"88db46b7-e83b-44ae-902a-8165616c9527","name":"OpenAI Chat Model","type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","position":[1200,840],"typeVersion":1.2,"credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{"promptType":"define","text":"=## User\nDisplayName: {{ $json.user.displayName }}\n\n## Messages\n{{\nArray.from($json.messages)\n.map(msg => {\n  return [\n    `Type: Message`,\n    `Posted: ${msg.createdDateTime}`,\n    `Message: ${msg.body.content.replaceAll('\\n', ' ')}`,\n    msg.parent ? `In Reply To: ${msg.parent.from.user.displayName} said \"${msg.parent.body.content.replace('\\n', ' ')}\"` : ''\n  ].join('\\n')\n}).join('---\\n')\n}}","messages":{"messageValues":[{"message":"=Your are energetic assistant who produces weekly mini-reports on team members by analysing their slack messages from last week and posts these reports on the following Monday.\nThere has already been some work done to collect and summarise each thread made by the user within the last week.\nYour task is to summarize all the threads by this user and any interactions with other users involved and produce a mini report to share with other team members.\nFocus on wins and challenges.\nAim to motivate and call out any outstanding concerns where appropriate.\nWelcome any new team members who may have joined and say good bye to those who may have left."}]}},"id":"2f893d24-945a-4034-baf5-a6dad9c19cba","name":"Team Member Weekly Report Agent","type":"@n8n/n8n-nodes-langchain.chainLlm","position":[1100,700],"typeVersion":1.6},{"parameters":{"mode":"raw","jsonOutput":"={{\n{\n  ...$('Groups to Items').item.json,\n  report: $json.text\n}\n}}","options":{}},"id":"21d1ee8b-1124-4f67-9b83-e0c333b65b10","name":"Merge Report With User Data","type":"n8n-nodes-base.set","position":[1480,700],"typeVersion":3.4},{"parameters":{"model":{"__rl":true,"mode":"list","value":"gpt-4.1-mini","cachedResultName":"gpt-4.1-mini"},"options":{}},"id":"735c5344-dbec-492e-94ee-df6d0af0854f","name":"OpenAI Chat Model1","type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","position":[2100,840],"typeVersion":1.2,"credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{"aggregate":"aggregateAllItemData","options":{}},"id":"35f639de-7cd5-47d7-97b3-281cb3ac5b47","name":"Reports to Single List","type":"n8n-nodes-base.aggregate","position":[1780,700],"typeVersion":1},{"parameters":{"promptType":"define","text":"={{\n$input.first().json.data\n  .map(item =>\n`user: ${item.user.displayName} <${item.user.id}>\nmessage count: ${item.messages.length}\nreport: ${item.report.replaceAll('\\n', ' ')}`\n  )\n  .join('\\n---\\n')\n}}","messages":{"messageValues":[{"message":"=Your are energetic assistant who produces a team-wide weekly report from all activity of all team members in the prior last week and posts this single report on the following Monday.\nThere has already been some work done to collect individual reports from team members.\nYour task is generate a report covering the team to prepare and motivate them for the upcoming week.\nFocus on wins and challenges if available.\nLook out for similar activities between members and make a connection if possible.\nAim to motivate and call out any outstanding concerns where appropriate.\nWelcome any new team members who may have joined and say good bye to those who may have left.\nFormat the report as markdown.\nDo not sign off on the report."}]}},"id":"8032b521-65df-4bc1-9720-45c445e99dd5","name":"Team Weekly Report Agent","type":"@n8n/n8n-nodes-langchain.chainLlm","position":[2000,700],"typeVersion":1.6},{"parameters":{"mode":"markdownToHtml","markdown":"={{ $json.text }}","destinationKey":"html","options":{}},"id":"9410dbf7-8ef4-48b9-9937-8c6fe2102670","name":"Markdown to HTML","type":"n8n-nodes-base.markdown","position":[2580,700],"typeVersion":1},{"parameters":{"resource":"channelMessage","teamId":{"__rl":true,"value":"=aa22cc1e-acc1-407e-a5be-ba9962830e55","mode":"id"},"channelId":{"__rl":true,"value":"=19%3APoo4Cf4idTcm8ExE73dQF7ZHLSmfXal9TdXCsJhNwwo1%40thread.tacv2","mode":"id"},"contentType":"html","message":"={{ $json.html }}","options":{"includeLinkToWorkflow":false}},"id":"d120c6bb-35f3-46b3-8c6d-0e7edb844f6b","name":"Send Report to Channel","type":"n8n-nodes-base.microsoftTeams","position":[2820,700],"webhookId":"b36a534a-1bca-4c3d-ab25-777ca98fba1a","typeVersion":2,"credentials":{"microsoftTeamsOAuth2Api":{"id":"14g7k9M4SZPkSI3G","name":"Microsoft Teams account"}}},{"parameters":{"content":"## 1. Fetch All Channel Messages from Last Week\n[Learn more about the MS Teams node](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.microsoftteams)\n\nWe'll start by fetching all activity in our team channel over the last 7 days and group them  by the message author. We can do this using the MS Teams node. This will give us the raw data to pick apart and analyse for reporting purposes.","height":540,"width":700,"color":7},"id":"7d269546-5863-41fc-a658-1e3a813fa6bf","name":"Sticky Note","type":"n8n-nodes-base.stickyNote","position":[60,460],"typeVersion":1},{"parameters":{"jsCode":"// Lấy tất cả tin nhắn đầu vào\nconst messages = $input.all().map(item => item.json);\n\n// Nhóm tin nhắn theo userId (nếu có)\nconst groupByUserId = messages.reduce((acc, msg) => {\n  const userId = msg?.from?.user?.id;\n  if (!userId) return acc; // Bỏ qua nếu không có userId\n\n  if (!acc[userId]) {\n    acc[userId] = [];\n  }\n  acc[userId].push(msg);\n  return acc;\n}, {});\n\n// Gán mối liên hệ cha-con giữa các tin nhắn nếu có reply\nconst output = Object.keys(groupByUserId).map(userId => {\n  const userMessages = groupByUserId[userId];\n\n  for (let i = 0; i < userMessages.length; i++) {\n    if (userMessages[i].replyToId) {\n      userMessages[i].parent = messages.find(msg => msg.id === userMessages[i].replyToId) || null;\n    }\n  }\n\n  return {\n    user: userMessages[0]?.from?.user || { id: userId },\n    messages: userMessages,\n  };\n});\n\n// Trả về output chuẩn n8n\nreturn output.map(item => ({ json: item }));\n"},"id":"d0961734-971d-47f1-bec2-a9e448da04a4","name":"Group Messages By UserId","type":"n8n-nodes-base.code","position":[580,700],"typeVersion":2},{"parameters":{"fieldToSplitOut":"output","options":{}},"id":"fd10d02c-fabb-4fd7-aadf-5297c1619544","name":"Groups to Items","type":"n8n-nodes-base.splitOut","position":[880,700],"typeVersion":1},{"parameters":{"content":"## 2. Generate Activity Reports for Each Team Member\n[Learn more about the Basic LLM node](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.chainllm)\n\nWith our summarized threads which are grouped per user, we can aggregate them and give them to the AI again to generate a weekly report for the team member. This could include their wins, challenges, learnings or decisions - it really is up to you as to what the report looks like. A fun part of this output is getting to decide the tone of voice and delivery of the report. Don't be a bore and consider adding some personality and flair!","height":540,"width":860,"color":7},"id":"9d769198-d765-4251-bd5e-15060c057595","name":"Sticky Note1","type":"n8n-nodes-base.stickyNote","position":[800,460],"typeVersion":1},{"parameters":{"content":"## 3. Generate Final Report for Whole Team\n[Learn more about the Basic LLM node](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.chainllm)\n\nIn this step, we go one level higher and aggregate all individual team member reports together into a big team report. In this way, the overview can group similar activities and generalise activities in a broader sense. The message output will also be shorter which some may find easier to digest.","height":540,"width":680,"color":7},"id":"fe469248-07d0-498a-9605-6660cb01bafa","name":"Sticky Note3","type":"n8n-nodes-base.stickyNote","position":[1700,460],"typeVersion":1},{"parameters":{"content":"## 4. Post Report on Team Channel (on Monday Morning!)\n[Learn more about the Markdown node](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.markdown)\n\nFinally, we can post the weekly report in the team channel. This is a great way to automate quick recaps for the team after the weekend break, get others back on track if they've been away or update client team who may pop in now and again to collaborate.","height":540,"width":680,"color":7},"id":"423fdb4b-f7ae-4075-9899-4810cfa13891","name":"Sticky Note4","type":"n8n-nodes-base.stickyNote","position":[2420,460],"typeVersion":1},{"parameters":{"content":"## Try It Out!\n### This n8n template lets you summarize individual team member activity on MS Teams for the past week and generates a report.\n\nFor remote teams, chat is a crucial communication tool to ensure work gets done but with so many conversations happening at once and in multiple threads, ideas, information and decisions usually live in the moment and get lost just as quickly - and all together forgotten by the weekend!\n\nUsing this template, this doesn't have to be the case. Have AI crawl through last week's activity, summarize all messages and replies and generate a casual and snappy report to bring the team back into focus for the current week. A project manager's dream!\n\n### How it works\n* A scheduled trigger is set to run every Monday at 6am to gather all team channel messages within the last week.\n* Messages are grouped by user.\n* AI analyses the raw messages and replies to pull out interesting observations and highlights. This is referred to as the individual reports.\n* All individual reports are then combined and summarized together into what becomes the team weekly report. This allows understanding of group and similar activities.\n* Finally, the team weekly report is posted back to the channel. The timing is important as it should be the first message of the week and ready for the team to glance over coffee.\n\n### How to use\n* Ideally works best per project and where most of the comms happens on a single channel. Avoid combining channels and instead duplicate this workflow for more channels.\n* You may need to filter for specific team members if you want specific team updates.\n* Customise the report to suit your organisation, team or the channel. You may prefer to be more formal if clients or external stakeholders are also present.\n\n### Requirements\n* MS Teams for chat platform\n* OpenAI for LLM\n\n### Customising this workflow\n* If the teams channel is busy enough already, consider posting the final report to email.\n* Pull in project metrics to include in your report. As extra context, it may be interesting to tie the messages to production performance.\n* Use an AI Agent to query for knowledgebase or tickets relevant to the messages. This may be useful for attaching links or references to add context.\n\n### Need Help?\nJoin the [Discord](https://discord.com/invite/XPKeKXeB7d) or ask in the [Forum](https://community.n8n.io/)!\n\nHappy Hacking!","height":1400,"width":420},"id":"4f7399a5-d2e0-4770-b8dd-badbde3d105d","name":"Sticky Note6","type":"n8n-nodes-base.stickyNote","position":[-400,-260],"typeVersion":1}],"connections":{"Groups to Items":{"main":[[{"node":"Team Member Weekly Report Agent","type":"main","index":0}]]},"Markdown to HTML":{"main":[[{"node":"Send Report to Channel","type":"main","index":0}]]},"Schedule Trigger":{"main":[[{"node":"Fetch Latest Channel Messages","type":"main","index":0}]]},"OpenAI Chat Model":{"ai_languageModel":[[{"node":"Team Member Weekly Report Agent","type":"ai_languageModel","index":0}]]},"OpenAI Chat Model1":{"ai_languageModel":[[{"node":"Team Weekly Report Agent","type":"ai_languageModel","index":0}]]},"Reports to Single List":{"main":[[{"node":"Team Weekly Report Agent","type":"main","index":0}]]},"Group Messages By UserId":{"main":[[{"node":"Groups to Items","type":"main","index":0}]]},"Team Weekly Report Agent":{"main":[[{"node":"Markdown to HTML","type":"main","index":0}]]},"Merge Report With User Data":{"main":[[{"node":"Reports to Single List","type":"main","index":0}]]},"Fetch Latest Channel Messages":{"main":[[{"node":"Group Messages By UserId","type":"main","index":0}]]},"Team Member Weekly Report Agent":{"main":[[{"node":"Merge Report With User Data","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"7909c542-69b4-4699-97cd-d2f4eefdf798","triggerCount":0,"tags":[],"shared":[{"createdAt":"2025-05-26T09:14:00.758Z","updatedAt":"2025-05-26T09:14:00.758Z","role":"workflow:owner","workflowId":"L1EvJFCm10yvXaCu","projectId":"WbfPHUYYKS2tiNNo","project":{"createdAt":"2025-05-03T06:49:18.088Z","updatedAt":"2025-05-03T06:52:24.837Z","id":"WbfPHUYYKS2tiNNo","name":"charlie phan <scottyphan08@gmail.com>","type":"personal","icon":null,"description":null}}]},{"createdAt":"2025-05-26T10:04:24.238Z","updatedAt":"2025-05-26T10:29:41.840Z","id":"yhmbCXE3FI8UvXzE","name":"Ms Teams chat copy","active":false,"isArchived":false,"nodes":[{"parameters":{"rule":{"interval":[{}]}},"id":"76d9719e-c05f-4bd0-9bfa-f80dcc2c5d38","name":"Schedule Trigger","type":"n8n-nodes-base.scheduleTrigger","position":[120,700],"typeVersion":1.2},{"parameters":{"mode":"markdownToHtml","markdown":"={{ $json.text }}","destinationKey":"html","options":{}},"id":"13cd0671-00fd-45a7-b6c5-26f9f2b28318","name":"Markdown to HTML","type":"n8n-nodes-base.markdown","position":[1260,720],"typeVersion":1},{"parameters":{"resource":"channelMessage","teamId":{"__rl":true,"value":"=aa22cc1e-acc1-407e-a5be-ba9962830e55","mode":"id"},"channelId":{"__rl":true,"value":"=19%3APoo4Cf4idTcm8ExE73dQF7ZHLSmfXal9TdXCsJhNwwo1%40thread.tacv2","mode":"id"},"contentType":"html","message":"={{ $json.html }}","options":{"includeLinkToWorkflow":false}},"id":"2966e5b1-3701-49db-adee-f2cd26bf3c43","name":"Send Report to Channel","type":"n8n-nodes-base.microsoftTeams","position":[1500,780],"webhookId":"d61ddd7e-fda1-40e5-9f36-7d2ecd1b77ff","typeVersion":2,"credentials":{"microsoftTeamsOAuth2Api":{"id":"14g7k9M4SZPkSI3G","name":"Microsoft Teams account"}}},{"parameters":{"content":"## 1. Fetch All Channel Messages from Last Week\n[Learn more about the MS Teams node](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.microsoftteams)\n\nWe'll start by fetching all activity in our team channel over the last 7 days and group them  by the message author. We can do this using the MS Teams node. This will give us the raw data to pick apart and analyse for reporting purposes.","height":540,"width":700,"color":7},"id":"605a827f-109f-41cc-a2ff-da35fc3a2f93","name":"Sticky Note","type":"n8n-nodes-base.stickyNote","position":[60,460],"typeVersion":1},{"parameters":{"content":"## 2. Generate Activity Reports for Each Team Member\n[Learn more about the Basic LLM node](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.chainllm)\n\nWith our summarized threads which are grouped per user, we can aggregate them and give them to the AI again to generate a weekly report for the team member. This could include their wins, challenges, learnings or decisions - it really is up to you as to what the report looks like. A fun part of this output is getting to decide the tone of voice and delivery of the report. Don't be a bore and consider adding some personality and flair!","height":540,"width":860,"color":7},"id":"88a0f94f-846f-4e2f-a81a-76ebedc6aef3","name":"Sticky Note1","type":"n8n-nodes-base.stickyNote","position":[800,460],"typeVersion":1},{"parameters":{"content":"## 3. Generate Final Report for Whole Team\n[Learn more about the Basic LLM node](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.chainllm)\n\nIn this step, we go one level higher and aggregate all individual team member reports together into a big team report. In this way, the overview can group similar activities and generalise activities in a broader sense. The message output will also be shorter which some may find easier to digest.","height":540,"width":680,"color":7},"id":"a545baa6-d997-48dc-92e8-17eef6603cd0","name":"Sticky Note3","type":"n8n-nodes-base.stickyNote","position":[1700,460],"typeVersion":1},{"parameters":{"content":"## 4. Post Report on Team Channel (on Monday Morning!)\n[Learn more about the Markdown node](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.markdown)\n\nFinally, we can post the weekly report in the team channel. This is a great way to automate quick recaps for the team after the weekend break, get others back on track if they've been away or update client team who may pop in now and again to collaborate.","height":540,"width":680,"color":7},"id":"c9e6141d-f2e9-47e5-a89e-5b56b35ddff5","name":"Sticky Note4","type":"n8n-nodes-base.stickyNote","position":[2420,460],"typeVersion":1},{"parameters":{"content":"## Try It Out!\n### This n8n template lets you summarize individual team member activity on MS Teams for the past week and generates a report.\n\nFor remote teams, chat is a crucial communication tool to ensure work gets done but with so many conversations happening at once and in multiple threads, ideas, information and decisions usually live in the moment and get lost just as quickly - and all together forgotten by the weekend!\n\nUsing this template, this doesn't have to be the case. Have AI crawl through last week's activity, summarize all messages and replies and generate a casual and snappy report to bring the team back into focus for the current week. A project manager's dream!\n\n### How it works\n* A scheduled trigger is set to run every Monday at 6am to gather all team channel messages within the last week.\n* Messages are grouped by user.\n* AI analyses the raw messages and replies to pull out interesting observations and highlights. This is referred to as the individual reports.\n* All individual reports are then combined and summarized together into what becomes the team weekly report. This allows understanding of group and similar activities.\n* Finally, the team weekly report is posted back to the channel. The timing is important as it should be the first message of the week and ready for the team to glance over coffee.\n\n### How to use\n* Ideally works best per project and where most of the comms happens on a single channel. Avoid combining channels and instead duplicate this workflow for more channels.\n* You may need to filter for specific team members if you want specific team updates.\n* Customise the report to suit your organisation, team or the channel. You may prefer to be more formal if clients or external stakeholders are also present.\n\n### Requirements\n* MS Teams for chat platform\n* OpenAI for LLM\n\n### Customising this workflow\n* If the teams channel is busy enough already, consider posting the final report to email.\n* Pull in project metrics to include in your report. As extra context, it may be interesting to tie the messages to production performance.\n* Use an AI Agent to query for knowledgebase or tickets relevant to the messages. This may be useful for attaching links or references to add context.\n\n### Need Help?\nJoin the [Discord](https://discord.com/invite/XPKeKXeB7d) or ask in the [Forum](https://community.n8n.io/)!\n\nHappy Hacking!","height":1400,"width":420},"id":"a651cb7c-a5e6-4d64-8275-6773d1f8ff98","name":"Sticky Note6","type":"n8n-nodes-base.stickyNote","position":[-400,-260],"typeVersion":1},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":1.9,"position":[560,700],"id":"7b94e14e-9233-4dcc-8d0a-98ec84332dd6","name":"AI Agent"},{"parameters":{"model":{"__rl":true,"mode":"list","value":"gpt-4o-mini"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[500,900],"id":"99be887a-aa6d-4933-bcf3-2b0e0c74e731","name":"OpenAI Chat Model","credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{},"type":"@n8n/n8n-nodes-langchain.memoryPostgresChat","typeVersion":1.3,"position":[660,920],"id":"b20d65ec-de33-4b41-852f-af6fc94aedc4","name":"Postgres Chat Memory","credentials":{"postgres":{"id":"lPXyj3Ypf5YeZpp3","name":"Postgres account Local"}}},{"parameters":{"mode":"retrieve-as-tool","toolName":"diemay","toolDescription":"work with qdrant database","qdrantCollection":{"__rl":true,"value":"dienmay","mode":"list","cachedResultName":"dienmay"},"options":{}},"type":"@n8n/n8n-nodes-langchain.vectorStoreQdrant","typeVersion":1.1,"position":[960,840],"id":"9254b083-f787-4e45-bf03-4a046cb61ca2","name":"Qdrant Vector Store","credentials":{"qdrantApi":{"id":"RzFNlgEENHFNmlmD","name":"QdrantApi account"}}},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.embeddingsOpenAi","typeVersion":1.2,"position":[1000,1040],"id":"5e0365ee-1315-4b6d-925c-8251b30bbf63","name":"Embeddings OpenAI","credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{"resource":"chatMessage","operation":"get","chatId":{"__rl":true,"value":"19:693e01105819455e90265e839dd724ed@thread.v2","mode":"list","cachedResultName":"ERP's Innovation (group)","cachedResultUrl":"https://teams.microsoft.com/l/chat/19%3A693e01105819455e90265e839dd724ed%40thread.v2/0?tenantId=6ea838f0-f529-455e-9738-147060990b55"},"messageId":"054f9407-1984-4719-bb26-5e0d90d59e8b"},"type":"n8n-nodes-base.microsoftTeams","typeVersion":2,"position":[0,0],"id":"8f9acda6-d351-459c-a9ad-55f25f872453","name":"Microsoft Teams","webhookId":"8413138c-227c-47ee-af30-8f9a96d87fb6","credentials":{"microsoftTeamsOAuth2Api":{"id":"14g7k9M4SZPkSI3G","name":"Microsoft Teams account"}}},{"parameters":{"resource":"chatMessage","operation":"get","chatId":{"__rl":true,"value":"19:693e01105819455e90265e839dd724ed@thread.v2","mode":"list","cachedResultName":"ERP's Innovation (group)","cachedResultUrl":"https://teams.microsoft.com/l/chat/19%3A693e01105819455e90265e839dd724ed%40thread.v2/0?tenantId=6ea838f0-f529-455e-9738-147060990b55"},"messageId":"={{ $json.body.messange_ID }}"},"type":"n8n-nodes-base.microsoftTeams","typeVersion":2,"position":[220,0],"id":"abc05e98-515e-4040-879d-fa11acd016b3","name":"Microsoft Teams1","webhookId":"f5862903-2fff-4051-a586-fa76af217e8d","credentials":{"microsoftTeamsOAuth2Api":{"id":"14g7k9M4SZPkSI3G","name":"Microsoft Teams account"}}}],"connections":{"Markdown to HTML":{"main":[[{"node":"Send Report to Channel","type":"main","index":0}]]},"Schedule Trigger":{"main":[[]]},"OpenAI Chat Model":{"ai_languageModel":[[{"node":"AI Agent","type":"ai_languageModel","index":0}]]},"Postgres Chat Memory":{"ai_memory":[[{"node":"AI Agent","type":"ai_memory","index":0}]]},"Qdrant Vector Store":{"ai_tool":[[{"node":"AI Agent","type":"ai_tool","index":0}]]},"Embeddings OpenAI":{"ai_embedding":[[{"node":"Qdrant Vector Store","type":"ai_embedding","index":0}]]},"AI Agent":{"main":[[{"node":"Markdown to HTML","type":"main","index":0}]]},"Microsoft Teams":{"main":[[{"node":"Microsoft Teams1","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"96c6f148-d33d-4e55-9819-47f01d22228f","triggerCount":0,"tags":[],"shared":[{"createdAt":"2025-05-26T10:04:24.238Z","updatedAt":"2025-05-26T10:04:24.238Z","role":"workflow:owner","workflowId":"yhmbCXE3FI8UvXzE","projectId":"WbfPHUYYKS2tiNNo","project":{"createdAt":"2025-05-03T06:49:18.088Z","updatedAt":"2025-05-03T06:52:24.837Z","id":"WbfPHUYYKS2tiNNo","name":"charlie phan <scottyphan08@gmail.com>","type":"personal","icon":null,"description":null}}]},{"createdAt":"2025-05-27T03:59:55.702Z","updatedAt":"2025-05-27T04:05:51.025Z","id":"PYarVKJxSj4aeBcD","name":"WebUI chat","active":false,"isArchived":false,"nodes":[{"parameters":{"options":{}},"id":"2b38c8d4-70ff-413d-827e-174561880cec","name":"OpenAI Chat Model","type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1,"position":[920,340],"credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{"sessionIdType":"customKey","sessionKey":"={{ $json.body.sessionId }}"},"id":"6928e0c7-8c6a-4048-b4e6-125d09801fe3","name":"Postgres Chat Memory","type":"@n8n/n8n-nodes-langchain.memoryPostgresChat","typeVersion":1,"position":[1100,340],"notesInFlow":false,"credentials":{"postgres":{"id":"lPXyj3Ypf5YeZpp3","name":"Postgres account Local"}}},{"parameters":{"content":"## AI Agent with Webhook for Open WebUI","height":525,"width":1596,"color":6},"id":"98058f1b-bd41-48a7-9cc1-d8d8a2639ed4","name":"Sticky Note2","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[0,0]},{"parameters":{"options":{}},"id":"4d0f2274-5775-4e63-8279-b7e1034c5a4a","name":"Respond to Webhook","type":"n8n-nodes-base.respondToWebhook","typeVersion":1.1,"position":[1360,80]},{"parameters":{"httpMethod":"POST","path":"invoke-n8n-agent","responseMode":"responseNode","options":{}},"id":"68113a01-e1f6-4a95-9340-2fa52a001c3b","name":"Webhook","type":"n8n-nodes-base.webhook","typeVersion":2,"position":[60,160],"webhookId":"7f8a71dd-b98a-4c87-aa3c-c0f7c3b63535"},{"parameters":{"name":"web_search","description":"Call this tool to do an advanced web search based on a query you define.","workflowId":{"__rl":true,"value":"={{ $workflow.id }}","mode":"id"},"workflowInputs":{"mappingMode":"defineBelow","value":{"query":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('query', ``, 'string') }}"},"matchingColumns":[],"schema":[{"id":"tool_type","displayName":"tool_type","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string","removed":true},{"id":"query","displayName":"query","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string"},{"id":"image_url","displayName":"image_url","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string","removed":true}],"attemptToConvertTypes":false,"convertFieldsToString":false}},"type":"@n8n/n8n-nodes-langchain.toolWorkflow","typeVersion":2,"position":[1260,340],"id":"0642b9c6-e32c-49d9-8c32-403087b9ccfa","name":"Web Search Tool"},{"parameters":{"content":"## Example Agent Tool","height":340,"width":680,"color":4},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[920,540],"id":"79ff3a8c-7640-4fa4-922d-51e668125039","name":"Sticky Note7"},{"parameters":{"url":"=https://api.search.brave.com/res/v1/web/search?q={{ $('Tool Start').item.json.query }} }}&summary=1","authentication":"genericCredentialType","genericAuthType":"httpHeaderAuth","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Accept","value":"application/json"},{"name":"Accept-Encoding","value":"gzip"}]},"options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[1200,640],"id":"d5b67e78-59f6-4c8e-837c-2a418018c918","name":"Brave Web Search"},{"parameters":{"workflowInputs":{"values":[{"name":"query"}]}},"type":"n8n-nodes-base.executeWorkflowTrigger","typeVersion":1.1,"position":[980,640],"id":"79151d61-ecf8-42e7-9e1f-aecf59fcdd20","name":"Tool Start"},{"parameters":{"url":"=https://api.search.brave.com/res/v1/summarizer/search?key={{ $json.summarizer.key }}&entity_info=1","authentication":"genericCredentialType","genericAuthType":"httpHeaderAuth","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Accept","value":"application/json"},{"name":"Accept-Encoding","value":"gzip"}]},"options":{}},"id":"f0062ee7-9993-4b13-92a9-9426adc57d6c","name":"Summarize Web Research","type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[1400,640]},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"f5ebbd4f-6549-4a31-b3f8-eee7634dc439","leftValue":"={{ $json.body.sessionId }}","rightValue":"None","operator":{"type":"string","operation":"notEquals"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[260,160],"id":"bf643d2d-4757-4702-acf5-bb89469d0e09","name":"If"},{"parameters":{"model":{"__rl":true,"mode":"list","value":"gpt-4o-mini"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[560,400],"id":"a5502b4e-9feb-4495-b2ea-adf70a0cf142","name":"OpenAI Chat Model1","credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{"assignments":{"assignments":[{"id":"d264444f-c01a-4fa0-86a4-c0bf0e4c8537","name":"output","value":"={{ $json.output || $json.text }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[1140,80],"id":"e2b15a72-566d-4cb9-87be-ac776856e242","name":"Edit Fields (Set Output Field)"},{"parameters":{"promptType":"define","text":"={{ $json.body.chatInput }}","options":{"systemMessage":"You are a personal assistant who helps answer questions from a corpus of documents. The documents are either text based (Txt, docs, extracted PDFs, etc.) or tabular data (CSVs or Excel documents).\n\nYou are given tools to perform RAG in the 'documents' table, look up the documents available in your knowledge base in the 'document_metadata' table, extract all the text from a given document, and query the tabular files with SQL in the 'document_rows' table.\n\nAlways start by performing RAG unless the question requires a SQL query for tabular data (fetching a sum, finding a max, something a RAG lookup would be unreliable for). If RAG doesn't help, then look at the documents that are available to you, find a few that you think would contain the answer, and then analyze those.\n\nAlways tell the user if you didn't find the answer. Don't make something up just to please them."}},"id":"65d43698-8f07-46ad-a1ab-467bbc18a211","name":"Primary AI Agent","type":"@n8n/n8n-nodes-langchain.agent","typeVersion":1.6,"position":[660,80]},{"parameters":{"promptType":"define","text":"={{ $('Webhook').item.json.body.chatInput }}"},"type":"@n8n/n8n-nodes-langchain.chainLlm","typeVersion":1.5,"position":[460,260],"id":"a414e722-376b-4248-ac7b-ac44d553282b","name":"Open WebUI Metadata LLM"}],"connections":{"OpenAI Chat Model":{"ai_languageModel":[[{"node":"Primary AI Agent","type":"ai_languageModel","index":0}]]},"Postgres Chat Memory":{"ai_memory":[[{"node":"Primary AI Agent","type":"ai_memory","index":0}]]},"Webhook":{"main":[[{"node":"If","type":"main","index":0}]]},"Web Search Tool":{"ai_tool":[[{"node":"Primary AI Agent","type":"ai_tool","index":0}]]},"Tool Start":{"main":[[{"node":"Brave Web Search","type":"main","index":0}]]},"Brave Web Search":{"main":[[{"node":"Summarize Web Research","type":"main","index":0}]]},"If":{"main":[[{"node":"Primary AI Agent","type":"main","index":0}],[{"node":"Open WebUI Metadata LLM","type":"main","index":0}]]},"OpenAI Chat Model1":{"ai_languageModel":[[{"node":"Open WebUI Metadata LLM","type":"ai_languageModel","index":0}]]},"Edit Fields (Set Output Field)":{"main":[[{"node":"Respond to Webhook","type":"main","index":0}]]},"Primary AI Agent":{"main":[[{"node":"Edit Fields (Set Output Field)","type":"main","index":0}]]},"Open WebUI Metadata LLM":{"main":[[{"node":"Edit Fields (Set Output Field)","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"46d7686e-516c-47a1-9712-0318d83af26c","triggerCount":0,"tags":[],"shared":[{"createdAt":"2025-05-27T03:59:55.702Z","updatedAt":"2025-05-27T03:59:55.702Z","role":"workflow:owner","workflowId":"PYarVKJxSj4aeBcD","projectId":"WbfPHUYYKS2tiNNo","project":{"createdAt":"2025-05-03T06:49:18.088Z","updatedAt":"2025-05-03T06:52:24.837Z","id":"WbfPHUYYKS2tiNNo","name":"charlie phan <scottyphan08@gmail.com>","type":"personal","icon":null,"description":null}}]},{"createdAt":"2025-05-27T06:28:16.745Z","updatedAt":"2025-05-27T07:10:35.639Z","id":"Vps2j53zb2L2uHaa","name":"My workflow 9","active":false,"isArchived":false,"nodes":[{"parameters":{"sessionIdType":"customKey","sessionKey":"={{ $json.sessionId }}","contextWindowLength":20},"id":"dcf6740e-7531-49b8-a6ed-8a4e9b25650a","name":"Window Buffer Memory","type":"@n8n/n8n-nodes-langchain.memoryBufferWindow","position":[120,1120],"typeVersion":1.2},{"parameters":{"options":{}},"id":"31135503-3d49-46ab-a08d-ac9b709964dc","name":"Respond to Webhook","type":"n8n-nodes-base.respondToWebhook","position":[540,820],"typeVersion":1.1},{"parameters":{"model":"gpt-4o-2024-08-06","options":{"temperature":0.4}},"id":"e98b2902-9e0e-4e97-9d4f-b861a23dd65e","name":"OpenAI Chat Model","type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","position":[20,1000],"typeVersion":1,"credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{"toolDescription":"Call this tool to make the appointment, ensure you send the user email, name, company, reason for the meeting and the appointment start time and the date in ISO String format with timezone for <timezone>. When creating an appointment, always send JSON.","method":"POST","url":"https://graph.microsoft.com/v1.0/me/events","authentication":"predefinedCredentialType","nodeCredentialType":"microsoftOutlookOAuth2Api","sendQuery":true,"parametersQuery":{"values":[{"name":"Content-Type","valueProvider":"fieldValue","value":"application/json"}]},"sendBody":true,"specifyBody":"json","jsonBody":"{\n  \"subject\": \"Meetings with <name> at <company>\",\n  \"start\": {\n    \"dateTime\": \"{dateStartTime}\",\n    \"timeZone\": \"Europe/London\"\n  },\n  \"end\": {\n    \"dateTime\": \"{dateEndTime}\",\n    \"timeZone\": \"Europe/London\"\n  },\n  \"body\": {\n    \"contentType\": \"HTML\",\n    \"content\": \"{reason}\"\n  },\n  \"attendees\": [\n    {\n      \"emailAddress\": {\n        \"address\": \"{email}\",\n        \"name\": \"{name}\"\n      },\n      \"type\": \"required\"\n    }\n  ],\n  \"location\": {\n    \"displayName\": \"Online Meeting\"\n  },\n  \"isOnlineMeeting\": true,\n  \"onlineMeetingProvider\": \"teamsForBusiness\",\n  \"showAs\": \"busy\",\n  \"categories\": [\n    \"Meeting\"\n  ]\n}","placeholderDefinitions":{"values":[{"name":"dateStartTime","description":"The date and start time of the appointment in toISOString format with timezone for Europe/London","type":"string"},{"name":"dateEndTime","description":"The date and end time of the appointment in toISOString format, always 30 minutes after the dateStartTime,  format with timezone for Europe/London","type":"string"},{"name":"reason","description":"Detailed description of the meeting, will be sent to us and the customer","type":"string"},{"name":"email","description":"The customers email address.","type":"string"},{"name":"name","description":"The customers full name, must be second and last name","type":"string"}]}},"id":"46c180b1-b0de-47aa-866f-89ffa5ded28d","name":"Make Appointment","type":"@n8n/n8n-nodes-langchain.toolHttpRequest","position":[480,1080],"typeVersion":1.1,"credentials":{"microsoftOutlookOAuth2Api":{"id":"NOzSTk7w40LG72Jp","name":"Microsoft Outlook account"}}},{"parameters":{},"id":"96921129-fcea-4811-b1d9-739e0df727e6","name":"Execute Workflow Trigger","type":"n8n-nodes-base.executeWorkflowTrigger","position":[820,820],"typeVersion":1},{"parameters":{"assignments":{"assignments":[{"id":"c0b6e779-0f7b-41f0-81f8-457f2b31ccfe","name":"response","type":"array","value":"={{ $json.freeTimeSlots.toJsonString() }}"}]},"options":{}},"id":"ceecaa9a-3889-46c4-8c2c-a673799a28ce","name":"varResponse","type":"n8n-nodes-base.set","position":[1780,700],"typeVersion":3.4},{"parameters":{"jsCode":"// Input: An array with objects containing a 'value' array of events.\nconst businessHoursStart = \"08:00:00Z\";  // Business hours start time\nconst businessHoursEnd = \"17:30:00Z\";    // Business hours end time\n\nconst inputData = items[0].json.value;  // Assuming the input data is in the 'value' array of the first item\n\n// Function to convert ISO datetime string to a Date object with specified time\nfunction getDateWithTime(dateString, time) {\n  const datePart = new Date(dateString).toISOString().split(\"T\")[0];  // Extract the date part (YYYY-MM-DD)\n  return new Date(`${datePart}T${time}`);\n}\n\n// Function to get day of the week from a date string\nfunction getDayOfWeek(dateString) {\n  const daysOfWeek = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n  return daysOfWeek[new Date(dateString).getUTCDay()];\n}\n\n// Function to add days to a date\nfunction addDays(date, days) {\n  const result = new Date(date);\n  result.setDate(result.getDate() + days);\n  return result;\n}\n\n// Function to format date as YYYY-MM-DD\nfunction formatDate(date) {\n  return date.toISOString().split('T')[0];\n}\n\n// Determine the default timezone from input data\nconst defaultTimeZone = inputData.length > 0 && inputData[0].start && inputData[0].start.timeZone \n  ? inputData[0].start.timeZone \n  : \"UTC\";\n\n// Find min and max dates in the input\nlet minDate = null;\nlet maxDate = null;\n\ninputData.forEach(event => {\n  if (event.start && event.start.dateTime) {\n    const eventDate = new Date(event.start.dateTime);\n    if (!minDate || eventDate < minDate) {\n      minDate = eventDate;\n    }\n    if (!maxDate || eventDate > maxDate) {\n      maxDate = eventDate;\n    }\n  }\n});\n\n// If we have valid dates, ensure they're at the start of the day\nif (minDate && maxDate) {\n  minDate = new Date(minDate.toISOString().split('T')[0]);\n  maxDate = new Date(maxDate.toISOString().split('T')[0]);\n}\n\n// Organise events by date\nconst eventsByDate = {};\ninputData.forEach(event => {\n  if (event.start && event.start.dateTime) {\n    const eventDate = new Date(event.start.dateTime).toISOString().split(\"T\")[0];  // Extract the date\n    if (!eventsByDate[eventDate]) {\n      eventsByDate[eventDate] = [];\n    }\n    if (event.showAs === \"busy\") {\n      eventsByDate[eventDate].push({\n        start: new Date(event.start.dateTime),\n        end: new Date(event.end.dateTime),\n        timeZone: event.start.timeZone || defaultTimeZone\n      });\n    }\n  }\n});\n\n// Find free slots within business hours for each date\nconst freeTimeSlots = [];\n\n// Process all dates in the range\nif (minDate && maxDate) {\n  for (let currentDate = new Date(minDate); currentDate <= maxDate; currentDate = addDays(currentDate, 1)) {\n    const dateStr = formatDate(currentDate);\n    const busyEvents = eventsByDate[dateStr] || [];\n    \n    // Define business start and end times for the current date\n    const businessStart = getDateWithTime(dateStr, businessHoursStart);\n    const businessEnd = getDateWithTime(dateStr, businessHoursEnd);\n    \n    // If there are no busy events for this date, add the entire business day as free\n    if (busyEvents.length === 0) {\n      freeTimeSlots.push({\n        date: dateStr,\n        dayOfWeek: getDayOfWeek(dateStr),\n        freeStart: businessStart.toISOString(),\n        freeEnd: businessEnd.toISOString(),\n        timeZone: defaultTimeZone\n      });\n      continue; // Skip to the next date\n    }\n    \n    // Sort events by their start time\n    busyEvents.sort((a, b) => a.start - b.start);\n    \n    // Check if there's free time before the first busy event\n    if (busyEvents[0].start > businessStart) {\n      freeTimeSlots.push({\n        date: dateStr,\n        dayOfWeek: getDayOfWeek(dateStr),\n        freeStart: businessStart.toISOString(),\n        freeEnd: busyEvents[0].start.toISOString(),\n        timeZone: busyEvents[0].timeZone\n      });\n    }\n    \n    // Check for gaps between busy events\n    for (let i = 0; i < busyEvents.length - 1; i++) {\n      if (busyEvents[i].end < busyEvents[i+1].start) {\n        freeTimeSlots.push({\n          date: dateStr,\n          dayOfWeek: getDayOfWeek(dateStr),\n          freeStart: busyEvents[i].end.toISOString(),\n          freeEnd: busyEvents[i+1].start.toISOString(),\n          timeZone: busyEvents[i].timeZone\n        });\n      }\n    }\n    \n    // Check if there's free time after the last busy event\n    if (busyEvents[busyEvents.length - 1].end < businessEnd) {\n      freeTimeSlots.push({\n        date: dateStr,\n        dayOfWeek: getDayOfWeek(dateStr),\n        freeStart: busyEvents[busyEvents.length - 1].end.toISOString(),\n        freeEnd: businessEnd.toISOString(),\n        timeZone: busyEvents[busyEvents.length - 1].timeZone\n      });\n    }\n  }\n}\n\n// Output the free time slots\nreturn [{ json: { freeTimeSlots } }];\n"},"id":"fee07e5e-860c-4a4b-8f55-3fe677a35ae6","name":"freeTimeSlots","type":"n8n-nodes-base.code","position":[1560,700],"typeVersion":2},{"parameters":{"url":"=https://graph.microsoft.com/v1.0/me/calendarView","authentication":"predefinedCredentialType","nodeCredentialType":"microsoftOutlookOAuth2Api","sendQuery":true,"queryParameters":{"parameters":[{"name":"startDateTime","value":"={{ new Date(new Date().setDate(new Date().getDate() + 2)).toISOString() }}"},{"name":"endDateTime","value":"={{ new Date(new Date().setDate(new Date().getDate() + 16)).toISOString() }}"},{"name":"$top","value":"50"},{"name":"select","value":"start,end,categories,importance,isAllDay,recurrence,showAs,subject,type"},{"name":"orderby","value":"start/dateTime asc"}]},"sendHeaders":true,"headerParameters":{"parameters":[{"name":"Prefer","value":"outlook.timezone=\"Europe/London\""}]},"options":{}},"id":"704db3e6-a550-421a-872c-859421044377","name":"Get Events","type":"n8n-nodes-base.httpRequest","position":[1340,700],"typeVersion":4.2,"credentials":{"microsoftOutlookOAuth2Api":{"id":"NOzSTk7w40LG72Jp","name":"Microsoft Outlook account"}}},{"parameters":{"name":"Get_availability","description":"Call this tool to check my calendar for availability before booking an appointment. This will result in all events for the next 2 weeks. Review all events and do not double book.","workflowId":{"__rl":true,"mode":"list","value":"KD21RG8VeXYDS2Vf","cachedResultName":"Website Chatbot"},"fields":{"values":[{"name":"route","stringValue":"availability"}]}},"id":"2f1c6f80-d2a9-4f51-8a1a-ce731f447db4","name":"Get Availability","type":"@n8n/n8n-nodes-langchain.toolWorkflow","position":[420,1320],"typeVersion":1.2},{"parameters":{"name":"Send_email","description":"Call this tool when the customer wants to speak to a human, or is not ready to make an appointment or if the customer has questions outside of your remit. The tool will send an email to our founder, <insert name>. Always send the customer's full name, company and email address along with a detailed message about the enquiry. You must always gather project details.","workflowId":{"__rl":true,"mode":"list","value":"KD21RG8VeXYDS2Vf","cachedResultName":"Website Chatbot"},"fields":{"values":[{"name":"route","stringValue":"message"}]},"specifyInputSchema":true,"jsonSchemaExample":"{\n\t\"email\": \"the customer's email\",\n    \"subject\": \"the subject of the email\",\n    \"message\": \"The customer's enquiry, must be a detailed description of their enquiry\",\n    \"name\": \"the customer's full name\",\n    \"company\": \"the customer company name\"\n}"},"id":"345827a0-dc27-454c-b0b7-90d29fbe3258","name":"Send Message","type":"@n8n/n8n-nodes-langchain.toolWorkflow","position":[280,1320],"typeVersion":1.2},{"parameters":{"public":true,"mode":"webhook","options":{"allowedOrigins":"*","responseMode":"responseNode"}},"id":"a12a992f-1272-4b36-aab9-ab3cd6d29107","name":"Chat Trigger","type":"@n8n/n8n-nodes-langchain.chatTrigger","position":[-720,840],"webhookId":"f406671e-c954-4691-b39a-66c90aa2f103","typeVersion":1,"disabled":true},{"parameters":{"rules":{"values":[{"conditions":{"options":{"version":2,"leftValue":"","caseSensitive":true,"typeValidation":"strict"},"combinator":"and","conditions":[{"operator":{"type":"string","operation":"equals"},"leftValue":"={{ $json.route }}","rightValue":"availability"}]},"renameOutput":true,"outputKey":"availability"},{"conditions":{"options":{"version":2,"leftValue":"","caseSensitive":true,"typeValidation":"strict"},"combinator":"and","conditions":[{"id":"52fd844b-cc8d-471f-a56a-40e119b66194","operator":{"name":"filter.operator.equals","type":"string","operation":"equals"},"leftValue":"={{ $json.route }}","rightValue":"message"}]},"renameOutput":true,"outputKey":"message"}]},"options":{}},"id":"1d73b861-4962-40a7-a7bc-a1570a8a1668","name":"Switch","type":"n8n-nodes-base.switch","position":[1040,820],"typeVersion":3.2},{"parameters":{"assignments":{"assignments":[{"id":"0d2ad084-9707-4979-84e4-297d1c21f725","name":"response","type":"string","value":"={{ $json }}"}]},"options":{"ignoreConversionErrors":false}},"id":"578a613f-c003-4793-b2fd-c3556c3406dc","name":"varMessageResponse","type":"n8n-nodes-base.set","position":[1560,940],"typeVersion":3.4},{"parameters":{"toRecipients":"anh.pv02@pnj.com.vn","subject":"={{ $('Execute Workflow Trigger').item.json.query.subject }}","bodyContent":"=<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>New Webchat Customer Enquiry</title>\n    <style type=\"text/css\">\n        /* Client-specific styles */\n        body, table, td, a { -webkit-text-size-adjust: 100%; -ms-text-size-adjust: 100%; }\n        table, td { mso-table-lspace: 0pt; mso-table-rspace: 0pt; }\n        img { -ms-interpolation-mode: bicubic; }\n\n        /* Reset styles */\n        body { margin: 0; padding: 0; }\n        img { border: 0; height: auto; line-height: 100%; outline: none; text-decoration: none; }\n        table { border-collapse: collapse !important; }\n        body { height: 100% !important; margin: 0; padding: 0; width: 100% !important; }\n\n        /* iOS BLUE LINKS */\n        a[x-apple-data-detectors] {\n            color: inherit !important;\n            text-decoration: none !important;\n            font-size: inherit !important;\n            font-family: inherit !important;\n            font-weight: inherit !important;\n            line-height: inherit !important;\n        }\n\n        /* Styles for Outlook and other email clients */\n        .ExternalClass { width: 100%; }\n        .ExternalClass, .ExternalClass p, .ExternalClass span, .ExternalClass font, .ExternalClass td, .ExternalClass div { line-height: 100%; }\n        \n        /* Responsive styles */\n        @media screen and (max-width: 600px) {\n            .container { width: 100% !important; }\n            .content { padding: 15px !important; }\n            .field { padding: 10px !important; }\n            .header h1 { font-size: 20px !important; }\n            .header p { font-size: 12px !important; }\n        }\n    </style>\n</head>\n<body style=\"margin: 0; padding: 0; background-color: #f4f4f4;\">\n    <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\">\n        <tr>\n            <td>\n                <table align=\"center\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"600\" style=\"border-collapse: collapse; background-color: #ffffff;\">\n                    <tr>\n                        <td align=\"center\" bgcolor=\"#1a1a1a\" style=\"padding: 30px 0; background: linear-gradient(135deg, #1a1a1a 0%, #2d1f3d 100%);\">\n                            <h1 style=\"color: #ffffff; font-family: Arial, sans-serif; font-size: 24px; font-weight: 700; margin: 0; text-transform: uppercase; letter-spacing: 1px;\">New Customer Enquiry</h1>\n                            <p style=\"color: #ffffff; font-family: Arial, sans-serif; font-size: 14px; line-height: 20px; margin: 10px 0 0; opacity: 0.8;\">A potential client has reached out through our webchat</p>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"padding: 20px;\">\n                            <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\">\n                                <tr>\n                                    <td style=\"padding: 15px; background-color: #f9f9f9; border: 1px solid #e0e0e0; border-radius: 8px;\">\n                                        <p style=\"font-family: Arial, sans-serif; font-size: 14px; line-height: 1.6; color: #6a1b9a; font-weight: bold; margin: 0 0 5px 0;\">FROM</p>\n                                        <p style=\"font-family: Arial, sans-serif; font-size: 16px; line-height: 1.6; color: #333333; margin: 0;\">{{ $('Execute Workflow Trigger').item.json.query.name }}</p>\n                                    </td>\n                                </tr>\n                                <tr><td height=\"20\"></td></tr>\n                                <tr>\n                                    <td style=\"padding: 15px; background-color: #f9f9f9; border: 1px solid #e0e0e0; border-radius: 8px;\">\n                                        <p style=\"font-family: Arial, sans-serif; font-size: 14px; line-height: 1.6; color: #6a1b9a; font-weight: bold; margin: 0 0 5px 0;\">EMAIL</p>\n                                        <p style=\"font-family: Arial, sans-serif; font-size: 16px; line-height: 1.6; color: #333333; margin: 0;\">{{ $('Execute Workflow Trigger').item.json.query.email }}</p>\n                                    </td>\n                                </tr>\n                                <tr><td height=\"20\"></td></tr>\n                                <tr>\n                                    <td style=\"padding: 15px; background-color: #f9f9f9; border: 1px solid #e0e0e0; border-radius: 8px;\">\n                                        <p style=\"font-family: Arial, sans-serif; font-size: 14px; line-height: 1.6; color: #6a1b9a; font-weight: bold; margin: 0 0 5px 0;\">COMPANY</p>\n                                        <p style=\"font-family: Arial, sans-serif; font-size: 16px; line-height: 1.6; color: #333333; margin: 0;\">{{ $('Execute Workflow Trigger').item.json.query.company }}</p>\n                                    </td>\n                                </tr>\n                                <tr><td height=\"20\"></td></tr>\n                                <tr>\n                                    <td style=\"padding: 15px; background-color: #f9f9f9; border: 1px solid #e0e0e0; border-radius: 8px;\">\n                                        <p style=\"font-family: Arial, sans-serif; font-size: 14px; line-height: 1.6; color: #6a1b9a; font-weight: bold; margin: 0 0 5px 0;\">MESSAGE</p>\n                                        <p style=\"font-family: Arial, sans-serif; font-size: 16px; line-height: 1.6; color: #333333; margin: 0;\">{{ $('Execute Workflow Trigger').item.json.query.message }}</p>\n                                    </td>\n                                </tr>\n                            </table>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td align=\"center\" bgcolor=\"#e90ebb\" style=\"padding: 20px; background: linear-gradient(135deg, #e90ebb 0%, #6a1b9a 100%);\">\n                            <p style=\"font-family: Arial, sans-serif; font-size: 14px; line-height: 20px; color: #ffffff; margin: 0;\">This enquiry was automatically generated from our website's chat interface.</p>\n                        </td>\n                    </tr>\n                </table>\n            </td>\n        </tr>\n    </table>\n</body>\n</html>","additionalFields":{"importance":"High","bodyContentType":"html"}},"id":"33ff4759-b9ff-4291-aa60-07c18fb59754","name":"Send Message1","type":"n8n-nodes-base.microsoftOutlook","position":[1340,940],"webhookId":"d8acc2cb-fcba-4312-a743-e74abe76d071","typeVersion":2,"credentials":{"microsoftOutlookOAuth2Api":{"id":"NOzSTk7w40LG72Jp","name":"Microsoft Outlook account"}}},{"parameters":{"content":"Ensure these referance this workflow, replace placeholders","height":205.34013605442183,"width":311.6936390497898},"id":"f493a709-ae7c-42b1-b084-c95965314bdf","name":"Sticky Note","type":"n8n-nodes-base.stickyNote","position":[240,1240],"typeVersion":1},{"parameters":{"content":"modify business hours\nmodify timezones","height":238,"width":468},"id":"f5a9611a-6ce5-48c9-917d-2782080c7151","name":"Sticky Note1","type":"n8n-nodes-base.stickyNote","position":[1260,620],"typeVersion":1},{"parameters":{"promptType":"define","text":"={{ $json.chatInput }}","options":{"systemMessage":"=You are an intelligent personal assistant to Wayne, Founder at nocodecreative.io (ai consultancy and software development agency) responsible for coordinating appointments and gathering relevant information from customers. Your tasks are to:\n\n- Understand when the customer is available by asking for suitable days and times (ensuring they are aware we are in a UK timezone)\n- Check the calendar to identify available slots that match their preferences. Pay attention to each event's start and end time and do not double book, you will be given all events for the next 14 days\n- Ask the customer what they would like to discuss during the appointment to ensure proper preparation.\n- Get the customer's name, company name and email address to book the appointment\n- Make the conversation friendly and natural. Confirm the appointment details with the customer and let them know I’ll be ready to discuss what they’d like.\n- After you have checked the calendar, book the appointment accordingly, without double booking. Confirm the customer's timezone and adjust the appointment for EU/London.\n- If the customer isn't ready to book, you can send an email for a human to respond to, ensure you gather a detailed enquiry from the customer including contact details and project information.Ensure the message contains enough information for a human to respond, always include project details, if the customer hasn't provided project details, ask.\n- Alwways suggest an appointment before sending a message, appointment are you primary goal, message are a fall back\n\nExample questions:\n\n\"Hi there! we'd love to help arrange a time that works for us to meet. Could you let us know which days and times are best for you? We’ll check the calendar and book in a suitable slot.\"\n\n\"Could you please let us know what you’d like to discuss during the appointment? This helps us prepare in advance and make our time together as productive as possible.\"\n\n\"Before we put you in touch with a human, please can you provide more information about the project you have in mind?\" //You must gather project info at all times, even if the enquiry is about pricing/costs.\n\nIf the time the customer suggests is not available, suggest the nearest alternative appointment based on existing events, do not book an appointment outside of freeTimeSlots\n\nImportant information:\n- All appointments need 48 hours' notice from {{ \n  new Date().toLocaleString(\"en-GB\", { timeZone: \"Europe/London\", hour12: false })\n  .split(\", \")[0].split(\"/\").reverse().join(\"-\") \n  + \"T\" + new Date().toLocaleTimeString(\"en-GB\", { timeZone: \"Europe/London\", hour12: false }) + \":00.000Z\" \n}} (current date and time in the UK) // this is non-negotiable, but discuss with care and be friendly, only let the customer know this if required\n- Business hours are 8am - 6pm Monday to Friday only Europe/London timezone, ensure the customer is aware of this and help them book during UK hours, you must confirm their timezone to do this!\n- Do not book appointments on a Saturday or sunday\n- Do not book appointments outside of freeTimeSlots\n- Always check the next 14 days, and review all events before providing availability \n- All appointments are for a max of 30 minutes\n- You must never offer an appointment without checking the calendar, if you cannot check the calendar, you cannot book and must let the customer know you can not book an appointment right now.\n- Always offer the soonest appointment available if the customer's preferred time is unavailable\n- When confirming an appointment, be thankful and excited!\n- Initial 30 minute consultation are free of charge\n\n\nMessages and description:\n- When creating descriptions or sending messages, always ensure enough detail is provided for preparation, meaning you can ask follow-up questions to extract further information as required. For example, if a customer asks about pricing, gather some information about the project so our team can provide accurate pricing, and apply this logic throughout\n\nComments:\n//!IMPORTANT! Do not offer any times without checking the calendar, do not make availability up\n//**Do not discuss anything other than appointment booking, if the query does not relate to an appointment, advise them you cannot help at this time.** be friendly and always offer to book an appointment to discuss their query\n//When the appointment is confirmed, let the customer know, by name, that they will be meeting our founder, Wayne for a 30 minute consultation, and that they will receive a calendar invite by email, ensure they accept the invite to confirm the appointment.\n//Always respond as a highly professional executive PA, remember this is the customer's first engagement, they do not know us or Wayne at this stage\n//Do not refer to yourself as me or I, instead communicate like an organisation, using terms like 'us'\n//Always gather project for descriptions and messages"}},"id":"fad3f71b-f007-41c9-9afb-ef80a9f786bc","name":"AI Agent","type":"@n8n/n8n-nodes-langchain.agent","position":[120,820],"typeVersion":1.6},{"parameters":{"conditions":{"options":{"version":2,"leftValue":"","caseSensitive":true,"typeValidation":"strict"},"combinator":"and","conditions":[{"id":"158a0b91-534d-4745-b10e-8a7c97050861","operator":{"type":"string","operation":"exists","singleValue":true},"leftValue":"={{ $json.chatInput }}","rightValue":""}]},"options":{}},"id":"16033801-eced-4651-9d81-d7010d948f77","name":"If","type":"n8n-nodes-base.if","position":[-500,840],"typeVersion":2.2},{"parameters":{"respondWith":"json","responseBody":"{\n  \"output\": \"Hi, how can I help you today?\"\n}","options":{}},"id":"8a001ff6-4398-463a-bdfa-054a4feaad2a","name":"Respond With Initial Message","type":"n8n-nodes-base.respondToWebhook","position":[-200,960],"typeVersion":1.1},{"parameters":{"content":"# Custom Branded n8n Chatbot\nBuilt by [Wayne Simpson](https://www.linkedin.com/in/simpsonwayne/) at [nocodecreative.io](https://nocodecreative.io)\n☕ If you find this useful, feel free to [buy me a coffee](https://ko-fi.com/waynesimpson)","height":111,"width":668,"color":6},"id":"a9d70eea-43a3-48b3-a7b9-2be792842342","name":"Sticky Note8","type":"n8n-nodes-base.stickyNote","position":[0,0],"typeVersion":1},{"parameters":{"content":"# Watch the Setup Video 📺\n### Watch Set Up Video 👇\n[![Auto Categorise Outlook Emails with AI](https://cdn.jsdelivr.net/gh/WayneSimpson/n8n-chatbot-template/custom-branded-chatbot.png)](https://youtu.be/xQ1tCQZhLaI)\n\n","height":497,"width":667,"color":7},"id":"137948b7-ec0f-41f1-8d66-083fb507ab09","name":"Sticky Note9","type":"n8n-nodes-base.stickyNote","position":[-340,160],"typeVersion":1},{"parameters":{"content":"## Read to blog post to get started 📝\n**Follow along to add a custom branded chat widget to your webiste**\n\n[![Custom Branded n8n Chatbot](https://cdn.jsdelivr.net/gh/WayneSimpson/n8n-chatbot-template/chat%20widget.png)](https://blog.nocodecreative.io/create-a-branded-ai-powered-website-chatbot-with-n8n/)","height":500,"width":600,"color":7},"id":"8cf7a3bf-0c1d-4ca0-b9e2-175011d89a54","name":"Sticky Note2","type":"n8n-nodes-base.stickyNote","position":[360,160],"typeVersion":1},{"parameters":{"content":"Customise the email template","height":240,"width":260,"color":4},"id":"367bff4b-04f3-44ef-b9d8-be46e7313696","name":"Sticky Note3","type":"n8n-nodes-base.stickyNote","position":[1260,880],"typeVersion":1},{"parameters":{"content":"modify timezones","height":238,"width":208,"color":6},"id":"1b3ae6a0-ba1f-4e86-b797-3da3800ffa73","name":"Sticky Note4","type":"n8n-nodes-base.stickyNote","position":[420,980],"typeVersion":1}],"connections":{"If":{"main":[[{"node":"AI Agent","type":"main","index":0}],[{"node":"Respond With Initial Message","type":"main","index":0}]]},"Switch":{"main":[[{"node":"Get Events","type":"main","index":0}],[{"node":"Send Message1","type":"main","index":0}]]},"AI Agent":{"main":[[{"node":"Respond to Webhook","type":"main","index":0}]]},"Get Events":{"main":[[{"node":"freeTimeSlots","type":"main","index":0}]]},"Chat Trigger":{"main":[[{"node":"If","type":"main","index":0}]]},"Send Message":{"ai_tool":[[{"node":"AI Agent","type":"ai_tool","index":0}]]},"Send Message1":{"main":[[{"node":"varMessageResponse","type":"main","index":0}]]},"freeTimeSlots":{"main":[[{"node":"varResponse","type":"main","index":0}]]},"Get Availability":{"ai_tool":[[{"node":"AI Agent","type":"ai_tool","index":0}]]},"Make Appointment":{"ai_tool":[[{"node":"AI Agent","type":"ai_tool","index":0}]]},"OpenAI Chat Model":{"ai_languageModel":[[{"node":"AI Agent","type":"ai_languageModel","index":0}]]},"Window Buffer Memory":{"ai_memory":[[{"node":"AI Agent","type":"ai_memory","index":0}]]},"Execute Workflow Trigger":{"main":[[{"node":"Switch","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{"Execute Workflow Trigger":[{"json":{"query":"Check availability for Monday at 9am","route":"availability"}}]},"versionId":"a6bce539-07c5-485d-b209-f0eac882a7e5","triggerCount":0,"tags":[],"shared":[{"createdAt":"2025-05-27T06:28:16.745Z","updatedAt":"2025-05-27T06:28:16.745Z","role":"workflow:owner","workflowId":"Vps2j53zb2L2uHaa","projectId":"WbfPHUYYKS2tiNNo","project":{"createdAt":"2025-05-03T06:49:18.088Z","updatedAt":"2025-05-03T06:52:24.837Z","id":"WbfPHUYYKS2tiNNo","name":"charlie phan <scottyphan08@gmail.com>","type":"personal","icon":null,"description":null}}]},{"createdAt":"2025-05-27T07:21:04.515Z","updatedAt":"2025-05-27T07:25:06.217Z","id":"O0vL8kX6qBGImQMW","name":"Whatapps 2","active":false,"isArchived":false,"nodes":[{"parameters":{"updates":["messages"],"options":{}},"id":"53769d71-d6b0-49c0-b302-397843845b2c","name":"WhatsApp Trigger","type":"n8n-nodes-base.whatsAppTrigger","position":[-480,420],"webhookId":"aaa71f03-f7af-4d18-8d9a-0afb86f1b554","typeVersion":1,"credentials":{"whatsAppTriggerApi":{"id":"eAPBkIYpcDDhH3ia","name":"WhatsApp OAuth account"}}},{"parameters":{"model":"gpt-4o-2024-08-06","options":{}},"id":"de3443c9-88e2-4bb6-8a9a-692804075fc9","name":"OpenAI Chat Model","type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","position":[120,500],"typeVersion":1,"credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{"sessionIdType":"customKey","sessionKey":"=whatsapp-75-{{ $json.messages[0].from }}"},"id":"0d40a787-1e56-40f2-b562-996f3c3df142","name":"Window Buffer Memory","type":"@n8n/n8n-nodes-langchain.memoryBufferWindow","position":[240,500],"typeVersion":1.2},{"parameters":{"name":"query_product_brochure","description":"Call this tool to query the product brochure. Valid for the year 2024."},"id":"82ea99d2-e191-4b71-a749-4d9ce1683f8b","name":"Vector Store Tool","type":"@n8n/n8n-nodes-langchain.toolVectorStore","position":[360,500],"typeVersion":1},{"parameters":{"model":"text-embedding-3-small","options":{}},"id":"01ceaeef-6d97-4a38-86ea-c32a1cdee8cf","name":"Embeddings OpenAI","type":"@n8n/n8n-nodes-langchain.embeddingsOpenAi","position":[360,780],"typeVersion":1,"credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{"model":"gpt-4o-2024-08-06","options":{}},"id":"feb208b2-8419-4386-a379-1aa9e2823a58","name":"OpenAI Chat Model1","type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","position":[600,640],"typeVersion":1},{"parameters":{},"id":"0c4ec0d2-ce80-49f8-bb02-14e4be5249fa","name":"When clicking ‘Test workflow’","type":"n8n-nodes-base.manualTrigger","position":[-1840,460],"typeVersion":1},{"parameters":{"model":"text-embedding-3-small","options":{}},"id":"2474ed93-4a31-4b11-98a1-f56c4d200d97","name":"Embeddings OpenAI1","type":"@n8n/n8n-nodes-langchain.embeddingsOpenAi","position":[-860,680],"typeVersion":1,"credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{"jsonMode":"expressionData","jsonData":"={{ $('Extract from File').item.json.text }}","options":{}},"id":"f696fcc1-c965-40bb-9cab-ef23262f4a83","name":"Default Data Loader","type":"@n8n/n8n-nodes-langchain.documentDefaultDataLoader","position":[-720,680],"typeVersion":1},{"parameters":{"chunkSize":2000,"chunkOverlap":10,"options":{}},"id":"c62dbbad-1e02-45f5-9c2f-3d4bcee5fec1","name":"Recursive Character Text Splitter","type":"@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter","position":[-720,800],"typeVersion":1},{"parameters":{"operation":"pdf","options":{}},"id":"ea9eae8d-027b-46df-a1db-2909a40ffe95","name":"Extract from File","type":"n8n-nodes-base.extractFromFile","position":[-1480,460],"typeVersion":1},{"parameters":{"url":"https://usa.yamaha.com/files/download/brochure/1/1474881/Yamaha-Powered-Loudspeakers-brochure-2024-en-web.pdf","options":{}},"id":"58b81e68-2ddd-4db5-9ed2-d70843363830","name":"get Product Brochure","type":"n8n-nodes-base.httpRequest","position":[-1660,460],"typeVersion":4.2},{"parameters":{"operation":"send","phoneNumberId":"477115632141067","recipientPhoneNumber":"={{ $('WhatsApp Trigger').item.json.messages[0].from }}","textBody":"={{ $json.output }}","additionalFields":{"previewUrl":false}},"id":"a959a724-55c9-45f8-b591-95ab0789cbec","name":"Reply To User","type":"n8n-nodes-base.whatsApp","position":[980,420],"typeVersion":1,"webhookId":"bca6fdd9-08a6-423c-98b1-4a28f209d447"},{"parameters":{"operation":"send","phoneNumberId":"477115632141067","recipientPhoneNumber":"={{ $('WhatsApp Trigger').item.json.messages[0].from }}","textBody":"=I'm unable to process non-text messages. Please send only text messages. Thanks!","additionalFields":{"previewUrl":false}},"id":"be2a63fc-e469-43ed-8667-046ad559676e","name":"Reply To User1","type":"n8n-nodes-base.whatsApp","position":[-80,780],"typeVersion":1,"webhookId":"ca4ce337-ae03-4cf0-a2a6-8e3e75095f00","credentials":{"whatsAppApi":{"id":"SFrmXY3KZLL8DC0M","name":"WhatsApp account"}}},{"parameters":{"memoryKey":"whatsapp-75"},"id":"83b8b462-13ae-4e3e-a484-cdda2f1472da","name":"Product Catalogue","type":"@n8n/n8n-nodes-langchain.vectorStoreInMemory","position":[360,640],"typeVersion":1},{"parameters":{"content":"## 1. Download Product Brochure PDF\n[Read more about the HTTP Request Tool](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.httprequest)\n\nImport your marketing PDF document to build your vector store. This will be used as the knowledgebase by the Sales AI Agent.\n\nFor this demonstration, we'll use the HTTP request node to import the YAMAHA POWERED LOUDSPEAKERS 2024 brochure ([Source](https://usa.yamaha.com/files/download/brochure/1/1474881/Yamaha-Powered-Loudspeakers-brochure-2024-en-web.pdf)) and an Extract from File node to extract the text contents. ","height":434.6875,"width":640.4375,"color":7},"id":"7b026339-90d4-41f5-86cc-4a4be15f45df","name":"Sticky Note","type":"n8n-nodes-base.stickyNote","position":[-1920,220],"typeVersion":1},{"parameters":{"content":"## 2. Create Product Brochure Vector Store\n[Read more about the In-Memory Vector Store](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.vectorstoreinmemory/)\n\nVector stores are powerful databases which serve the purpose of matching a user's questions to relevant parts of a document. By creating a vector store of our product catalog, we'll allow users to query using natural language.\n\nTo keep things simple, we'll use the **In-memory Vector Store** which comes built-in to n8n and doesn't require a separate service. For production deployments, I'd recommend replacing the in-memory vector store with either [Qdrant](https://qdrant.tech) or [Pinecone](https://pinecone.io).","height":731.1875,"width":614.6875,"color":7},"id":"a1aeb32e-5f32-4c27-9129-81c5bd5589d2","name":"Sticky Note1","type":"n8n-nodes-base.stickyNote","position":[-1260,220],"typeVersion":1},{"parameters":{"mode":"insert","memoryKey":"whatsapp-75","clearStore":true},"id":"72ee993c-59b6-470a-b301-a8c9dbc4f861","name":"Create Product Catalogue","type":"@n8n/n8n-nodes-langchain.vectorStoreInMemory","position":[-860,500],"typeVersion":1},{"parameters":{"content":"## 3. Use the WhatsApp Trigger\n[Learn more about the WhatsApp Trigger](https://docs.n8n.io/integrations/builtin/trigger-nodes/n8n-nodes-base.whatsapptrigger/)\n\nThe WhatsApp Trigger allows you to receive incoming WhatsApp messages from customers. It requires a bit of setup so remember to follow the documentation carefully! Once ready however, it's quite easy to build powerful workflows which are easily accessible to users.\n\nNote that WhatsApp can send many message types such as audio and video so in this demonstration, we'll filter them out and just accept the text messages.","height":484.1875,"width":546.6875,"color":7},"id":"36f7996e-7bd9-426b-ba43-17be54049d06","name":"Sticky Note2","type":"n8n-nodes-base.stickyNote","position":[-580,140],"typeVersion":1},{"parameters":{"content":"### Want to handle all message types?\nCheck out my other WhatsApp template in my creator page! https://n8n.io/creators/jimleuk/","height":92,"width":338},"id":"bcd887aa-29b9-4fb8-ad35-9faed1475a5a","name":"Sticky Note3","type":"n8n-nodes-base.stickyNote","position":[-200,980],"typeVersion":1},{"parameters":{"content":"### 3a. Handle Unsupported Message Types\nFor non-text messages, we'll just reply with a simple message to inform the sender.","height":311.1875,"width":337.6875,"color":7},"id":"26717116-f13a-41ed-8fe9-ed8df2bbf7c8","name":"Sticky Note4","type":"n8n-nodes-base.stickyNote","position":[-200,660],"typeVersion":1},{"parameters":{"content":"## 4. Sales AI Agent Responds To Customers\n[Learn more about using AI Agents](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.agent/)\n\nn8n's AI agents are powerful nodes which make it incredibly easy to use state-of-the-art AI in your workflows. Not only do they have the ability to remember conversations per individual customer but also tap into resources such as our product catalogue vector store to pull factual information and data for every question.\n\nIn this demonstration, we use an AI agent which is directed to help the user navigate the product brochure. A Chat memory subnode is attached to identify and keep track of the customer session. A Vector store tool is added to allow the Agent to tap into the product catalogue knowledgebase we built earlier.","height":929.1875,"width":746.6875,"color":7},"id":"df4f7423-6d13-4786-8811-ebe04ecbf70c","name":"Sticky Note5","type":"n8n-nodes-base.stickyNote","position":[0,0],"typeVersion":1},{"parameters":{"content":"## 5. Repond to WhatsApp User\n[Learn more about the WhatsApp Node](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.whatsapp/)\n\nThe WhatsApp node is the go-to if you want to interact with WhatsApp users. With this node, you can send text, images, audio and video messages as well as use your WhatsApp message templates.\n\nHere, we'll keep it simple by replying with a text message which is the output of the AI agent.","height":484.1875,"width":495.4375,"color":7},"id":"c97b114e-a681-4a06-9444-1275063f32c6","name":"Sticky Note6","type":"n8n-nodes-base.stickyNote","position":[780,140],"typeVersion":1},{"parameters":{"content":"## Try It Out!\n\n### This n8n template builds a simple WhatsApp chabot acting as a Sales Agent. The Agent is backed by a product catalog vector store to better answer user's questions.\n\n* This template is in 2 parts: creating the product catalog vector store and building the WhatsApp AI chatbot.\n* A product brochure is imported via HTTP request node and its text contents extracted.\n* The text contents are then uploaded to the in-memory vector store to build a knowledgebase for the chatbot.\n* A WhatsApp trigger is used to capture messages from customers where non-text messages are filtered out.\n* The customer's message is sent to the AI Agent which queries the product catalogue using the vector store tool.\n* The Agent's response is sent back to the user via the WhatsApp node.\n\n### Need Help?\nJoin the [Discord](https://discord.com/invite/XPKeKXeB7d) or ask in the [Forum](https://community.n8n.io/)!","height":582.6283033962263,"width":401.25},"id":"545dba4b-708f-4fd1-bd1c-c924d229b25c","name":"Sticky Note7","type":"n8n-nodes-base.stickyNote","position":[-2360,80],"typeVersion":1},{"parameters":{"rules":{"values":[{"conditions":{"options":{"version":2,"leftValue":"","caseSensitive":true,"typeValidation":"strict"},"combinator":"and","conditions":[{"operator":{"type":"string","operation":"equals"},"leftValue":"={{ $json.messages[0].type }}","rightValue":"text"}]},"renameOutput":true,"outputKey":"Supported"},{"conditions":{"options":{"version":2,"leftValue":"","caseSensitive":true,"typeValidation":"strict"},"combinator":"and","conditions":[{"id":"89971d8c-a386-4e77-8f6c-f491a8e84cb6","operator":{"type":"string","operation":"notEquals"},"leftValue":"={{ $json.messages[0].type }}","rightValue":"text"}]},"renameOutput":true,"outputKey":"Not Supported"}]},"options":{}},"id":"f9836c60-3523-4dbd-9cf5-11d773315c7e","name":"Handle Message Types","type":"n8n-nodes-base.switch","position":[-280,420],"typeVersion":3.2},{"parameters":{"content":"### You only have to run this part once!\nRun this step to populate our product catalogue vector. Run again if you want to update the vector store with a new version.","height":114.53583720930231,"width":345.10906976744184,"color":5},"id":"f1a3d3d9-ef78-44b9-a825-a8448d8a47b1","name":"Sticky Note8","type":"n8n-nodes-base.stickyNote","position":[-1920,680],"typeVersion":1},{"parameters":{"content":"### Activate your workflow to use!\nTo start using the WhatsApp chatbot, you'll need to activate the workflow. If you are self-hosting ensure WhatsApp is able to connect to your server.","height":107.02804651162779,"width":364.6293255813954,"color":5},"id":"dce16bfe-6b66-49f1-bd9b-4de94785cdaf","name":"Sticky Note9","type":"n8n-nodes-base.stickyNote","position":[-580,660],"typeVersion":1},{"parameters":{"promptType":"define","text":"={{ $json.messages[0].text.body }}","options":{"systemMessage":"You are an assistant working for a company who sells Yamaha Powered Loudspeakers and helping the user navigate the product catalog for the year 2024. Your goal is not to facilitate a sale but if the user enquires, direct them to the appropriate website, url or contact information.\n\nDo your best to answer any questions factually. If you don't know the answer or unable to obtain the information from the datastore, then tell the user so."}},"id":"f63a468f-dc4c-4546-a2e4-d62269451d82","name":"AI Sales Agent","type":"@n8n/n8n-nodes-langchain.agent","position":[120,300],"typeVersion":1.6},{"parameters":{"mode":"insert","qdrantCollection":{"__rl":true,"value":"dataset","mode":"list","cachedResultName":"dataset"},"options":{}},"type":"@n8n/n8n-nodes-langchain.vectorStoreQdrant","typeVersion":1.1,"position":[-1260,460],"id":"72609e15-efea-4027-8297-f194c30b53c0","name":"Qdrant Vector Store","credentials":{"qdrantApi":{"id":"RzFNlgEENHFNmlmD","name":"QdrantApi account"}}},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.embeddingsOpenAi","typeVersion":1.2,"position":[-1380,700],"id":"7d9b9802-c6f1-479c-97c5-31c3095b2d8a","name":"Embeddings OpenAI2","credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{"jsonMode":"expressionData","jsonData":"={{ $('Extract from File').item.json.text }}","options":{}},"type":"@n8n/n8n-nodes-langchain.documentDefaultDataLoader","typeVersion":1,"position":[-1140,660],"id":"3c931d52-0768-4d64-99b8-f3711e08f86e","name":"Default Data Loader1"},{"parameters":{"chunkOverlap":10,"options":{}},"type":"@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter","typeVersion":1,"position":[-1080,820],"id":"eaaa6381-0cfb-4b57-bb2e-1a9f88244bd6","name":"Recursive Character Text Splitter1"}],"connections":{"AI Sales Agent":{"main":[[{"node":"Reply To User","type":"main","index":0}]]},"WhatsApp Trigger":{"main":[[{"node":"Handle Message Types","type":"main","index":0}]]},"Embeddings OpenAI":{"ai_embedding":[[{"node":"Product Catalogue","type":"ai_embedding","index":0}]]},"Extract from File":{"main":[[{"node":"Qdrant Vector Store","type":"main","index":0}]]},"OpenAI Chat Model":{"ai_languageModel":[[{"node":"AI Sales Agent","type":"ai_languageModel","index":0}]]},"Product Catalogue":{"ai_vectorStore":[[{"node":"Vector Store Tool","type":"ai_vectorStore","index":0}]]},"Vector Store Tool":{"ai_tool":[[{"node":"AI Sales Agent","type":"ai_tool","index":0}]]},"Embeddings OpenAI1":{"ai_embedding":[[{"node":"Create Product Catalogue","type":"ai_embedding","index":0}]]},"OpenAI Chat Model1":{"ai_languageModel":[[{"node":"Vector Store Tool","type":"ai_languageModel","index":0}]]},"Default Data Loader":{"ai_document":[[{"node":"Create Product Catalogue","type":"ai_document","index":0}]]},"Handle Message Types":{"main":[[{"node":"AI Sales Agent","type":"main","index":0}],[{"node":"Reply To User1","type":"main","index":0}]]},"Window Buffer Memory":{"ai_memory":[[{"node":"AI Sales Agent","type":"ai_memory","index":0}]]},"get Product Brochure":{"main":[[{"node":"Extract from File","type":"main","index":0}]]},"Recursive Character Text Splitter":{"ai_textSplitter":[[{"node":"Default Data Loader","type":"ai_textSplitter","index":0}]]},"When clicking ‘Test workflow’":{"main":[[{"node":"get Product Brochure","type":"main","index":0}]]},"Qdrant Vector Store":{"main":[[]]},"Embeddings OpenAI2":{"ai_embedding":[[{"node":"Qdrant Vector Store","type":"ai_embedding","index":0}]]},"Default Data Loader1":{"ai_document":[[{"node":"Qdrant Vector Store","type":"ai_document","index":0}]]},"Recursive Character Text Splitter1":{"ai_textSplitter":[[{"node":"Default Data Loader1","type":"ai_textSplitter","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":null,"pinData":{},"versionId":"e089134b-5ba3-4acf-818c-4e48bb44a572","triggerCount":0,"tags":[],"shared":[{"createdAt":"2025-05-27T07:21:04.515Z","updatedAt":"2025-05-27T07:21:04.515Z","role":"workflow:owner","workflowId":"O0vL8kX6qBGImQMW","projectId":"WbfPHUYYKS2tiNNo","project":{"createdAt":"2025-05-03T06:49:18.088Z","updatedAt":"2025-05-03T06:52:24.837Z","id":"WbfPHUYYKS2tiNNo","name":"charlie phan <scottyphan08@gmail.com>","type":"personal","icon":null,"description":null}}]},{"createdAt":"2025-05-28T02:06:17.298Z","updatedAt":"2025-05-28T02:45:23.878Z","id":"NG50TWhLAyICIUZV","name":"Backup github","active":false,"isArchived":false,"nodes":[{"parameters":{},"id":"9169a02d-b3d3-448f-96ff-c836f5d17102","name":"On clicking 'execute'","type":"n8n-nodes-base.manualTrigger","position":[480,80],"typeVersion":1},{"parameters":{"content":"## Subworkflow","height":731.7039821513649,"width":1910.7813046051347,"color":6},"id":"735577de-6733-42c5-9f72-e8612a7036da","name":"Sticky Note","type":"n8n-nodes-base.stickyNote","position":[0,460],"typeVersion":1},{"parameters":{},"id":"dceff3d3-81d5-4811-843f-6ebb3518fecc","name":"Execute Workflow Trigger","type":"n8n-nodes-base.executeWorkflowTrigger","position":[60,840],"typeVersion":1},{"parameters":{"filters":{},"requestOptions":{}},"id":"df5f3a28-51d1-431b-bf2e-a7085a2380b8","name":"n8n","type":"n8n-nodes-base.n8n","position":[880,180],"typeVersion":1,"credentials":{"n8nApi":{"id":"5v4jdLGmHTbhujXd","name":"n8n account"}}},{"parameters":{"assignments":{"assignments":[{"id":"8d513345-6484-431f-afb7-7cf045c90f4f","name":"Done","type":"boolean","value":true}]},"options":{}},"id":"34eec248-fe8f-411f-bdc4-e1cf19756bfd","name":"Return","type":"n8n-nodes-base.set","position":[1720,660],"typeVersion":3.3},{"parameters":{"url":"={{ $json.download_url }}","options":{}},"id":"060aa491-baf7-4149-a340-ad9cddcef874","name":"Get File","type":"n8n-nodes-base.httpRequest","position":[680,540],"typeVersion":4.2},{"parameters":{"conditions":{"options":{"leftValue":"","caseSensitive":true,"typeValidation":"strict"},"combinator":"and","conditions":[{"id":"45ce825e-9fa6-430c-8931-9aaf22c42585","operator":{"type":"string","operation":"empty","singleValue":true},"leftValue":"={{ $json.content }}","rightValue":""},{"id":"9619a55f-7fb1-4f24-b1a7-7aeb82365806","operator":{"type":"string","operation":"notExists","singleValue":true},"leftValue":"={{ $json.error }}","rightValue":""}]},"options":{}},"id":"bc23d18f-680d-48e1-956c-46deed4fac81","name":"If file too large","type":"n8n-nodes-base.if","position":[440,560],"typeVersion":2},{"parameters":{},"id":"52f9018b-524c-4faf-bb06-034581f0a18f","name":"Merge Items","type":"n8n-nodes-base.merge","position":[440,820],"typeVersion":2},{"parameters":{"jsCode":"const orderJsonKeys = (jsonObj) => {\n  const ordered = {};\n  Object.keys(jsonObj).sort().forEach(key => {\n    ordered[key] = jsonObj[key];\n  });\n  return ordered;\n}\n\n// Check if file returned with content\nif (Object.keys($input.all()[0].json).includes(\"content\")) {\n  // Decode base64 content and parse JSON\n  const origWorkflow = JSON.parse(Buffer.from($input.all()[0].json.content, 'base64').toString());\n  const n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n// No file returned / new workflow\n} else if (Object.keys($input.all()[0].json).includes(\"data\")) {\n  const origWorkflow = JSON.parse($input.all()[0].json.data);\n  const n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n\n} else {\n  // Order JSON object\n  const n8nWorkflow = $input.all()[1].json;\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n  \n  // Proper formatting\n  $input.all()[0].json.github_status = \"new\";\n  $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n}\n\n// Return items\nreturn $input.all();\n"},"id":"a346a360-fd3f-4789-9af5-8091204d7a7a","name":"isDiffOrNew","type":"n8n-nodes-base.code","position":[640,820],"typeVersion":1},{"parameters":{"dataType":"string","value1":"={{$json.github_status}}","rules":{"rules":[{"value2":"same"},{"value2":"different","output":1},{"value2":"new","output":2}]}},"id":"11dd6731-7b28-44a5-8dad-ef240466f690","name":"Check Status","type":"n8n-nodes-base.switch","position":[1040,820],"typeVersion":1},{"parameters":{},"id":"a696fa35-2a08-483b-b5c9-5b67019f64d4","name":"Same file - Do nothing","type":"n8n-nodes-base.noOp","position":[1260,660],"typeVersion":1},{"parameters":{},"id":"5b9ac2ca-0f2c-4707-9d8b-dd7e7f7cec20","name":"File is different","type":"n8n-nodes-base.noOp","position":[1260,820],"typeVersion":1},{"parameters":{},"id":"8c09c895-21ad-44e2-98b5-fe49e5ae487a","name":"File is new","type":"n8n-nodes-base.noOp","position":[1260,1020],"typeVersion":1},{"parameters":{"resource":"file","owner":{"__rl":true,"value":"https://github.com/vananhphan","mode":"url"},"repository":{"__rl":true,"value":"https://github.com/vananhphan/n8n_project","mode":"url"},"filePath":"=","fileContent":"={{$('isDiffOrNew').item.json[\"n8n_data_stringy\"]}}","commitMessage":"= ({{$json.github_status}})"},"id":"5c3802a3-82d1-4506-af43-3b534f4765f3","name":"Create new file","type":"n8n-nodes-base.github","position":[1480,1020],"typeVersion":1,"webhookId":"aaf8ab68-602f-4232-b555-8972ba093cc3","credentials":{"githubApi":{"id":"04ftghVaK1lFgfKg","name":"GitHub account"}}},{"parameters":{"resource":"file","operation":"edit","owner":{"__rl":true,"mode":"","value":"={{ $('Config').first().item.repo_owner }}"},"repository":{"__rl":true,"mode":"","value":"={{ $('Config').first().item.repo_name }}"},"filePath":"={{ $('Config').first().item.repo_path }}{{ $json.subPath }}{{$('Execute Workflow Trigger').first().json.id}}.json","fileContent":"={{$('isDiffOrNew').item.json[\"n8n_data_stringy\"]}}","commitMessage":"={{$('Execute Workflow Trigger').first().json.name}} ({{$json.github_status}})"},"id":"7775bc66-8a53-4b48-a78a-91818d9bb7eb","name":"Edit existing file","type":"n8n-nodes-base.github","position":[1480,820],"typeVersion":1,"webhookId":"e0a58e20-6913-40d9-af88-b16b27619003","credentials":{"githubApi":{"id":"04ftghVaK1lFgfKg","name":"GitHub account"}}},{"parameters":{"options":{}},"id":"08af59f3-1ee8-445d-9939-14cbcd7a3446","name":"Loop Over Items","type":"n8n-nodes-base.splitInBatches","position":[1080,180],"typeVersion":3},{"parameters":{"rule":{"interval":[{"triggerAtHour":1,"triggerAtMinute":33}]}},"id":"0388c895-edaf-4ab5-8671-8eea90bcc903","name":"Schedule Trigger","type":"n8n-nodes-base.scheduleTrigger","position":[480,280],"typeVersion":1.2},{"parameters":{"assignments":{"assignments":[{"id":"dae43d3b-56e5-4098-b602-862ebf5cd073","name":"subPath","type":"string","value":"={{ $('Execute Workflow Trigger').first().json.createdAt.split('-')[0] }}/{{ $('Execute Workflow Trigger').first().json.createdAt.split('-')[1] }}/"}]},"includeOtherFields":true,"options":{}},"id":"8e54a703-169e-4716-84e0-d0dbdf697911","name":"Create sub path","type":"n8n-nodes-base.set","position":[840,820],"typeVersion":3.3},{"parameters":{"content":"## Backup to GitHub \nThis workflow will backup all instance workflows to GitHub every 24 hours.\n\nThe files are saved into folders using `YYYY/MM/` for the directory path and `ID.json` for the filename.\n\nThe Repo Owner, Repo Name and Main folder are set using the **Variables** feature but can be replaced with the `Config` node in the subworkflow. \n\nThe workflow runs calls itself to help reduce memory usage, Once the workflow has completed it will send an optional notification to Slack.\n\n### Time to Run\nTested with 1423 workflows on `1.44.1` it took under 30 minutes for the first run and under 12 minutes once the initial run is complete.","height":417,"width":385,"color":4},"id":"9728b235-8bac-43de-9e72-1c81c63ac00a","name":"Sticky Note1","type":"n8n-nodes-base.stickyNote","position":[0,0],"typeVersion":1},{"parameters":{"content":"## Main workflow loop","height":416.1856906618075,"width":1272.6408145680155,"color":7},"id":"3b5612cf-6209-4116-9e00-5766337a74ae","name":"Sticky Note2","type":"n8n-nodes-base.stickyNote","position":[440,0],"typeVersion":1},{"parameters":{"select":"channel","channelId":{"__rl":true,"value":"#help-","mode":"name"},"text":"=:information_source:  Starting Workflow Backup [{{ $execution.id }}]","otherOptions":{"includeLinkToWorkflow":false}},"id":"f61c7d03-112b-4f0c-9177-2e73ed1f3abb","name":"Starting Message","type":"n8n-nodes-base.slack","position":[720,180],"webhookId":"c02eb407-5547-4aa0-9ebf-46dab67b63b6","typeVersion":2.2,"credentials":{"slackApi":{"id":"hg1dEnuagoxfn7Ir","name":"Slack account"}}},{"parameters":{"workflowId":"={{ $workflow.id }}","mode":"each","options":{}},"id":"5d508ae0-56a5-4726-b63e-6552dbecc7cf","name":"Execute Workflow","type":"n8n-nodes-base.executeWorkflow","position":[1300,200],"typeVersion":1,"onError":"continueErrorOutput"},{"parameters":{"select":"channel","channelId":{"__rl":true,"mode":"name","value":"#notifications"},"text":"=✅ Backup has completed - {{ $('n8n').all().length }} workflows have been processed.","otherOptions":{}},"id":"e2729c28-fe5d-474d-bdca-6acb3aacd61d","name":"Completed Notification","type":"n8n-nodes-base.slack","position":[1300,20],"webhookId":"a0c6e8c8-5d71-40fa-b02b-63a7ed5726c4","executeOnce":true,"typeVersion":2.2,"credentials":{"slackApi":{"id":"hg1dEnuagoxfn7Ir","name":"Slack account"}}},{"parameters":{"select":"channel","channelId":{"__rl":true,"value":"#help-","mode":"name"},"text":"=:x: Failed to backup {{ $('Loop Over Items').item.json.id }}","otherOptions":{"includeLinkToWorkflow":false}},"id":"5d515515-b9d8-4cb1-8677-eb8b1bd87dc7","name":"Failed Flows","type":"n8n-nodes-base.slack","position":[1500,220],"webhookId":"2a092edb-de12-490f-931b-34d70e7d7696","typeVersion":2.2,"credentials":{"slackApi":{"id":"hg1dEnuagoxfn7Ir","name":"Slack account"}}},{"parameters":{"resource":"file","operation":"get","owner":{"__rl":true,"mode":"","value":"={{ $('Config').first().item.repo_owner }}"},"repository":{"__rl":true,"mode":"","value":"={{ $('Config').first().item.repo_name }}"},"filePath":"={{ $('Config').first().item.repo_path }}{{ $('Execute Workflow Trigger').first().json.createdAt.split('-')[0] }}/{{ $('Execute Workflow Trigger').first().json.createdAt.split('-')[1] }}/{{$json.id}}.json","asBinaryProperty":false,"additionalParameters":{}},"id":"0f4866f4-7aac-4b7c-89d4-97b4148cda9b","name":"Get file data","type":"n8n-nodes-base.github","position":[240,560],"typeVersion":1,"alwaysOutputData":true,"webhookId":"19efaf21-a8bf-4ef3-8790-817e038e4657","credentials":{"githubApi":{"id":"04ftghVaK1lFgfKg","name":"GitHub account"}},"continueOnFail":true},{"parameters":{"assignments":{"assignments":[{"id":"8f6d1741-772f-462a-811f-4c334185e4f0","name":"repo_owner","type":"string","value":"={{ $vars.repo_owner }}"},{"id":"8cac215c-4fd7-422f-9fd2-6b2d1e5e0383","name":"repo_name","type":"string","value":"={{ $vars.repo_name }}"},{"id":"eee305e9-4164-462a-86bd-80f0d58a31ae","name":"repo_path","type":"string","value":"={{ $vars.repo_path }}"}]},"includeOtherFields":true,"options":{}},"id":"ab823a05-484a-484a-9113-ddff553e5a39","name":"Config","type":"n8n-nodes-base.set","position":[240,840],"typeVersion":3.4}],"connections":{"n8n":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Config":{"main":[[{"node":"Get file data","type":"main","index":0},{"node":"Merge Items","type":"main","index":1}]]},"Get File":{"main":[[{"node":"Merge Items","type":"main","index":0}]]},"File is new":{"main":[[{"node":"Create new file","type":"main","index":0}]]},"Merge Items":{"main":[[{"node":"isDiffOrNew","type":"main","index":0}]]},"isDiffOrNew":{"main":[[{"node":"Create sub path","type":"main","index":0}]]},"Check Status":{"main":[[{"node":"Same file - Do nothing","type":"main","index":0}],[{"node":"File is different","type":"main","index":0}],[{"node":"File is new","type":"main","index":0}]]},"Failed Flows":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Get file data":{"main":[[{"node":"If file too large","type":"main","index":0}]]},"Create new file":{"main":[[{"node":"Return","type":"main","index":0}]]},"Create sub path":{"main":[[{"node":"Check Status","type":"main","index":0}]]},"Loop Over Items":{"main":[[{"node":"Completed Notification","type":"main","index":0}],[{"node":"Execute Workflow","type":"main","index":0}]]},"Execute Workflow":{"main":[[{"node":"Loop Over Items","type":"main","index":0}],[{"node":"Failed Flows","type":"main","index":0}]]},"Schedule Trigger":{"main":[[{"node":"Starting Message","type":"main","index":0}]]},"Starting Message":{"main":[[{"node":"n8n","type":"main","index":0}]]},"File is different":{"main":[[{"node":"Edit existing file","type":"main","index":0}]]},"If file too large":{"main":[[{"node":"Get File","type":"main","index":0}],[{"node":"Merge Items","type":"main","index":0}]]},"Edit existing file":{"main":[[{"node":"Return","type":"main","index":0}]]},"On clicking 'execute'":{"main":[[{"node":"Starting Message","type":"main","index":0}]]},"Same file - Do nothing":{"main":[[{"node":"Return","type":"main","index":0}]]},"Execute Workflow Trigger":{"main":[[{"node":"Config","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"39c4f82e-5e65-426e-ab34-801d04db265f","triggerCount":0,"tags":[],"shared":[{"createdAt":"2025-05-28T02:06:17.298Z","updatedAt":"2025-05-28T02:06:17.298Z","role":"workflow:owner","workflowId":"NG50TWhLAyICIUZV","projectId":"WbfPHUYYKS2tiNNo","project":{"createdAt":"2025-05-03T06:49:18.088Z","updatedAt":"2025-05-03T06:52:24.837Z","id":"WbfPHUYYKS2tiNNo","name":"charlie phan <scottyphan08@gmail.com>","type":"personal","icon":null,"description":null}}]},{"createdAt":"2025-05-29T04:00:01.945Z","updatedAt":"2025-05-29T04:00:21.681Z","id":"cODI5ORem6sA38Qd","name":"Vector Qdrant vector _QA MSTEAM","active":false,"isArchived":false,"nodes":[{"parameters":{},"id":"a49060f7-f751-469c-8c16-3891d92b735c","name":"When clicking ‘Test workflow’","type":"n8n-nodes-base.manualTrigger","position":[60,-360],"typeVersion":1},{"parameters":{"resource":"file","operation":"get","owner":{"__rl":true,"value":"vananhphan","mode":"name"},"repository":{"__rl":true,"value":"n8n_project","mode":"list","cachedResultName":"n8n_project","cachedResultUrl":"https://github.com/vananhphan/n8n_project"},"filePath":"electronics_products_list.xlsx","additionalParameters":{}},"id":"087dd4eb-47be-4ded-9777-d2ba14ab7768","name":"GitHub","type":"n8n-nodes-base.github","position":[280,-360],"typeVersion":1,"webhookId":"3a598253-12e2-4623-984b-d36585b26b07","credentials":{"githubApi":{"id":"04ftghVaK1lFgfKg","name":"GitHub account"}}},{"parameters":{"operation":"xlsx","options":{}},"id":"a53cd1bc-8b5c-4f4c-9565-a14d1f65d6b3","name":"Extract from File","type":"n8n-nodes-base.extractFromFile","position":[440,-360],"typeVersion":1},{"parameters":{"model":"text-embedding-3-small","options":{}},"id":"e5206702-77d2-4357-90ab-c29e555655ed","name":"Embeddings OpenAI","type":"@n8n/n8n-nodes-langchain.embeddingsOpenAi","position":[1080,-180],"typeVersion":1,"credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{"jsonMode":"expressionData","jsonData":"={{ $json['Tên sản phẩm'] }}","options":{"metadata":{"metadataValues":[{"name":"MaSP","value":"={{ $json['Mã SP'] }}"},{"name":"Ten_SP","value":"={{ $json['Tên sản phẩm'] }}"},{"name":"Danhmuc","value":"={{ $json['Danh mục'] }}"},{"name":"Giabanngaythuong","value":"={{ $json['Giá bán ngày thường'] }}"},{"name":"Giabangiamgia","value":"={{ $json['Giá bán giảm giá'] }}"},{"name":"phantramgiamgia","value":"={{ $json['Phần trăm giảm giá'] }}"},{"name":"SLtonkho","value":"={{ $json['Số lượng tồn kho'] }}"},{"name":"Thongsokythuat","value":"={{ $json['Thông số kỹ thuật'] }}"},{"name":"Tinhnang","value":"={{ $json['Tính năng'] }}"}]}}},"id":"eb85835d-932b-4d9d-a7c1-0e42b544f19c","name":"Default Data Loader","type":"@n8n/n8n-nodes-langchain.documentDefaultDataLoader","position":[1280,-160],"typeVersion":1},{"parameters":{},"id":"5a4496aa-b9e2-47fb-9f99-a7d1027fed28","name":"Token Splitter","type":"@n8n/n8n-nodes-langchain.textSplitterTokenSplitter","position":[1340,180],"typeVersion":1},{"parameters":{"mode":"insert","qdrantCollection":{"__rl":true,"value":"dienmay","mode":"id"},"options":{}},"id":"6c6e6001-46f7-4c94-bbd1-4265361abafb","name":"Qdrant Vector Store","type":"@n8n/n8n-nodes-langchain.vectorStoreQdrant","position":[960,-460],"typeVersion":1,"credentials":{"qdrantApi":{"id":"RzFNlgEENHFNmlmD","name":"QdrantApi account"}}},{"parameters":{"options":{}},"id":"cd828b09-128a-4cec-9026-04c5227e5256","name":"When chat message received","type":"@n8n/n8n-nodes-langchain.chatTrigger","position":[-220,340],"webhookId":"771ff613-6ec1-4e56-9752-06e67c2e83af","typeVersion":1.1},{"parameters":{"options":{}},"id":"459d29b0-4397-4bdf-819b-a27ac24c1d19","name":"OpenAI Chat Model","type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","position":[140,480],"typeVersion":1,"credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{},"id":"79e19c62-3892-4f75-8254-8b21858703e5","name":"Execute Workflow Trigger","type":"n8n-nodes-base.executeWorkflowTrigger","position":[700,860],"typeVersion":1},{"parameters":{"mode":"combine","combineBy":"combineAll","options":{}},"id":"f00651fa-78df-4a72-acf9-4693178c7f04","name":"Merge","type":"n8n-nodes-base.merge","position":[1600,760],"typeVersion":3},{"parameters":{"fieldToSplitOut":"result","options":{}},"id":"5d81c7f2-0186-4a23-b868-00c310b39f17","name":"Split Out","type":"n8n-nodes-base.splitOut","position":[2320,740],"typeVersion":1},{"parameters":{"fieldToSplitOut":"result.points","options":{}},"id":"9db89157-085a-4a0b-9c4d-641992b1ddef","name":"Split Out1","type":"n8n-nodes-base.splitOut","position":[2200,520],"typeVersion":1},{"parameters":{"mode":"combine","fieldsToMatchString":"id","options":{}},"id":"6e3fba72-e4cd-4be0-a5d3-787a18da9b73","name":"Merge1","type":"n8n-nodes-base.merge","position":[2580,660],"typeVersion":3},{"parameters":{"aggregate":"aggregateAllItemData","destinationFieldName":"response","options":{}},"id":"1b5f64a7-c96b-4e17-aa19-247bf71da46c","name":"Aggregate","type":"n8n-nodes-base.aggregate","position":[3020,660],"typeVersion":1},{"parameters":{"promptType":"define","text":"={{ $json.body.chatInput }}","options":{"systemMessage":"=# System Prompt cho AI Agent Hỗ Trợ Khách Hàng Điện Máy\n\n## Vai Trò và Nhiệm Vụ\nBạn là một AI assistant chuyên nghiệp hỗ trợ khách hàng về các sản phẩm điện máy. Nhiệm vụ chính của bạn là:\n\n- Trả lời các câu hỏi về thông tin sản phẩm (thông số kỹ thuật, tính năng, giá cả)\n- Tư vấn về chương trình khuyến mãi và giảm giá\n- Kiểm tra tồn kho sản phẩm\n- Hỗ trợ so sánh sản phẩm\n\n## Nguyên Tắc Hoạt Động\n\n### 1. Nguồn Thông Tin Duy Nhất\n- **CHỈ** sử dụng thông tin từ Qdrant Vector Database\n- **KHÔNG** được sử dụng kiến thức bên ngoài hoặc tự suy đoán\n- Nếu không tìm thấy thông tin trong database, phải trả lời rõ ràng \"Tôi không có thông tin về [vấn đề khách hàng hỏi]\"\n\n### 2. Cấu Trúc Dữ Liệu Sản Phẩm\nMỗi sản phẩm trong database có các trường thông tin sau:\n```\n- MaSP: Mã sản phẩm\n- Ten_SP: Tên sản phẩm\n- Danhmuc: Danh mục sản phẩm\n- Giabanngaythuong: Giá bán thường\n- Giabangiamgia: Giá bán sau giảm giá\n- phantramgiamgia: Phần trăm giảm giá\n- SLtonkho: Số lượng tồn kho\n- Thongsokythuat: Thông số kỹ thuật\n- Tinhnang: Tính năng đặc biệt\n```\n\n## Hướng Dẫn Trả Lời\n\n### Khi Có Thông Tin Đầy Đủ:\n1. **Thông tin sản phẩm**: Cung cấp tên, mã SP, danh mục, thông số kỹ thuật, tính năng\n2. **Thông tin giá**: \n   - Hiển thị giá gốc và giá sau giảm (nếu có)\n   - Tính toán và hiển thị số tiền tiết kiệm\n   - Phần trăm giảm giá\n3. **Tình trạng tồn kho**: Thông báo số lượng còn lại\n4. **Format tiền tệ**: Sử dụng định dạng VNĐ (ví dụ: 52.990.000 VNĐ)\n\n### Khi Thiếu Thông Tin:\n- Trả lời trực tiếp: \"Tôi không có thông tin về [nội dung cụ thể]\"\n- Không suy đoán hoặc đưa ra thông tin không chắc chắn\n- Có thể đề xuất liên hệ bộ phận tư vấn nếu cần thiết\n\n### Ví Dụ Trả Lời Mẫu:\n\n**Khách hàng hỏi**: \"Cho tôi biết thông tin về laptop Dell XPS 15\"\n\n**AI trả lời**:\n```\n📱 **Dell XPS 15 9530** (Mã SP: LP-DELL-XPS15L520)\n🏷️ **Danh mục**: Laptop\n\n💰 **Giá bán**:\n- Giá gốc: 59.990.000 VNĐ\n- Giá khuyến mãi: 52.990.000 VNĐ\n- Tiết kiệm: 7.000.000 VNĐ (11.7%)\n\n🔧 **Thông số kỹ thuật**: Intel Core i9-13900H, 32GB RAM, 1TB SSD, RTX 4070\n\n✨ **Tính năng nổi bật**: InfinityEdge Display, Quad Speaker, Fingerprint\n\n📦 **Tồn kho**: 10 sản phẩm\n```\n\n## Ngôn Ngữ và Phong Cách\n- Sử dụng tiếng Việt tự nhiên, thân thiện\n- Tránh dùng thuật ngữ kỹ thuật phức tạp\n- Sử dụng emoji phù hợp để làm nổi bật thông tin\n- Luôn lịch sự và chuyên nghiệp\n\n## Xử Lý Các Tình Huống Đặc Biệt\n\n### Khách hàng hỏi so sánh sản phẩm:\n- Chỉ so sánh nếu có thông tin đầy đủ của cả hai sản phẩm\n- Nếu thiếu thông tin một trong hai, thông báo rõ ràng\n\n### Khách hàng hỏi về khuyến mãi:\n- Chỉ thông báo thông tin giảm giá có trong database\n- Không đưa ra thông tin về thời hạn khuyến mãi nếu không có\n\n### Khách hàng hỏi về giao hàng/bảo hành:\n- Trả lời \"Tôi không có thông tin về chính sách giao hàng/bảo hành. Vui lòng liên hệ bộ phận tư vấn để được hỗ trợ chi tiết.\"\n\n## Lưu Ý Quan Trọng\n- **TUYỆT ĐỐI KHÔNG** tự suy luận thông tin không có trong database\n- Luôn kiểm tra kỹ thông tin trước khi trả lời\n- Nếu nghi ngờ về tính chính xác, hãy báo \"không có thông tin\"\n- Ưu tiên trả lời ngắn gọn, súc tích nhưng đầy đủ thông tin cần thiết"}},"id":"0b06517c-3998-4408-bdea-91484f671196","name":"AI Agent","type":"@n8n/n8n-nodes-langchain.agent","position":[440,-20],"typeVersion":1.6},{"parameters":{"method":"POST","url":"https://api.openai.com/v1/embeddings","authentication":"predefinedCredentialType","nodeCredentialType":"openAiApi","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Authorization","value":"Bearer $OPENAI_API_KEY"}]},"sendBody":true,"bodyParameters":{"parameters":[{"name":"input","value":"={{ $json.query.positive_example }}"},{"name":"model","value":"text-embedding-3-small"}]},"options":{}},"id":"799fd25a-bff8-4944-b033-c8c181f28c22","name":"Embedding Recommendation Request with Open AI","type":"n8n-nodes-base.httpRequest","position":[960,720],"typeVersion":4.2,"credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{"method":"POST","url":"https://api.openai.com/v1/embeddings","authentication":"predefinedCredentialType","nodeCredentialType":"openAiApi","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Authorization","value":"Bearer $OPENAI_API_KEY"}]},"sendBody":true,"bodyParameters":{"parameters":[{"name":"input","value":"={{ $json.query.negative_example }}"},{"name":"model","value":"text-embedding-3-small"}]},"options":{}},"id":"280a2367-ef62-4604-80cb-2dc97e1d0d17","name":"Embedding Anti-Recommendation Request with Open AI","type":"n8n-nodes-base.httpRequest","position":[980,920],"typeVersion":4.2,"credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{"assignments":{"assignments":[{"id":"01a28c9d-aeb1-48bb-8a73-f8bddbd73460","name":"positive_example","type":"array","value":"={{ $json.data[0].embedding }}"}]},"options":{}},"id":"ec145556-2854-4953-acb6-52ce98f1ec70","name":"Extracting Embedding","type":"n8n-nodes-base.set","position":[1240,720],"typeVersion":3.4},{"parameters":{"assignments":{"assignments":[{"id":"01a28c9d-aeb1-48bb-8a73-f8bddbd73460","name":"negative_example","type":"array","value":"={{ $json.data[0].embedding }}"}]},"options":{}},"id":"bee038b9-1f31-482b-b053-d8cb2e37ddfd","name":"Extracting Embedding1","type":"n8n-nodes-base.set","position":[1240,920],"typeVersion":3.4},{"parameters":{"method":"POST","url":"http://host.docker.internal:6333/collections/imdb/points/query","authentication":"predefinedCredentialType","nodeCredentialType":"qdrantApi","sendBody":true,"specifyBody":"json","jsonBody":"={\n  \"query\": {\n    \"recommend\": {\n      \"positive\": [[{{ $json.positive_example }}]],\n      \"negative\": [[{{ $json.negative_example }}]],\n      \"strategy\": \"average_vector\"\n    }\n  },\n  \"limit\":3\n}","options":{}},"id":"90c6539a-d6b0-4132-90be-05af29e05528","name":"Calling Qdrant Recommendation API","type":"n8n-nodes-base.httpRequest","position":[1540,400],"typeVersion":4.2,"credentials":{"qdrantApi":{"id":"RzFNlgEENHFNmlmD","name":"QdrantApi account"}}},{"parameters":{"method":"POST","url":"http://host.docker.internal:6333/collections/imdb/points","authentication":"predefinedCredentialType","nodeCredentialType":"qdrantApi","sendBody":true,"specifyBody":"json","jsonBody":"={\n    \"ids\": [\"{{ $json.result.points[0].id }}\", \"{{ $json.result.points[1].id }}\", \"{{ $json.result.points[2].id }}\"],\n    \"with_payload\":true\n}","options":{}},"id":"46f73dc3-40ff-4097-b279-b252f5ab1229","name":"Retrieving Recommended Movies Meta Data","type":"n8n-nodes-base.httpRequest","position":[2120,720],"typeVersion":4.2,"credentials":{"qdrantApi":{"id":"RzFNlgEENHFNmlmD","name":"QdrantApi account"}}},{"parameters":{"assignments":{"assignments":[{"id":"b4b520a5-d0e2-4dcb-af9d-0b7748fd44d6","name":"movie_recommendation_score","type":"number","value":"={{ $json.score }}"},{"id":"c9f0982e-bd4e-484b-9eab-7e69e333f706","name":"movie_description","type":"string","value":"={{ $json.payload.content }}"},{"id":"7c7baf11-89cd-4695-9f37-13eca7e01163","name":"movie_name","type":"string","value":"={{ $json.payload.metadata.movie_name }}"},{"id":"1d1d269e-43c7-47b0-859b-268adf2dbc21","name":"movie_release_year","type":"string","value":"={{ $json.payload.metadata.release_year }}"}]},"options":{}},"id":"1c41eb8d-9e5c-45be-be2e-d02934aeaa38","name":"Selecting Fields Relevant for Agent","type":"n8n-nodes-base.set","position":[2800,660],"typeVersion":3.4},{"parameters":{"content":"Tool, calling Qdrant's recommendation API based on user's request, transformed by AI agent"},"id":"0108971a-f2aa-4311-8dfc-467d1c39dd2b","name":"Sticky Note","type":"n8n-nodes-base.stickyNote","position":[620,1040],"typeVersion":1},{"parameters":{"content":"Uploading data (movies and their descriptions) to Qdrant Vector Store\n"},"id":"e3b7ab81-e1cb-4bff-9fa4-f634205dc11d","name":"Sticky Note1","type":"n8n-nodes-base.stickyNote","position":[-260,-20],"typeVersion":1},{"parameters":{"maxItems":1000},"type":"n8n-nodes-base.limit","typeVersion":1,"position":[660,-360],"id":"18284d7b-af87-42b6-b963-17392dc68468","name":"Limit"},{"parameters":{"mode":"retrieve-as-tool","toolName":"Dienmay","toolDescription":"work with qdrant data","qdrantCollection":{"__rl":true,"value":"dienmay","mode":"list","cachedResultName":"dienmay"},"topK":10,"options":{}},"type":"@n8n/n8n-nodes-langchain.vectorStoreQdrant","typeVersion":1.1,"position":[780,380],"id":"3d3bbce5-16d5-4f34-9f9a-829d83069c4d","name":"Qdrant Vector Store1","credentials":{"qdrantApi":{"id":"RzFNlgEENHFNmlmD","name":"QdrantApi account"}}},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.embeddingsOpenAi","typeVersion":1.2,"position":[620,560],"id":"e479970c-e7c0-4292-b37d-7bebd030384b","name":"Embeddings OpenAI1","credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{"sessionIdType":"customKey","sessionKey":"={{ $json.body.chatInput }}","contextWindowLength":50},"type":"@n8n/n8n-nodes-langchain.memoryPostgresChat","typeVersion":1.3,"position":[440,380],"id":"acbaea6d-9e5c-4dc8-ae2d-f983198cf68d","name":"Postgres Chat Memory","credentials":{"postgres":{"id":"lPXyj3Ypf5YeZpp3","name":"Postgres account Local"}}},{"parameters":{"updates":["messages"],"options":{}},"type":"n8n-nodes-base.whatsAppTrigger","typeVersion":1,"position":[20,-140],"id":"0a0cce59-266c-42ae-adbd-020c923965e8","name":"WhatsApp Trigger","webhookId":"dc0c6a8b-2ef3-40a0-b766-a714873e7df3","credentials":{"whatsAppTriggerApi":{"id":"eAPBkIYpcDDhH3ia","name":"WhatsApp OAuth account"}}},{"parameters":{"operation":"send","recipientPhoneNumber":"+84903148128","textBody":"=","additionalFields":{}},"type":"n8n-nodes-base.whatsApp","typeVersion":1,"position":[840,-260],"id":"2ed09219-82b9-48be-bcfc-dc11f81f355f","name":"WhatsApp Business Cloud","webhookId":"e9f988ea-aaea-4172-abdf-462926c6f327","credentials":{"whatsAppApi":{"id":"SFrmXY3KZLL8DC0M","name":"WhatsApp account"}}},{"parameters":{"httpMethod":"POST","path":"msteamchat","responseMode":"responseNode","options":{}},"type":"n8n-nodes-base.webhook","typeVersion":2,"position":[120,160],"id":"f5f5b5f6-0ab1-4470-8615-1f9a02ed403a","name":"Webhook","webhookId":"2a2be36b-7d61-427d-8c29-ead94795e7be"},{"parameters":{"respondWith":"allIncomingItems","options":{}},"type":"n8n-nodes-base.respondToWebhook","typeVersion":1.2,"position":[900,0],"id":"4df687cf-ae37-467f-a693-77b0e5280c8f","name":"Respond to Webhook"}],"connections":{"Merge":{"main":[[{"node":"Calling Qdrant Recommendation API","type":"main","index":0}]]},"GitHub":{"main":[[{"node":"Extract from File","type":"main","index":0}]]},"Merge1":{"main":[[{"node":"Selecting Fields Relevant for Agent","type":"main","index":0}]]},"Split Out":{"main":[[{"node":"Merge1","type":"main","index":1}]]},"Split Out1":{"main":[[{"node":"Merge1","type":"main","index":0}]]},"Token Splitter":{"ai_textSplitter":[[{"node":"Default Data Loader","type":"ai_textSplitter","index":0}]]},"Embeddings OpenAI":{"ai_embedding":[[{"node":"Qdrant Vector Store","type":"ai_embedding","index":0}]]},"Extract from File":{"main":[[{"node":"Limit","type":"main","index":0}]]},"OpenAI Chat Model":{"ai_languageModel":[[{"node":"AI Agent","type":"ai_languageModel","index":0}]]},"Default Data Loader":{"ai_document":[[{"node":"Qdrant Vector Store","type":"ai_document","index":0}]]},"Extracting Embedding":{"main":[[{"node":"Merge","type":"main","index":0}]]},"Extracting Embedding1":{"main":[[{"node":"Merge","type":"main","index":1}]]},"Execute Workflow Trigger":{"main":[[{"node":"Embedding Recommendation Request with Open AI","type":"main","index":0},{"node":"Embedding Anti-Recommendation Request with Open AI","type":"main","index":0}]]},"When chat message received":{"main":[[]]},"Calling Qdrant Recommendation API":{"main":[[{"node":"Retrieving Recommended Movies Meta Data","type":"main","index":0},{"node":"Split Out1","type":"main","index":0}]]},"When clicking ‘Test workflow’":{"main":[[{"node":"GitHub","type":"main","index":0}]]},"Selecting Fields Relevant for Agent":{"main":[[{"node":"Aggregate","type":"main","index":0}]]},"Retrieving Recommended Movies Meta Data":{"main":[[{"node":"Split Out","type":"main","index":0}]]},"Embedding Recommendation Request with Open AI":{"main":[[{"node":"Extracting Embedding","type":"main","index":0}]]},"Embedding Anti-Recommendation Request with Open AI":{"main":[[{"node":"Extracting Embedding1","type":"main","index":0}]]},"Limit":{"main":[[{"node":"Qdrant Vector Store","type":"main","index":0}]]},"Qdrant Vector Store1":{"ai_tool":[[{"node":"AI Agent","type":"ai_tool","index":0}]]},"Embeddings OpenAI1":{"ai_embedding":[[{"node":"Qdrant Vector Store1","type":"ai_embedding","index":0}]]},"Postgres Chat Memory":{"ai_memory":[[{"node":"AI Agent","type":"ai_memory","index":0}]]},"WhatsApp Trigger":{"main":[[]]},"AI Agent":{"main":[[{"node":"Respond to Webhook","type":"main","index":0}]]},"Webhook":{"main":[[{"node":"AI Agent","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{"Execute Workflow Trigger":[{"json":{"query":{"negative_example":"horror bloody movie","positive_example":"romantic comedy"}}}],"Webhook":[{"json":{"headers":{"host":"pnjp-ai-demo.pnj.com.vn","x-real-ip":"10.10.22.83","x-forwarded-for":"10.10.22.83","x-forwarded-proto":"https","connection":"upgrade","content-length":"230","authorization":"Bearer ...","content-type":"application/json","accept":"*/*","accept-encoding":"gzip, deflate","user-agent":"Python/3.11 aiohttp/3.11.11"},"params":{},"query":{},"body":{"sessionId":"636dcc16-c4a9-4199-a517-a17d45aa6a69","chatInput":"cho tôi giá laptop dell","user":{"id":"121dbdad-9ff1-4f0f-a4f2-31d0f789248e","email":"scottyphan08@gmail.com","name":"charlie","role":"admin"}},"webhookUrl":"https://pnjp-ai-demo.pnj.com.vn/webhook/chatagent","executionMode":"production"}}]},"versionId":"9990d2e7-a7f4-4e74-856b-81d7c06603fe","triggerCount":3,"tags":[],"shared":[{"createdAt":"2025-05-29T04:00:01.945Z","updatedAt":"2025-05-29T04:00:01.945Z","role":"workflow:owner","workflowId":"cODI5ORem6sA38Qd","projectId":"WbfPHUYYKS2tiNNo","project":{"createdAt":"2025-05-03T06:49:18.088Z","updatedAt":"2025-05-03T06:52:24.837Z","id":"WbfPHUYYKS2tiNNo","name":"charlie phan <scottyphan08@gmail.com>","type":"personal","icon":null,"description":null}}]},{"createdAt":"2025-05-29T04:08:49.529Z","updatedAt":"2025-05-30T08:48:40.558Z","id":"cS6OaWXvbi4irePF","name":"29.05 - MS Team - Data query","active":false,"isArchived":false,"nodes":[{"parameters":{"model":"claude-3-5-haiku-20241022","options":{"temperature":0.3}},"type":"@n8n/n8n-nodes-langchain.lmChatAnthropic","typeVersion":1.2,"position":[-1140,560],"id":"e7392f43-6b77-48b8-9200-cf2fd04e84bf","name":"Anthropic Chat Model3","credentials":{"anthropicApi":{"id":"l60iuyLpILCOKtuI","name":"Anthropic account"}}},{"parameters":{"sessionIdType":"customKey","sessionKey":"={{ $('Microsoft Teams').item.json.id }}"},"type":"@n8n/n8n-nodes-langchain.memoryPostgresChat","typeVersion":1.3,"position":[-920,620],"id":"521e547c-2048-4d0b-b51c-5b6118c02f30","name":"Postgres Chat Memory2","credentials":{"postgres":{"id":"lPXyj3Ypf5YeZpp3","name":"Postgres account Local"}}},{"parameters":{"httpMethod":"POST","path":"final-test","options":{}},"type":"n8n-nodes-base.webhook","typeVersion":2,"position":[-1700,240],"id":"3f1bfd44-1b61-4aa0-abb6-df860a632af2","name":"Webhook","webhookId":"a91c8029-e289-4488-981f-f4cd6c31709d"},{"parameters":{"resource":"chatMessage","operation":"get","chatId":{"__rl":true,"value":"19:1b016c542cc54f3483ec3c954ad1a5b6@thread.v2","mode":"list","cachedResultName":"PNJP-CHATBOT (group)","cachedResultUrl":"https://teams.microsoft.com/l/chat/19%3A1b016c542cc54f3483ec3c954ad1a5b6%40thread.v2/0?tenantId=6ea838f0-f529-455e-9738-147060990b55"},"messageId":"={{ $json.body.message_ID }}"},"type":"n8n-nodes-base.microsoftTeams","typeVersion":2,"position":[-1480,220],"id":"1ecce45a-b9f5-4823-b0aa-0f8342e454ea","name":"Microsoft Teams","webhookId":"6d3848e5-2a6c-4f7c-864f-2e3237a0d430","credentials":{"microsoftTeamsOAuth2Api":{"id":"14g7k9M4SZPkSI3G","name":"Microsoft Teams account"}}},{"parameters":{"resource":"channelMessage","teamId":{"__rl":true,"value":"b3834b84-b756-4d5e-bcaa-37ab9cd8a53c","mode":"list","cachedResultName":"Client Pipeline"},"channelId":{"__rl":true,"value":"19:75faac0e86ba4173bbbb9160a400ea79@thread.tacv2","mode":"list","cachedResultName":"Data Analysis","cachedResultUrl":"https://teams.microsoft.com/l/channel/19%3A75faac0e86ba4173bbbb9160a400ea79%40thread.tacv2/Data%20Analysis?groupId=b3834b84-b756-4d5e-bcaa-37ab9cd8a53c&tenantId=6c6d2fff-b2ef-46a9-94b9-5eb5ec0a7a3c&allowXTenantAccess=True&ngc=True"},"message":"={{ $json['Final output'] }}","options":{"includeLinkToWorkflow":false,"makeReply":"={{ $('Microsoft Teams').item.json.id }}"}},"type":"n8n-nodes-base.microsoftTeams","typeVersion":2,"position":[0,0],"id":"17008d6d-2ab8-4333-a487-c13c2be297b9","name":"Microsoft Teams1","webhookId":"e4eaff51-f890-4076-a947-a35c1087e312","credentials":{"microsoftTeamsOAuth2Api":{"id":"14g7k9M4SZPkSI3G","name":"Microsoft Teams account"}}},{"parameters":{"promptType":"define","text":"={{ $json.body.content }}","options":{"systemMessage":"=# System Prompt cho AI Agent Hỗ Trợ Khách Hàng Điện Máy\n\n## Vai Trò và Nhiệm Vụ\nBạn là một AI assistant chuyên nghiệp hỗ trợ khách hàng về các sản phẩm điện máy. Nhiệm vụ chính của bạn là:\n\n- Trả lời các câu hỏi về thông tin sản phẩm (thông số kỹ thuật, tính năng, giá cả)\n- Tư vấn về chương trình khuyến mãi và giảm giá\n- Kiểm tra tồn kho sản phẩm\n- Hỗ trợ so sánh sản phẩm\n\n## Nguyên Tắc Hoạt Động\n\n### 1. Nguồn Thông Tin Duy Nhất\n- **CHỈ** sử dụng thông tin từ Qdrant Vector Database\n- **KHÔNG** được sử dụng kiến thức bên ngoài hoặc tự suy đoán\n- Nếu không tìm thấy thông tin trong database, phải trả lời rõ ràng \"Tôi không có thông tin về [vấn đề khách hàng hỏi]\"\n\n### 2. Cấu Trúc Dữ Liệu Sản Phẩm\nMỗi sản phẩm trong database có các trường thông tin sau:\n```\n- MaSP: Mã sản phẩm\n- Ten_SP: Tên sản phẩm\n- Danhmuc: Danh mục sản phẩm\n- Giabanngaythuong: Giá bán thường\n- Giabangiamgia: Giá bán sau giảm giá\n- phantramgiamgia: Phần trăm giảm giá\n- SLtonkho: Số lượng tồn kho\n- Thongsokythuat: Thông số kỹ thuật\n- Tinhnang: Tính năng đặc biệt\n```\n\n## Hướng Dẫn Trả Lời\n\n### Khi Có Thông Tin Đầy Đủ:\n1. **Thông tin sản phẩm**: Cung cấp tên, mã SP, danh mục, thông số kỹ thuật, tính năng\n2. **Thông tin giá**: \n   - Hiển thị giá gốc và giá sau giảm (nếu có)\n   - Tính toán và hiển thị số tiền tiết kiệm\n   - Phần trăm giảm giá\n3. **Tình trạng tồn kho**: Thông báo số lượng còn lại\n4. **Format tiền tệ**: Sử dụng định dạng VNĐ (ví dụ: 52.990.000 VNĐ)\n\n### Khi Thiếu Thông Tin:\n- Trả lời trực tiếp: \"Tôi không có thông tin về [nội dung cụ thể]\"\n- Không suy đoán hoặc đưa ra thông tin không chắc chắn\n- Có thể đề xuất liên hệ bộ phận tư vấn nếu cần thiết\n\n### Ví Dụ Trả Lời Mẫu:\n\n**Khách hàng hỏi**: \"Cho tôi biết thông tin về laptop Dell XPS 15\"\n\n**AI trả lời**:\n```\n📱 **Dell XPS 15 9530** (Mã SP: LP-DELL-XPS15L520)\n🏷️ **Danh mục**: Laptop\n\n💰 **Giá bán**:\n- Giá gốc: 59.990.000 VNĐ\n- Giá khuyến mãi: 52.990.000 VNĐ\n- Tiết kiệm: 7.000.000 VNĐ (11.7%)\n\n🔧 **Thông số kỹ thuật**: Intel Core i9-13900H, 32GB RAM, 1TB SSD, RTX 4070\n\n✨ **Tính năng nổi bật**: InfinityEdge Display, Quad Speaker, Fingerprint\n\n📦 **Tồn kho**: 10 sản phẩm\n```\n\n## Ngôn Ngữ và Phong Cách\n- Sử dụng tiếng Việt tự nhiên, thân thiện\n- Tránh dùng thuật ngữ kỹ thuật phức tạp\n- Sử dụng emoji phù hợp để làm nổi bật thông tin\n- Luôn lịch sự và chuyên nghiệp\n\n## Xử Lý Các Tình Huống Đặc Biệt\n\n### Khách hàng hỏi so sánh sản phẩm:\n- Chỉ so sánh nếu có thông tin đầy đủ của cả hai sản phẩm\n- Nếu thiếu thông tin một trong hai, thông báo rõ ràng\n\n### Khách hàng hỏi về khuyến mãi:\n- Chỉ thông báo thông tin giảm giá có trong database\n- Không đưa ra thông tin về thời hạn khuyến mãi nếu không có\n\n### Khách hàng hỏi về giao hàng/bảo hành:\n- Trả lời \"Tôi không có thông tin về chính sách giao hàng/bảo hành. Vui lòng liên hệ bộ phận tư vấn để được hỗ trợ chi tiết.\"\n\n## Lưu Ý Quan Trọng\n- **TUYỆT ĐỐI KHÔNG** tự suy luận thông tin không có trong database\n- Luôn kiểm tra kỹ thông tin trước khi trả lời\n- Nếu nghi ngờ về tính chính xác, hãy báo \"không có thông tin\"\n- Ưu tiên trả lời ngắn gọn, súc tích nhưng đầy đủ thông tin cần thiết","maxIterations":10}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":1.7,"position":[-760,220],"id":"d3439f62-4e0b-47a8-9997-566ac8bdd38e","name":"Data Assistant","executeOnce":true},{"parameters":{"sessionIdType":"customKey","sessionKey":"={{ $('Microsoft Teams').item.json.id }}","contextWindowLength":0},"type":"@n8n/n8n-nodes-langchain.memoryPostgresChat","typeVersion":1.3,"position":[40,980],"id":"4017c416-885b-49eb-8958-00376046ae07","name":"Postgres Chat Memory","credentials":{"postgres":{"id":"lPXyj3Ypf5YeZpp3","name":"Postgres account Local"}}},{"parameters":{"conditions":{"options":{"caseSensitive":false,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"e9f58adc-015b-4e2b-8538-26491b64c22c","leftValue":"={{ $json.from.application.applicationIdentityType }}","rightValue":"bot","operator":{"type":"string","operation":"notEquals"}}],"combinator":"and"},"options":{"ignoreCase":true}},"type":"n8n-nodes-base.filter","typeVersion":2.2,"position":[-1000,220],"id":"5cb0783a-be2b-4b25-bcf3-cd3cb7bd1cfb","name":"Filter"},{"parameters":{"assignments":{"assignments":[{"id":"a868c24c-7f55-472c-b9e8-50fbd441bb42","name":"Final output","value":"={{ \"<p>\" + $('Re-word message').first().json.output.replace(/\\\\n/g, \"<br>\") + \"</p>\" }}\n\n\n","type":"string"},{"id":"a7b419ad-75bd-46dd-860f-46e1d90a3688","name":"","value":"","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-240,40],"id":"f6db60a6-c1e1-453d-99b4-e70f9b917e05","name":"Set"},{"parameters":{"method":"POST","url":"https://prod-49.southeastasia.logic.azure.com:443/workflows/fec25d24cad044d7ae4c718d428f156a/triggers/manual/paths/invoke?api-version=2016-06-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=OuQFGbDKvY64R1opfsmAJTMLHyc6dEgirWfCnXQaTGg","sendBody":true,"bodyParameters":{"parameters":[{"name":"Message","value":"={{ $json['Final output'] }}"}]},"options":{"response":{}}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[-480,20],"id":"9164154b-b255-4873-bcba-8abb9fd2c81f","name":"Send response in Teams"},{"parameters":{"agent":"conversationalAgent","promptType":"define","text":"={{ $('Microsoft Teams').item.json.body.content }}","options":{"systemMessage":"=#Your role: You are an expert commmunications consultant. \n\n#Context:\n\nThe data assistant has summarised their findings, which can be found here: {{ $json.output }}\n\n#Task: Review the wording from the data assistant.\n\nThen tweak it where necessary so it sounds slick, smooth and professional. Remove any information that refers to how the answer was calculated.\n\nPlease add paragraph spacing too.\n\nThen present the answer to the customer. Feel free to reference the customer's name in your response. The customer's full name is:  {{ $('Microsoft Teams').item.json.from.user.displayName }}"}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":1.7,"position":[-40,600],"id":"d7d851b6-d957-4d9f-9224-1dcb39c12762","name":"Re-word message"},{"parameters":{"model":{"__rl":true,"value":"gpt-4-turbo","mode":"list","cachedResultName":"gpt-4-turbo"},"options":{"responseFormat":"text","temperature":0.5}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[-80,780],"id":"6bbecadf-f003-4c3c-a9ef-2bddab3377e5","name":"OpenAI Chat Model","credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{"name":"SQL_tool_2","description":"Call the SQL Agent whenever a user requests structured data retrieval, filtering, or analysis from the database. The SQL Agent is responsible for executing queries and returning relevant results.\n\nUse Cases for Calling the SQL Agent:\nThe user asks for specific data from the database (e.g., \"Show me all journeys from last week\").\nThe user requests aggregated insights (e.g., \"Get total fuel usage for all regions\").\nThe user wants comparisons or rankings (e.g., \"Which drivers have the highest average speed?\").\nThe user references specific database fields or metrics (e.g., \"Retrieve journeys where capacity at departure was above 80%\").\nThe user requests historical trends (e.g., \"Show me how fuel consumption has changed over the last three months\").","workflowId":{"__rl":true,"value":"0Q9mChueZgrd8fDP","mode":"list","cachedResultName":"29.05 SQL query"},"workflowInputs":{"mappingMode":"defineBelow","value":{"Session_ID":"={{ $('Microsoft Teams').item.json.id }}","Query":"={{ $('Microsoft Teams').item.json.body.content }}"},"matchingColumns":["query"],"schema":[{"id":"Query","displayName":"Query","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string","removed":false},{"id":"Session_ID","displayName":"Session_ID","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"number","removed":false}],"attemptToConvertTypes":false,"convertFieldsToString":false}},"type":"@n8n/n8n-nodes-langchain.toolWorkflow","typeVersion":2,"position":[-1500,760],"id":"72796c3a-0b40-4bdf-99dd-58fa7444eab2","name":"SQL Query"},{"parameters":{"mode":"retrieve-as-tool","toolName":"dienmay","toolDescription":"dienmay qdrant","qdrantCollection":{"__rl":true,"value":"dienmay","mode":"list","cachedResultName":"dienmay"},"topK":10,"options":{}},"type":"@n8n/n8n-nodes-langchain.vectorStoreQdrant","typeVersion":1.1,"position":[-580,540],"id":"89654a10-b2a7-4064-b5fe-3008f3cee35f","name":"Qdrant Vector Store","credentials":{"qdrantApi":{"id":"RzFNlgEENHFNmlmD","name":"QdrantApi account"}}},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.embeddingsOpenAi","typeVersion":1.2,"position":[-540,720],"id":"a15f5b88-dd28-4fba-ab42-8f667a862b03","name":"Embeddings OpenAI","credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{"resource":"chatMessage","chatId":{"__rl":true,"value":"19:1b016c542cc54f3483ec3c954ad1a5b6@thread.v2","mode":"list","cachedResultName":"PNJP-CHATBOT (group)","cachedResultUrl":"https://teams.microsoft.com/l/chat/19%3A1b016c542cc54f3483ec3c954ad1a5b6%40thread.v2/0?tenantId=6ea838f0-f529-455e-9738-147060990b55"},"contentType":"html","message":"={{ $json.html }}","options":{"includeLinkToWorkflow":false}},"type":"n8n-nodes-base.microsoftTeams","typeVersion":2,"position":[-80,300],"id":"3ee1a50a-3ce8-4b93-80a7-03cbbb95bb2a","name":"Microsoft Teams2","webhookId":"62d28ca2-291f-4bfb-8021-ba5cf29c75a8","credentials":{"microsoftTeamsOAuth2Api":{"id":"14g7k9M4SZPkSI3G","name":"Microsoft Teams account"}}},{"parameters":{"mode":"markdownToHtml","markdown":"={{ $json.output }}","destinationKey":"html","options":{}},"type":"n8n-nodes-base.markdown","typeVersion":1,"position":[-320,240],"id":"69c9eb4b-3bd6-487c-8ef3-578d68cac2a5","name":"Markdown"},{"parameters":{"rules":{"values":[{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"leftValue":"={{ $json.body.content }}","rightValue":"@chat","operator":{"type":"string","operation":"contains"},"id":"a0d82592-6656-4d01-9a23-52aa47a9aabd"}],"combinator":"and"}},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"bfc26640-dd9e-4b46-89ac-ab0417c378c7","leftValue":"={{ $json.body.content }}","rightValue":"@chat","operator":{"type":"string","operation":"notContains"}}],"combinator":"and"}}]},"options":{}},"type":"n8n-nodes-base.switch","typeVersion":3.2,"position":[-1260,240],"id":"279130b8-ed0b-40d1-9f5f-1e70998e5cbb","name":"Switch"},{"parameters":{"respondWith":"json","responseBody":"{\n  \"output\": \"Xin chào quí khách thân yêu.Nếu bạn muốn hỏi về sản phẩm điện máy thì gọi @chat nhé\"\n}","options":{}},"type":"n8n-nodes-base.respondToWebhook","typeVersion":1.2,"position":[-1640,480],"id":"c7afa84a-6493-47c4-8c98-04073bd4c0d6","name":"Respond to Webhook"}],"connections":{"Anthropic Chat Model3":{"ai_languageModel":[[{"node":"Data Assistant","type":"ai_languageModel","index":0}]]},"Postgres Chat Memory2":{"ai_memory":[[{"node":"Data Assistant","type":"ai_memory","index":0}]]},"Webhook":{"main":[[{"node":"Microsoft Teams","type":"main","index":0}]]},"Microsoft Teams":{"main":[[{"node":"Switch","type":"main","index":0}]]},"Data Assistant":{"main":[[{"node":"Markdown","type":"main","index":0}]]},"Postgres Chat Memory":{"ai_memory":[[{"node":"Re-word message","type":"ai_memory","index":0}]]},"Filter":{"main":[[{"node":"Data Assistant","type":"main","index":0}]]},"Set":{"main":[[]]},"Re-word message":{"main":[[]]},"OpenAI Chat Model":{"ai_languageModel":[[{"node":"Re-word message","type":"ai_languageModel","index":0}]]},"SQL Query":{"ai_tool":[[]]},"Qdrant Vector Store":{"ai_tool":[[{"node":"Data Assistant","type":"ai_tool","index":0}]]},"Embeddings OpenAI":{"ai_embedding":[[{"node":"Qdrant Vector Store","type":"ai_embedding","index":0}]]},"Send response in Teams":{"main":[[]]},"Markdown":{"main":[[{"node":"Microsoft Teams2","type":"main","index":0}]]},"Switch":{"main":[[{"node":"Filter","type":"main","index":0}],[]]},"Respond to Webhook":{"main":[[]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"b47ae753-68ac-4c43-b2a0-b25a93bac23d","triggerCount":1,"tags":[{"createdAt":"2025-05-29T04:26:35.168Z","updatedAt":"2025-05-29T04:26:35.168Z","id":"Tgv30Ud11hlIErdt","name":"msteam"}],"shared":[{"createdAt":"2025-05-29T04:08:49.529Z","updatedAt":"2025-05-29T04:08:49.529Z","role":"workflow:owner","workflowId":"cS6OaWXvbi4irePF","projectId":"WbfPHUYYKS2tiNNo","project":{"createdAt":"2025-05-03T06:49:18.088Z","updatedAt":"2025-05-03T06:52:24.837Z","id":"WbfPHUYYKS2tiNNo","name":"charlie phan <scottyphan08@gmail.com>","type":"personal","icon":null,"description":null}}]},{"createdAt":"2025-05-29T04:25:57.551Z","updatedAt":"2025-05-29T04:26:39.213Z","id":"0Q9mChueZgrd8fDP","name":"29.05 SQL query","active":false,"isArchived":false,"nodes":[{"parameters":{"model":"claude-3-5-sonnet-20241022","options":{"maxTokensToSample":4096,"temperature":0.2,"topK":-1,"topP":1}},"type":"@n8n/n8n-nodes-langchain.lmChatAnthropic","typeVersion":1.2,"position":[220,160],"id":"a14e85dd-44d9-46f8-b4a9-244b0da943e6","name":"Anthropic Chat Model1","credentials":{"anthropicApi":{"id":"l60iuyLpILCOKtuI","name":"Anthropic account"}}},{"parameters":{"sessionIdType":"customKey","sessionKey":"={{ $json.Session_ID }}"},"type":"@n8n/n8n-nodes-langchain.memoryPostgresChat","typeVersion":1.3,"position":[380,160],"id":"16cf4485-eae3-4dae-b727-9061d8b83a0a","name":"Postgres Chat Memory1","credentials":{"postgres":{"id":"lPXyj3Ypf5YeZpp3","name":"Postgres account Local"}}},{"parameters":{"workflowInputs":{"values":[{"name":"Query"},{"name":"Session_ID","type":"number"}]}},"type":"n8n-nodes-base.executeWorkflowTrigger","typeVersion":1.1,"position":[0,0],"id":"4e76f4b6-2c10-491b-bc5f-2d0a3050b563","name":"When Executed by Another Workflow"},{"parameters":{"agent":"sqlAgent","promptType":"define","text":"={{ $json.Query }}","options":{"ignoredTables":"truck_telemetry, truckjourneydata","prefixPrompt":"=You are an agent designed to interact with an SQL database.\nGiven an input question, create a syntactically correct {dialect} query to run, then look at the results of the query and return the answer.\nUnless the user specifies a specific number of examples they wish to obtain, always limit your query to at most {top_k} results using the LIMIT clause.\nYou can order the results by a relevant column to return the most interesting examples in the database.\nNever query for all the columns from a specific table, only ask for a the few relevant columns given the question.\nYou have access to tools for interacting with the database.\nOnly use the below tools. Only use the information returned by the below tools to construct your final answer.\nYou MUST double check your query before executing it. If you get an error while executing a query, rewrite the query and try again.\nDouble check the data period you have access to. If you mention any other date, you are mistaken. Confirm your understanding.\n\nDO NOT make any DML statements (INSERT, UPDATE, DELETE, DROP etc.) to the database.\n\nOn some occasions, you will be given the SQL query directly, in which case you can just run straight away.\n\nIf the question does not seem related to the database, just return \"I don't know\" as the answer.\n\nToday's Date = {{ $now.format('dd-MM-yyyy') }}"}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":1.7,"position":[220,0],"id":"3a541d11-03cf-477d-a5d5-d3a59d122e15","name":"SQL agent","retryOnFail":false,"credentials":{"postgres":{"id":"lPXyj3Ypf5YeZpp3","name":"Postgres account Local"}}}],"connections":{"Anthropic Chat Model1":{"ai_languageModel":[[{"node":"SQL agent","type":"ai_languageModel","index":0}]]},"Postgres Chat Memory1":{"ai_memory":[[{"node":"SQL agent","type":"ai_memory","index":0}]]},"When Executed by Another Workflow":{"main":[[{"node":"SQL agent","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"09c76614-2e64-49b8-b358-fc1488edc206","triggerCount":0,"tags":[{"createdAt":"2025-05-29T04:26:35.168Z","updatedAt":"2025-05-29T04:26:35.168Z","id":"Tgv30Ud11hlIErdt","name":"msteam"}],"shared":[{"createdAt":"2025-05-29T04:25:57.551Z","updatedAt":"2025-05-29T04:25:57.551Z","role":"workflow:owner","workflowId":"0Q9mChueZgrd8fDP","projectId":"WbfPHUYYKS2tiNNo","project":{"createdAt":"2025-05-03T06:49:18.088Z","updatedAt":"2025-05-03T06:52:24.837Z","id":"WbfPHUYYKS2tiNNo","name":"charlie phan <scottyphan08@gmail.com>","type":"personal","icon":null,"description":null}}]},{"createdAt":"2025-05-30T04:12:47.973Z","updatedAt":"2025-05-30T04:17:54.394Z","id":"AFDChajbJBh7VWlp","name":"Facebook","active":false,"isArchived":false,"nodes":[{"parameters":{"httpMethod":"POST","path":"zalo-receiver","options":{}},"type":"n8n-nodes-base.webhook","typeVersion":2,"position":[260,-80],"id":"632b5bef-93e8-44f4-b307-eb7833ff5a41","name":"Webhook","webhookId":"a1d60fc9-45f0-4345-b231-06fcf729f2d1"},{"parameters":{"documentId":{"__rl":true,"value":"1Gy6cDLVYlCXedKxKauUVbeROVfvo8IoISftFtD9-_vs","mode":"list","cachedResultName":"Thong tin cskh","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1Gy6cDLVYlCXedKxKauUVbeROVfvo8IoISftFtD9-_vs/edit?usp=drivesdk"},"sheetName":{"__rl":true,"value":423843858,"mode":"list","cachedResultName":"Products","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1Gy6cDLVYlCXedKxKauUVbeROVfvo8IoISftFtD9-_vs/edit#gid=423843858"},"options":{}},"type":"n8n-nodes-base.googleSheetsTool","typeVersion":4.5,"position":[780,220],"id":"5e8f28a2-d981-4b5e-aedb-515b743df054","name":"Products","credentials":{"googleSheetsOAuth2Api":{"id":"bdeAZgAgEmqpgnr1","name":"Google Sheets account"}}},{"parameters":{"documentId":{"__rl":true,"value":"1vyGkfntgAA7p2YT3u60VN15XEGX-0OsKTMy5d6-rfnU","mode":"list","cachedResultName":"thong tin cskh","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1vyGkfntgAA7p2YT3u60VN15XEGX-0OsKTMy5d6-rfnU/edit?usp=drivesdk"},"sheetName":{"__rl":true,"value":"gid=0","mode":"list","cachedResultName":"FAQs","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1vyGkfntgAA7p2YT3u60VN15XEGX-0OsKTMy5d6-rfnU/edit#gid=0"},"options":{}},"type":"n8n-nodes-base.googleSheetsTool","typeVersion":4.5,"position":[900,240],"id":"f5108198-b474-4180-aad7-3f84924a0777","name":"Answers","credentials":{"googleSheetsOAuth2Api":{"id":"bdeAZgAgEmqpgnr1","name":"Google Sheets account"}}},{"parameters":{},"type":"n8n-nodes-base.wait","typeVersion":1.1,"position":[1060,-80],"id":"53d756cf-8f3f-460c-adf5-64b7fe9079a7","name":"Wait","webhookId":"70fddf48-001b-4aae-93dd-dd3236a73498"},{"parameters":{"multipleMethods":true,"httpMethod":["GET"],"path":"fb-hook","responseMode":"responseNode","options":{}},"type":"n8n-nodes-base.webhook","typeVersion":2,"position":[2140,180],"id":"c0799a16-1ec1-4458-89f2-cc8bf1b78537","name":"Webhook1","webhookId":"e3c85337-fa05-4d7a-9115-717b977a984d","notesInFlow":false},{"parameters":{"assignments":{"assignments":[{"id":"6d4efd28-8b37-4e01-8cca-9aee00e10cf0","name":"query['hub.challenge']","value":"={{ $json.query['hub.challenge'] }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[2400,180],"id":"7a93f45d-e9b6-42cd-8904-8fa6b8366b5c","name":"Edit Fields"},{"parameters":{"respondWith":"text","responseBody":"={{ $json.query['hub.challenge'] }}","options":{}},"type":"n8n-nodes-base.respondToWebhook","typeVersion":1.1,"position":[2720,180],"id":"2a81fd07-7f31-40c9-82fc-cfbf885b90fd","name":"Respond to Webhook"},{"parameters":{"assignments":{"assignments":[{"id":"4a8369f0-0ac2-4384-859a-c172add8cafe","name":"ID","value":"={{ $json.body.entry[0].messaging[0].sender.id }}","type":"string"},{"id":"58c9a1e3-9f47-458d-a6aa-cbc44a4d990b","name":"messaging","value":"={{ $json.body.entry[0].messaging[0].message.text }}","type":"string"},{"id":"fae0a72c-ed9d-437e-86b2-ccb2612ddfa5","name":"idpage","value":"={{ $json.body.entry[0].id }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[880,860],"id":"dfe947ad-4ebd-4e81-844d-654ca187bcf1","name":"Edit Fields1"},{"parameters":{"method":"POST","url":"=https://graph.facebook.com/v22.0/{{ $('Wait1').item.json.idpage }}/messages","authentication":"genericCredentialType","genericAuthType":"httpHeaderAuth","sendHeaders":true,"specifyHeaders":"json","jsonHeaders":"{\n  \"Content-Type\": \"application/json\"\n}","sendBody":true,"specifyBody":"json","jsonBody":"={\n  \"recipient\": {\n    \"id\": \"{{ $('Wait1').item.json.ID }}\"\n  },\n  \"message\": {\n    \"text\": {{ JSON.stringify($json.output) }}\n  }\n}\n","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[1360,460],"id":"3a39ab34-c1b5-4f8e-9651-4b84690eb283","name":"Reply to messages"},{"parameters":{"jsCode":"const input = items[0];\nconst all = $input.all();\n\n// Tự tìm field nào có nội dung dạng text (ưu tiên mảng/string)\nconst fieldName = Object.keys(input.json).find(k => {\n  const val = input.json[k];\n  return typeof val === 'string' || Array.isArray(val);\n});\n\nlet raw = input.json[fieldName];\nif (typeof raw === 'string') raw = [raw];\nif (!Array.isArray(raw)) raw = [];\n\nconst messages = raw\n  .map(i => typeof i === 'string' ? i : i?.text)\n  .filter(t => !!t);\n\nconst ID = all.find(i => i.json?.ID)?.json.ID;\n\nreturn [{\n  json: {\n    ID,\n    message: messages.join('\\n'),\n  }\n}];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[2760,1000],"id":"3025b685-b7ca-4291-a8ce-8f2386686621","name":"Code1"},{"parameters":{"operation":"push","list":"={{ $json.ID }}","messageData":"={{ $json.messaging }}","tail":true},"type":"n8n-nodes-base.redis","typeVersion":1,"position":[1120,860],"id":"bd7707c1-3a73-49a1-adce-fa55c9ddeca4","name":"RedisPush"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"loose","version":2},"conditions":[{"id":"971a0e8e-3ed6-4bc6-8992-bdb6f67c72e4","leftValue":"={{ $json.lock === undefined }}","rightValue":"true","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"looseTypeValidation":true,"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[1800,860],"id":"5ff66525-7f19-40c7-b655-10aa56b6c221","name":"If2"},{"parameters":{"operation":"set","key":"=lock:{{ $json.ID }}","value":"true","expire":true,"ttl":10},"type":"n8n-nodes-base.redis","typeVersion":1,"position":[1560,860],"id":"d5370152-3d30-4fe1-be89-6cd2e258476b","name":"lock:<userID>"},{"parameters":{"operation":"get","key":"={{ $json.ID }}","keyType":"list","options":{}},"type":"n8n-nodes-base.redis","typeVersion":1,"position":[2160,840],"id":"82754d44-8d90-4a6c-95ac-f988b2807ff4","name":"GetID","notesInFlow":false},{"parameters":{},"type":"n8n-nodes-base.noOp","typeVersion":1,"position":[2160,1000],"id":"0be504ed-237c-478a-91e1-defa7239f9f2","name":"No Operation, do nothing"},{"parameters":{"operation":"delete","key":"={{ $('lock:<userID>').item.json.ID }}"},"type":"n8n-nodes-base.redis","typeVersion":1,"position":[2360,840],"id":"38d4ad98-6b20-42da-bbe8-45d189fd9888","name":"deleteID"},{"parameters":{},"type":"n8n-nodes-base.merge","typeVersion":3.1,"position":[2600,860],"id":"bd8c06cd-121a-4204-a0cc-c39ce352bbb2","name":"Merge"},{"parameters":{},"type":"n8n-nodes-base.wait","typeVersion":1.1,"position":[1340,860],"id":"127b787f-52d3-4dec-b29c-b3039ff570b9","name":"Wait1","webhookId":"b2a3eb2c-35f6-4f21-9690-f97fd07b05b3"},{"parameters":{"multipleMethods":true,"httpMethod":["POST"],"path":"fb-hook","options":{}},"type":"n8n-nodes-base.webhook","typeVersion":2,"position":[660,860],"id":"8854c3e9-eed2-4fd2-971d-6c8c203e7ee9","name":"Webhook2","webhookId":"e3c85337-fa05-4d7a-9115-717b977a984d","notesInFlow":false},{"parameters":{"event":"oauthCallback"},"type":"n8n-nodes-zalo-vn.zaloTrigger","typeVersion":1,"position":[2700,-20],"id":"60310738-e925-457b-b142-62a824d79a98","name":"Zalo Trigger","webhookId":"fcc6ff10-cf34-41f6-b8e1-2fc90e815345"},{"parameters":{"operation":"generatePkce","appId":"1414181037145785901","redirectUri":"https://wf.n8nify.com/webhook/fcc6ff10-cf34-41f6-b8e1-2fc90e815345/callback"},"type":"n8n-nodes-zalo-vn.zalo","typeVersion":1,"position":[2400,-20],"id":"c2d830b4-1d87-4140-8c21-7464e8d835b8","name":"Zalo1"},{"parameters":{"promptType":"define","text":"={{ $json.body.message.text }}","hasOutputParser":true,"options":{"systemMessage":"=Bạn là Dương – tư vấn viên của Dương Nuts, chuyên về các loại hạt dinh dưỡng và combo mix nấu sữa lành mạnh. Khách hàng của bạn phần lớn là nữ trên 30 tuổi, quan tâm sức khoẻ và chọn lựa kỹ trước khi mua.\n\n💬 Khi nhắn tin với khách:\n- Trò chuyện như người thật, không phải chatbot.\n- Tự nhiên, lịch sự, rõ ràng, có cảm xúc. Không nói kiểu máy móc hoặc spam tin.\n- Giao tiếp theo phong cách: **tự tin – thân thiện – tinh tế**, như một người em đang hỗ trợ người chị.\n- Luôn hỏi lại nếu khách nhắn ngắn hoặc chưa rõ nhu cầu.\n\n🗣️ Cách xưng hô:\n- Mặc định xưng **“chị – em”**.\n- Nếu khách xưng “anh” → đổi sang “anh – em”.\n- Nếu khách dùng “mình”, “tôi”, hoặc không rõ giới tính → dùng trung tính “bạn – em” hoặc giữ “chị – em” nếu hợp ngữ cảnh.\n- Không lặp “bạn ơi” hay “chị ơi” đầu câu. Chèn xưng hô tự nhiên vào giữa hoặc cuối.\n\n---\n\n🛠️ **Sử dụng công cụ bắt buộc:**\n\n> **Tuyệt đối không tự bịa thông tin. Chỉ phản hồi khi đã đọc dữ liệu từ sheet.**\n\n- Nếu khách hỏi về sản phẩm cụ thể → **bắt buộc gọi tool `Products`** để lấy mô tả, size, giá, loại vỏ/bóc sẵn.\n- Nếu khách hỏi câu thường gặp (cách dùng, bảo quản, mix...) → **bắt buộc dùng tool `Answers`** để lấy thông tin.\n- Nếu tool không trả về dữ liệu → phản hồi như sau:\n  - “Để em kiểm tra thêm rồi nhắn chị sau một xíu nha.”\n  - “Thông tin này em chưa thấy trong bảng, để em hỏi lại và gửi chị sau nha.”\n\n---\n\n🎯 Cách phản hồi theo tình huống:\n\n1. **Khách nhắn ngắn gọn (“macca”, “óc chó”, “mix sữa”)**  \n→ Không trả lời ngay. Hỏi để rõ hơn:\n> “Macca chị đang muốn dùng để mix sữa, ăn vặt hay mình cần báo giá luôn ạ?”\n\n2. **Khách nhờ tư vấn combo, menu (“Cho menu”, “Tư vấn giúp”)**  \n→ Gợi mở cụ thể:\n> “Chị dự định uống mỗi ngày khoảng mấy túi để em gợi ý combo vừa tiết kiệm vừa dễ uống nha?”\n\n3. **Khách hỏi tên sản phẩm cụ thể**  \n→ Gọi `Products`. Nếu không có → phản hồi mềm:\n> “Loại này em đang kiểm tra lại thông tin, để em nhắn chị sau cho chắc nha.”\n\n4. **Khách hỏi FAQ (cách dùng, bảo quản...)**  \n→ Gọi `Answers`. Nếu không có → phản hồi như người thật:\n> “Hiện em chưa thấy phần này trong bảng, để em hỏi lại rồi gửi chị sau nha.”\n\n---\n\n📌 Lưu ý thêm khi tư vấn:\n- Trả lời như một người thật hiểu sản phẩm và đang quan tâm tới nhu cầu thật của khách.\n- Hỏi kỹ trước khi báo giá hoặc chốt combo.\n- Ngôn từ mềm mại, không khoa trương, không lặp mẫu.\n\n🚫 Không dùng emoji  \n🚫 Không tự trả lời khi chưa có dữ liệu từ tool  \n🚫 Không nói kiểu bot hoặc xưng hô sai ngữ cảnh  \n🚫 Không gượng ép giới thiệu nếu khách chưa cần\n\n🎯 Mục tiêu: Tư vấn như một người thật – hiểu khách, hiểu sản phẩm, luôn dựa trên dữ liệu cụ thể từ sheet.\n"}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":1.8,"position":[660,-80],"id":"d7c00a41-547e-4c32-8ead-cf7a3a82bf9b","name":"Zalo cskh"},{"parameters":{"promptType":"define","text":"={{ $('Code1').item.json.message }}","hasOutputParser":true,"options":{"systemMessage":"=Bạn là Dương – tư vấn viên của Dương Nuts, chuyên về các loại hạt dinh dưỡng và combo mix nấu sữa lành mạnh. Khách hàng của bạn phần lớn là nữ trên 30 tuổi, quan tâm sức khoẻ và chọn lựa kỹ trước khi mua.\n\n💬 Khi nhắn tin với khách:\n- Trò chuyện như người thật, không phải chatbot.\n- Tự nhiên, lịch sự, rõ ràng, có cảm xúc. Không nói kiểu máy móc hoặc spam tin.\n- Giao tiếp theo phong cách: **tự tin – thân thiện – tinh tế**, như một người em đang hỗ trợ người chị.\n- Luôn hỏi lại nếu khách nhắn ngắn hoặc chưa rõ nhu cầu.\n\n🗣️ Cách xưng hô:\n- Mặc định xưng **“chị – em”**.\n- Nếu khách xưng “anh” → đổi sang “anh – em”.\n- Nếu khách dùng “mình”, “tôi”, hoặc không rõ giới tính → dùng trung tính “bạn – em” hoặc giữ “chị – em” nếu hợp ngữ cảnh.\n- Không lặp “bạn ơi” hay “chị ơi” đầu câu. Chèn xưng hô tự nhiên vào giữa hoặc cuối.\n\n---\n\n🛠️ **Sử dụng công cụ bắt buộc:**\n\n> **Tuyệt đối không tự bịa thông tin. Chỉ phản hồi khi đã đọc dữ liệu từ sheet.**\n\n- Nếu khách hỏi về sản phẩm cụ thể → **bắt buộc gọi tool `Products`** để lấy mô tả, size, giá, loại vỏ/bóc sẵn.\n- Nếu khách hỏi câu thường gặp (cách dùng, bảo quản, mix...) → **bắt buộc dùng tool `Answers`** để lấy thông tin.\n- Nếu tool không trả về dữ liệu → phản hồi như sau:\n  - “Để em kiểm tra thêm rồi nhắn chị sau một xíu nha.”\n  - “Thông tin này em chưa thấy trong bảng, để em hỏi lại và gửi chị sau nha.”\n\n---\n\n🎯 Cách phản hồi theo tình huống:\n\n1. **Khách nhắn ngắn gọn (“macca”, “óc chó”, “mix sữa”)**  \n→ Không trả lời ngay. Hỏi để rõ hơn:\n> “Macca chị đang muốn dùng để mix sữa, ăn vặt hay mình cần báo giá luôn ạ?”\n\n2. **Khách nhờ tư vấn combo, menu (“Cho menu”, “Tư vấn giúp”)**  \n→ Gợi mở cụ thể:\n> “Chị dự định uống mỗi ngày khoảng mấy túi để em gợi ý combo vừa tiết kiệm vừa dễ uống nha?”\n\n3. **Khách hỏi tên sản phẩm cụ thể**  \n→ Gọi `Products`. Nếu không có → phản hồi mềm:\n> “Loại này em đang kiểm tra lại thông tin, để em nhắn chị sau cho chắc nha.”\n\n4. **Khách hỏi FAQ (cách dùng, bảo quản...)**  \n→ Gọi `Answers`. Nếu không có → phản hồi như người thật:\n> “Hiện em chưa thấy phần này trong bảng, để em hỏi lại rồi gửi chị sau nha.”\n\n---\n\n📌 Lưu ý thêm khi tư vấn:\n- Trả lời như một người thật hiểu sản phẩm và đang quan tâm tới nhu cầu thật của khách.\n- Hỏi kỹ trước khi báo giá hoặc chốt combo.\n- Ngôn từ mềm mại, không khoa trương, không lặp mẫu.\n\n🚫 Không dùng emoji  \n🚫 Không tự trả lời khi chưa có dữ liệu từ tool  \n🚫 Không nói kiểu bot hoặc xưng hô sai ngữ cảnh  \n🚫 Không gượng ép giới thiệu nếu khách chưa cần\n\n🎯 Mục tiêu: Tư vấn như một người thật – hiểu khách, hiểu sản phẩm, luôn dựa trên dữ liệu cụ thể từ sheet.\n"}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":1.8,"position":[640,460],"id":"013b153d-e8c4-4e9a-af88-3d82cf31ff56","name":"Fb cskh"},{"parameters":{"userId":"={{ $('Edit Fields2').item.json.body.sender.id }}","message":"={{ $json.output }}"},"type":"n8n-nodes-zalo-vn.zalo","typeVersion":1,"position":[1340,-80],"id":"7086949b-9757-490e-b538-23f50db0ca2f","name":"Zalo"},{"parameters":{"assignments":{"assignments":[{"id":"7ac9f691-8ccf-4013-8819-7255eb91c747","name":"body.sender","value":"={{ $json.body.sender }}","type":"object"},{"id":"0284b3aa-868e-4c56-9ab7-af6f3977d098","name":"body.message.text","value":"={{ $json.body.message.text }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[460,-80],"id":"adfebddd-7845-4318-84ee-470e6c7a99ae","name":"Edit Fields2"},{"parameters":{"content":"## Xác minh và cấp quyền","height":540,"width":1340,"color":4},"type":"n8n-nodes-base.stickyNote","position":[1620,-160],"typeVersion":1,"id":"71d4cbb8-6319-4f97-be66-282787d3288c","name":"Sticky Note"},{"parameters":{"model":{"__rl":true,"value":"gpt-4o","mode":"list","cachedResultName":"gpt-4o"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[540,240],"id":"fc3ced38-6c6f-481c-b31b-0a7655122d57","name":"OpenAI","credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{"content":"## Zalo ","height":540,"width":1720,"color":6},"type":"n8n-nodes-base.stickyNote","position":[140,-160],"typeVersion":1,"id":"d8daf63b-b740-46ea-b01b-53532d70e977","name":"Sticky Note1"},{"parameters":{"content":"## Facebook","height":880,"width":2820,"color":5},"type":"n8n-nodes-base.stickyNote","position":[140,380],"typeVersion":1,"id":"93a7b59d-1cf9-4c2d-8121-d1f16c0a9a9c","name":"Sticky Note2"},{"parameters":{},"type":"@n8n/n8n-nodes-langchain.memoryPostgresChat","typeVersion":1.3,"position":[700,140],"id":"1b77e565-7411-408e-a7af-c697e8b1dccc","name":"Postgres Chat Memory","credentials":{"postgres":{"id":"lPXyj3Ypf5YeZpp3","name":"Postgres account Local"}}},{"parameters":{},"type":"@n8n/n8n-nodes-langchain.memoryPostgresChat","typeVersion":1.3,"position":[720,680],"id":"886f73ad-7872-40f1-aeb7-1796715b4ee3","name":"Postgres Chat Memory1","credentials":{"postgres":{"id":"lPXyj3Ypf5YeZpp3","name":"Postgres account Local"}}}],"connections":{"Webhook":{"main":[[{"node":"Edit Fields2","type":"main","index":0}]]},"Products":{"ai_tool":[[{"node":"Zalo cskh","type":"ai_tool","index":0},{"node":"Fb cskh","type":"ai_tool","index":0}]]},"Answers":{"ai_tool":[[{"node":"Zalo cskh","type":"ai_tool","index":0},{"node":"Fb cskh","type":"ai_tool","index":0}]]},"Webhook1":{"main":[[{"node":"Edit Fields","type":"main","index":0}]]},"Edit Fields":{"main":[[{"node":"Respond to Webhook","type":"main","index":0}]]},"Edit Fields1":{"main":[[{"node":"RedisPush","type":"main","index":0}]]},"Code1":{"main":[[{"node":"Fb cskh","type":"main","index":0}]]},"RedisPush":{"main":[[{"node":"Wait1","type":"main","index":0}]]},"If2":{"main":[[{"node":"GetID","type":"main","index":0}],[{"node":"No Operation, do nothing","type":"main","index":0}]]},"lock:<userID>":{"main":[[{"node":"If2","type":"main","index":0}]]},"GetID":{"main":[[{"node":"deleteID","type":"main","index":0}]]},"deleteID":{"main":[[{"node":"Merge","type":"main","index":0}]]},"Merge":{"main":[[{"node":"Code1","type":"main","index":0}]]},"Wait1":{"main":[[{"node":"lock:<userID>","type":"main","index":0}]]},"Webhook2":{"main":[[{"node":"Edit Fields1","type":"main","index":0}]]},"Zalo cskh":{"main":[[{"node":"Wait","type":"main","index":0}]]},"Fb cskh":{"main":[[{"node":"Reply to messages","type":"main","index":0}]]},"Wait":{"main":[[{"node":"Zalo","type":"main","index":0}]]},"Edit Fields2":{"main":[[{"node":"Zalo cskh","type":"main","index":0}]]},"OpenAI":{"ai_languageModel":[[{"node":"Zalo cskh","type":"ai_languageModel","index":0},{"node":"Fb cskh","type":"ai_languageModel","index":0}]]},"Postgres Chat Memory":{"ai_memory":[[{"node":"Zalo cskh","type":"ai_memory","index":0}]]},"Postgres Chat Memory1":{"ai_memory":[[{"node":"Fb cskh","type":"ai_memory","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":null,"pinData":{},"versionId":"61b46681-a33f-4ec9-b56f-8001bf525594","triggerCount":0,"tags":[],"shared":[{"createdAt":"2025-05-30T04:12:47.973Z","updatedAt":"2025-05-30T04:12:47.973Z","role":"workflow:owner","workflowId":"AFDChajbJBh7VWlp","projectId":"WbfPHUYYKS2tiNNo","project":{"createdAt":"2025-05-03T06:49:18.088Z","updatedAt":"2025-05-03T06:52:24.837Z","id":"WbfPHUYYKS2tiNNo","name":"charlie phan <scottyphan08@gmail.com>","type":"personal","icon":null,"description":null}}]},{"createdAt":"2025-05-30T04:24:34.118Z","updatedAt":"2025-05-30T04:24:34.118Z","id":"iVAVn24VS4q81byf","name":"Fabook02","active":false,"isArchived":false,"nodes":[{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"a4144d15-29fe-4870-ad02-9553ccd3f5ee","leftValue":"={{ $json.query[\"hub.mode\"] }}","rightValue":"subscribe","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}},{"id":"e5f35eb3-ab21-4fe2-9b51-aefed012fc98","leftValue":"={{ $json.query[\"hub.verify_token\"] }}","rightValue":"=123456","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[-680,480],"id":"5c70296b-244b-4ddf-9dee-1fec81291307","name":"If"},{"parameters":{"content":"## Xác thực facebook app webhook","height":380,"width":680},"type":"n8n-nodes-base.stickyNote","position":[-720,320],"typeVersion":1,"id":"1619aabc-4c4a-439d-b334-fd64a50710de","name":"Sticky Note"},{"parameters":{"promptType":"define","text":"={{ $('MergeMessage').first().json.text.join('\\n') }}","options":{"systemMessage":"={{ $('PromptSheet').item.json.prompt }}"}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":1.9,"position":[300,2240],"id":"12517475-b6fe-477b-a446-a080fdf1a8e2","name":"AI Agent","executeOnce":false,"onError":"continueErrorOutput"},{"parameters":{"model":{"__rl":true,"value":"gpt-4o-mini","mode":"list","cachedResultName":"gpt-4o-mini"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[180,2460],"id":"2539d572-9854-4757-bf74-c5428431aea5","name":"OpenAI Chat Model"},{"parameters":{"sessionIdType":"customKey","sessionKey":"={{ $('MergeMessage').item.json.page_id }}_{{ $('MergeMessage').item.json.sender_id }}"},"type":"@n8n/n8n-nodes-langchain.memoryPostgresChat","typeVersion":1.3,"position":[320,2460],"id":"c22dccd3-bb24-4152-a30d-fcd5b37f7d06","name":"Postgres Chat Memory"},{"parameters":{"content":"## Map dữ liệu và Lấy page access token\n- Ta sẽ cấu trúc lại dữ liệu sau đó kiểm tra và lấy ra đúng token của page mà chúng ta đang thao tác (Mục đích là sẽ có nhiều page) ","height":340,"width":680},"type":"n8n-nodes-base.stickyNote","position":[-720,1400],"typeVersion":1,"id":"2b129464-2863-4f8d-a0da-4bfb7b4b228c","name":"Sticky Note1"},{"parameters":{"content":"## Check trùng và lưu lại tin nhắn vào database\n- Facebook có cơ chế bắn lại tin nhắn nếu request bị false và đôi khi cũng bắn nhầm bắn thừa\n- Vậy nên ta phải check trùng để tránh bị nhận tin nhắn và trả lời 2 lần.\n- Nếu không có tin nhắn nào trùng - false -> ta sẽ ghi lại message và tiếp tục","height":340,"width":700},"type":"n8n-nodes-base.stickyNote","position":[0,1400],"typeVersion":1,"id":"d203eda5-313b-4841-90f0-e2731457a0cf","name":"Sticky Note2"},{"parameters":{"content":"## Response ngay sau khi nhận được dữ liệu\n- Tại sao phải res ngay sau khi nhận?\n- Facebook sẽ cho rằng false nếu sau 20s mà chưa trả về 200\n- Facebook sẽ bắn lại tin nhắn nếu bị coi là false","height":300,"width":680},"type":"n8n-nodes-base.stickyNote","position":[-720,720],"typeVersion":1,"id":"fd2e859e-126d-4031-acfe-d7db42de0cf2","name":"Sticky Note4"},{"parameters":{"multipleMethods":true,"path":"fbmessager","responseMode":"responseNode","options":{}},"type":"n8n-nodes-base.webhook","typeVersion":2,"position":[-1100,740],"id":"1ce3cc7d-756b-4fdc-94f9-28c6367aa0d1","name":"Webhook","webhookId":"84b7cec3-c047-4f9a-aff2-ca16706d2e66"},{"parameters":{"respondWith":"text","responseBody":"={{ $json.query[\"hub.challenge\"] }}","options":{}},"type":"n8n-nodes-base.respondToWebhook","typeVersion":1.2,"position":[-240,400],"id":"fed61386-5c6a-4ee2-8419-6ecf9d184df4","name":"Verify success"},{"parameters":{"respondWith":"json","responseBody":"{\n  \"error\": true\n}","options":{"responseCode":403}},"type":"n8n-nodes-base.respondToWebhook","typeVersion":1.2,"position":[-240,560],"id":"1faed7b2-56a1-4010-8491-dd0132051a93","name":"Verify fail"},{"parameters":{"respondWith":"text","responseBody":"EVENT_RECEIVED","options":{}},"type":"n8n-nodes-base.respondToWebhook","typeVersion":1.2,"position":[-680,880],"id":"a978e501-aea6-47b3-8133-8c748dc6d494","name":"RECEIVED","alwaysOutputData":true},{"parameters":{"documentId":{"__rl":true,"value":"={{ $('PageAccessToken').first().json.data_sheet }}","mode":"url"},"sheetName":{"__rl":true,"value":"data","mode":"name"},"options":{}},"type":"n8n-nodes-base.googleSheetsTool","typeVersion":4.6,"position":[440,2460],"id":"808b122d-c566-4f67-934c-cf4437de5674","name":"data"},{"parameters":{"tableId":"fb_chats","fieldsUi":{"fieldValues":[{"fieldId":"page_id","fieldValue":"={{ $('StructureData').item.json.page_id }}"},{"fieldId":"sender_id","fieldValue":"={{ $('StructureData').item.json.sender_id }}"},{"fieldId":"recipient_id","fieldValue":"={{ $('StructureData').item.json.recipient_id }}"},{"fieldId":"timestamp","fieldValue":"={{ $('StructureData').item.json.timestamp }}"},{"fieldId":"message_id","fieldValue":"={{ $('StructureData').item.json.message_id }}"},{"fieldId":"text","fieldValue":"={{ $('StructureData').item.json.text }}"}]}},"type":"n8n-nodes-base.supabase","typeVersion":1,"position":[540,1580],"id":"8db150f9-63b0-4314-b00d-083d9fc9bcdd","name":"SaveToChats"},{"parameters":{"operation":"get","tableId":"fb_chats","filters":{"conditions":[{"keyName":"message_id","keyValue":"={{ $('StructureData').first().json.message_id }}"}]}},"type":"n8n-nodes-base.supabase","typeVersion":1,"position":[60,1580],"id":"c22d7189-e2bf-4699-b9a2-445ad52b0430","name":"ExistsMessage","alwaysOutputData":true},{"parameters":{"content":"## Kiểm tra danh sách chát với người thật\n- Truy vấn xem có phải người dùng này có trong danh sách chát với người thật không","height":280,"width":680},"type":"n8n-nodes-base.stickyNote","position":[-720,1760],"typeVersion":1,"id":"715ef798-88d1-4f95-91ed-a62bc68f1e5e","name":"Sticky Note5"},{"parameters":{},"type":"n8n-nodes-base.noOp","typeVersion":1,"position":[-240,1860],"id":"e6332db5-6e65-487a-98d7-b9075bf878b5","name":"Chủ Page đâu, Ra đây trả lời nhanh lên"},{"parameters":{"operation":"upsert","schema":{"__rl":true,"mode":"list","value":"public"},"table":{"__rl":true,"value":"fb_included_users","mode":"list","cachedResultName":"fb_included_users"},"columns":{"mappingMode":"defineBelow","value":{"page_id":"={{ $('MergeMessage').item.json.page_id }}","sender_id":"={{ $('MergeMessage').item.json.sender_id }}","key":"={{ $('MergeMessage').item.json.page_id }}_{{ $('MergeMessage').item.json.sender_id }}"},"matchingColumns":["key"],"schema":[{"id":"id","displayName":"id","required":false,"defaultMatch":true,"display":true,"type":"number","canBeUsedToMatch":true,"removed":true},{"id":"page_id","displayName":"page_id","required":true,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":false},{"id":"sender_id","displayName":"sender_id","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"created_at","displayName":"created_at","required":false,"defaultMatch":false,"display":true,"type":"dateTime","canBeUsedToMatch":false,"removed":true},{"id":"key","displayName":"key","required":true,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.postgresTool","typeVersion":2.6,"position":[580,2460],"id":"36ccaa82-da83-4f40-8951-55d53bd4d382","name":"toolAddToExcludeList"},{"parameters":{"operation":"get","tableId":"fb_included_users","filters":{"conditions":[{"keyName":"key","keyValue":"={{ $json.page_id }}_{{ $json.sender_id }}"}]}},"type":"n8n-nodes-base.supabase","typeVersion":1,"position":[-680,1860],"id":"f796c411-98ea-4d2f-b5f0-0bb238c830d2","name":"GetUserIncluded","alwaysOutputData":true},{"parameters":{"jsCode":"return [\n  {\n    page_id: 'id của page fb',\n    data_sheet: 'https://docs.google.com/spreadsheets/d/1vtHZyKchfc3GWoB9lHf2xVCDi2vNZu5UpcdvMVf1i_M/edit?gid=0#gid=0',\n    page_access_token: 'paste_access_token của facebook vào đây'\n  },\n  {\n    page_id: 'id của page fb',\n    data_sheet: 'https://docs.google.com/spreadsheets/d/1jQa7BSD2oAisG7okVJkvxPyAnZ5SWHZomav5h4gD5aw/edit?gid=0#gid=0',\n    page_access_token: 'paste_access_token của facebook vào đây'\n  }\n];"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-440,1580],"id":"b9b80a54-3570-486c-aa00-2ec6eb13af37","name":"ListPageAccessToken"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"650b7794-71e3-46a7-9b1e-da5311b41a60","leftValue":"={{ $json.page_id }}","rightValue":"={{ $('StructureData').last().json.page_id }}","operator":{"type":"string","operation":"equals"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[-240,1580],"id":"43bfc77b-101b-4c11-a7f6-b8a248f911b7","name":"PageAccessToken"},{"parameters":{"method":"POST","url":"=https://graph.facebook.com/v22.0/{{ $('StructureTextOutput').item.json.page_id }}/messages","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Authorization","value":"=Bearer {{ $('PageAccessToken').last().json.page_access_token }}"}]},"sendBody":true,"specifyBody":"json","jsonBody":"={\n  \"recipient\": {\n    \"id\": \"{{ $('StructureTextOutput').item.json.sender_id }}\"\n  },\n  \"message\": {\n    \"text\": {{ $('StructureTextOutput').item.json.output }}\n  }\n}","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[540,2780],"id":"0d57fc67-6997-4c34-b158-a63d2b2a9f18","name":"SendMessage"},{"parameters":{"method":"POST","url":"=https://graph.facebook.com/v22.0/{{ $json.page_id }}/messages","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Authorization","value":"=Bearer {{ $('PageAccessToken').last().json.page_access_token }}"}]},"sendBody":true,"specifyBody":"json","jsonBody":"={\n  \"recipient\": {\n    \"id\": {{ $json.sender_id }}\n  },\n  \"sender_action\":\"typing_on\"\n}","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[60,2780],"id":"cee3e419-92f8-40c9-842b-c60291ead1f0","name":"SendTypingOn","onError":"continueRegularOutput"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"02d72cf3-bcee-4e2a-866d-91a3ff41edaa","leftValue":"={{ $json.id }}","rightValue":"","operator":{"type":"number","operation":"exists","singleValue":true}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[300,1580],"id":"c672b468-f63e-49c6-bbab-de04daf2919f","name":"NotFoundMessage","alwaysOutputData":false},{"parameters":{"fieldToSplitOut":"body.entry","options":{}},"type":"n8n-nodes-base.splitOut","typeVersion":1,"position":[40,880],"id":"5c57ccb3-5d7e-4f13-84c9-9bd3451eda2d","name":"Split Out"},{"parameters":{"content":"## Tiến hành phân tách dữ liệu từ entry và gửi\n- Tại sao phải phân tách? Hãy xem dữ liệu mà fb trả về ta có gì? Ta thấy rằng có 1 entry với kiểu dữ liệu là 1 mảng, mảng này có id page và 1 mảng messaging.\n- Điều này nghĩa là gì? Nghĩa là fb có thế bắn 1 hook có nhiều entry cho chúng ta. mà 1 entry có thể là 1 page khác nhau.\n- Nên ta phải tách nó ra để không bị nhầm page hoặc bị bỏ sót tin nhắn","height":300,"width":700},"type":"n8n-nodes-base.stickyNote","position":[0,720],"typeVersion":1,"id":"205531e7-9db8-4449-9a3e-62d0f7a0fd28","name":"Sticky Note8"},{"parameters":{"httpMethod":"POST","path":"8c5196db-15df-470a-8fab-ac384b45b480","responseMode":"responseNode","options":{}},"type":"n8n-nodes-base.webhook","typeVersion":2,"position":[-1100,1580],"id":"f968038f-6e30-40a8-9d47-69cdfe275491","name":"OnMessage","webhookId":"8c5196db-15df-470a-8fab-ac384b45b480"},{"parameters":{"assignments":{"assignments":[{"id":"2cedc0a7-8b32-4b46-ab19-6c157e21268b","name":"page_id","value":"={{ $json.body.page_id }}","type":"string"},{"id":"c9b6c3ed-40d0-4c27-b3f4-84661a6c8cee","name":"sender_id","value":"={{ $json.body.sender_id }}","type":"string"},{"id":"d985d779-d0b0-4a56-bdef-15019e8d68ef","name":"recipient_id","value":"={{ $json.body.recipient_id }}","type":"string"},{"id":"29d991a0-5395-4d62-aff3-e5739b0ddf83","name":"timestamp","value":"={{ $json.body.timestamp }}","type":"string"},{"id":"4b38a917-b656-4e5a-be18-a2077557f2cf","name":"message_id","value":"={{ $json.body.message_id }}","type":"string"},{"id":"6c438dce-30b3-479e-a56a-1048c0ec39c9","name":"text","value":"={{ $json.body.text }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-680,1580],"id":"24f95222-6084-4570-8d92-b203c0f622a6","name":"StructureData"},{"parameters":{"options":{}},"type":"n8n-nodes-base.respondToWebhook","typeVersion":1.2,"position":[-880,1580],"id":"74fd4aba-1453-43b5-b898-1e94f583e130","name":"RespondOnMessage"},{"parameters":{"content":"## AI Agent\n- Lấy nội dung trả lời cho người dùng.\n- Nếu không thấy nội dung thì hỏi xem có muốn nhắn với chủ page không","height":500,"width":700},"type":"n8n-nodes-base.stickyNote","position":[0,2100],"typeVersion":1,"id":"d99d6a7f-3b46-4014-a2a0-8da19357856e","name":"Sticky Note10"},{"parameters":{"content":"## Structure Lại dữ liệu trước khi gửi trả lời người dùng\n- Node này cấu trúc lại dữ liệu và fix lỗi khi khi gửi bị lỗi JSON error","height":300,"width":680},"type":"n8n-nodes-base.stickyNote","position":[-720,2660],"typeVersion":1,"id":"587ce1ac-bbd4-46fc-8aac-e74fd879634a","name":"Sticky Note11"},{"parameters":{"assignments":{"assignments":[{"id":"d65dbf39-714b-450d-8a30-384483b5e8aa","name":"output","value":"={{ JSON.stringify($json.output) }}","type":"string"},{"id":"aea834b4-09af-4312-b8a3-7ae64c38e5e7","name":"page_id","value":"={{ $('MergeMessage').first().json.page_id }}","type":"string"},{"id":"df7d9604-23bb-43d6-930f-b562622401e9","name":"sender_id","value":"={{ $('MergeMessage').first().json.sender_id }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-680,2780],"id":"f633f85f-6ef1-4dba-8694-4c02b74113a5","name":"StructureTextOutput"},{"parameters":{"content":"## Typing And Send Message\n- Typing là gì? Chính là tạo dấu ... tạo cảm giác đang trả lời trên fb\n- Để wait 1 giây (Cái này tùy chỉnh) sau đó sẽ trả lời","height":300,"width":700},"type":"n8n-nodes-base.stickyNote","position":[0,2660],"typeVersion":1,"id":"cb0aea69-aaeb-4562-92b2-edf88492abf1","name":"Sticky Note12"},{"parameters":{"amount":1},"type":"n8n-nodes-base.wait","typeVersion":1.1,"position":[300,2780],"id":"17ab1587-0999-4ea4-a3e4-a851a7993139","name":"Wait","webhookId":"378864f4-a530-4017-8285-683a16451d7b"},{"parameters":{"documentId":{"__rl":true,"value":"={{ $('PageAccessToken').first().json.data_sheet }}","mode":"url"},"sheetName":{"__rl":true,"value":"prompt","mode":"name"},"options":{}},"type":"n8n-nodes-base.googleSheets","typeVersion":4.6,"position":[60,2240],"id":"d3c7fb45-6675-431b-a35d-e560bd601f7e","name":"PromptSheet"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"6c20825f-4cae-4d4b-9558-4c4a10045d99","leftValue":"={{ $('GetAllMessage').first().json.id }}","rightValue":"","operator":{"type":"number","operation":"exists","singleValue":true}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[-560,2440],"id":"e90b318a-290f-499f-ba22-33f0b3caeec3","name":"IFExistsMessage"},{"parameters":{"jsCode":"return [\n  {\n    ... $('GetAllMessage').last().json,\n    text: $('GetAllMessage').all().map(m => m.json.text)\n  }\n];"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-240,2240],"id":"2f6b8c42-628b-40e2-80a0-4d3a4ffae17b","name":"MergeMessage"},{"parameters":{"operation":"update","tableId":"fb_chats","filterType":"string","filterString":"=id=in.({{ $('GetAllMessage').all().map(item => item.json.id) }})","fieldsUi":{"fieldValues":[{"fieldId":"status","fieldValue":"done"}]}},"type":"n8n-nodes-base.supabase","typeVersion":1,"position":[-440,2240],"id":"1386611c-574c-449d-833f-2b539610fef3","name":"UpdateDoneMessage","executeOnce":true},{"parameters":{"operation":"get","tableId":"fb_chats","filters":{"conditions":[{"keyName":"page_id","keyValue":"={{ $('SaveToChats').item.json.page_id }}"},{"keyName":"sender_id","keyValue":"={{ $('SaveToChats').item.json.sender_id }}"},{"keyName":"status","keyValue":"pending"}]}},"type":"n8n-nodes-base.supabase","typeVersion":1,"position":[-680,2240],"id":"8a1763a6-7b7f-4546-a7f7-7c22fba65233","name":"GetAllMessage"},{"parameters":{"content":"## Gộp tin và chuẩn hóa đầu vào\n- Ta sẽ dùng cơ chế debounce chờ thời gian x giây để gộp tin nhắn ngắt quãng sau đó chuẩn hóa đầu vào và gộp các tin nhắn lại thành 1 tin để gửi cho AI","height":500,"width":680},"type":"n8n-nodes-base.stickyNote","position":[-720,2100],"typeVersion":1,"id":"75c1b71e-d231-4076-a85d-61136c75114c","name":"Sticky Note3"},{"parameters":{},"type":"n8n-nodes-debounce.debouncePostgres","typeVersion":1,"position":[-920,2240],"id":"ce820b35-88ba-4f2f-bdaa-e2051910d45e","name":"Debounce Postgres","credentials":{}},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"f279a143-a74d-4cbb-b815-c8443c8626ef","leftValue":"={{ $json.id }}","rightValue":"","operator":{"type":"number","operation":"notExists","singleValue":true}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[-440,1860],"id":"16a870c7-81df-4cf0-a2d1-994cd0f607e1","name":"IfDoesNotExist","alwaysOutputData":false},{"parameters":{"fieldToSplitOut":"messaging","include":"allOtherFields","options":{}},"type":"n8n-nodes-base.splitOut","typeVersion":1,"position":[-680,1180],"id":"b3f110cd-e67e-4836-b5d2-65d9d5db9875","name":"Split Message"},{"parameters":{"assignments":{"assignments":[{"id":"2cedc0a7-8b32-4b46-ab19-6c157e21268b","name":"page_id","value":"={{ $json.id }}","type":"string"},{"id":"c9b6c3ed-40d0-4c27-b3f4-84661a6c8cee","name":"sender_id","value":"={{ $json.messaging.sender.id }}","type":"string"},{"id":"d985d779-d0b0-4a56-bdef-15019e8d68ef","name":"recipient_id","value":"={{ $json.messaging.recipient.id }}","type":"string"},{"id":"29d991a0-5395-4d62-aff3-e5739b0ddf83","name":"timestamp","value":"={{ $json.messaging.timestamp }}","type":"string"},{"id":"4b38a917-b656-4e5a-be18-a2077557f2cf","name":"message_id","value":"={{ $json.messaging.message.mid }}","type":"string"},{"id":"6c438dce-30b3-479e-a56a-1048c0ec39c9","name":"text","value":"={{ $json.messaging.message.text }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-440,1180],"id":"9bd5e391-5624-4647-bc14-6746133b23b2","name":"Map data"},{"parameters":{"content":"## Tiến hành phân tách dữ liệu từ messaging và gửi\n- Tại sao phải phân tách? Dữ liệu mà chúng ta nhận được lại cũng là 1 mảng messaging\n- Vậy nên có thể fb sẽ gửi tới nhiều message 1 lúc với 2 hoặc nhiều người dùng khác nhau\n- Cho nên ta phải tách nó ra để không gửi trả lời nhầm khách và không bị bỏ sót tin nhắn.","height":320,"width":680},"type":"n8n-nodes-base.stickyNote","position":[-720,1060],"typeVersion":1,"id":"32361268-6099-4b19-b15f-43e44a672f60","name":"Sticky Note13"},{"parameters":{"method":"POST","url":"https://dxunek.datadex.vn/webhook/8c5196db-15df-470a-8fab-ac384b45b480","sendBody":true,"specifyBody":"json","jsonBody":"={{ $json.toJsonString() }}","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[-240,1180],"id":"b675b22a-49bc-444c-914e-2ee70a3f1cce","name":"SendOnMessage1"},{"parameters":{"content":"## Đăng bài Fanpage nhiều ảnh và nội dung tự động bằng Open Ai\nTừng bước cấu hình trong các node, lưu ý bỏ ghim ở node google sheet khi chạy\n![Guide](https://datadex.vn/s/2025/05/3f0cc1a3-add6-4efb-910d-1bc267635cb0Cover.jpg)\n[🎥 Hướng dẫn tại đây](https://www.youtube.com/watch?v=w2zb47GC9-I)","height":680,"width":1000},"type":"n8n-nodes-base.stickyNote","position":[0,0],"typeVersion":1,"id":"48b87fc2-ae72-4e2c-8be6-682d6516e3a0","name":"Sticky Note6"}],"connections":{"If":{"main":[[{"node":"Verify success","type":"main","index":0}],[{"node":"Verify fail","type":"main","index":0}]]},"AI Agent":{"main":[[{"node":"StructureTextOutput","type":"main","index":0}]]},"OpenAI Chat Model":{"ai_languageModel":[[{"node":"AI Agent","type":"ai_languageModel","index":0}]]},"Postgres Chat Memory":{"ai_memory":[[{"node":"AI Agent","type":"ai_memory","index":0}]]},"Webhook":{"main":[[{"node":"If","type":"main","index":0}],[{"node":"RECEIVED","type":"main","index":0}]]},"RECEIVED":{"main":[[{"node":"Split Out","type":"main","index":0}]]},"data":{"ai_tool":[[{"node":"AI Agent","type":"ai_tool","index":0}]]},"SaveToChats":{"main":[[{"node":"GetUserIncluded","type":"main","index":0}]]},"ExistsMessage":{"main":[[{"node":"NotFoundMessage","type":"main","index":0}]]},"toolAddToExcludeList":{"ai_tool":[[{"node":"AI Agent","type":"ai_tool","index":0}]]},"GetUserIncluded":{"main":[[{"node":"IfDoesNotExist","type":"main","index":0}]]},"ListPageAccessToken":{"main":[[{"node":"PageAccessToken","type":"main","index":0}]]},"PageAccessToken":{"main":[[{"node":"ExistsMessage","type":"main","index":0}]]},"NotFoundMessage":{"main":[[],[{"node":"SaveToChats","type":"main","index":0}]]},"Split Out":{"main":[[{"node":"Split Message","type":"main","index":0}]]},"OnMessage":{"main":[[{"node":"RespondOnMessage","type":"main","index":0}]]},"StructureData":{"main":[[{"node":"ListPageAccessToken","type":"main","index":0}]]},"RespondOnMessage":{"main":[[{"node":"StructureData","type":"main","index":0}]]},"StructureTextOutput":{"main":[[{"node":"SendTypingOn","type":"main","index":0}]]},"SendTypingOn":{"main":[[{"node":"Wait","type":"main","index":0}]]},"Wait":{"main":[[{"node":"SendMessage","type":"main","index":0}]]},"PromptSheet":{"main":[[{"node":"AI Agent","type":"main","index":0}]]},"IFExistsMessage":{"main":[[{"node":"UpdateDoneMessage","type":"main","index":0}]]},"MergeMessage":{"main":[[{"node":"PromptSheet","type":"main","index":0}]]},"UpdateDoneMessage":{"main":[[{"node":"MergeMessage","type":"main","index":0}]]},"GetAllMessage":{"main":[[{"node":"IFExistsMessage","type":"main","index":0}]]},"IfDoesNotExist":{"main":[[],[{"node":"Chủ Page đâu, Ra đây trả lời nhanh lên","type":"main","index":0}]]},"Split Message":{"main":[[{"node":"Map data","type":"main","index":0}]]},"Map data":{"main":[[{"node":"SendOnMessage1","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":null,"pinData":{"Webhook":[]},"versionId":"70d97292-fce2-4289-bc2f-51e86730eecb","triggerCount":0,"tags":[],"shared":[{"createdAt":"2025-05-30T04:24:34.118Z","updatedAt":"2025-05-30T04:24:34.118Z","role":"workflow:owner","workflowId":"iVAVn24VS4q81byf","projectId":"WbfPHUYYKS2tiNNo","project":{"createdAt":"2025-05-03T06:49:18.088Z","updatedAt":"2025-05-03T06:52:24.837Z","id":"WbfPHUYYKS2tiNNo","name":"charlie phan <scottyphan08@gmail.com>","type":"personal","icon":null,"description":null}}]},{"createdAt":"2025-05-30T08:17:55.526Z","updatedAt":"2025-05-30T08:27:26.107Z","id":"JdYp2ij4kuKANRPM","name":"Import Data to Qdrant","active":false,"isArchived":false,"nodes":[{"parameters":{},"id":"e515e301-29fa-4d97-b9cd-e40e1b6eec86","name":"When clicking ‘Test workflow’","type":"n8n-nodes-base.manualTrigger","position":[-900,100],"typeVersion":1},{"parameters":{"resource":"file","operation":"get","owner":{"__rl":true,"value":"vananhphan","mode":"name"},"repository":{"__rl":true,"value":"n8n_project","mode":"list","cachedResultName":"n8n_project","cachedResultUrl":"https://github.com/vananhphan/n8n_project"},"filePath":"PNJ Product.xlsx","additionalParameters":{}},"id":"673f0b0e-dbb1-4804-91cc-839e4ce42f94","name":"GitHub","type":"n8n-nodes-base.github","position":[-680,100],"typeVersion":1,"webhookId":"3a598253-12e2-4623-984b-d36585b26b07","credentials":{"githubApi":{"id":"04ftghVaK1lFgfKg","name":"GitHub account"}}},{"parameters":{"operation":"xlsx","options":{}},"id":"2f913e81-f719-49b0-a855-49eb3a02ce0b","name":"Extract from File","type":"n8n-nodes-base.extractFromFile","position":[-520,100],"typeVersion":1},{"parameters":{"model":"text-embedding-3-small","options":{}},"id":"cf62e9ad-2920-4b0e-a89f-06019fef27cc","name":"Embeddings OpenAI","type":"@n8n/n8n-nodes-langchain.embeddingsOpenAi","position":[120,280],"typeVersion":1,"credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{"jsonMode":"expressionData","jsonData":"={{ $json.name }}","options":{"metadata":{"metadataValues":[{"name":"Chất liệu","value":"={{ $json['Chất liệu'] }}"},{"name":"Loại SP","value":"={{ $json['Loại SP'] }}"},{"name":"Price","value":"={{ $json[' price '] }}"},{"name":"size","value":"={{ $json.size }}"},{"name":"Trọng lượng tham khảo","value":"={{ $json['Trọng lượng tham khảo'] }}"},{"name":"Loại đá chính","value":"={{ $json['Loại đá chính'] }}"},{"name":"Kích thước đá chính","value":"={{ $json['Kích thước đá chính (tham khảo)'] }}"},{"name":"Loại đá phụ","value":"={{ $json['Loại đá phụ'] }}"},{"name":"số viên đá chính","value":"={{ $json['Số viên đá chính'] }}"},{"name":"Phong cách","value":"={{ $json['Phong cách'] }}"},{"name":"giới tính","value":"={{ $json['Giới tính'] }}"},{"name":"Số viên đá phụ","value":"={{ $json['Số viên đá phụ'] }}"},{"name":"Thương hiệu","value":"={{ $json['Thương hiệu'] }}"},{"name":"Mô tả","value":"={{ $json.desc }}"}]}}},"id":"36072ed5-735b-4348-934b-1b394f0eeb1b","name":"Default Data Loader","type":"@n8n/n8n-nodes-langchain.documentDefaultDataLoader","position":[460,60],"typeVersion":1},{"parameters":{},"id":"7ab2eebd-453b-4890-af77-0007051d27e2","name":"Token Splitter","type":"@n8n/n8n-nodes-langchain.textSplitterTokenSplitter","position":[740,260],"typeVersion":1},{"parameters":{"mode":"insert","qdrantCollection":{"__rl":true,"value":"PNJ_Product","mode":"id"},"options":{}},"id":"8e246fcc-a04c-48a5-b0de-cea8e2005e51","name":"Qdrant Vector Store","type":"@n8n/n8n-nodes-langchain.vectorStoreQdrant","position":[0,0],"typeVersion":1,"credentials":{"qdrantApi":{"id":"RzFNlgEENHFNmlmD","name":"QdrantApi account"}}},{"parameters":{"maxItems":1000},"type":"n8n-nodes-base.limit","typeVersion":1,"position":[-300,100],"id":"bc6cab1e-0b56-47fa-94f5-e3e07a28fb43","name":"Limit"}],"connections":{"When clicking ‘Test workflow’":{"main":[[{"node":"GitHub","type":"main","index":0}]]},"GitHub":{"main":[[{"node":"Extract from File","type":"main","index":0}]]},"Extract from File":{"main":[[{"node":"Limit","type":"main","index":0}]]},"Embeddings OpenAI":{"ai_embedding":[[{"node":"Qdrant Vector Store","type":"ai_embedding","index":0}]]},"Default Data Loader":{"ai_document":[[{"node":"Qdrant Vector Store","type":"ai_document","index":0}]]},"Token Splitter":{"ai_textSplitter":[[{"node":"Default Data Loader","type":"ai_textSplitter","index":0}]]},"Limit":{"main":[[{"node":"Qdrant Vector Store","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":null,"pinData":{},"versionId":"cd8a0cdb-bd3e-49d5-81b1-a95dd3b72069","triggerCount":0,"tags":[],"shared":[{"createdAt":"2025-05-30T08:17:55.526Z","updatedAt":"2025-05-30T08:17:55.526Z","role":"workflow:owner","workflowId":"JdYp2ij4kuKANRPM","projectId":"WbfPHUYYKS2tiNNo","project":{"createdAt":"2025-05-03T06:49:18.088Z","updatedAt":"2025-05-03T06:52:24.837Z","id":"WbfPHUYYKS2tiNNo","name":"charlie phan <scottyphan08@gmail.com>","type":"personal","icon":null,"description":null}}]},{"createdAt":"2025-05-30T08:48:00.087Z","updatedAt":"2025-05-30T09:04:02.162Z","id":"tfUxtY7F8s4VbwnB","name":"30.05 - MS Team - PNJ","active":true,"isArchived":false,"nodes":[{"parameters":{"model":"claude-3-5-haiku-20241022","options":{"temperature":0.3}},"type":"@n8n/n8n-nodes-langchain.lmChatAnthropic","typeVersion":1.2,"position":[-1140,560],"id":"cdd6aa28-2026-4fab-b2f8-00bfb26242fb","name":"Anthropic Chat Model3","credentials":{"anthropicApi":{"id":"l60iuyLpILCOKtuI","name":"Anthropic account"}}},{"parameters":{"sessionIdType":"customKey","sessionKey":"={{ $('Microsoft Teams').item.json.id }}"},"type":"@n8n/n8n-nodes-langchain.memoryPostgresChat","typeVersion":1.3,"position":[-920,620],"id":"61ea29fa-39d1-4fec-b61e-3499df7f57f3","name":"Postgres Chat Memory2","credentials":{"postgres":{"id":"lPXyj3Ypf5YeZpp3","name":"Postgres account Local"}}},{"parameters":{"httpMethod":"POST","path":"PNJ_chat","options":{}},"type":"n8n-nodes-base.webhook","typeVersion":2,"position":[-1700,240],"id":"20f7e540-11ec-48c7-a573-40dc9c1a5155","name":"Webhook","webhookId":"67ff8d99-ea96-4a62-8c30-270427f3721e"},{"parameters":{"resource":"chatMessage","operation":"get","chatId":{"__rl":true,"value":"19:1b016c542cc54f3483ec3c954ad1a5b6@thread.v2","mode":"list","cachedResultName":"PNJP-CHATBOT (group)","cachedResultUrl":"https://teams.microsoft.com/l/chat/19%3A1b016c542cc54f3483ec3c954ad1a5b6%40thread.v2/0?tenantId=6ea838f0-f529-455e-9738-147060990b55"},"messageId":"={{ $json.body.message_ID }}"},"type":"n8n-nodes-base.microsoftTeams","typeVersion":2,"position":[-1480,220],"id":"af0873ac-4e83-4624-b4c8-718836f0cf0b","name":"Microsoft Teams","webhookId":"197faa50-4d98-45e1-9599-30ac566f2d1e","credentials":{"microsoftTeamsOAuth2Api":{"id":"14g7k9M4SZPkSI3G","name":"Microsoft Teams account"}}},{"parameters":{"resource":"channelMessage","teamId":{"__rl":true,"value":"b3834b84-b756-4d5e-bcaa-37ab9cd8a53c","mode":"list","cachedResultName":"Client Pipeline"},"channelId":{"__rl":true,"value":"19:75faac0e86ba4173bbbb9160a400ea79@thread.tacv2","mode":"list","cachedResultName":"Data Analysis","cachedResultUrl":"https://teams.microsoft.com/l/channel/19%3A75faac0e86ba4173bbbb9160a400ea79%40thread.tacv2/Data%20Analysis?groupId=b3834b84-b756-4d5e-bcaa-37ab9cd8a53c&tenantId=6c6d2fff-b2ef-46a9-94b9-5eb5ec0a7a3c&allowXTenantAccess=True&ngc=True"},"message":"={{ $json['Final output'] }}","options":{"includeLinkToWorkflow":false,"makeReply":"={{ $('Microsoft Teams').item.json.id }}"}},"type":"n8n-nodes-base.microsoftTeams","typeVersion":2,"position":[0,0],"id":"65a03778-3899-4cdc-af3a-c5a988af1fdf","name":"Microsoft Teams1","webhookId":"f0eef3ca-9576-4711-bf90-acf90da26dea","credentials":{"microsoftTeamsOAuth2Api":{"id":"14g7k9M4SZPkSI3G","name":"Microsoft Teams account"}}},{"parameters":{"promptType":"define","text":"={{ $json.body.content }}","options":{"systemMessage":"=System Prompt cho PNJ Chatbot Tư Vấn Nữ Trang\nVAI TRÒ VÀ NHÂN CÁCH\nBạn là AI chatbot tư vấn chuyên nghiệp của PNJ (Phú Nhuận Jewelry), thương hiệu trang sức hàng đầu Việt Nam. Bạn có tính cách thân thiện, nhiệt tình, chuyên nghiệp và luôn đặt nhu cầu khách hàng lên hàng đầu.\nLỜI CHÀO MẶC ĐỊNH\nLuôn bắt đầu cuộc trò chuyện bằng:\n\"PNJ mến chào Quý khách! PNJ có thể hỗ trợ được gì cho Quý khách ạ?\nPNJ sẽ hỗ trợ Quý khách chọn được mẫu trang sức thật phù hợp nha. Quý khách có thể chia sẻ thêm giúp PNJ:\n\nPhong cách Quý khách thích?\nNgân sách mong muốn?\nQuý khách muốn chọn nhẫn đôi theo bộ hay phối riêng từng chiếc?\"\n\nNGUYÊN TẮC TƯ VẤN\n\nCHỈ SỬ DỤNG THÔNG TIN TỪ CƠ SỞ DỮ LIỆU: Chỉ tư vấn dựa trên sản phẩm có trong database. Không bịa đặt hoặc tạo ra thông tin sản phẩm.\nKHI KHÔNG CÓ THÔNG TIN PHÙ HỢP: Sử dụng cách trả lời dễ thương và gợi ý khách hàng:\n\n\"Ôi, sản phẩm Quý khách tìm hiện tại chưa có trong hệ thống của PNJ rồi ạ 😊\"\n\"PNJ gợi ý Quý khách có thể xem thêm những mẫu tuyệt đẹp khác nhé!\"\n\"Hoặc Quý khách có thể ghé thăm showroom để được tư vấn trực tiếp và xem nhiều mẫu hơn ạ!\"\n\n\nCÁCH GIỚI THIỆU SẢN PHẨM:\n\nTên sản phẩm đầy đủ\nGiá cả (định dạng: 27.288.000 VNĐ)\nKích thước có sẵn\nTrọng lượng\nLoại đá chính và phụ\nPhong cách thiết kế\nMô tả chi tiết hấp dẫn\nGợi ý phù hợp với đối tượng khách hàng\n\n\n\nTHÔNG TIN ĐỊA CHỈ SHOWROOM\nHỒ CHÍ MINH:\nTrung Tâm Kim Hoàn PNJ Next\n📍 196-200 Hai Bà Trưng, P. Đa Kao, Quận 1, TP. Hồ Chí Minh\n📞 (028) 3915 8953 - (028) 3915 8952\n🛍️ Mặt hàng: Trang sức Vàng, Bạc, Đồng hồ\nHÀ NỘI:\nTrung Tâm Kim Hoàn PNJ NEXT Cầu Giấy\n📍 Số 110 Cầu Giấy, P. Quan Hoa, Q. Cầu Giấy, TP. Hà Nội\n📞 (024) 3952 2299\n🛍️ Mặt hàng: Trang sức Bạc, Trang sức Vàng, Đồng hồ\nĐÀ NẴNG:\nTrung Tâm Kim Hoàn PNJ Next 123 Nguyễn Văn Linh\n📍 123 Nguyễn Văn Linh, P. Nam Dương, Q. Hải Châu, TP. Đà Nẵng\n📞 (0236) 3651 588\n🛍️ Mặt hàng: Trang sức Bạc, Trang sức Vàng, Đồng hồ\nCÁCH THỨC GIAO TIẾP\n\nXưng hô: Luôn dùng \"PNJ\" khi tự giới thiệu, \"Quý khách\" khi gọi khách hàng\nNgôn ngữ: Lịch sự, thân thiện, chuyên nghiệp\nEmoji: Sử dụng tiết kiệm và phù hợp (😊, ✨, 💎, 👑)\nTông điệu: Nhiệt tình nhưng không quá áp đặt\n\nCÁC TÌNH HUỐNG THƯỜNG GẶP\n1. Khách hỏi về sản phẩm cụ thể:\n\nKiểm tra database\nCung cấp thông tin chi tiết nếu có\nGợi ý sản phẩm tương tự nếu không có\n\n2. Khách hỏi về giá:\n\nLuôn ghi rõ đơn vị VNĐ\nĐịnh dạng số có dấu chấm phân cách (VD: 27.288.000 VNĐ)\nThông báo giá có thể thay đổi và khuyến khích liên hệ trực tiếp\n\n3. Khách hỏi về size:\n\nCung cấp các size có sẵn\nGợi ý đo size tại showroom để chính xác\n\n4. Khách so sánh sản phẩm:\n\nPhân tích ưu điểm của từng sản phẩm\nDựa vào nhu cầu và sở thích để tư vấn\n\nVÍ DỤ MẪU SẢN PHẨM TRONG DATABASE:\nNhẫn Kim cương Vàng Trắng 14K PNJ Trầu Cau DDDDW013301\n- Giá: 27.288.000 VNĐ\n- Size: 11, 12, 13\n- Trọng lượng: 7.46794 phân\n- Đá chính: Kim cương\n- Đá phụ: Kim cương  \n- Phong cách: Truyền thống, nhẹ nhàng, nữ tính\n- Thương hiệu: PNJ\n- Mô tả: Thiết kế lấy cảm hứng từ trầu têm cánh phượng, kim cương 57 giác cắt chuẩn xác...\nLƯU Ý QUAN TRỌNG\n\nKhông bao giờ tạo ra thông tin sản phẩm không có trong database\nLuôn khuyến khích khách hàng ghé showroom để trải nghiệm trực tiếp\nKhi không chắc chắn, hãy thành thật và gợi ý liên hệ trực tiếp\nLuôn kết thúc bằng câu hỏi để duy trì cuộc trò chuyện\nTập trung vào nhu cầu và sở thích của khách hàng để tư vấn phù hợp","maxIterations":10}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":1.7,"position":[-760,220],"id":"e98d3074-8139-4bb6-96e7-4574c42e974b","name":"Data Assistant","executeOnce":true},{"parameters":{"sessionIdType":"customKey","sessionKey":"={{ $('Microsoft Teams').item.json.id }}","contextWindowLength":0},"type":"@n8n/n8n-nodes-langchain.memoryPostgresChat","typeVersion":1.3,"position":[40,980],"id":"cf1711cc-f194-4948-befe-3fe1521a888d","name":"Postgres Chat Memory","credentials":{"postgres":{"id":"lPXyj3Ypf5YeZpp3","name":"Postgres account Local"}}},{"parameters":{"conditions":{"options":{"caseSensitive":false,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"e9f58adc-015b-4e2b-8538-26491b64c22c","leftValue":"={{ $json.from.application.applicationIdentityType }}","rightValue":"bot","operator":{"type":"string","operation":"notEquals"}}],"combinator":"and"},"options":{"ignoreCase":true}},"type":"n8n-nodes-base.filter","typeVersion":2.2,"position":[-1000,220],"id":"5aa909f8-a81e-4c95-a5d3-bf82715a7610","name":"Filter"},{"parameters":{"assignments":{"assignments":[{"id":"a868c24c-7f55-472c-b9e8-50fbd441bb42","name":"Final output","value":"={{ \"<p>\" + $('Re-word message').first().json.output.replace(/\\\\n/g, \"<br>\") + \"</p>\" }}\n\n\n","type":"string"},{"id":"a7b419ad-75bd-46dd-860f-46e1d90a3688","name":"","value":"","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-240,40],"id":"1bc3cae5-ef49-4c48-b33f-c00563d0c77e","name":"Set"},{"parameters":{"method":"POST","url":"https://prod-49.southeastasia.logic.azure.com:443/workflows/fec25d24cad044d7ae4c718d428f156a/triggers/manual/paths/invoke?api-version=2016-06-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=OuQFGbDKvY64R1opfsmAJTMLHyc6dEgirWfCnXQaTGg","sendBody":true,"bodyParameters":{"parameters":[{"name":"Message","value":"={{ $json['Final output'] }}"}]},"options":{"response":{}}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[-480,20],"id":"ebff4184-40c1-4922-9f02-272002aaf9bf","name":"Send response in Teams"},{"parameters":{"agent":"conversationalAgent","promptType":"define","text":"={{ $('Microsoft Teams').item.json.body.content }}","options":{"systemMessage":"=#Your role: You are an expert commmunications consultant. \n\n#Context:\n\nThe data assistant has summarised their findings, which can be found here: {{ $json.output }}\n\n#Task: Review the wording from the data assistant.\n\nThen tweak it where necessary so it sounds slick, smooth and professional. Remove any information that refers to how the answer was calculated.\n\nPlease add paragraph spacing too.\n\nThen present the answer to the customer. Feel free to reference the customer's name in your response. The customer's full name is:  {{ $('Microsoft Teams').item.json.from.user.displayName }}"}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":1.7,"position":[-40,600],"id":"82972f88-1dbb-4b68-bbcb-88857fca5bdd","name":"Re-word message"},{"parameters":{"model":{"__rl":true,"value":"gpt-4-turbo","mode":"list","cachedResultName":"gpt-4-turbo"},"options":{"responseFormat":"text","temperature":0.5}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[-80,780],"id":"a16e4ac5-2809-46c5-bb83-4c3481983a49","name":"OpenAI Chat Model","credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{"name":"SQL_tool_2","description":"Call the SQL Agent whenever a user requests structured data retrieval, filtering, or analysis from the database. The SQL Agent is responsible for executing queries and returning relevant results.\n\nUse Cases for Calling the SQL Agent:\nThe user asks for specific data from the database (e.g., \"Show me all journeys from last week\").\nThe user requests aggregated insights (e.g., \"Get total fuel usage for all regions\").\nThe user wants comparisons or rankings (e.g., \"Which drivers have the highest average speed?\").\nThe user references specific database fields or metrics (e.g., \"Retrieve journeys where capacity at departure was above 80%\").\nThe user requests historical trends (e.g., \"Show me how fuel consumption has changed over the last three months\").","workflowId":{"__rl":true,"value":"0Q9mChueZgrd8fDP","mode":"list","cachedResultName":"29.05 SQL query"},"workflowInputs":{"mappingMode":"defineBelow","value":{"Session_ID":"={{ $('Microsoft Teams').item.json.id }}","Query":"={{ $('Microsoft Teams').item.json.body.content }}"},"matchingColumns":["query"],"schema":[{"id":"Query","displayName":"Query","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string","removed":false},{"id":"Session_ID","displayName":"Session_ID","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"number","removed":false}],"attemptToConvertTypes":false,"convertFieldsToString":false}},"type":"@n8n/n8n-nodes-langchain.toolWorkflow","typeVersion":2,"position":[-1500,760],"id":"ba5b0aeb-60d0-4d99-bf59-52a42b509379","name":"SQL Query"},{"parameters":{"mode":"retrieve-as-tool","toolName":"PNJProduct","toolDescription":"dienmay qdrant","qdrantCollection":{"__rl":true,"value":"PNJ_Product","mode":"list","cachedResultName":"PNJ_Product"},"topK":20,"options":{}},"type":"@n8n/n8n-nodes-langchain.vectorStoreQdrant","typeVersion":1.1,"position":[-580,540],"id":"3af259b6-efe9-4b32-aa49-2ace6e56a2f3","name":"Qdrant Vector Store","credentials":{"qdrantApi":{"id":"RzFNlgEENHFNmlmD","name":"QdrantApi account"}}},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.embeddingsOpenAi","typeVersion":1.2,"position":[-540,720],"id":"d909bd79-2c1f-4c86-a347-950275ebd159","name":"Embeddings OpenAI","credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{"resource":"chatMessage","chatId":{"__rl":true,"value":"19:1b016c542cc54f3483ec3c954ad1a5b6@thread.v2","mode":"list","cachedResultName":"PNJP-CHATBOT (group)","cachedResultUrl":"https://teams.microsoft.com/l/chat/19%3A1b016c542cc54f3483ec3c954ad1a5b6%40thread.v2/0?tenantId=6ea838f0-f529-455e-9738-147060990b55"},"contentType":"html","message":"={{ $json.html }}","options":{"includeLinkToWorkflow":false}},"type":"n8n-nodes-base.microsoftTeams","typeVersion":2,"position":[-80,300],"id":"e67ab8aa-8a0c-4fe2-98b1-5f9985fcca9b","name":"Microsoft Teams2","webhookId":"6f4c8394-54b7-4dbd-bbe8-018a6bae3788","credentials":{"microsoftTeamsOAuth2Api":{"id":"14g7k9M4SZPkSI3G","name":"Microsoft Teams account"}}},{"parameters":{"mode":"markdownToHtml","markdown":"={{ $json.output }}","destinationKey":"html","options":{}},"type":"n8n-nodes-base.markdown","typeVersion":1,"position":[-320,240],"id":"8ee9e28f-91d7-40c8-8a9e-643bef3a9601","name":"Markdown"},{"parameters":{"rules":{"values":[{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"leftValue":"={{ $json.body.content }}","rightValue":"@PNJ","operator":{"type":"string","operation":"contains"},"id":"a0d82592-6656-4d01-9a23-52aa47a9aabd"}],"combinator":"and"}},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"bfc26640-dd9e-4b46-89ac-ab0417c378c7","leftValue":"={{ $json.body.content }}","rightValue":"@PNJ","operator":{"type":"string","operation":"notContains"}}],"combinator":"and"}}]},"options":{}},"type":"n8n-nodes-base.switch","typeVersion":3.2,"position":[-1260,240],"id":"2815d6e4-a1d9-49ef-8690-2308013631f6","name":"Switch"},{"parameters":{"respondWith":"json","responseBody":"{\n  \"output\": \"Xin chào quí khách thân yêu.Nếu bạn muốn hỏi về sản phẩm điện máy thì gọi @chat nhé\"\n}","options":{}},"type":"n8n-nodes-base.respondToWebhook","typeVersion":1.2,"position":[-1640,480],"id":"5a72ec93-79d7-4855-8c79-7b80d4364991","name":"Respond to Webhook"}],"connections":{"Anthropic Chat Model3":{"ai_languageModel":[[{"node":"Data Assistant","type":"ai_languageModel","index":0}]]},"Postgres Chat Memory2":{"ai_memory":[[{"node":"Data Assistant","type":"ai_memory","index":0}]]},"Webhook":{"main":[[{"node":"Microsoft Teams","type":"main","index":0}]]},"Microsoft Teams":{"main":[[{"node":"Switch","type":"main","index":0}]]},"Data Assistant":{"main":[[{"node":"Markdown","type":"main","index":0}]]},"Postgres Chat Memory":{"ai_memory":[[{"node":"Re-word message","type":"ai_memory","index":0}]]},"Filter":{"main":[[{"node":"Data Assistant","type":"main","index":0}]]},"Set":{"main":[[]]},"Re-word message":{"main":[[]]},"OpenAI Chat Model":{"ai_languageModel":[[{"node":"Re-word message","type":"ai_languageModel","index":0}]]},"SQL Query":{"ai_tool":[[]]},"Qdrant Vector Store":{"ai_tool":[[{"node":"Data Assistant","type":"ai_tool","index":0}]]},"Embeddings OpenAI":{"ai_embedding":[[{"node":"Qdrant Vector Store","type":"ai_embedding","index":0}]]},"Send response in Teams":{"main":[[]]},"Markdown":{"main":[[{"node":"Microsoft Teams2","type":"main","index":0}]]},"Switch":{"main":[[{"node":"Filter","type":"main","index":0}],[]]},"Respond to Webhook":{"main":[[]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"2b7b5e69-1b49-456c-a75f-d45f74f84aba","triggerCount":1,"tags":[{"createdAt":"2025-05-29T04:26:35.168Z","updatedAt":"2025-05-29T04:26:35.168Z","id":"Tgv30Ud11hlIErdt","name":"msteam"}],"shared":[{"createdAt":"2025-05-30T08:48:00.087Z","updatedAt":"2025-05-30T08:48:00.087Z","role":"workflow:owner","workflowId":"tfUxtY7F8s4VbwnB","projectId":"WbfPHUYYKS2tiNNo","project":{"createdAt":"2025-05-03T06:49:18.088Z","updatedAt":"2025-05-03T06:52:24.837Z","id":"WbfPHUYYKS2tiNNo","name":"charlie phan <scottyphan08@gmail.com>","type":"personal","icon":null,"description":null}}]},{"createdAt":"2025-06-05T04:21:34.258Z","updatedAt":"2025-06-05T04:40:14.887Z","id":"3BpYym6G7TPUsesk","name":"ZaloOA","active":false,"isArchived":false,"nodes":[{"parameters":{"path":"zalochat","responseMode":"responseNode","options":{}},"type":"n8n-nodes-base.webhook","typeVersion":2,"position":[-260,-120],"id":"315d7a43-8d5d-4019-a648-9a9253dc8db4","name":"Webhook","webhookId":"2aa5f41c-3767-41ec-8998-b455b2beb616"},{"parameters":{"respondWith":"allIncomingItems","options":{}},"type":"n8n-nodes-base.respondToWebhook","typeVersion":1.2,"position":[160,-140],"id":"467a9150-a448-43dd-8f79-93301cc1fb77","name":"Respond to Webhook"},{"parameters":{"method":"POST","url":"https://oauth.zaloapp.com/v4/oa/access_token","sendHeaders":true,"headerParameters":{"parameters":[{"name":"secret_key","value":"IXEGETnBpO8VmK36SYiB"}]},"sendBody":true,"contentType":"form-urlencoded","bodyParameters":{"parameters":[{"name":"code","value":"={{ $json.query.code }}"},{"name":"app_id","value":"2601486742549528203"},{"name":"grant_type","value":"authorization_code"}]},"options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[460,-140],"id":"338ed0fa-02ea-413b-82c8-d673e6754e75","name":"HTTP Request"}],"connections":{"Webhook":{"main":[[{"node":"Respond to Webhook","type":"main","index":0}]]},"Respond to Webhook":{"main":[[{"node":"HTTP Request","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":null,"pinData":{},"versionId":"d01f12b0-3031-469f-aaf7-ab5506bdb0da","triggerCount":0,"tags":[],"shared":[{"createdAt":"2025-06-05T04:21:34.258Z","updatedAt":"2025-06-05T04:21:34.258Z","role":"workflow:owner","workflowId":"3BpYym6G7TPUsesk","projectId":"WbfPHUYYKS2tiNNo","project":{"createdAt":"2025-05-03T06:49:18.088Z","updatedAt":"2025-05-03T06:52:24.837Z","id":"WbfPHUYYKS2tiNNo","name":"charlie phan <scottyphan08@gmail.com>","type":"personal","icon":null,"description":null}}]},{"createdAt":"2025-06-06T01:37:50.264Z","updatedAt":"2025-06-18T03:32:27.396Z","id":"V1K728o1OREtxxnt","name":"My workflow 10","active":false,"isArchived":false,"nodes":[{"parameters":{},"type":"n8n-nodes-zalo-vn.zaloWebServer","typeVersion":1,"position":[660,120],"id":"def264b3-6d45-4652-aee7-99f5fd9561e4","name":"Zalo Web Server"},{"parameters":{"operation":"stopServer"},"type":"n8n-nodes-zalo-vn.zaloWebServer","typeVersion":1,"position":[900,120],"id":"878af425-f0c0-4795-966b-1c381682bf02","name":"Zalo Web Server1"},{"parameters":{"event":"oauthCallback"},"type":"n8n-nodes-zalo-vn.zaloTrigger","typeVersion":1,"position":[900,660],"id":"b89369da-24c4-4bed-8e2e-f60745b91a5e","name":"OAuth Callback","webhookId":"46b9d2a9-eba1-4006-b456-a73cd6a50f6e","credentials":{"zaloApi":{"id":"6QQUgXEXtt2uHLX6","name":"Zalo account"}}},{"parameters":{"operation":"generatePkce","appId":"2601486742549528203","redirectUri":"https://pnjp-ai-demo.pnj.com.vn/webhook/61a95c38-a39c-4218-9ac7-d30e64cd3850/callback"},"type":"n8n-nodes-zalo-vn.zalo","typeVersion":1,"position":[900,400],"id":"888a5c14-2bd3-4848-a7e1-ac02591c7a60","name":"Generate PKCE parameters","credentials":{"zaloApi":{"id":"6QQUgXEXtt2uHLX6","name":"Zalo account"}}},{"parameters":{},"type":"n8n-nodes-zalo-vn.zaloTrigger","typeVersion":1,"position":[1320,580],"id":"badbc4b5-8b8d-458a-b1f3-b65da12ffe6c","name":"Zalo Trigger","webhookId":"61a95c38-a39c-4218-9ac7-d30e64cd3850","credentials":{"zaloApi":{"id":"6QQUgXEXtt2uHLX6","name":"Zalo account"}}},{"parameters":{"promptType":"define","text":"={{ $json.message.text }}","options":{"systemMessage":"Bạn là trợ lý Zalo OA hãy giúp khách hàng trả lời câu hỏi của họ."}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":1.7,"position":[1720,580],"id":"06ac8914-295c-427b-90ab-5e0ee8035802","name":"AI Agent"},{"parameters":{"model":{"__rl":true,"mode":"list","value":"gpt-4o-mini"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[1660,800],"id":"e41fb91b-c68f-49f4-9ae3-30a0dc0b0cff","name":"OpenAI Chat Model","credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{"sessionIdType":"customKey","sessionKey":"{{$json.sender.id}}"},"type":"@n8n/n8n-nodes-langchain.memoryBufferWindow","typeVersion":1.3,"position":[1820,800],"id":"f90c654e-93c5-4258-a96d-1dd4e59b2d33","name":"Window Buffer Memory"},{"parameters":{"content":"### Đây là dữ liệu mẫu nhận được từ tin nhắn của Zalo. \n\nDo hạn chế trong việc sử dụng môi trường test nên mình để đây để mọi người hình dung được cấu trúc  tin nhắn.\n\n```json\n[\n  {\n    \"event_name\": \"user_send_text\",\n    \"app_id\": \"xxx\",\n    \"sender\": {\n      \"id\": \"xxx\"\n    },\n    \"recipient\": {\n      \"id\": \"xxx\"\n    },\n    \"message\": {\n      \"text\": \"xxx\",\n      \"msg_id\": \"xxx\"\n    },\n    \"timestamp\": \"xxx\",\n    \"user_id_by_app\": \"xxx\"\n  }\n]\n```","height":520,"width":440,"color":4},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[1220,0],"id":"82e85f47-b5b7-4e28-abb3-491d3bc12dd4","name":"Sticky Note"},{"parameters":{"userId":"={{ $('Zalo Trigger').item.json.sender.id }}","message":"={{ $json.output }}"},"type":"n8n-nodes-zalo-vn.zalo","typeVersion":1,"position":[2180,580],"id":"6e1a277a-6cfc-4ff6-9080-467da05c08cf","name":"Zalo","credentials":{"zaloApi":{"id":"6QQUgXEXtt2uHLX6","name":"Zalo account"}}},{"parameters":{"content":"## Dùng trong trường hợp cần cài đặt sub-domain.\n(Bỏ qua bước này nếu bạn sử dụng domain)\n","height":300,"width":520},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[620,0],"id":"0a84f1df-3942-4bbe-b279-fe365161598f","name":"Sticky Note1"},{"parameters":{"content":"### Generate PKCE - Dùng trong trường hợp khi mình cần tạo mới accessToken.\n\n\n\n\n\n\n\n\n\n\n\n### Oauth Callback - Để nhận kết quả từ Zalo vào tạo ra accessToken","height":480,"width":520,"color":3},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[620,340],"id":"3cc0b766-9671-477b-ba15-ab66360f74f1","name":"Sticky Note2"},{"parameters":{"content":"### Ví dụ node AI Agent sẽ nhận message từ \n`{{ $json.message.text }}`","height":100,"width":260,"color":4},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[1720,420],"id":"9a058a57-d8f7-44a8-a1eb-f1adc35bdd36","name":"Sticky Note3"},{"parameters":{"content":"### Việc reply lại tin nhắn sẽ dựa vào\n`{{ $('Zalo Trigger').item.json.sender.id }}`","height":120,"width":320,"color":4},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[2100,420],"id":"85c94e22-fc79-4fe6-9be7-e29bc5004add","name":"Sticky Note4"},{"parameters":{"content":"# Chuẩn bị\n\n- Domain cho n8n\n- n8n-nodes-zalo-vn\n- Zalo OA account\n\n# Cài đặt\n\n1. Cài **n8n-nodes-zalo-vn** community node.\n2. Zalo OA\n    1. Cài đặt [https://developers.zalo.me/app/](https://developers.zalo.me/app/)\n        1. ID ứng dụng\n        2. Khoá bí mật của ứng dụng\n        3. OAID - https://oa.zalo.me/manage/oa\n    2. Xác thực domain\n        1. Domain\n            1. DNS - TXT setup\n            2. Xác thực\n        2. Sub-domain\n            1. Sử dụng Zalo Web Server Tool\n            2. Xác thực\n                1. Thiết lập đường dẫn từ internet đến server local \n            3. Tắt server sau khi xác thực xong\n    3. Setup Zalo Credentials ở n8n node\n    4. Setup Zalo On OAuth Callback\n        1. Lấy callback URL: ….\n    5. Setup Official Account Callback Url\n        1. Cập nhật OAuth Callback vừa lấy ở bước d(i)\n    6. Bật danh sách sự kiện webhook.\n    7. Đăng kí sử dụng API.\n    8. Tạo accessToken\n        1. Dùng Zalo Generate PKCE Parameters\n        2. Lấy callback url ở bước d(i)\n    9. Tạo Zalo Trigger\n        1. Lấy callback để setup vào Webhook của Zalo: ….\n","height":980,"width":520,"color":6},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[0,0],"id":"a55b9c6a-c4d2-4ebd-8133-c9116dffbc69","name":"Sticky Note5"}],"connections":{"Zalo Trigger":{"main":[[{"node":"AI Agent","type":"main","index":0}]]},"OpenAI Chat Model":{"ai_languageModel":[[{"node":"AI Agent","type":"ai_languageModel","index":0}]]},"Window Buffer Memory":{"ai_memory":[[{"node":"AI Agent","type":"ai_memory","index":0}]]},"AI Agent":{"main":[[{"node":"Zalo","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"8a93e607-d8dc-4cf3-930f-e40b73081665","triggerCount":2,"tags":[],"shared":[{"createdAt":"2025-06-06T01:37:50.264Z","updatedAt":"2025-06-06T01:37:50.264Z","role":"workflow:owner","workflowId":"V1K728o1OREtxxnt","projectId":"WbfPHUYYKS2tiNNo","project":{"createdAt":"2025-05-03T06:49:18.088Z","updatedAt":"2025-05-03T06:52:24.837Z","id":"WbfPHUYYKS2tiNNo","name":"charlie phan <scottyphan08@gmail.com>","type":"personal","icon":null,"description":null}}]},{"createdAt":"2025-06-10T02:48:46.345Z","updatedAt":"2025-06-10T06:24:27.014Z","id":"okGIWJvbxsGticuA","name":"Hóa đơn MS Team","active":false,"isArchived":false,"nodes":[{"parameters":{"promptType":"define","text":"Hãy phân tích hình ảnh và trả ra kết quả theo hướng dẫn","hasOutputParser":true,"options":{"systemMessage":"=Bạn là một chuyên gia phân tích hình ảnh. Nhiệm vụ của bạn là xem qua hình ảnh và trả ra kết quả theo hướng dẫn sau:\n\n1. Ngày phát sinh hoá đơn, định dạng yyyy-MM-dd (Nếu hoá đơn ghi khoản thời gian, thì lấy theo thời gian bắt đầu). Nó có thể nằm sau phần text \"Ngày\" hoặc \"Giờ in\"\nVí dụ:\n- 26/09/2003 12:00 => Trả ra kết quả \"2003-09-26\"\n- 03/10/2022 08:00 - 04/10/2022 09:00 => Trả ra kết quả \"2022-10-03\"\n2. Thông tin chi tiết hoá đơn theo format JSON:\n  {\n    \"product\": [\"Sản phẩm A\", \"Sản Phẩm B\"],\n    \"quantity\": [1,2],\n    \"unit_price\": [15000,3000],\n    \"revenue\": [15000,6000]\n  }\n\nTrong đó:\n- `product`: Tên các mặt hàng xuất hiện trong hoá đơn (ơ cột \"Tên Hàng\" hoặc \"Món\"). Ví dụ: Cà phê đá, bạc xỉu\n- `quantity`: Số lượng sản phẩm KH đã mua tương ứng của các mặt hàng (ở cột \"SL\").\n- `unit_price`: Đơn giá sản phẩm tương ứng (ở cột \"Đ.Giá\" hoặc \"Đ.GIÁ\")\n- `revenue`: Tổng tiền của mặt hàng đó trên hoá đơn, tính bằng `quantity` * `unit_price` (ở cột \"T.Tiền\" hoặc \"T.TIỀN\")\n\n\n### Output trả ra như sau:\n{\n  \"date\": \"Kết quả ngày dạng yyyy-MM-dd ở bước 1\",\n  \"details\":\n  {\n    \"product\": [\"Sản phẩm A\", \"Sản Phẩm B\"],\n    \"quantity\": [1,2],\n    \"unit_price\": [15000,3000],\n    \"revenue\": [15000,6000]\n  }\n}\n\n\n### Lưu ý quan trọng:\n- `quantity` luôn luôn > 0"}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":1.9,"position":[-40,140],"id":"dd070840-c86a-4014-b787-ac3a97f0889e","name":"AI Agent"},{"parameters":{"jsonSchemaExample":"{\n  \"date\": \"Kết quả ngày dạng yyyy-MM-dd ở bước 1\",\n  \"details\":\n  {\n    \"product\": [\"Sản phẩm A\", \"Sản Phẩm B\"],\n    \"quantity\": [1,2],\n    \"unit_price\": [15000,3000],\n    \"revenue\": [15000,6000]\n  }\n}"},"type":"@n8n/n8n-nodes-langchain.outputParserStructured","typeVersion":1.2,"position":[160,360],"id":"c712bd58-638e-4bcd-afa2-762b5bde627e","name":"Structured Output Parser"},{"parameters":{"jsCode":"const input = items[0].json;\nconst date = input.output.date;\nconst details = input.output.details;\n\nconst result = details.product.map((product, index) => ({\n  date: date,\n  product: product,\n  quantity: details.quantity[index],\n  unit_price: details.unit_price[index],\n  revenue: details.revenue[index]\n}));\n\nreturn result.map(item => ({ json: item }));"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[360,140],"id":"421e302f-0643-4e28-8e67-030e3a623176","name":"Convert"},{"parameters":{"modelName":"models/gemini-2.0-flash-thinking-exp-1219","options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatGoogleGemini","typeVersion":1,"position":[-60,360],"id":"91eaa4a2-f893-4e54-9b85-9b72995e624d","name":"flash think 1219","credentials":{"googlePalmApi":{"id":"VxuR4Ot4TSiJTVFk","name":"Google Gemini(PaLM) Api account"}}},{"parameters":{"operation":"append","documentId":{"__rl":true,"value":"1xCHDGIJoeMrPeS7qYMR0-qsaDH-jG13hHV3ktpbyMnM","mode":"list","cachedResultName":"Sales Hóa Đơn Demo","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1xCHDGIJoeMrPeS7qYMR0-qsaDH-jG13hHV3ktpbyMnM/edit?usp=drivesdk"},"sheetName":{"__rl":true,"value":"gid=0","mode":"list","cachedResultName":"Sales","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1xCHDGIJoeMrPeS7qYMR0-qsaDH-jG13hHV3ktpbyMnM/edit#gid=0"},"columns":{"mappingMode":"defineBelow","value":{"Date":"={{ $json.date }}","Product":"={{ $json.product }}","Quatity":"={{ $json.quantity }}","unit_price":"={{ $json.unit_price }}","Revenue":"={{ $json.revenue }}"},"matchingColumns":[],"schema":[{"id":"Date","displayName":"Date","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"Product","displayName":"Product","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"Quatity","displayName":"Quatity","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"unit_price","displayName":"unit_price","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"Revenue","displayName":"Revenue","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.googleSheets","typeVersion":4.5,"position":[580,140],"id":"ba59d8a2-c890-4884-a251-d4fd17dcc6e0","name":"Thêm Record","credentials":{"googleSheetsOAuth2Api":{"id":"bdeAZgAgEmqpgnr1","name":"Google Sheets account"}}},{"parameters":{"fieldsToSummarize":{"values":[{"aggregation":"sum","field":"Revenue"}]},"options":{}},"type":"n8n-nodes-base.summarize","typeVersion":1.1,"position":[800,140],"id":"f30ee40a-c418-4173-bd13-016ef5866ec8","name":"Tổng Bill"},{"parameters":{"rules":{"values":[{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"leftValue":"={{ $json.message.photo }}","rightValue":"","operator":{"type":"array","operation":"exists","singleValue":true},"id":"5bbc4bad-d22e-47fc-a2e4-d10c3ae4d57c"}],"combinator":"and"},"renameOutput":true,"outputKey":"photo"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"3d8b9252-9102-42f8-bdd4-f8978f70aef4","leftValue":"={{ $json.message.text }}","rightValue":"","operator":{"type":"string","operation":"exists","singleValue":true}}],"combinator":"and"},"renameOutput":true,"outputKey":"report"}]},"options":{}},"type":"n8n-nodes-base.switch","typeVersion":3.2,"position":[-400,160],"id":"8d9b3c02-c5b9-4cc8-9c69-6fef049de1e2","name":"Switch"},{"parameters":{"assignments":{"assignments":[{"id":"afb700e6-0cd2-4472-a60f-8718c04d260c","name":"date","value":"={{ $json.message.text.split(\" \")[1] }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-180,520],"id":"8254cdfa-7275-47a1-ae69-7628300ccd8d","name":"Get Date"},{"parameters":{"documentId":{"__rl":true,"value":"1xCHDGIJoeMrPeS7qYMR0-qsaDH-jG13hHV3ktpbyMnM","mode":"list","cachedResultName":"Sales Hóa Đơn Demo","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1xCHDGIJoeMrPeS7qYMR0-qsaDH-jG13hHV3ktpbyMnM/edit?usp=drivesdk"},"sheetName":{"__rl":true,"value":267729926,"mode":"list","cachedResultName":"Daily","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1xCHDGIJoeMrPeS7qYMR0-qsaDH-jG13hHV3ktpbyMnM/edit#gid=267729926"},"filtersUI":{"values":[{"lookupColumn":"Date","lookupValue":"={{ $json.date }}"}]},"options":{}},"type":"n8n-nodes-base.googleSheets","typeVersion":4.5,"position":[40,520],"id":"a998b03c-b93c-40d9-8965-2e6e6dd48bf8","name":"Get Data","credentials":{"googleSheetsOAuth2Api":{"id":"bdeAZgAgEmqpgnr1","name":"Google Sheets account"}}},{"parameters":{"fieldsToSummarize":{"values":[{"aggregation":"sum","field":"Revenue"},{"field":"Product"}]},"options":{}},"type":"n8n-nodes-base.summarize","typeVersion":1.1,"position":[260,520],"id":"bbb84bcc-5680-4b76-ba7c-4f775e3d5e20","name":"Report"},{"parameters":{"model":"claude-3-5-haiku-20241022","options":{"temperature":0.3}},"type":"@n8n/n8n-nodes-langchain.lmChatAnthropic","typeVersion":1.2,"position":[-40,1100],"id":"32f3d522-49ea-4a88-b9e0-e16b3d0c21df","name":"Anthropic Chat Model3","credentials":{"anthropicApi":{"id":"l60iuyLpILCOKtuI","name":"Anthropic account"}}},{"parameters":{"sessionIdType":"customKey","sessionKey":"={{ $('Microsoft Teams').item.json.id }}"},"type":"@n8n/n8n-nodes-langchain.memoryPostgresChat","typeVersion":1.3,"position":[180,1160],"id":"9aa0e368-d0ee-4045-bfe0-926cf6067a1e","name":"Postgres Chat Memory2","credentials":{"postgres":{"id":"lPXyj3Ypf5YeZpp3","name":"Postgres account Local"}}},{"parameters":{"httpMethod":"POST","path":"PNJ_chat","options":{}},"type":"n8n-nodes-base.webhook","typeVersion":2,"position":[-760,220],"id":"26cf3348-d71c-4d1b-beb6-cac02ac09551","name":"Webhook","webhookId":"67ff8d99-ea96-4a62-8c30-270427f3721e"},{"parameters":{"resource":"chatMessage","operation":"get","chatId":{"__rl":true,"value":"19:1b016c542cc54f3483ec3c954ad1a5b6@thread.v2","mode":"list","cachedResultName":"PNJP-CHATBOT (group)","cachedResultUrl":"https://teams.microsoft.com/l/chat/19%3A1b016c542cc54f3483ec3c954ad1a5b6%40thread.v2/0?tenantId=6ea838f0-f529-455e-9738-147060990b55"},"messageId":"={{ $json.body.message_ID }}"},"type":"n8n-nodes-base.microsoftTeams","typeVersion":2,"position":[-560,240],"id":"d7b7bb3b-9cb0-4195-ae97-e9f4f83fea9a","name":"Microsoft Teams","webhookId":"197faa50-4d98-45e1-9599-30ac566f2d1e","credentials":{"microsoftTeamsOAuth2Api":{"id":"14g7k9M4SZPkSI3G","name":"Microsoft Teams account"}}},{"parameters":{"promptType":"define","text":"={{ $json.body.content }}","options":{"systemMessage":"=System Prompt cho PNJ Chatbot Tư Vấn Nữ Trang\nVAI TRÒ VÀ NHÂN CÁCH\nBạn là AI chatbot tư vấn chuyên nghiệp của PNJ (Phú Nhuận Jewelry), thương hiệu trang sức hàng đầu Việt Nam. Bạn có tính cách thân thiện, nhiệt tình, chuyên nghiệp và luôn đặt nhu cầu khách hàng lên hàng đầu.\nLỜI CHÀO MẶC ĐỊNH\nLuôn bắt đầu cuộc trò chuyện bằng:\n\"PNJ mến chào Quý khách! PNJ có thể hỗ trợ được gì cho Quý khách ạ?\nPNJ sẽ hỗ trợ Quý khách chọn được mẫu trang sức thật phù hợp nha. Quý khách có thể chia sẻ thêm giúp PNJ:\n\nPhong cách Quý khách thích?\nNgân sách mong muốn?\nQuý khách muốn chọn nhẫn đôi theo bộ hay phối riêng từng chiếc?\"\n\nNGUYÊN TẮC TƯ VẤN\n\nCHỈ SỬ DỤNG THÔNG TIN TỪ CƠ SỞ DỮ LIỆU: Chỉ tư vấn dựa trên sản phẩm có trong database. Không bịa đặt hoặc tạo ra thông tin sản phẩm.\nKHI KHÔNG CÓ THÔNG TIN PHÙ HỢP: Sử dụng cách trả lời dễ thương và gợi ý khách hàng:\n\n\"Ôi, sản phẩm Quý khách tìm hiện tại chưa có trong hệ thống của PNJ rồi ạ 😊\"\n\"PNJ gợi ý Quý khách có thể xem thêm những mẫu tuyệt đẹp khác nhé!\"\n\"Hoặc Quý khách có thể ghé thăm showroom để được tư vấn trực tiếp và xem nhiều mẫu hơn ạ!\"\n\n\nCÁCH GIỚI THIỆU SẢN PHẨM:\n\nTên sản phẩm đầy đủ\nGiá cả (định dạng: 27.288.000 VNĐ)\nKích thước có sẵn\nTrọng lượng\nLoại đá chính và phụ\nPhong cách thiết kế\nMô tả chi tiết hấp dẫn\nGợi ý phù hợp với đối tượng khách hàng\n\n\n\nTHÔNG TIN ĐỊA CHỈ SHOWROOM\nHỒ CHÍ MINH:\nTrung Tâm Kim Hoàn PNJ Next\n📍 196-200 Hai Bà Trưng, P. Đa Kao, Quận 1, TP. Hồ Chí Minh\n📞 (028) 3915 8953 - (028) 3915 8952\n🛍️ Mặt hàng: Trang sức Vàng, Bạc, Đồng hồ\nHÀ NỘI:\nTrung Tâm Kim Hoàn PNJ NEXT Cầu Giấy\n📍 Số 110 Cầu Giấy, P. Quan Hoa, Q. Cầu Giấy, TP. Hà Nội\n📞 (024) 3952 2299\n🛍️ Mặt hàng: Trang sức Bạc, Trang sức Vàng, Đồng hồ\nĐÀ NẴNG:\nTrung Tâm Kim Hoàn PNJ Next 123 Nguyễn Văn Linh\n📍 123 Nguyễn Văn Linh, P. Nam Dương, Q. Hải Châu, TP. Đà Nẵng\n📞 (0236) 3651 588\n🛍️ Mặt hàng: Trang sức Bạc, Trang sức Vàng, Đồng hồ\nCÁCH THỨC GIAO TIẾP\n\nXưng hô: Luôn dùng \"PNJ\" khi tự giới thiệu, \"Quý khách\" khi gọi khách hàng\nNgôn ngữ: Lịch sự, thân thiện, chuyên nghiệp\nEmoji: Sử dụng tiết kiệm và phù hợp (😊, ✨, 💎, 👑)\nTông điệu: Nhiệt tình nhưng không quá áp đặt\n\nCÁC TÌNH HUỐNG THƯỜNG GẶP\n1. Khách hỏi về sản phẩm cụ thể:\n\nKiểm tra database\nCung cấp thông tin chi tiết nếu có\nGợi ý sản phẩm tương tự nếu không có\n\n2. Khách hỏi về giá:\n\nLuôn ghi rõ đơn vị VNĐ\nĐịnh dạng số có dấu chấm phân cách (VD: 27.288.000 VNĐ)\nThông báo giá có thể thay đổi và khuyến khích liên hệ trực tiếp\n\n3. Khách hỏi về size:\n\nCung cấp các size có sẵn\nGợi ý đo size tại showroom để chính xác\n\n4. Khách so sánh sản phẩm:\n\nPhân tích ưu điểm của từng sản phẩm\nDựa vào nhu cầu và sở thích để tư vấn\n\nVÍ DỤ MẪU SẢN PHẨM TRONG DATABASE:\nNhẫn Kim cương Vàng Trắng 14K PNJ Trầu Cau DDDDW013301\n- Giá: 27.288.000 VNĐ\n- Size: 11, 12, 13\n- Trọng lượng: 7.46794 phân\n- Đá chính: Kim cương\n- Đá phụ: Kim cương  \n- Phong cách: Truyền thống, nhẹ nhàng, nữ tính\n- Thương hiệu: PNJ\n- Mô tả: Thiết kế lấy cảm hứng từ trầu têm cánh phượng, kim cương 57 giác cắt chuẩn xác...\nLƯU Ý QUAN TRỌNG\n\nKhông bao giờ tạo ra thông tin sản phẩm không có trong database\nLuôn khuyến khích khách hàng ghé showroom để trải nghiệm trực tiếp\nKhi không chắc chắn, hãy thành thật và gợi ý liên hệ trực tiếp\nLuôn kết thúc bằng câu hỏi để duy trì cuộc trò chuyện\nTập trung vào nhu cầu và sở thích của khách hàng để tư vấn phù hợp","maxIterations":10}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":1.7,"position":[340,760],"id":"1495b7ee-432a-4941-84fa-eb4fe256847a","name":"Data Assistant","executeOnce":true},{"parameters":{"conditions":{"options":{"caseSensitive":false,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"e9f58adc-015b-4e2b-8538-26491b64c22c","leftValue":"={{ $json.from.application.applicationIdentityType }}","rightValue":"bot","operator":{"type":"string","operation":"notEquals"}}],"combinator":"and"},"options":{"ignoreCase":true}},"type":"n8n-nodes-base.filter","typeVersion":2.2,"position":[100,760],"id":"6fbbd2ec-2289-4680-b5f4-ad4fea3ea4c2","name":"Filter"},{"parameters":{"mode":"retrieve-as-tool","toolName":"PNJProduct","toolDescription":"dienmay qdrant","qdrantCollection":{"__rl":true,"value":"PNJ_Product","mode":"list","cachedResultName":"PNJ_Product"},"topK":20,"options":{}},"type":"@n8n/n8n-nodes-langchain.vectorStoreQdrant","typeVersion":1.1,"position":[520,1080],"id":"bdb06001-2b73-4f25-ac28-ad9e9a8669ad","name":"Qdrant Vector Store","credentials":{"qdrantApi":{"id":"RzFNlgEENHFNmlmD","name":"QdrantApi account"}}},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.embeddingsOpenAi","typeVersion":1.2,"position":[560,1260],"id":"d16d5862-4af0-4a86-970c-4ea9db3b4978","name":"Embeddings OpenAI","credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{"resource":"chatMessage","chatId":{"__rl":true,"value":"19:1b016c542cc54f3483ec3c954ad1a5b6@thread.v2","mode":"list","cachedResultName":"PNJP-CHATBOT (group)","cachedResultUrl":"https://teams.microsoft.com/l/chat/19%3A1b016c542cc54f3483ec3c954ad1a5b6%40thread.v2/0?tenantId=6ea838f0-f529-455e-9738-147060990b55"},"contentType":"html","message":"={{ $json.html }}","options":{"includeLinkToWorkflow":false}},"type":"n8n-nodes-base.microsoftTeams","typeVersion":2,"position":[1120,340],"id":"3716a53d-ffb2-404f-bc4c-a64f66911c7f","name":"Microsoft Teams2","webhookId":"6f4c8394-54b7-4dbd-bbe8-018a6bae3788","credentials":{"microsoftTeamsOAuth2Api":{"id":"14g7k9M4SZPkSI3G","name":"Microsoft Teams account"}}},{"parameters":{"mode":"markdownToHtml","markdown":"={{ $json.output }}","destinationKey":"html","options":{}},"type":"n8n-nodes-base.markdown","typeVersion":1,"position":[1020,120],"id":"716a782a-11fb-40d7-90a7-5369df778f30","name":"Markdown"},{"parameters":{"respondWith":"json","responseBody":"{\n  \"output\": \"Xin chào quí khách thân yêu.Nếu bạn muốn hỏi về sản phẩm điện máy thì gọi @chat nhé\"\n}","options":{}},"type":"n8n-nodes-base.respondToWebhook","typeVersion":1.2,"position":[-540,1020],"id":"7e6081af-8720-4a62-8847-8d193478c6ad","name":"Respond to Webhook"},{"parameters":{"rules":{"values":[{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"leftValue":"={{ $json.body.content }}","rightValue":"@PNJ","operator":{"type":"string","operation":"contains"},"id":"a0d82592-6656-4d01-9a23-52aa47a9aabd"}],"combinator":"and"}},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"bfc26640-dd9e-4b46-89ac-ab0417c378c7","leftValue":"={{ $json.body.content }}","rightValue":"@PNJ","operator":{"type":"string","operation":"notContains"}}],"combinator":"and"}}]},"options":{}},"type":"n8n-nodes-base.switch","typeVersion":3.2,"position":[-100,860],"id":"9f7f4ff2-32ec-409a-9e76-52cda9395068","name":"Switch1"}],"connections":{"Structured Output Parser":{"ai_outputParser":[[{"node":"AI Agent","type":"ai_outputParser","index":0}]]},"AI Agent":{"main":[[{"node":"Convert","type":"main","index":0}]]},"flash think 1219":{"ai_languageModel":[[{"node":"AI Agent","type":"ai_languageModel","index":0}]]},"Convert":{"main":[[{"node":"Thêm Record","type":"main","index":0}]]},"Thêm Record":{"main":[[{"node":"Tổng Bill","type":"main","index":0}]]},"Tổng Bill":{"main":[[{"node":"Markdown","type":"main","index":0}]]},"Switch":{"main":[[{"node":"AI Agent","type":"main","index":0}],[{"node":"Get Date","type":"main","index":0}]]},"Get Date":{"main":[[{"node":"Get Data","type":"main","index":0}]]},"Get Data":{"main":[[{"node":"Report","type":"main","index":0}]]},"Report":{"main":[[{"node":"Microsoft Teams2","type":"main","index":0}]]},"Anthropic Chat Model3":{"ai_languageModel":[[{"node":"Data Assistant","type":"ai_languageModel","index":0}]]},"Postgres Chat Memory2":{"ai_memory":[[{"node":"Data Assistant","type":"ai_memory","index":0}]]},"Webhook":{"main":[[{"node":"Microsoft Teams","type":"main","index":0}]]},"Microsoft Teams":{"main":[[{"node":"Switch","type":"main","index":0}]]},"Data Assistant":{"main":[[]]},"Filter":{"main":[[{"node":"Data Assistant","type":"main","index":0}]]},"Qdrant Vector Store":{"ai_tool":[[{"node":"Data Assistant","type":"ai_tool","index":0}]]},"Embeddings OpenAI":{"ai_embedding":[[{"node":"Qdrant Vector Store","type":"ai_embedding","index":0}]]},"Markdown":{"main":[[{"node":"Microsoft Teams2","type":"main","index":0}]]},"Switch1":{"main":[[{"node":"Filter","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"624a6d87-bb23-41cf-9fb8-128264cdd38d","triggerCount":0,"tags":[],"shared":[{"createdAt":"2025-06-10T02:48:46.345Z","updatedAt":"2025-06-10T02:48:46.345Z","role":"workflow:owner","workflowId":"okGIWJvbxsGticuA","projectId":"WbfPHUYYKS2tiNNo","project":{"createdAt":"2025-05-03T06:49:18.088Z","updatedAt":"2025-05-03T06:52:24.837Z","id":"WbfPHUYYKS2tiNNo","name":"charlie phan <scottyphan08@gmail.com>","type":"personal","icon":null,"description":null}}]},{"createdAt":"2025-06-16T07:51:55.585Z","updatedAt":"2025-06-18T06:59:03.072Z","id":"xvErFc5EdddzOvAT","name":"RAG Mistral","active":false,"isArchived":false,"nodes":[{"parameters":{"triggerOn":"folder","path":"/data/shared","events":["add"],"options":{"followSymlinks":true,"usePolling":true}},"id":"c8748991-16cf-4efd-954a-4a902270f25a","name":"Local File Trigger","type":"n8n-nodes-base.localFileTrigger","position":[-2820,160],"typeVersion":1},{"parameters":{"jsonMode":"expressionData","jsonData":"={{ $json.data }}","options":{"metadata":{"metadataValues":[{"name":"project","value":"={{ $('Settings').item.json.project }}"},{"name":"filename","value":"={{ $('Settings').item.json.filename }}"}]}}},"id":"5dd83415-e7bf-48a3-baaa-1db8bd92a4db","name":"Default Data Loader","type":"@n8n/n8n-nodes-langchain.documentDefaultDataLoader","position":[-1460,620],"typeVersion":1},{"parameters":{"chunkSize":2000,"options":{}},"id":"67b80b26-06cb-4262-92dc-c7df78964dc5","name":"Recursive Character Text Splitter","type":"@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter","position":[-1320,800],"typeVersion":1},{"parameters":{"options":{}},"id":"cab91b77-02ab-49db-b729-7a1b5259e48e","name":"Embeddings Mistral Cloud","type":"@n8n/n8n-nodes-langchain.embeddingsMistralCloud","position":[-2140,720],"typeVersion":1},{"parameters":{"model":"open-mixtral-8x7b","options":{}},"id":"fc905410-9925-4dda-98ce-f4b1ddb16922","name":"Mistral Cloud Chat Model","type":"@n8n/n8n-nodes-langchain.lmChatMistralCloud","position":[-620,1220],"typeVersion":1},{"parameters":{"model":"open-mixtral-8x7b","options":{}},"id":"cd9ee584-5063-4c9b-b7ac-d8c371ea328f","name":"Mistral Cloud Chat Model1","type":"@n8n/n8n-nodes-langchain.lmChatMistralCloud","position":[-2280,760],"typeVersion":1},{"parameters":{"assignments":{"assignments":[{"id":"da64ffde-1e8f-478d-baea-59fc05e6d3ce","name":"data","type":"string","value":"={{ $json.text }}"}]},"options":{}},"id":"25ea4a92-4e7f-4e7c-9bad-04dbced6b2ed","name":"Prep Incoming Doc","type":"n8n-nodes-base.set","position":[-2060,320],"typeVersion":3.3},{"parameters":{"assignments":{"assignments":[{"id":"df327b01-961c-4a49-8455-58c3fbff111a","name":"project","type":"string","value":"={{ $json.path.split('/').slice(0, 4)[3] }}"},{"id":"6b7d26f9-3a38-417e-85d0-4e9d42476465","name":"path","type":"string","value":"={{ $json.path }}"},{"id":"bb4471c7-d894-4739-99a6-4be247794ffa","name":"filename","type":"string","value":"={{ $json.path.split('/').last() }}"}]},"options":{}},"id":"c5f75c4a-8a03-4578-a00d-607643fe84d3","name":"Settings","type":"n8n-nodes-base.set","position":[-2640,160],"typeVersion":3.3},{"parameters":{"mode":"chooseBranch"},"id":"aed63ac3-f854-45db-bc4f-2357b3bb713f","name":"Merge","type":"n8n-nodes-base.merge","position":[-1360,320],"typeVersion":2.1},{"parameters":{"mode":"raw","jsonOutput":"{\n  \"docs\": [\n    {\n      \"filename\": \"study_guide.md\",\n      \"title\": \"Study Guide\",\n      \"description\": \"A Study Guide is a consolidated resource designed to aid learning. This guide includes three key elements: * A short answer quiz accompanied by an answer key to test comprehension. * A curated list of long-form essay questions to encourage deeper analysis and synthesis of the material. * A glossary of key terms to reinforce understanding of important concepts.\"\n    },\n    {\n      \"filename\": \"timeline.md\",\n      \"title\": \"Timeline\",\n      \"description\": \"A Timeline organizes all significant events described in the sources you have uploaded in chronological order. This ordered list makes it easier to understand the sequence of events and their connection to the broader context of your sources. In addition to the list of events, the Timeline also provides a “cast of characters,” which comprises short biographical sketches of all the important people mentioned in your uploaded sources. These short biographies can help you quickly grasp the roles of various individuals involved in the events described by the Timeline.\"\n    },\n    {\n      \"filename\": \"briefing_doc.md\",\n      \"title\": \"Briefing Doc\",\n      \"description\": \"A Briefing Doc identifies and presents the most important facts and insights from the sources in an easy-to-understand outline format. This format is designed to provide a concise overview of the key takeaways from the uploaded materials.\"\n    }\n  ]\n}\n","options":{}},"id":"4be93356-d295-460f-948a-e14acd8a17f9","name":"Get Doc Types","type":"n8n-nodes-base.set","position":[-960,320],"executeOnce":true,"typeVersion":3.3},{"parameters":{"fieldToSplitOut":"docs","options":{}},"id":"fa0b1d9a-bd4d-450c-9782-02e81ced7d9e","name":"Split Out Doc Types","type":"n8n-nodes-base.splitOut","position":[-800,320],"typeVersion":1},{"parameters":{"options":{}},"id":"24c5cd3b-5fcd-4944-aaab-8610eab157cb","name":"For Each Doc Type...","type":"n8n-nodes-base.splitInBatches","position":[-620,320],"typeVersion":3},{"parameters":{"options":{}},"id":"8ab9a8a2-5498-4044-97f7-0e3677c8dbf5","name":"Item List Output Parser","type":"@n8n/n8n-nodes-langchain.outputParserItemList","position":[-120,740],"typeVersion":1},{"parameters":{},"id":"bc1bf726-9223-4b76-8fcc-95f6f369bda4","name":"Vector Store Retriever","type":"@n8n/n8n-nodes-langchain.retrieverVectorStore","position":[240,740],"typeVersion":1},{"parameters":{"options":{}},"id":"3a131cd5-8ef9-4608-a0ab-7c030b31e851","name":"Embeddings Mistral Cloud1","type":"@n8n/n8n-nodes-langchain.embeddingsMistralCloud","position":[-60,1280],"typeVersion":1},{"parameters":{"qdrantCollection":{"__rl":true,"mode":"list","value":"storynotes","cachedResultName":"storynotes"},"options":{}},"id":"78b9c0cb-7e16-4d3a-aeaa-031840ddcfe7","name":"Qdrant Vector Store1","type":"@n8n/n8n-nodes-langchain.vectorStoreQdrant","position":[40,820],"typeVersion":1,"credentials":{"qdrantApi":{"id":"RzFNlgEENHFNmlmD","name":"QdrantApi account"}}},{"parameters":{"options":{}},"id":"31c15f42-dacf-4b40-a3dc-dd030bb45fb8","name":"Mistral Cloud Chat Model2","type":"@n8n/n8n-nodes-langchain.lmChatMistralCloud","position":[-280,1240],"typeVersion":1},{"parameters":{"fieldToSplitOut":"response","options":{}},"id":"2e6bbe6c-050e-41b5-b913-9fc092901d23","name":"Split Out","type":"n8n-nodes-base.splitOut","position":[0,580],"typeVersion":1},{"parameters":{"fieldsToAggregate":{"fieldToAggregate":[{"fieldToAggregate":"response.text"}]},"options":{}},"id":"bbafddf9-1607-4261-b726-45f63e20f470","name":"Aggregate","type":"n8n-nodes-base.aggregate","position":[440,580],"typeVersion":1},{"parameters":{"model":"open-mixtral-8x7b","options":{}},"id":"b8c66873-6efe-4714-a805-c12ce9f5d1fc","name":"Mistral Cloud Chat Model3","type":"@n8n/n8n-nodes-langchain.lmChatMistralCloud","position":[620,1300],"typeVersion":1},{"parameters":{"promptType":"define","text":"={{ $json.response }}","options":{}},"id":"abd9c734-f817-4279-a1c1-bce06abf495d","name":"Discover","type":"@n8n/n8n-nodes-langchain.chainRetrievalQa","position":[140,580],"typeVersion":1.3},{"parameters":{},"id":"a713167e-b6cd-4dbb-ad4e-89eb7b5a6a7a","name":"2secs","type":"n8n-nodes-base.wait","position":[920,960],"webhookId":"ec58ab18-03c5-4b58-bc2e-24415a236c72","typeVersion":1.1},{"parameters":{"assignments":{"assignments":[{"id":"b38546b2-47c4-4967-a2d7-98aebd589e95","name":"data","type":"string","value":"={{ $json.text }}"},{"id":"a263519a-aa05-410a-b4f0-f5e22cc5058c","name":"path","type":"string","value":"={{ $('Prep For AI').item.json.path }}"},{"id":"ec1687d6-0ea9-460f-b9d4-ae4a7e229e12","name":"filename","type":"string","value":"={{ $('Prep For AI').item.json.name }}"}]},"options":{}},"id":"59e69cb0-355b-4fd2-84cb-959bd8d32b29","name":"Get Generated Documents","type":"n8n-nodes-base.set","position":[-280,140],"typeVersion":3.3},{"parameters":{"promptType":"define","text":"=## Document\n{{ $json.text.join('\\n') }}","messages":{"messageValues":[{"message":"=Your job is to create a {{ $('For Each Doc Type...').item.json.title }} for the given document. {{ $('For Each Doc Type...').item.json.description }}\n\nGenerate a  {{ $('For Each Doc Type...').item.json.title }} for the given document. If questions are generated, generate the answers alongside them. Format your response in markdown; use \"#\" to format headings, use \"*\" to format lists."}]}},"id":"34207a9c-dc6d-4943-9c6e-2381d026f8d8","name":"Generate","type":"@n8n/n8n-nodes-langchain.chainLlm","position":[580,580],"typeVersion":1.4},{"parameters":{"assignments":{"assignments":[{"id":"5c864125-c884-4d33-b0ed-e3eecd354196","name":"id","type":"string","value":"={{ $('Settings').first().json.filename.hash() }}"},{"id":"93ac14c1-ae97-4ef2-a66f-6c1110f3b0fc","name":"project","type":"string","value":"={{ $('Settings').first().json.project }}"},{"id":"fafd16b9-0002-4f7c-89d0-29788f8ec472","name":"path","type":"string","value":"={{ $('Settings').first().json.path }}"},{"id":"5a5860ba-918b-4fb8-b18c-96c1cd22091a","name":"name","type":"string","value":"={{ $('Settings').first().json.filename }}"},{"id":"1a1caf65-85d8-4f74-a3be-503ccfc0b2c9","name":"summary","type":"string","value":"={{ $('Summarization Chain').first().json.response.text }}"}]},"options":{}},"id":"112acaa4-f515-4709-b7c2-34d4a854e792","name":"Prep For AI","type":"n8n-nodes-base.set","position":[-1200,320],"typeVersion":3.3},{"parameters":{"operation":"toText","sourceProperty":"={{ $json.data }}","options":{}},"id":"e3d4f150-e35e-491b-b5e2-ab3a6aa78dcb","name":"To Binary","type":"n8n-nodes-base.convertToFile","position":[-100,140],"typeVersion":1.1},{"parameters":{"operation":"write","fileName":"={{\n  $('Get Generated Documents').item.json.path.replace(\n    $('Get Generated Documents').item.json.path.split('/').last(),\n    $('Get Generated Documents').item.json.filename.substring(0,21) + '...' + $('Split Out Doc Types').item.json.title + '.md'\n  )\n}}","options":{}},"id":"0fc0920d-9fee-4891-bdd9-fe1928492514","name":"Export to Folder","type":"n8n-nodes-base.readWriteFile","position":[60,140],"typeVersion":1},{"parameters":{"rules":{"values":[{"conditions":{"options":{"leftValue":"","caseSensitive":true,"typeValidation":"strict"},"combinator":"and","conditions":[{"operator":{"type":"string","operation":"equals"},"leftValue":"={{ $json.fileType }}","rightValue":"pdf"}]},"renameOutput":true,"outputKey":"pdf"},{"conditions":{"options":{"leftValue":"","caseSensitive":true,"typeValidation":"strict"},"combinator":"and","conditions":[{"id":"3a5f509d-46fe-490c-95f0-35124873c63e","operator":{"name":"filter.operator.equals","type":"string","operation":"equals"},"leftValue":"={{ $json.fileType }}","rightValue":"docx"}]},"renameOutput":true,"outputKey":"docx"},{"conditions":{"options":{"leftValue":"","caseSensitive":true,"typeValidation":"strict"},"combinator":"and","conditions":[{"id":"75188d2f-4bea-44ea-a579-9b9a1bd1ea93","operator":{"type":"object","operation":"exists","singleValue":true},"leftValue":"={{ $json }}","rightValue":""}]},"renameOutput":true,"outputKey":"everything else"}]},"options":{}},"id":"c43a67e2-b585-4ca4-86e8-5c3fe99c774e","name":"Get FileType","type":"n8n-nodes-base.switch","position":[-2480,320],"typeVersion":3},{"parameters":{"fileSelector":"={{ $json.path }}","options":{}},"id":"579f49c7-c5c8-4679-b891-dbc1e909f53d","name":"Import File","type":"n8n-nodes-base.readWriteFile","position":[-2640,320],"typeVersion":1},{"parameters":{"operation":"pdf","options":{}},"id":"27b1c097-2a6c-48bb-acb9-8b811a0a0ce9","name":"Extract from PDF","type":"n8n-nodes-base.extractFromFile","position":[-2280,160],"typeVersion":1},{"parameters":{"operation":"ods","options":{}},"id":"690d48d2-6a7d-4a97-9583-37672d09c89d","name":"Extract from DOCX","type":"n8n-nodes-base.extractFromFile","position":[-2280,320],"typeVersion":1},{"parameters":{"operation":"text","options":{}},"id":"178b864d-6e10-490a-b754-b7233e1e41f0","name":"Extract from TEXT","type":"n8n-nodes-base.extractFromFile","position":[-2280,480],"typeVersion":1},{"parameters":{"chunkSize":4000,"options":{}},"id":"bde40bb7-3346-483d-916f-64d0a5d6be9d","name":"Summarization Chain","type":"@n8n/n8n-nodes-langchain.chainSummarization","position":[-1760,160],"typeVersion":2},{"parameters":{"content":"## Step 1. Watch Folder and Import New Documents\n[Read more about Local File Trigger](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.localfiletrigger)\n\nWith n8n's local file trigger, we're able to trigger the workflow when files are created in our target folder. We still have to import them however as the trigger will only give the file's path. The \"Extract From\" node is used to get at the file's contents.","height":694.0931000693263,"width":995.1475972814769,"color":7},"id":"0deb8d17-e0a4-4e68-9fd4-179de898b376","name":"Sticky Note","type":"n8n-nodes-base.stickyNote","position":[-2900,-20],"typeVersion":1},{"parameters":{"content":"## Step 2. Summarise and Vectorise Document Contents\n[Learn more about using the Qdrant VectorStore](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.vectorstoreqdrant)\n\nCapturing the document into our vector store is intended for a technique we'll use later known as Retrieval Augumented Generation or \"RAG\" for short. For our scenario, this allows our LLM to retrieve context more efficiently which produces better respsonses.","height":949.8141899605673,"width":824.3300768713589,"color":7},"id":"eb55c3a0-4ee6-48ef-adf7-ee3c945d2dd6","name":"Sticky Note1","type":"n8n-nodes-base.stickyNote","position":[-1880,-20],"typeVersion":1},{"parameters":{"content":"## Step 3. Loop through Templates\n\nWe'll ask the LLM to help us generate 3 types of notes from the imported source document. These notes are intended to breakdown the content for faster study. Our templates for this demo are:\n(1) **Study guide**\n(2) **Briefing document**\n(3) **Timeline**","height":485.0226378812345,"width":591.09953935829,"color":7},"id":"e5458956-05ce-456d-baf7-3fe5d5046f71","name":"Sticky Note2","type":"n8n-nodes-base.stickyNote","position":[-1020,60],"typeVersion":1},{"parameters":{"content":"## Step 4. Use AI Agents to Query and Generate Template Documents\n[Read more about using the Question & Answer Retrieval Chain](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.chainretrievalqa)\n\nn8n allows us to easily use a chain of LLMs as agents which can work together to handle any task!\nHere the agents generate questions to explore the content of the source document and use the answers to generate the template. ","height":806.6560661824452,"width":1500.7886103732135,"color":7},"id":"8a3479b6-8cd4-495d-a938-a2ef1a62b01e","name":"Sticky Note3","type":"n8n-nodes-base.stickyNote","position":[-400,380],"typeVersion":1},{"parameters":{"content":"## Step 5. Export Generated Templates To Folder\n[Learn more about writing to the local filesystem](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.filesreadwrite)\n\nFinally, the AI generated documents can now be exported to disk. This workflow makes it easy to generate any kind of document from various source material and can be used for training and sales.","height":384.22073222791266,"width":771.8710855215123,"color":7},"id":"9a5008b4-e738-4817-ab51-77c1bacd150b","name":"Sticky Note4","type":"n8n-nodes-base.stickyNote","position":[-400,-40],"typeVersion":1},{"parameters":{"mode":"insert","qdrantCollection":{"__rl":true,"mode":"list","value":"storynotes","cachedResultName":"storynotes"},"options":{}},"id":"5139e402-a674-44b8-b852-7b3943767646","name":"Qdrant Vector Store","type":"@n8n/n8n-nodes-langchain.vectorStoreQdrant","position":[-1680,420],"typeVersion":1,"credentials":{"qdrantApi":{"id":"RzFNlgEENHFNmlmD","name":"QdrantApi account"}}},{"parameters":{"content":"## Try It Out! \n\n### This workflow automates generating notes from a source document.\n* It watches a target folder to pick up new files.\n* When a new file is detected, it saves the contents of the file in a vectorstore.\n* multiple AI agents guided by a templates list, generate the predetermined notes.\n* These notes are then export alongside the original source file for the user.\n\n\n### Need Help?\nJoin the [Discord](https://discord.com/invite/XPKeKXeB7d) or ask in the [Forum](https://community.n8n.io/)!\n\nHappy Hacking!","height":401.0080676370763,"width":390.63004227317265},"id":"d67e90b5-0f42-4bb9-87c1-177feaf2c3de","name":"Sticky Note5","type":"n8n-nodes-base.stickyNote","position":[-3320,-20],"typeVersion":1},{"parameters":{"promptType":"define","text":"=## document summary\n {{ $('Prep For AI').item.json.summary }}","hasOutputParser":true,"messages":{"messageValues":[{"message":"=Given the following document summary, what questions would you ask to create a {{ $('For Each Doc Type...').item.json.title }} for the document? Generate 5 questions."}]}},"id":"47ff780d-b8f0-41ca-ac9e-8952bf796a20","name":"Interview","type":"@n8n/n8n-nodes-langchain.chainLlm","position":[-300,580],"typeVersion":1.4},{"parameters":{"content":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n### 💡Add your own templates here!\n","height":295.46359440513226,"width":172.26820279743384},"id":"0c32ce57-ed0d-4fce-8fbd-a83a224708d2","name":"Sticky Note6","type":"n8n-nodes-base.stickyNote","position":[-880,400],"typeVersion":1},{"parameters":{"model":{"__rl":true,"mode":"list","value":"claude-3-7-sonnet-20250219","cachedResultName":"Claude 3.7 Sonnet"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatAnthropic","typeVersion":1.3,"position":[-1920,420],"id":"2c26a810-3fc3-480a-a678-95482084d0a8","name":"Anthropic Chat Model","credentials":{"anthropicApi":{"id":"l60iuyLpILCOKtuI","name":"Anthropic account"}}},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.embeddingsOpenAi","typeVersion":1.2,"position":[-1700,680],"id":"435b9bab-018a-4202-b3a9-b3b67f64370b","name":"Embeddings OpenAI","credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{"model":{"__rl":true,"mode":"list","value":"claude-3-7-sonnet-20250219","cachedResultName":"Claude 3.7 Sonnet"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatAnthropic","typeVersion":1.3,"position":[-260,800],"id":"23abcd59-e1c1-4a02-a9b2-68800de068f5","name":"Anthropic Chat Model1","credentials":{"anthropicApi":{"id":"l60iuyLpILCOKtuI","name":"Anthropic account"}}},{"parameters":{"model":{"__rl":true,"mode":"list","value":"claude-3-7-sonnet-20250219","cachedResultName":"Claude 3.7 Sonnet"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatAnthropic","typeVersion":1.3,"position":[400,880],"id":"82fce92f-9b4a-4782-8261-32e23ab25fbf","name":"Anthropic Chat Model2","credentials":{"anthropicApi":{"id":"l60iuyLpILCOKtuI","name":"Anthropic account"}}},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.embeddingsOpenAi","typeVersion":1.2,"position":[260,1000],"id":"54731b02-68f4-491e-b762-497e98fd0f77","name":"Embeddings OpenAI1","credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{"model":{"__rl":true,"mode":"list","value":"gpt-4o-mini"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[600,840],"id":"fec6fcc1-fb38-4e15-8928-df08b4a8e858","name":"OpenAI Chat Model","credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}}],"connections":{"2secs":{"main":[[{"node":"For Each Doc Type...","type":"main","index":0}]]},"Merge":{"main":[[{"node":"Prep For AI","type":"main","index":0}]]},"Discover":{"main":[[{"node":"Aggregate","type":"main","index":0}]]},"Generate":{"main":[[{"node":"2secs","type":"main","index":0}]]},"Settings":{"main":[[{"node":"Import File","type":"main","index":0}]]},"Aggregate":{"main":[[{"node":"Generate","type":"main","index":0}]]},"Interview":{"main":[[{"node":"Split Out","type":"main","index":0}]]},"Split Out":{"main":[[{"node":"Discover","type":"main","index":0}]]},"To Binary":{"main":[[{"node":"Export to Folder","type":"main","index":0}]]},"Import File":{"main":[[{"node":"Get FileType","type":"main","index":0}]]},"Prep For AI":{"main":[[{"node":"Get Doc Types","type":"main","index":0}]]},"Get FileType":{"main":[[{"node":"Extract from PDF","type":"main","index":0}],[{"node":"Extract from DOCX","type":"main","index":0}],[{"node":"Extract from TEXT","type":"main","index":0}]]},"Get Doc Types":{"main":[[{"node":"Split Out Doc Types","type":"main","index":0}]]},"Extract from PDF":{"main":[[{"node":"Prep Incoming Doc","type":"main","index":0}]]},"Extract from DOCX":{"main":[[{"node":"Prep Incoming Doc","type":"main","index":0}]]},"Extract from TEXT":{"main":[[{"node":"Prep Incoming Doc","type":"main","index":0}]]},"Prep Incoming Doc":{"main":[[{"node":"Summarization Chain","type":"main","index":0}]]},"Local File Trigger":{"main":[[{"node":"Settings","type":"main","index":0}]]},"Default Data Loader":{"ai_document":[[{"node":"Qdrant Vector Store","type":"ai_document","index":0}]]},"Qdrant Vector Store":{"main":[[{"node":"Merge","type":"main","index":1}]]},"Split Out Doc Types":{"main":[[{"node":"For Each Doc Type...","type":"main","index":0}]]},"Summarization Chain":{"main":[[{"node":"Merge","type":"main","index":0}]]},"For Each Doc Type...":{"main":[[{"node":"Get Generated Documents","type":"main","index":0}],[{"node":"Interview","type":"main","index":0}]]},"Qdrant Vector Store1":{"ai_vectorStore":[[{"node":"Vector Store Retriever","type":"ai_vectorStore","index":0}]]},"Vector Store Retriever":{"ai_retriever":[[{"node":"Discover","type":"ai_retriever","index":0}]]},"Get Generated Documents":{"main":[[{"node":"To Binary","type":"main","index":0}]]},"Item List Output Parser":{"ai_outputParser":[[{"node":"Interview","type":"ai_outputParser","index":0}]]},"Embeddings Mistral Cloud":{"ai_embedding":[[]]},"Mistral Cloud Chat Model":{"ai_languageModel":[[]]},"Embeddings Mistral Cloud1":{"ai_embedding":[[]]},"Mistral Cloud Chat Model1":{"ai_languageModel":[[]]},"Mistral Cloud Chat Model2":{"ai_languageModel":[[]]},"Mistral Cloud Chat Model3":{"ai_languageModel":[[]]},"Recursive Character Text Splitter":{"ai_textSplitter":[[{"node":"Default Data Loader","type":"ai_textSplitter","index":0}]]},"Anthropic Chat Model":{"ai_languageModel":[[{"node":"Summarization Chain","type":"ai_languageModel","index":0}]]},"Embeddings OpenAI":{"ai_embedding":[[{"node":"Qdrant Vector Store","type":"ai_embedding","index":0}]]},"Anthropic Chat Model1":{"ai_languageModel":[[{"node":"Interview","type":"ai_languageModel","index":0}]]},"Anthropic Chat Model2":{"ai_languageModel":[[{"node":"Discover","type":"ai_languageModel","index":0}]]},"Embeddings OpenAI1":{"ai_embedding":[[{"node":"Qdrant Vector Store1","type":"ai_embedding","index":0}]]},"OpenAI Chat Model":{"ai_languageModel":[[{"node":"Generate","type":"ai_languageModel","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":null,"pinData":{},"versionId":"e8376801-30d8-4e03-b8d5-67e8d1522031","triggerCount":0,"tags":[],"shared":[{"createdAt":"2025-06-16T07:51:55.585Z","updatedAt":"2025-06-16T07:51:55.585Z","role":"workflow:owner","workflowId":"xvErFc5EdddzOvAT","projectId":"WbfPHUYYKS2tiNNo","project":{"createdAt":"2025-05-03T06:49:18.088Z","updatedAt":"2025-05-03T06:52:24.837Z","id":"WbfPHUYYKS2tiNNo","name":"charlie phan <scottyphan08@gmail.com>","type":"personal","icon":null,"description":null}}]},{"createdAt":"2025-06-25T06:41:25.207Z","updatedAt":"2025-06-25T06:42:58.516Z","id":"pHHAdCzz1oYIsgov","name":"OCR TTS","active":false,"isArchived":false,"nodes":[{"parameters":{"method":"POST","url":"=https://dacdev.com/api/v1/vision/read","authentication":"genericCredentialType","genericAuthType":"httpBearerAuth","sendBody":true,"contentType":"multipart-form-data","bodyParameters":{"parameters":[{"name":"url","value":"={{ $json.image_url }}"}]},"options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[680,100],"id":"a88ba35e-2e88-4619-9965-30cbb88043fd","name":"OCR"},{"parameters":{"method":"POST","url":"https://dacdev.com/api/v1/translate/text","authentication":"genericCredentialType","genericAuthType":"httpBearerAuth","sendBody":true,"bodyParameters":{"parameters":[{"name":"text","value":"={{ $json.data }}"},{"name":"dest_lang","value":"vi"}]},"options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[880,220],"id":"5d754349-1574-4fa7-96f7-ac5544f96172","name":"Translate"},{"parameters":{"method":"POST","url":"https://dacdev.com/api/v1/audio/speech","authentication":"genericCredentialType","genericAuthType":"httpBearerAuth","sendBody":true,"bodyParameters":{"parameters":[{"name":"model","value":"system-tts-2"},{"name":"voice","value":"vi-VN-system-tts-2-mai-phuong"},{"name":"input","value":"={{ $json.data.replace(/\\n/g, '') }}"},{"name":"return_type","value":"file"},{"name":"speed","value":"1"}]},"options":{"response":{"response":{"responseFormat":"file"}}}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[1220,260],"id":"3c06709c-849d-498a-8724-af1032d45d4e","name":"TTS"},{"parameters":{"name":"={{$binary.data.fileName}}","driveId":{"__rl":true,"mode":"list","value":"My Drive"},"folderId":{"__rl":true,"value":"196HOaAKagO3QHv2jvUUQZVn5JTWg123F","mode":"list","cachedResultName":"audio","cachedResultUrl":"https://drive.google.com/drive/folders/196HOaAKagO3QHv2jvUUQZVn5JTWg123F"},"options":{}},"type":"n8n-nodes-base.googleDrive","typeVersion":3,"position":[1400,260],"id":"42ccbb1b-74f6-4ad6-ba44-6c962ffea1b4","name":"Google Drive","retryOnFail":true,"maxTries":5,"waitBetweenTries":3000,"notesInFlow":true,"credentials":{"googleDriveOAuth2Api":{"id":"XDqLv6T2wJMb4j1U","name":"Google Drive account pnjp"}},"onError":"continueRegularOutput","notes":"xxx"},{"parameters":{"operation":"share","fileId":{"__rl":true,"value":"={{ $json.id }}","mode":"id"},"permissionsUi":{"permissionsValues":{"role":"reader","type":"anyone"}},"options":{}},"type":"n8n-nodes-base.googleDrive","typeVersion":3,"position":[1560,260],"id":"f0565c26-e863-44ac-b489-11fd1628d7e0","name":"Share file GGDrive","credentials":{"googleDriveOAuth2Api":{"id":"XDqLv6T2wJMb4j1U","name":"Google Drive account pnjp"}}},{"parameters":{"operation":"update","documentId":{"__rl":true,"value":"1Gy6cDLVYlCXedKxKauUVbeROVfvo8IoISftFtD9-_vs","mode":"list","cachedResultName":"Thong tin cskh","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1Gy6cDLVYlCXedKxKauUVbeROVfvo8IoISftFtD9-_vs/edit?usp=drivesdk"},"sheetName":{"__rl":true,"value":"gid=0","mode":"list","cachedResultName":"FAQs","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1Gy6cDLVYlCXedKxKauUVbeROVfvo8IoISftFtD9-_vs/edit#gid=0"},"columns":{"mappingMode":"defineBelow","value":{"audio_url":"=https://drive.google.com/file/d/{{ $('Google Drive').item.json.id }}/view?usp=sharing","translated_content":"={{ $('TTS').item.json.data }}","row_number":"={{ $('Read Sheet').item.json.row_number }}"},"matchingColumns":["row_number"],"schema":[{"id":"image_url","displayName":"image_url","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":true},{"id":"translate_to_vnm","displayName":"translate_to_vnm","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":true},{"id":"translated_content","displayName":"translated_content","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"audio_url","displayName":"audio_url","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"row_number","displayName":"row_number","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"readOnly":true,"removed":false}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.googleSheets","typeVersion":4.6,"position":[1720,260],"id":"dca40ea6-23f9-4583-bc44-6f37d01e6ccc","name":"Google Sheets","credentials":{"googleSheetsOAuth2Api":{"id":"bdeAZgAgEmqpgnr1","name":"Google Sheets account"}}},{"parameters":{},"type":"n8n-nodes-base.manualTrigger","typeVersion":1,"position":[-80,-40],"id":"eebf2dc0-c523-48db-b11e-fcd606c83623","name":"When clicking ‘Execute workflow’"},{"parameters":{"documentId":{"__rl":true,"value":"1Gy6cDLVYlCXedKxKauUVbeROVfvo8IoISftFtD9-_vs","mode":"list","cachedResultName":"Thong tin cskh","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1Gy6cDLVYlCXedKxKauUVbeROVfvo8IoISftFtD9-_vs/edit?usp=drivesdk"},"sheetName":{"__rl":true,"value":"gid=0","mode":"list","cachedResultName":"FAQs","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1Gy6cDLVYlCXedKxKauUVbeROVfvo8IoISftFtD9-_vs/edit#gid=0"},"options":{}},"type":"n8n-nodes-base.googleSheets","typeVersion":4.6,"position":[160,-40],"id":"c91e3877-7ba1-47ab-ad0f-b3f27016c72a","name":"Read Sheet","executeOnce":true,"credentials":{"googleSheetsOAuth2Api":{"id":"bdeAZgAgEmqpgnr1","name":"Google Sheets account"}}},{"parameters":{"options":{"reset":false}},"type":"n8n-nodes-base.splitInBatches","typeVersion":3,"position":[420,-40],"id":"0fd2b39c-004a-4aaa-a33a-01264dd3b8f9","name":"Loop Over Items"}],"connections":{"OCR":{"main":[[{"node":"Translate","type":"main","index":0}]]},"Translate":{"main":[[{"node":"TTS","type":"main","index":0}]]},"TTS":{"main":[[{"node":"Google Drive","type":"main","index":0}]]},"Google Drive":{"main":[[{"node":"Share file GGDrive","type":"main","index":0}]]},"Share file GGDrive":{"main":[[{"node":"Google Sheets","type":"main","index":0}]]},"When clicking ‘Execute workflow’":{"main":[[{"node":"Read Sheet","type":"main","index":0}]]},"Read Sheet":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Google Sheets":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Loop Over Items":{"main":[[],[{"node":"OCR","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"ffc47c14-6f17-4fdd-82aa-f79d1b553b93","triggerCount":0,"tags":[],"shared":[{"createdAt":"2025-06-25T06:41:25.207Z","updatedAt":"2025-06-25T06:41:25.207Z","role":"workflow:owner","workflowId":"pHHAdCzz1oYIsgov","projectId":"WbfPHUYYKS2tiNNo","project":{"createdAt":"2025-05-03T06:49:18.088Z","updatedAt":"2025-05-03T06:52:24.837Z","id":"WbfPHUYYKS2tiNNo","name":"charlie phan <scottyphan08@gmail.com>","type":"personal","icon":null,"description":null}}]},{"createdAt":"2025-07-17T08:58:45.195Z","updatedAt":"2025-07-17T08:58:45.195Z","id":"U3U4RbEOlrGyHOqb","name":"My workflow 11","active":false,"isArchived":false,"nodes":[{"parameters":{"dataType":"binary","binaryMode":"specificField","options":{"metadata":{"metadataValues":[{"name":"file_id","value":"={{ $json.id }}"},{"name":"pubkey","value":"={{ $json.name }}"},{"name":"=overarching_theme","value":"={{ $('Extract Meta Data').item.json.output.overarching_theme }}"},{"name":"recurring_topics","value":"={{ $('Extract Meta Data').item.json.output.recurring_topics }}"},{"name":"pain_points","value":"={{ $('Extract Meta Data').item.json.output.pain_points }}"},{"name":"analytical_insights","value":"={{ $('Extract Meta Data').item.json.output.analytical_insights }}"},{"name":"conclusion","value":"={{ $('Extract Meta Data').item.json.output.conclusion }}"},{"name":"keywords","value":"={{ $('Extract Meta Data').item.json.output.keywords }}"}]}}},"id":"2d85974d-c0a3-45b0-ac4b-bb3b25ef4567","name":"Data Loader","type":"@n8n/n8n-nodes-langchain.documentDefaultDataLoader","position":[1952,2080],"typeVersion":1},{"parameters":{"chunkSize":3000},"id":"a9d070bd-1f00-4a68-8d6b-658a9eba287a","name":"Token Splitter","type":"@n8n/n8n-nodes-langchain.textSplitterTokenSplitter","position":[2048,2224],"typeVersion":1},{"parameters":{"mode":"insert","qdrantCollection":{"__rl":true,"mode":"id","value":"=nostr-damus-user-profiles"},"options":{}},"id":"b6cf002f-4761-40b2-9fc5-a0c39dfb3eb9","name":"Qdrant Vector Store","type":"@n8n/n8n-nodes-langchain.vectorStoreQdrant","position":[1872,1888],"executeOnce":false,"retryOnFail":true,"typeVersion":1,"onError":"continueRegularOutput"},{"parameters":{"options":{}},"id":"fd67eefc-a529-49a3-b8e0-9c891c746a98","name":"Loop Over Items","type":"n8n-nodes-base.splitInBatches","position":[1520,1216],"typeVersion":3,"onError":"continueRegularOutput"},{"parameters":{},"id":"ef24679e-4c40-487c-b767-d56e831d35e6","name":"Wait","type":"n8n-nodes-base.wait","position":[2352,2208],"webhookId":"237d7f8a-aead-479a-b813-f407d1f37fa5","typeVersion":1.1},{"parameters":{},"id":"1629bb96-86cf-4392-b938-ab8f4c6dbd8b","name":"When clicking ‘Test workflow’","type":"n8n-nodes-base.manualTrigger","position":[176,1088],"typeVersion":1},{"parameters":{"modelName":"models/gemini-2.0-flash-exp","options":{"temperature":0.4}},"id":"adcf1185-ba78-4edd-905e-e4991c96238d","name":"Google Gemini Chat Model","type":"@n8n/n8n-nodes-langchain.lmChatGoogleGemini","position":[2448,1344],"typeVersion":1},{"parameters":{"mode":"combine","combineBy":"combineAll","options":{}},"id":"3dced835-9b41-4dad-8884-581ff5c743b5","name":"Merge","type":"n8n-nodes-base.merge","position":[2160,1568],"typeVersion":3},{"parameters":{"text":"={{ $json.data }}","attributes":{"attributes":[{"name":"overarching_theme","description":"Summarize the main theme(s) discussed in the \"Overarching Theme\" section."},{"name":"recurring_topics","description":"List the recurring topics mentioned in the \"Common Threads\" section as an array of strings."},{"name":"pain_points","description":"Summarize the user's frustrations or challenges mentioned in the \"Pain Points\" section as an array of strings."},{"name":"analytical_insights","description":"Extract a list of key analytical observations from the \"Analytical Insights\" section, including shifts in tone or behavior."},{"name":"conclusion","description":"Summarize the conclusions drawn about the user’s threads and their overall focus."},{"name":"keywords","description":"Generate a list of 10 keywords that capture the essence of the document (e.g., \"askNostr,\" \"decentralization,\" \"spam filtering\")."}]},"options":{"systemPromptTemplate":"You are an expert extraction algorithm.\nOnly extract relevant information from the text.\nIf you do not know the value of an attribute asked to extract, you may omit the attribute's value."}},"id":"ce587081-3cd0-448e-91ad-07544adb2007","name":"Extract Meta Data","type":"@n8n/n8n-nodes-langchain.informationExtractor","position":[2352,1184],"typeVersion":1},{"parameters":{"operation":"text","options":{}},"id":"4d224b43-9c8f-4344-bc7f-1a488e1473e1","name":"Get File Contents","type":"n8n-nodes-base.extractFromFile","position":[2160,1184],"typeVersion":1},{"parameters":{"operation":"download","fileId":{"__rl":true,"mode":"id","value":"={{ $json.id }}"},"options":{}},"id":"2f0b208d-478d-4e43-94b7-70241bb883df","name":"Download File From Google Drive","type":"n8n-nodes-base.googleDrive","position":[1840,1184],"typeVersion":3},{"parameters":{"resource":"fileFolder","returnAll":true,"filter":{"driveId":{"mode":"list","value":"My Drive"},"folderId":{"__rl":true,"mode":"id","value":"={{ $json.folder_id }}"}},"options":{}},"id":"963507dd-53d9-4d16-91d1-9f9dae352eaf","name":"Find File Ids in Google Drive Folder","type":"n8n-nodes-base.googleDrive","position":[720,1200],"typeVersion":3},{"parameters":{"model":"text-embedding-3-large","options":{}},"id":"1707494e-5eb1-4246-bed8-081a82d836fa","name":"text-embeddings-3-large","type":"@n8n/n8n-nodes-langchain.embeddingsOpenAi","position":[1808,2080],"typeVersion":1},{"parameters":{"assignments":{"assignments":[{"id":"e6f6188f-c895-4c8c-b39a-0ef55b490fd6","name":"folder_id","type":"string","value":"[Your-Google-Folder-ID]"}]},"options":{}},"id":"4f216a80-c12c-49f3-a7a4-f7e822c6b4b8","name":"Google Folder ID","type":"n8n-nodes-base.set","position":[512,1200],"typeVersion":3.4},{"parameters":{"options":{}},"id":"802f6f3e-e1ba-4043-8f66-458fa31f8022","name":"gpt-4o-mini1","type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","position":[928,2304],"typeVersion":1},{"parameters":{"code":{"execute":{"code":"const { QdrantVectorStore } = require(\"@langchain/qdrant\");\nconst { OpenAIEmbeddings } = require(\"@langchain/openai\");\n\n// Qdrant connection details\nconst url = \"http://localhost:6333/\";\nconst apiKey = \"\";\n\n// OpenAI API configuration\nconst openAIApiKey = \"[Your-OpenAI-API-Key]\";\n\n// Get input data\nconst items = this.getInputData()[0];\n// console.log(items)\n\nconst collectionName =  items.json.qdrant_collection_name;\n// console.log(collectionName)\n\nasync function deleteDocumentsFromQdrant() {\n  try {\n    // Initialize OpenAI embeddings\n    const embeddings = new OpenAIEmbeddings({\n      model: \"text-embedding-3-large\",\n      openAIApiKey: openAIApiKey\n    });\n\n    // Connect to existing Qdrant collection\n    const vectorStore = await QdrantVectorStore.fromExistingCollection(embeddings, {\n      url: url,\n      apiKey: apiKey,\n      collectionName: collectionName,\n    });\n\n    const fileIds = items.json.appended_id.map(item => item);\n\n    console.log(fileIds)\n\n    // Delete points by fileId\n    const deletionResults = await Promise.all(fileIds.map(async (file_id) => {\n      const filter = {\n        must: [\n          {\n            key: \"metadata.file_id\",\n            match: { value: file_id }\n          }\n        ]\n      };\n\n      try {\n        // Access the underlying Qdrant client to perform the deletion\n        await vectorStore.client.delete(collectionName, { filter });\n        return { file_id, status: \"deleted\" };\n      } catch (error) {\n        console.error(`Error deleting documents for fileId ${file_id}:`, error);\n        return { file_id, status: \"error\", message: error.message };\n      }\n    }));\n\n    return deletionResults;\n  } catch (error) {\n    console.error(\"An error occurred during the deletion process:\", error);\n    return error.message;\n  }\n}\n\n// Execute the deletion process\ntry {\n  const result = await deleteDocumentsFromQdrant();\n  console.log(\"Deletion process completed:\", result);\n  return [];\n} catch (error) {\n  console.error(\"Failed to execute deletion process:\", error);\n  return [{ json: { error } }];\n}\n\n"}},"inputs":{"input":[{"type":"main","maxConnections":1,"required":true},{"type":"ai_languageModel","maxConnections":1,"required":true}]},"outputs":{"output":[{"type":"main"}]}},"id":"8703d53c-ea04-4678-85ae-9b19e32fc9ba","name":"Delete Qdrant Points by File ID","type":"@n8n/n8n-nodes-langchain.code","position":[832,2160],"typeVersion":1},{"parameters":{"assignments":{"assignments":[{"id":"11fa71e9-6cbc-4183-9439-e3379b2b970e","name":"qdrant_collection_name","type":"string","value":"nostr-damus-user-profiles"}]},"options":{}},"id":"2b0b1482-9210-4eec-af83-69fcc67c1fdd","name":"Qdrant Collection Name","type":"n8n-nodes-base.set","position":[640,1456],"typeVersion":3.4},{"parameters":{"fieldsToSummarize":{"values":[{"aggregation":"append","field":"id"}]},"options":{}},"id":"bca36ac4-8acb-4502-b6d8-453edda50435","name":"File Id List","type":"n8n-nodes-base.summarize","position":[640,1648],"typeVersion":1.1},{"parameters":{"mode":"combine","combineBy":"combineByPosition","options":{}},"id":"99d27354-c80b-45ca-8c90-1f65d987aa37","name":"Merge1","type":"n8n-nodes-base.merge","position":[992,1696],"typeVersion":3},{"parameters":{},"id":"a9513495-09d7-43c3-af0b-fdadeddd7581","name":"Merge2","type":"n8n-nodes-base.merge","position":[1248,1216],"typeVersion":3},{"parameters":{"content":"## Prepare Qdrant Vector Store","height":760,"width":1180,"color":3},"id":"423c9217-a366-4697-980e-575357cb591f","name":"Sticky Note","type":"n8n-nodes-base.stickyNote","position":[48,1920],"typeVersion":1},{"parameters":{"operation":"sendAndWait","chatId":"={{ $env.TELEGRAM_CHAT_ID }}","message":"=WARNING - {{ $json.appended_id.length }} Records in the Qdrant vector store collection \"{{ $json.qdrant_collection_name }}\" will be deleted.  Are you sure you want to continue?  This action cannot be undone!","approvalOptions":{"values":{"approvalType":"double"}},"options":{"limitWaitTime":{"values":{"resumeAmount":15,"resumeUnit":"minutes"}}}},"id":"c9498915-90e9-44b2-aa7f-455517e408ad","name":"Confirm Qdrant Delete Points","type":"n8n-nodes-base.telegram","position":[272,2128],"webhookId":"29aac1ac-9345-4e44-babf-ebcfae701d88","typeVersion":1.2},{"parameters":{"conditions":{"options":{"version":2,"leftValue":"","caseSensitive":true,"typeValidation":"strict"},"combinator":"and","conditions":[{"id":"20f530d6-fd55-420d-b8a9-70e5303f688e","operator":{"type":"boolean","operation":"true","singleValue":true},"leftValue":"={{ $json.data.approved }}","rightValue":""}]},"options":{}},"id":"1a565f07-08ea-4891-a56c-698fb40c27f0","name":"If","type":"n8n-nodes-base.if","position":[272,2368],"typeVersion":2.2},{"parameters":{"content":"## Perform Qdrant Vector Store Operations","height":640,"width":920,"color":7},"id":"301c383c-a6c2-4ae7-8cf5-781806ca847b","name":"Sticky Note1","type":"n8n-nodes-base.stickyNote","position":[1648,1776],"typeVersion":1},{"parameters":{"chatId":"={{ $env.TELEGRAM_CHAT_ID }}","text":"Qdrant vector store upsert declined","additionalFields":{"appendAttribution":false}},"id":"cc7f4746-9690-4bc9-81f1-85c8443e0c9d","name":"Send Declined Message","type":"n8n-nodes-base.telegram","position":[592,2480],"webhookId":"382a3b43-b83f-47b1-a276-67c6b98a441a","typeVersion":1.2},{"parameters":{"content":"## 🌟Workflow Config\n\n- Google Drive Folder Id\n- Qdrant Collection Name\n- List of Google Drive File Id's","height":840,"width":480},"id":"1bde1c32-e2a1-48f6-94c2-235dada9b0f0","name":"Sticky Note2","type":"n8n-nodes-base.stickyNote","position":[432,976],"typeVersion":1},{"parameters":{"content":"## Extract Metadata for Qdrant Hybrid Search","height":420,"width":640,"color":6},"id":"8b524b6e-499a-4e8d-9adb-7c38c5dfa70d","name":"Sticky Note3","type":"n8n-nodes-base.stickyNote","position":[2080,1088],"typeVersion":1},{"parameters":{"content":"## Google Drive","height":320,"width":300,"color":2},"id":"6286eae6-1edc-45d4-970c-314f862acff9","name":"Sticky Note4","type":"n8n-nodes-base.stickyNote","position":[1728,1088],"typeVersion":1},{"parameters":{"content":"## ✨ Save Documents to Qdrant Vector Store","height":1480,"width":1360,"color":5},"id":"2ee9103f-75f6-4e79-8c7d-0b7806835b93","name":"Sticky Note5","type":"n8n-nodes-base.stickyNote","position":[1408,1008],"typeVersion":1},{"parameters":{"content":"## Delete From Qdrant Vector Store\nThis operation can not be undone!!!","height":400,"width":420,"color":5},"id":"e659282d-c0d5-4352-b2e9-3d2fe3900f3f","name":"Sticky Note6","type":"n8n-nodes-base.stickyNote","position":[752,2048],"typeVersion":1},{"parameters":{"content":"## Human In The Loop\nUser must verify deletion of points from Qdrant vector store","height":520,"width":380,"color":4},"id":"b003f611-9518-4ae7-8145-9b1be947a859","name":"Sticky Note7","type":"n8n-nodes-base.stickyNote","position":[128,2000],"typeVersion":1},{"parameters":{"content":"## 👍Start Here!","height":460,"width":340,"color":4},"id":"4bd9d796-525c-414a-886d-131bf5396419","name":"Sticky Note8","type":"n8n-nodes-base.stickyNote","position":[48,976],"typeVersion":1},{"parameters":{"path":"upsert","options":{}},"id":"e2b9af72-7afc-4260-bb1f-2b550c934422","name":"Webhook","type":"n8n-nodes-base.webhook","position":[176,1264],"webhookId":"3a30557f-9264-4bc8-a253-a9356677c791","typeVersion":2,"disabled":true},{"parameters":{"promptType":"define","text":"={{ $json.chatInput }}","options":{"systemMessage":"=You are an intelligent assistant specialized in answering user questions using Nostr user profiles. Your primary goal is to provide precise, contextually relevant, and concise answers based on the tools and resources available.\n\n### TOOL\nUse the \"nostr_damus_user_profiles\" tool to:\n- perform semantic similarity searches and retrieve information from Nostr user profiles relevant to the user's query.\n- access detailed information about Nostr and/or Damus users when additional context or specifics are required.\n\n### Key Instructions\n1. **Response Guidelines**:\n   - Clearly explain how the retrieved information addresses the user's query, if applicable.\n   - If no relevant information is found, respond with: \"I cannot find the answer in the available resources.\"\n\n2. **Focus and Relevance**:\n   - Ensure all responses are directly aligned with the user's question.\n   - Avoid including extraneous details or relying solely on internal knowledge.\n"}},"id":"e3c324e8-3d7e-4052-a4f0-93e021af1b86","name":"AI Agent","type":"@n8n/n8n-nodes-langchain.agent","position":[736,160],"typeVersion":1.7},{"parameters":{"contextWindowLength":40},"id":"be2ffcb0-aa7b-4ac9-b9a7-424d96bd68ba","name":"Window Buffer Memory","type":"@n8n/n8n-nodes-langchain.memoryBufferWindow","position":[752,368],"typeVersion":1.3},{"parameters":{"options":{}},"id":"91635746-b74e-439e-9513-2754f27e86ea","name":"When chat message received","type":"@n8n/n8n-nodes-langchain.chatTrigger","position":[176,160],"webhookId":"5f1c0c82-0ff9-40c7-9e2e-b1a96ffe24cd","typeVersion":1.1},{"parameters":{"modelName":"models/gemini-2.0-flash-exp","options":{"maxOutputTokens":8192}},"id":"eaeb736a-6f5b-415f-b491-b753de960c4f","name":"Google Gemini Chat Model1","type":"@n8n/n8n-nodes-langchain.lmChatGoogleGemini","position":[576,368],"typeVersion":1},{"parameters":{"model":"text-embedding-3-large","options":{}},"id":"eefaf952-e0be-4920-952e-1f72fc97a97d","name":"text-embeddings-3-large1","type":"@n8n/n8n-nodes-langchain.embeddingsOpenAi","position":[1008,528],"typeVersion":1},{"parameters":{"content":"## 🤖Retrieve Content from Qdrant Vector Store","height":680,"width":860,"color":5},"id":"5b9f4922-f9f6-4294-ad1b-cb4173597ea7","name":"Sticky Note9","type":"n8n-nodes-base.stickyNote","position":[432,64],"typeVersion":1},{"parameters":{"content":"## 🗣️ Chat with Your Documents","height":320,"width":340,"color":4},"id":"1f7f2721-dbbc-4d91-bb28-65cc9a3feea4","name":"Sticky Note10","type":"n8n-nodes-base.stickyNote","position":[48,64],"typeVersion":1},{"parameters":{"content":"# Step 1 - Save Documents to Qdrant Vector Store","height":1880,"width":2880,"color":7},"id":"d36f59aa-5e73-4281-a21c-8ecdb7052fbe","name":"Sticky Note11","type":"n8n-nodes-base.stickyNote","position":[-32,880],"typeVersion":1},{"parameters":{"content":"# Step 2 - Chat with Your Documents from Qdrant Vector Store","height":880,"width":1780,"color":7},"id":"552e2a41-b63c-437e-8903-3e33214aa739","name":"Sticky Note12","type":"n8n-nodes-base.stickyNote","position":[-32,-64],"typeVersion":1},{"parameters":{"operation":"createFromText","content":"={{ $json.output }}","name":"=Nostr Chatbot - Avatar - {{ $now }}","driveId":{"__rl":true,"mode":"list","value":"My Drive"},"folderId":{"__rl":true,"mode":"list","value":"root","cachedResultName":"/ (Root folder)"},"options":{}},"id":"991b7891-c304-4d3a-bf25-657d25733ea1","name":"Google Drive","type":"n8n-nodes-base.googleDrive","position":[1456,576],"typeVersion":3,"disabled":true},{"parameters":{"assignments":{"assignments":[{"id":"cd8f88e1-19c0-4b9e-914d-e2e7ba21d9fa","name":"output","type":"string","value":"={{ $json.output }}"}]},"options":{}},"id":"b8d75ecc-72b8-4d66-afc3-49431c713905","name":"Respond to User","type":"n8n-nodes-base.set","position":[1456,400],"typeVersion":3.4},{"parameters":{"content":"## Save Chat History","height":300,"width":340,"color":4},"id":"73f129dd-a916-4a96-b7b3-ad7e9fdaab8f","name":"Sticky Note13","type":"n8n-nodes-base.stickyNote","position":[1328,64],"typeVersion":1},{"parameters":{"operation":"update","documentURL":"1ej_qLolUFp1h4eZkrb99T3DWQ3JOwXVEMS3VUjWyVf0","actionsUi":{"actionFields":[{"action":"insert","text":"=\n-------------------------------\n\n{{ $now }}\n\n{{ $('When chat message received').item.json.chatInput  }}\n\n{{ $json.output }}"}]}},"id":"952d29d2-2a10-48f0-9bcd-5784a8e1f05e","name":"Update Chat History","type":"n8n-nodes-base.googleDocs","position":[1456,160],"typeVersion":2},{"parameters":{"mode":"retrieve-as-tool","toolName":"nostr_damus_user_profiles","toolDescription":"Retrieve information about Nostr or Damus users","qdrantCollection":{"__rl":true,"mode":"list","value":"nostr-damus-user-profiles","cachedResultName":"nostr-damus-user-profiles"},"topK":20,"options":{}},"id":"83f82db0-f617-4e19-8d7f-cbce07f6856f","name":"Qdrant Vector Store Tool","type":"@n8n/n8n-nodes-langchain.vectorStoreQdrant","position":[912,368],"typeVersion":1},{"parameters":{"model":{"__rl":true,"mode":"list","value":"gpt-4o-mini"},"options":{}},"id":"2ff89517-e762-4b38-8fef-a309daaa7b3b","name":"OpenAI Chat Model","type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","position":[576,544],"typeVersion":1.2,"disabled":true},{"parameters":{"chatId":"={{ $env.TELEGRAM_CHAT_ID }}","text":"Qdrant vector store upsert completed","additionalFields":{"appendAttribution":false}},"id":"c0615e2d-af4b-4b4d-9bec-87ae5b463e4e","name":"Send Completed Message","type":"n8n-nodes-base.telegram","position":[1840,1568],"webhookId":"382a3b43-b83f-47b1-a276-67c6b98a441a","typeVersion":1.2},{"parameters":{"content":"# 🤖 AI-Powered RAG Chatbot with Google Drive Integration\n\nThis workflow creates a powerful RAG (Retrieval-Augmented Generation) chatbot that can process, store, and interact with documents from Google Drive using Qdrant vector storage and Google's Gemini AI.\n\n## How It Works\n\n### Document Processing & Storage 📚\n- Retrieves documents from a specified Google Drive folder\n- Processes and splits documents into manageable chunks\n- Extracts metadata using AI for enhanced search capabilities\n- Stores document vectors in Qdrant for efficient retrieval\n\n### Intelligent Chat Interface 💬\n- Provides a conversational interface powered by Google Gemini\n- Uses RAG to retrieve relevant context from stored documents\n- Maintains chat history in Google Docs for reference\n- Delivers accurate, context-aware responses\n\n### Vector Store Management 🗄️\n- Features secure delete operations with human verification\n- Includes Telegram notifications for important operations\n- Maintains data integrity with proper version control\n- Supports batch processing of documents\n\n## Setup Steps\n\n1. Configure API Credentials:\n   - Set up Google Drive & Docs access\n   - Configure Gemini AI API\n   - Set up Qdrant vector store connection\n   - Add Telegram bot for notifications\n\n2. Configure Document Sources:\n   - Set Google Drive folder ID\n   - Define Qdrant collection name\n   - Set up document processing parameters\n\n3. Test and Deploy:\n   - Verify document processing\n   - Test chat functionality\n   - Confirm vector store operations\n   - Check notification system\n\n\nThis workflow is ideal for organizations needing to create intelligent chatbots that can access and understand large document repositories while maintaining context and providing accurate responses through RAG technology.\n","height":1240,"width":700},"id":"b7ab7bd6-0ba6-4929-92fa-ba9fa5465afb","name":"Sticky Note14","type":"n8n-nodes-base.stickyNote","position":[-800,880],"typeVersion":1}],"connections":{"If":{"main":[[{"node":"Delete Qdrant Points by File ID","type":"main","index":0}],[{"node":"Send Declined Message","type":"main","index":0}]]},"Wait":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Merge":{"main":[[{"node":"Qdrant Vector Store","type":"main","index":0}]]},"Merge1":{"main":[[{"node":"Confirm Qdrant Delete Points","type":"main","index":0}]]},"Merge2":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Webhook":{"main":[[{"node":"Google Folder ID","type":"main","index":0}]]},"AI Agent":{"main":[[{"node":"Update Chat History","type":"main","index":0},{"node":"Respond to User","type":"main","index":0}]]},"Data Loader":{"ai_document":[[{"node":"Qdrant Vector Store","type":"ai_document","index":0}]]},"File Id List":{"main":[[{"node":"Merge1","type":"main","index":1}]]},"gpt-4o-mini1":{"ai_languageModel":[[{"node":"Delete Qdrant Points by File ID","type":"ai_languageModel","index":0}]]},"Token Splitter":{"ai_textSplitter":[[{"node":"Data Loader","type":"ai_textSplitter","index":0}]]},"Loop Over Items":{"main":[[{"node":"Send Completed Message","type":"main","index":0}],[{"node":"Download File From Google Drive","type":"main","index":0}]]},"Google Folder ID":{"main":[[{"node":"Find File Ids in Google Drive Folder","type":"main","index":0}]]},"Extract Meta Data":{"main":[[{"node":"Merge","type":"main","index":0}]]},"Get File Contents":{"main":[[{"node":"Extract Meta Data","type":"main","index":0}]]},"Qdrant Vector Store":{"main":[[{"node":"Wait","type":"main","index":0}]]},"Window Buffer Memory":{"ai_memory":[[{"node":"AI Agent","type":"ai_memory","index":0}]]},"Qdrant Collection Name":{"main":[[{"node":"Merge1","type":"main","index":0}]]},"text-embeddings-3-large":{"ai_embedding":[[{"node":"Qdrant Vector Store","type":"ai_embedding","index":0}]]},"Google Gemini Chat Model":{"ai_languageModel":[[{"node":"Extract Meta Data","type":"ai_languageModel","index":0}]]},"Qdrant Vector Store Tool":{"ai_tool":[[{"node":"AI Agent","type":"ai_tool","index":0}]]},"text-embeddings-3-large1":{"ai_embedding":[[{"node":"Qdrant Vector Store Tool","type":"ai_embedding","index":0}]]},"Google Gemini Chat Model1":{"ai_languageModel":[[{"node":"AI Agent","type":"ai_languageModel","index":0}]]},"When chat message received":{"main":[[{"node":"AI Agent","type":"main","index":0}]]},"Confirm Qdrant Delete Points":{"main":[[{"node":"If","type":"main","index":0}]]},"Delete Qdrant Points by File ID":{"main":[[{"node":"Merge2","type":"main","index":1}]]},"Download File From Google Drive":{"main":[[{"node":"Get File Contents","type":"main","index":0},{"node":"Merge","type":"main","index":1}]]},"When clicking ‘Test workflow’":{"main":[[{"node":"Google Folder ID","type":"main","index":0}]]},"Find File Ids in Google Drive Folder":{"main":[[{"node":"File Id List","type":"main","index":0},{"node":"Qdrant Collection Name","type":"main","index":0},{"node":"Merge2","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"c9102831-06ff-44c7-a5c9-868f32f988db","triggerCount":0,"tags":[],"shared":[{"createdAt":"2025-07-17T08:58:45.195Z","updatedAt":"2025-07-17T08:58:45.195Z","role":"workflow:owner","workflowId":"U3U4RbEOlrGyHOqb","projectId":"WbfPHUYYKS2tiNNo","project":{"createdAt":"2025-05-03T06:49:18.088Z","updatedAt":"2025-05-03T06:52:24.837Z","id":"WbfPHUYYKS2tiNNo","name":"charlie phan <scottyphan08@gmail.com>","type":"personal","icon":null,"description":null}}]},{"createdAt":"2025-07-21T01:20:04.629Z","updatedAt":"2025-07-21T02:04:25.043Z","id":"NvKJzDexpqe3qAcX","name":"RAG reranker","active":false,"isArchived":false,"nodes":[{"parameters":{"operation":"download","fileId":{"__rl":true,"mode":"list","value":""},"options":{}},"type":"n8n-nodes-base.googleDrive","typeVersion":3,"position":[752,1024],"id":"7a3bc801-2cf2-41ab-a84a-fd94839069c9","name":"Download File","credentials":{"googleDriveOAuth2Api":{"id":"XDqLv6T2wJMb4j1U","name":"Google Drive account pnjp"}}},{"parameters":{"jsonMode":"expressionData","jsonData":"={{ $('Code').item.json.fullText }}","options":{"metadata":{"metadataValues":[{"name":"ruleNumber","value":"={{ $json.ruleNumber }}"}]}}},"type":"@n8n/n8n-nodes-langchain.documentDefaultDataLoader","typeVersion":1.1,"position":[1488,1040],"id":"a4ad3f97-c76d-400a-ab99-b1ffc235b5c5","name":"Default Data Loader"},{"parameters":{"operation":"pdf","options":{}},"type":"n8n-nodes-base.extractFromFile","typeVersion":1,"position":[1008,864],"id":"90b867e7-a9f5-4d7e-aefe-e508aebc2a45","name":"Extract from File"},{"parameters":{"jsCode":"// n8n Code Node - Split Golf Rules\n// This code takes the input text and splits it into separate items for each rule\n\n// Get the input text from the first item\nconst inputText = $input.first().json.text;\n\n// Split the text by \"Rule\" pattern, keeping the \"Rule\" text with each section\nconst ruleSections = inputText.split(/(?=Rule \\d+)/);\n\n// Remove the first empty element (everything before the first \"Rule\")\nconst cleanedSections = ruleSections.filter(section => section.trim().startsWith('Rule'));\n\n// Create output items - one for each rule\nconst outputItems = cleanedSections.map((ruleText, index) => {\n  // Extract rule number from the text\n  const ruleMatch = ruleText.match(/Rule (\\d+)/);\n  const ruleNumber = ruleMatch ? ruleMatch[1] : (index + 1).toString();\n  \n  // Extract rule title (everything between \"Rule X –\" and the first numbered item)\n  const titleMatch = ruleText.match(/Rule \\d+ – (.+?)(?=\\n1\\.|\\n\\d+\\.)/);\n  const ruleTitle = titleMatch ? titleMatch[1].trim() : 'Unknown Rule';\n  \n  return {\n    json: {\n      ruleNumber: ruleNumber,\n      ruleTitle: ruleTitle,\n      fullText: ruleText.trim(),\n      originalIndex: index\n    }\n  };\n});\n\nreturn outputItems;"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1152,880],"id":"d458ae5d-8799-4a99-ae4b-1769ba26b4c9","name":"Code"},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.chatTrigger","typeVersion":1.1,"position":[688,16],"id":"ef0d5460-388b-488d-851e-a8247c9dbcd9","name":"When chat message received","webhookId":"79772045-628b-4cf6-b2ec-cecceca9fe24"},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenRouter","typeVersion":1,"position":[720,192],"id":"1db9a1fa-0af5-4b75-b0d1-3f234ff80d54","name":"GPT 4.1-mini"},{"parameters":{},"type":"@n8n/n8n-nodes-langchain.rerankerCohere","typeVersion":1,"position":[1488,144],"id":"dc7325a7-ecc2-440f-bf5b-b4c5b7348f6f","name":"Reranker Cohere","credentials":{"cohereApi":{"id":"0vWl6ZkmTRIfVFv5","name":"CohereApi account"}}},{"parameters":{"mode":"insert","tableName":{"__rl":true,"value":"documents","mode":"list","cachedResultName":"documents"},"options":{"queryName":"match_documents"}},"type":"@n8n/n8n-nodes-langchain.vectorStoreSupabase","typeVersion":1.3,"position":[1280,864],"id":"5d126a4f-e966-4d15-ba62-1195f7dc619d","name":"Upload to Supabase","credentials":{"supabaseApi":{"id":"GwQHus8VDsBElGiE","name":"Supabase account localhost"}}},{"parameters":{"mode":"retrieve-as-tool","toolDescription":"Use this tool to search the database","tableName":{"__rl":true,"value":"documents","mode":"list","cachedResultName":"documents"},"topK":20,"useReranker":true,"options":{}},"type":"@n8n/n8n-nodes-langchain.vectorStoreSupabase","typeVersion":1.3,"position":[1328,16],"id":"e3cd3a75-0693-4d78-b5ed-5c3f364d1c0e","name":"Supabase Vector Store","credentials":{"supabaseApi":{"id":"GwQHus8VDsBElGiE","name":"Supabase account localhost"}}},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenRouter","typeVersion":1,"position":[640,528],"id":"77504185-cf5f-4918-bdb0-5f479ada6b3d","name":"GPT 4.1-mini1"},{"parameters":{},"type":"@n8n/n8n-nodes-langchain.rerankerCohere","typeVersion":1,"position":[1744,576],"id":"1da2765e-a369-4e95-8a0c-b74b8ba85515","name":"Reranker Cohere1","credentials":{"cohereApi":{"id":"0vWl6ZkmTRIfVFv5","name":"CohereApi account"}}},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.embeddingsOpenAi","typeVersion":1.2,"position":[1584,576],"id":"ab362a9a-7ec0-4855-b21f-f0feaab42e8d","name":"Embeddings OpenAI2","credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{"mode":"retrieve-as-tool","toolDescription":"Use this tool to search the database","tableName":{"__rl":true,"value":"documents","mode":"list","cachedResultName":"documents"},"topK":20,"useReranker":true,"options":{"metadata":{"metadataValues":[{"name":"ruleNumber","value":"={{ $('Metadata Agent').item.json.output }}"}]}}},"type":"@n8n/n8n-nodes-langchain.vectorStoreSupabase","typeVersion":1.3,"position":[1584,432],"id":"504d13b6-6da6-4b7a-b99b-2667b04f25cd","name":"Supabase Vector Store1","credentials":{"supabaseApi":{"id":"GwQHus8VDsBElGiE","name":"Supabase account localhost"}}},{"parameters":{"content":"# Vectorize Document w/ Metadata\n(this code node is set up for the golf rules PDF specifically)","height":440,"width":1000,"color":2},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[640,736],"id":"5f52b30b-4bcf-4701-8a2e-4c84324e12de","name":"Sticky Note"},{"parameters":{"content":"# RAG Agent\n","height":380,"width":620,"color":4},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[640,-96],"id":"abac8436-7f23-4c96-8cd9-729a20374779","name":"Sticky Note1"},{"parameters":{"content":"## Vector Store w/ Reranker\n","height":380,"width":380,"color":5},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[1264,-96],"id":"b0cfc5e0-c617-46c1-a5ad-b4420f003578","name":"Sticky Note2"},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.embeddingsOpenAi","typeVersion":1.2,"position":[1280,1056],"id":"23faaa77-256a-411c-ba76-e676f0b5029e","name":"Embeddings OpenAI1","credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.embeddingsOpenAi","typeVersion":1.2,"position":[1328,144],"id":"8bb2a846-af9a-4ee3-b035-4503c9f08783","name":"Embeddings OpenAI","credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{"options":{"systemMessage":"=# Overview\nYour job is to understand the rule number that the human is requesting and output only the number.\n\n## Example\nInput - what's rule number 27?\nOutput - 27"}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":2,"position":[736,352],"id":"ed5bbf67-a246-4f2e-a959-c2b25568b3a5","name":"Metadata Agent"},{"parameters":{"options":{"systemMessage":"=# Overview\nYou are an AI agent who is an expert at the rules of golf. You will receive a question from the human, and you must use your tool called \"Supabase Vector Store\" in order to retrieve information from the database to make sure you are answering the question accurately. "}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":2,"position":[912,-32],"id":"6b230d75-b789-4a08-bf5c-bbf7e5a85065","name":"RAG Agent"},{"parameters":{"promptType":"define","text":"={{ $('When chat message received').item.json.chatInput }}","options":{"systemMessage":"=# Overview\nYou are an AI agent who is an expert at the rules of golf. You will receive a question from the human, and you must use your tool called \"Supabase Vector Store\" in order to retrieve information from the database to make sure you are answering the question accurately. "}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":2,"position":[1168,352],"id":"2ff169a2-9928-47b5-8df8-170fd7c5c778","name":"RAG Agent 2"},{"parameters":{"content":"# RAG Agent\n","height":400,"width":440,"color":4},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[1088,304],"id":"750bd9b7-5ced-472b-9467-3bdca4ff26bf","name":"Sticky Note3"},{"parameters":{"content":"## Vector Store w/ Reranker & Metadata\n","height":400,"width":380,"color":5},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[1520,304],"id":"f16f159a-fdb1-4bdd-8da5-5fb497fccdb4","name":"Sticky Note4"},{"parameters":{"content":"# Metadata Agent\n","height":400,"width":440,"color":6},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[640,304],"id":"610f62aa-a2aa-4c9c-87d7-8ab434135fb6","name":"Sticky Note5"},{"parameters":{},"type":"n8n-nodes-base.manualTrigger","typeVersion":1,"position":[624,848],"id":"7011e91e-082e-432f-8b11-f5083609a63a","name":"Manual Trigger"},{"parameters":{"content":"# 🛠️ Setup Guide  \n**Author:** [Nate Herk](https://www.youtube.com/@nateherk)\n\nFollow the steps below to get your Retrieval-Augmented Generation (RAG) workflow up and running:\n\n### ✅ Step 1: Connect Your [Supabase](https://supabase.com/) Vector Store  \nEnsure your Supabase instance is ready and accessible. This will store your embedded documents with metadata.\nHere is a [video tutorial](https://youtu.be/JjBofKJnYIU) on setting that up.\n\n### ✅ Step 2: Connect Your [OpenAI](https://platform.openai.com/account/api-keys) Embeddings  \nUse the `text-embedding-3-small` or similar model for embedding your documents. Make sure your API key is active.\n\n### ✅ Step 3: Connect Your [OpenAI API Key](https://platform.openai.com/account/api-keys)  \nThis powers your embedding generation model. Add it via the HTTP Request node or a credential.\n\n### ✅ Step 4: Add Your [OpenRouter](https://openrouter.ai/) API Key  \nUse this for your main RAG agent—add your key via HTTP request or credential node.\n\n### ✅ Step 5: Connect a [Cohere](https://dashboard.cohere.com/api-keys) Re-Ranker  \nThe re-ranker improves answer quality. Add your API key for better relevance ranking on retrieved documents.\n\n### ✅ Step 6: Vectorize Documents with Metadata  \nEnsure your data ingestion process tags documents with meaningful metadata before vectorization. This helps with structured retrieval.\n\n### 💬 Final Step: Start Chatting  \nPrompt your agent and test the RAG flow end-to-end—watch it pull context-rich answers from your vector store.\n","height":800,"width":700},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[-80,-96],"id":"859158a4-8ba6-47ac-bc28-c1a9c3b0344f","name":"Sticky Note6"},{"parameters":{"model":{"__rl":true,"mode":"list","value":"gpt-4.1-mini"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[784,608],"id":"e5278d74-584f-455d-a146-67b5faadd0df","name":"OpenAI Chat Model","credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{"model":{"__rl":true,"mode":"list","value":"gpt-4.1-mini"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[928,176],"id":"8576b192-e7dd-468b-9910-beaf95d305c7","name":"OpenAI Chat Model1","credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{"resource":"file","operation":"get","owner":{"__rl":true,"value":"vananhphan","mode":"name"},"repository":{"__rl":true,"value":"n8n_project","mode":"list","cachedResultName":"n8n_project","cachedResultUrl":"https://github.com/vananhphan/n8n_project"},"filePath":"Rules_of_Golf_Simplified.pdf","additionalParameters":{}},"id":"b6d3ef1e-e0de-491a-b73e-cde50a31023c","name":"Get a file","type":"n8n-nodes-base.github","position":[832,848],"typeVersion":1,"webhookId":"3a598253-12e2-4623-984b-d36585b26b07","credentials":{"githubApi":{"id":"04ftghVaK1lFgfKg","name":"GitHub account"}}}],"connections":{"Download File":{"main":[[]]},"Default Data Loader":{"ai_document":[[{"node":"Upload to Supabase","type":"ai_document","index":0}]]},"Extract from File":{"main":[[{"node":"Code","type":"main","index":0}]]},"Code":{"main":[[{"node":"Upload to Supabase","type":"main","index":0}]]},"When chat message received":{"main":[[{"node":"RAG Agent","type":"main","index":0}]]},"GPT 4.1-mini":{"ai_languageModel":[[]]},"Reranker Cohere":{"ai_reranker":[[{"node":"Supabase Vector Store","type":"ai_reranker","index":0}]]},"Supabase Vector Store":{"ai_tool":[[{"node":"RAG Agent","type":"ai_tool","index":0}]]},"GPT 4.1-mini1":{"ai_languageModel":[[]]},"Reranker Cohere1":{"ai_reranker":[[{"node":"Supabase Vector Store1","type":"ai_reranker","index":0}]]},"Embeddings OpenAI2":{"ai_embedding":[[{"node":"Supabase Vector Store1","type":"ai_embedding","index":0}]]},"Supabase Vector Store1":{"ai_tool":[[{"node":"RAG Agent 2","type":"ai_tool","index":0}]]},"Embeddings OpenAI1":{"ai_embedding":[[{"node":"Upload to Supabase","type":"ai_embedding","index":0}]]},"Embeddings OpenAI":{"ai_embedding":[[{"node":"Supabase Vector Store","type":"ai_embedding","index":0}]]},"Metadata Agent":{"main":[[{"node":"RAG Agent 2","type":"main","index":0}]]},"Manual Trigger":{"main":[[{"node":"Get a file","type":"main","index":0}]]},"OpenAI Chat Model":{"ai_languageModel":[[{"node":"Metadata Agent","type":"ai_languageModel","index":0},{"node":"RAG Agent 2","type":"ai_languageModel","index":0}]]},"OpenAI Chat Model1":{"ai_languageModel":[[{"node":"RAG Agent","type":"ai_languageModel","index":0}]]},"Get a file":{"main":[[{"node":"Extract from File","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":null,"pinData":{},"versionId":"50dd1862-c2c4-40c5-8531-1014cecdee97","triggerCount":0,"tags":[],"shared":[{"createdAt":"2025-07-21T01:20:04.629Z","updatedAt":"2025-07-21T01:20:04.629Z","role":"workflow:owner","workflowId":"NvKJzDexpqe3qAcX","projectId":"WbfPHUYYKS2tiNNo","project":{"createdAt":"2025-05-03T06:49:18.088Z","updatedAt":"2025-05-03T06:52:24.837Z","id":"WbfPHUYYKS2tiNNo","name":"charlie phan <scottyphan08@gmail.com>","type":"personal","icon":null,"description":null}}]},{"createdAt":"2025-07-21T05:08:20.070Z","updatedAt":"2025-07-25T00:32:21.116Z","id":"4zCTP7eh891PviAo","name":"My workflow 12","active":false,"isArchived":false,"nodes":[{"parameters":{"options":{"systemMessage":"=## Role\nYou are a **Database Query Assistant** specializing in generating PostgreSQL queries based on natural language questions. You analyze database schemas, construct appropriate SQL queries, and provide clear explanations of results.\n\n## Tools\n1. `get_postgres_schema`: Retrieves the complete database schema (tables and columns)\n2. `execute_query_tool`: Executes SQL queries with the following input format:\n   ```json\n   {\n     \"sql\": \"Your SQL query here\"\n   }\n   ```\n\n## Process Flow\n\n### 1. Analyze the Question\n- Identify the **data entities** being requested (products, customers, orders, etc.)\n- Determine the **query type** (COUNT, AVG, SUM, SELECT, etc.)\n- Extract any **filters** or **conditions** mentioned\n\n### 2. Fetch and Analyze Schema\n- Call `get_postgres_schema` to retrieve database structure\n- Identify relevant tables and columns that match the entities in the question\n- Prioritize exact matches, then semantic matches\n\n### 3. Query Construction\n- Build case-insensitive queries using `LOWER(column) LIKE LOWER('%value%')`\n- Filter out NULL or empty values with appropriate WHERE clauses\n- Use joins when information spans multiple tables\n- Apply aggregations (COUNT, SUM, AVG) as needed\n\n### 4. Query Execution\n- Execute query using the `execute_query_tool` with proper formatting\n- If results require further processing, perform calculations as needed\n\n### 5. Result Presentation\n- Format results in a conversational, easy-to-understand manner\n- Explain how the data was retrieved and any calculations performed\n- When appropriate, suggest further questions the user might want to ask\n\n## Best Practices\n- Use parameterized queries to prevent SQL injection\n- Implement proper error handling\n- Respond with \"NOT_ENOUGH_INFO\" when the question lacks specificity\n- Always verify table/column existence before attempting queries\n- Use explicit JOINs instead of implicit joins\n- Limit large result sets when appropriate\n\n## Numeric Validation (IMPORTANT)\nWhen validating or filtering numeric values in string columns:\n1. **AVOID** complex regular expressions with `~` operator as they cause syntax errors\n2. Use these safer alternatives instead:\n   ```sql\n   -- Simple numeric check without regex\n   WHERE column_name IS NOT NULL AND trim(column_name) != '' AND column_name NOT LIKE '%[^0-9.]%'\n   \n   -- For type casting with validation\n   WHERE column_name IS NOT NULL AND trim(column_name) != '' AND column_name ~ '[0-9]'\n   \n   -- Safe numeric conversion\n   WHERE CASE WHEN column_name ~ '[0-9]' THEN TRUE ELSE FALSE END\n   ```\n3. For simple pattern matching, use LIKE instead of regex when possible\n4. When CAST is needed, always guard against invalid values:\n   ```sql\n   SELECT SUM(CASE WHEN column_name ~ '[0-9]' THEN CAST(column_name AS NUMERIC) ELSE 0 END) AS total\n   ```\n\n## Response Structure\n1. **Analysis**: Brief mention of how you understood the question\n2. **Query**: The SQL statement used (in code block format)\n3. **Results**: Clear presentation of the data found\n4. **Explanation**: Simple description of how the data was retrieved\n\n## Examples\n\n### Example 1: Basic Counting Query\n**Question**: \"How many products are in the inventory?\"\n\n**Process**:\n1. Analyze schema to find product/inventory tables\n2. Construct a COUNT query on the relevant table\n3. Execute the query\n4. Present the count with context\n\n**SQL**:\n```sql\nSELECT COUNT(*) AS product_count \nFROM products \nWHERE quantity IS NOT NULL;\n```\n\n**Response**:\n\"There are 1,250 products currently in the inventory. This count includes all items with a non-null quantity value in the products table.\"\n\n### Example 2: Filtered Aggregation Query\n**Question**: \"What is the average order value for premium customers?\"\n\n**Process**:\n1. Identify relevant tables (orders, customers)\n2. Determine join conditions\n3. Apply filters for \"premium\" customers\n4. Calculate average\n\n**SQL**:\n```sql\nSELECT AVG(o.total_amount) AS avg_order_value\nFROM orders o\nJOIN customers c ON o.customer_id = c.id\nWHERE LOWER(c.customer_type) = LOWER('premium')\nAND o.total_amount IS NOT NULL;\n```\n\n**Response**:\n\"Premium customers spend an average of $85.42 per order. This was calculated by averaging the total_amount from all orders placed by customers with a 'premium' customer type.\"\n\n### Example 3: Numeric Calculation from String Column\n**Question**: \"What is the total of all ratings?\"\n\n**Process**:\n1. Find the ratings table and column\n2. Use safe numeric validation\n3. Sum the values\n\n**SQL**:\n```sql\nSELECT SUM(CASE WHEN rating ~ '[0-9]' THEN CAST(rating AS NUMERIC) ELSE 0 END) AS total_rating\nFROM ratings\nWHERE rating IS NOT NULL AND trim(rating) != '';\n```\n\n**Response**:\n\"The sum of all ratings is 4,285. This calculation includes all valid numeric ratings from the ratings table.\"\n\n### Example 4: Date Range Aggregation for Revenue  \n**Question**: \"How much did I make last week?\"  \n\n**Process**:  \n1. Identify the sales table and relevant columns (e.g., `sale_date` for dates and `revenue_amount` for revenue).  \n2. Use PostgreSQL date functions (`date_trunc` and interval arithmetic) to calculate the date range for the previous week.  \n3. Sum the revenue within the computed date range.  \n\n**SQL**:  \n```sql\nSELECT SUM(revenue_amount) AS total_revenue\nFROM sales_data\nWHERE sale_date >= date_trunc('week', CURRENT_DATE) - INTERVAL '1 week'\n  AND sale_date < date_trunc('week', CURRENT_DATE);\n```  \n\n**Response**:  \n\"Last week's total revenue is calculated by summing the `revenue_amount` for records where the `sale_date` falls within the previous week. This query uses date functions to dynamically determine the correct date range.\"\n\nToday's date: {{ $now }}","maxIterations":5}},"id":"459f0e64-8754-4d6c-a4c1-c2e791cb6bf1","name":"AI Agent1","type":"@n8n/n8n-nodes-langchain.agent","typeVersion":1.7,"position":[-1024,80]},{"parameters":{"jsCode":"// Helper function to check if a string is in MM/DD/YYYY format\nfunction isDateString(value) {\n  const dateRegex = /^\\d{2}\\/\\d{2}\\/\\d{4}$/;\n  if (typeof value !== 'string') return false;\n  if (!dateRegex.test(value)) return false;\n  const [month, day, year] = value.split('/').map(Number);\n  const date = new Date(year, month - 1, day);\n  return !isNaN(date.getTime());\n}\n\nconst tableName = `ai_table_${$('change_this').first().json.sheet_name}`;\nconst rows = $('fetch sheet data').all();\nconst allColumns = new Set();\n\n// Collect column names dynamically\nrows.forEach(row => {\n  Object.keys(row.json).forEach(col => allColumns.add(col));\n});\n\n// Ensure \"ai_table_identifier\" is always the first column\nconst originalColumns = [\"ai_table_identifier\", ...Array.from(allColumns)];\n\n// Function to detect currency type (unchanged)\nfunction detectCurrency(values) {\n  const currencySymbols = {\n    '₹': 'INR', '$': 'USD', '€': 'EUR', '£': 'GBP', '¥': 'JPY',\n    '₩': 'KRW', '฿': 'THB', 'zł': 'PLN', 'kr': 'SEK', 'R$': 'BRL',\n    'C$': 'CAD', 'A$': 'AUD'\n  };\n\n  let detectedCurrency = null;\n  for (const value of values) {\n    if (typeof value === 'string' && value.trim() !== '') {\n      for (const [symbol, code] of Object.entries(currencySymbols)) {\n        if (value.trim().startsWith(symbol)) {\n          detectedCurrency = code;\n          break;\n        }\n      }\n    }\n  }\n  return detectedCurrency;\n}\n\n// Function to generate consistent column names\nfunction generateColumnName(originalName, typeInfo) {\n  if (typeInfo.isCurrency) {\n    return `${originalName}_${typeInfo.currencyCode.toLowerCase()}`;\n  }\n  return originalName;\n}\n\n// Infer column types and transform names\nconst columnMapping = {};\noriginalColumns.forEach(col => {\n  let typeInfo = { type: \"TEXT\" };\n\n  if (col !== \"ai_table_identifier\") {\n    const sampleValues = rows\n      .map(row => row.json[col])\n      .filter(value => value !== undefined && value !== null);\n\n    // Check for currency first\n    const currencyCode = detectCurrency(sampleValues);\n    if (currencyCode) {\n      typeInfo = { type: \"DECIMAL(15,2)\", isCurrency: true, currencyCode };\n    }\n    // If all sample values match MM/DD/YYYY, treat the column as a date\n    else if (sampleValues.length > 0 && sampleValues.every(val => isDateString(val))) {\n      typeInfo = { type: \"TIMESTAMP\" };\n    }\n  }\n\n  const newColumnName = generateColumnName(col, typeInfo);\n  columnMapping[col] = { newName: newColumnName, typeInfo };\n});\n\n// Final column names\nconst mappedColumns = originalColumns.map(col => columnMapping[col]?.newName || col);\n\n// Define SQL columns – note that for simplicity, this example still uses TEXT for non-special types,\n// but you can adjust it so that TIMESTAMP columns are created with a TIMESTAMP type.\nconst columnDefinitions = [`\"ai_table_identifier\" UUID PRIMARY KEY DEFAULT gen_random_uuid()`]\n  .concat(mappedColumns.slice(1).map(col => {\n    // If the column was inferred as TIMESTAMP, use that type in the CREATE TABLE statement.\n    const originalCol = Object.keys(columnMapping).find(key => columnMapping[key].newName === col);\n    const inferredType = columnMapping[originalCol]?.typeInfo?.type;\n    return `\"${col}\" ${inferredType === \"TIMESTAMP\" ? \"TIMESTAMP\" : \"TEXT\"}`;\n  }))\n  .join(\", \");\n\nconst createTableQuery = `CREATE TABLE IF NOT EXISTS ${tableName} (${columnDefinitions});`;\n\nreturn [{ \n  query: createTableQuery,\n  columnMapping: columnMapping \n}];\n"},"id":"f60384e2-f985-4d78-bc65-d1ab6898b432","name":"create table query","type":"n8n-nodes-base.code","typeVersion":2,"position":[-608,784]},{"parameters":{"jsCode":"const tableName = `ai_table_${$('change_this').first().json.sheet_name}`;\nconst rows = $('fetch sheet data').all();\nconst allColumns = new Set();\n\n// Get column mapping from previous node\nconst columnMapping = $('create table query').first().json.columnMapping || {};\n\n// Collect column names dynamically\nrows.forEach(row => {\n  Object.keys(row.json).forEach(col => allColumns.add(col));\n});\n\nconst originalColumns = Array.from(allColumns);\nconst mappedColumns = originalColumns.map(col => \n  columnMapping[col] ? columnMapping[col].newName : col\n);\n\n// Helper function to check if a string is a valid timestamp\nfunction isValidTimestamp(value) {\n  const date = new Date(value);\n  return !isNaN(date.getTime());\n}\n\n// Helper to detect currency symbol (unchanged)\nfunction getCurrencySymbol(value) {\n  if (typeof value !== 'string') return null;\n  \n  const currencySymbols = ['₹', '$', '€', '£', '¥', '₩', '฿', 'zł', 'kr', 'R$', 'C$', 'A$'];\n  for (const symbol of currencySymbols) {\n    if (value.trim().startsWith(symbol)) {\n      return symbol;\n    }\n  }\n  return null;\n}\n\n// Helper to normalize currency values (unchanged)\nfunction normalizeCurrencyValue(value, currencySymbol) {\n  if (typeof value !== 'string') return null;\n  if (!currencySymbol) return value;\n  \n  const numericPart = value.replace(currencySymbol, '').replace(/,/g, '');\n  return !isNaN(parseFloat(numericPart)) ? parseFloat(numericPart) : null;\n}\n\n// Helper to normalize percentage values (unchanged)\nfunction normalizePercentageValue(value) {\n  if (typeof value !== 'string') return value;\n  if (!value.trim().endsWith('%')) return value;\n  \n  const numericPart = value.replace('%', '');\n  return !isNaN(parseFloat(numericPart)) ? parseFloat(numericPart) / 100 : null;\n}\n\n// Function to parse MM/DD/YYYY strings into ISO format\nfunction parseDateString(value) {\n  const dateRegex = /^\\d{2}\\/\\d{2}\\/\\d{4}$/;\n  if (typeof value === 'string' && dateRegex.test(value)) {\n    const [month, day, year] = value.split('/').map(Number);\n    const date = new Date(year, month - 1, day);\n    return !isNaN(date.getTime()) ? date.toISOString() : null;\n  }\n  return value;\n}\n\n// Format rows properly based on column mappings and types\nconst formattedRows = rows.map(row => {\n  const formattedRow = {};\n\n  originalColumns.forEach((col, index) => {\n    const mappedCol = mappedColumns[index];\n    let value = row.json[col];\n    const typeInfo = columnMapping[col]?.typeInfo || { type: \"TEXT\" };\n\n    if (value === \"\" || value === null || value === undefined) {\n      value = null;\n    } \n    else if (typeInfo.isCurrency) {\n      const symbol = getCurrencySymbol(value);\n      if (symbol) {\n        value = normalizeCurrencyValue(value, symbol);\n      } else {\n        value = null;\n      }\n    }\n    else if (typeInfo.isPercentage) {\n      if (typeof value === 'string' && value.trim().endsWith('%')) {\n        value = normalizePercentageValue(value);\n      } else {\n        value = !isNaN(parseFloat(value)) ? parseFloat(value) / 100 : null;\n      }\n    }\n    else if (typeInfo.type === \"DECIMAL(15,2)\" || typeInfo.type === \"INTEGER\") {\n      if (typeof value === 'string') {\n        const cleanedValue = value.replace(/,/g, '');\n        value = !isNaN(parseFloat(cleanedValue)) ? parseFloat(cleanedValue) : null;\n      } else if (typeof value === 'number') {\n        value = parseFloat(value);\n      } else {\n        value = null;\n      }\n    } \n    else if (typeInfo.type === \"BOOLEAN\") {\n      if (typeof value === 'string') {\n        const lowercased = value.toString().toLowerCase();\n        value = lowercased === \"true\" ? true : \n                lowercased === \"false\" ? false : null;\n      } else {\n        value = Boolean(value);\n      }\n    } \n    else if (typeInfo.type === \"TIMESTAMP\") {\n      // Check if the value is in MM/DD/YYYY format and parse it accordingly.\n      if (/^\\d{2}\\/\\d{2}\\/\\d{4}$/.test(value)) {\n        value = parseDateString(value);\n      } else if (isValidTimestamp(value)) {\n        value = new Date(value).toISOString();\n      } else {\n        value = null;\n      }\n    }\n    else if (typeInfo.type === \"TEXT\") {\n      value = value !== null && value !== undefined ? String(value) : null;\n    }\n\n    formattedRow[mappedCol] = value;\n  });\n\n  return formattedRow;\n});\n\n// Generate SQL placeholders dynamically\nconst valuePlaceholders = formattedRows.map((_, rowIndex) =>\n  `(${mappedColumns.map((_, colIndex) => `$${rowIndex * mappedColumns.length + colIndex + 1}`).join(\", \")})`\n).join(\", \");\n\n// Build the insert query string\nconst insertQuery = `INSERT INTO ${tableName} (${mappedColumns.map(col => `\"${col}\"`).join(\", \")}) VALUES ${valuePlaceholders};`;\n\n// Flatten parameter values for PostgreSQL query\nconst parameters = formattedRows.flatMap(row => mappedColumns.map(col => row[col]));\n\nreturn [\n  {\n    query: insertQuery,\n    parameters: parameters\n  }\n];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-224,784],"id":"b23c559e-adad-429e-b5a4-792c78df7a0c","name":"create insertion query"},{"parameters":{"pollTimes":{"item":[{}]},"triggerOn":"specificFile","fileToWatch":{"__rl":true,"value":"1yGx4ODHYYtPV1WZFAtPcyxGT2brcXM6pl0KJhIM1f_c","mode":"list","cachedResultName":"Spreadsheet","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1yGx4ODHYYtPV1WZFAtPcyxGT2brcXM6pl0KJhIM1f_c/edit?usp=drivesdk"}},"type":"n8n-nodes-base.googleDriveTrigger","typeVersion":1,"position":[-1280,480],"id":"84e47101-b77c-4911-a0f1-366d63d9f1fc","name":"Google Drive Trigger","credentials":{"googleDriveOAuth2Api":{"id":"XDqLv6T2wJMb4j1U","name":"Google Drive account pnjp"}}},{"parameters":{"name":"query_executer","description":"Call this tool to execute a query. Remember that it should be in a postgreSQL query structure.","workflowId":{"__rl":true,"value":"oPWJZynrMME45ks4","mode":"list","cachedResultName":"query_executer"},"specifyInputSchema":true,"schemaType":"manual","inputSchema":"{\n\"type\": \"object\",\n\"properties\": {\n\t\"sql\": {\n\t\t\"type\": \"string\",\n\t\t\"description\": \"A SQL query based on the users question and database schema.\"\n\t\t}\n\t}\n}"},"id":"ad07c6fd-1f68-4ed0-9e25-5121101acc8f","name":"execute_query_tool","type":"@n8n/n8n-nodes-langchain.toolWorkflow","typeVersion":1.2,"position":[-576,272]},{"parameters":{"modelName":"models/gemini-2.0-flash","options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatGoogleGemini","typeVersion":1,"position":[-1168,304],"id":"96140e6a-f988-4028-b985-943cc0b809e1","name":"Google Gemini Chat Model","credentials":{"googlePalmApi":{"id":"VxuR4Ot4TSiJTVFk","name":"Google Gemini(PaLM) Api account"}}},{"parameters":{"name":"get_postgres_schema","description":"Call this tool to retrieve the schema of all the tables inside of the database. A string will be retrieved with the name of the table and its columns, each table is separated by \\n\\n.","workflowId":{"__rl":true,"value":"iNLPk34SeRGHaeMD","mode":"list","cachedResultName":"get database schema"},"workflowInputs":{"mappingMode":"defineBelow","value":{},"matchingColumns":[],"schema":[],"attemptToConvertTypes":false,"convertFieldsToString":false}},"type":"@n8n/n8n-nodes-langchain.toolWorkflow","typeVersion":2,"position":[-768,272],"id":"ef8fc46f-d9cf-4edb-8b0f-57180c4e119f","name":"get_postgres_schema"},{"parameters":{"assignments":{"assignments":[{"id":"908ed843-f848-4290-9cdb-f195d2189d7c","name":"table_url","value":"https://docs.google.com/spreadsheets/d/1yGx4ODHYYtPV1WZFAtPcyxGT2brcXM6pl0KJhIM1f_c/edit?gid=0#gid=0","type":"string"},{"id":"50f8afaf-0a6c-43ee-9157-79408fe3617a","name":"sheet_name","value":"product_list","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-1088,480],"id":"5b25a23e-6f0c-4d07-9465-bd8689226f26","name":"change_this"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"619ce84c-0a50-4f88-8e55-0ce529aea1fc","leftValue":"={{ $('table exists?').item.json.exists }}","rightValue":"true","operator":{"type":"boolean","operation":"false","singleValue":true}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[-496,480],"id":"81d99b56-ab3f-4379-af3f-777212fd33fe","name":"is not in database"},{"parameters":{"operation":"executeQuery","query":"SELECT EXISTS (\n    SELECT 1 \n    FROM information_schema.tables \n    WHERE table_name = 'ai_table_{{ $json.sheet_name }}'\n);\n","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.5,"position":[-880,480],"id":"d68cd08a-b9fb-4bda-a3a0-387f1beb104a","name":"table exists?","credentials":{"postgres":{"id":"lPXyj3Ypf5YeZpp3","name":"Postgres account Local"}}},{"parameters":{"documentId":{"__rl":true,"value":"={{ $('change_this').item.json.table_url }}","mode":"url"},"sheetName":{"__rl":true,"value":"={{ $('change_this').item.json.sheet_name }}","mode":"name"},"options":{}},"type":"n8n-nodes-base.googleSheets","typeVersion":4.5,"position":[-704,480],"id":"4bd32d86-1304-408e-aef7-9ab12f01e201","name":"fetch sheet data","credentials":{"googleSheetsOAuth2Api":{"id":"bdeAZgAgEmqpgnr1","name":"Google Sheets account"}}},{"parameters":{"operation":"executeQuery","query":"DROP TABLE IF EXISTS ai_table_{{ $('change_this').item.json.sheet_name }} CASCADE;","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.5,"position":[-896,784],"id":"97cf46c6-b31f-4645-ad95-0ee4122eb20a","name":"remove table","credentials":{"postgres":{"id":"lPXyj3Ypf5YeZpp3","name":"Postgres account Local"}}},{"parameters":{"operation":"executeQuery","query":"{{ $json.query }}","options":{}},"id":"2f580845-27d8-4edf-a7b5-9940610fbac8","name":"create table","type":"n8n-nodes-base.postgres","typeVersion":2.5,"position":[-416,784],"credentials":{"postgres":{"id":"lPXyj3Ypf5YeZpp3","name":"Postgres account Local"}}},{"parameters":{"operation":"executeQuery","query":"{{$json.query}}","options":{"queryReplacement":"={{$json.parameters}}"}},"id":"baaac726-fddc-49cf-b52d-d92377aebc8c","name":"perform insertion","type":"n8n-nodes-base.postgres","typeVersion":2.5,"position":[-16,784],"credentials":{"postgres":{"id":"lPXyj3Ypf5YeZpp3","name":"Postgres account Local"}}},{"parameters":{"operation":"executeQuery","query":"{{ $json.query.sql }}","options":{}},"id":"10231708-ba70-4b65-a589-86be57abc383","name":"Postgres","type":"n8n-nodes-base.postgres","typeVersion":2.5,"position":[80,80],"credentials":{"postgres":{"id":"lPXyj3Ypf5YeZpp3","name":"Postgres account Local"}}},{"parameters":{"assignments":{"assignments":[{"id":"e2f94fb1-3deb-466a-a36c-e3476511d5f2","name":"response","value":"={{ $json }}","type":"string"}]},"options":{}},"id":"238d9f64-7de2-4b04-bf45-06ecf1cf0b2b","name":"Edit Fields","type":"n8n-nodes-base.set","typeVersion":3.4,"position":[304,80]},{"parameters":{"jsCode":"function transformSchema(input) {\n    const tables = {};\n    \n    input.forEach(({ json }) => {\n        if (!json) return;\n        \n        const { tablename, schemaname, column_name, data_type } = json;\n        \n        if (!tables[tablename]) {\n            tables[tablename] = { schema: schemaname, columns: [] };\n        }\n        tables[tablename].columns.push(`${column_name} (${data_type})`);\n    });\n    \n    return Object.entries(tables)\n        .map(([tablename, { schema, columns }]) => `Table ${tablename} (Schema: ${schema}) has columns: ${columns.join(\", \")}`)\n        .join(\"\\n\\n\");\n}\n\n// Example usage\nconst input = $input.all();\nconsole.log(input);\nconst transformedSchema = transformSchema(input);\n\nreturn { data: transformedSchema };"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[304,464],"id":"cb212435-c1c5-43a0-a3ae-229d38e9df4b","name":"Code"},{"parameters":{"operation":"executeQuery","query":"SELECT \n    t.schemaname,\n    t.tablename,\n    c.column_name,\n    c.data_type\nFROM \n    pg_catalog.pg_tables t\nJOIN \n    information_schema.columns c\n    ON t.schemaname = c.table_schema\n    AND t.tablename = c.table_name\nWHERE \n    t.schemaname = 'public'\nORDER BY \n    t.tablename, c.ordinal_position;","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.5,"position":[80,464],"id":"5f8d2ba9-622b-4505-bf4a-640538cf3a07","name":"Postgres1","credentials":{"postgres":{"id":"lPXyj3Ypf5YeZpp3","name":"Postgres account Local"}}},{"parameters":{},"id":"ffe87be1-7d71-41a3-8d0d-44feeef14015","name":"Execute Workflow Trigger","type":"n8n-nodes-base.executeWorkflowTrigger","typeVersion":1,"position":[-176,288]},{"parameters":{"content":"Place this in a separate workflow named:\n### query_executer","height":260,"width":500,"color":7},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[0,0],"id":"22a8276d-b396-40a6-88eb-103f851185a1","name":"Sticky Note"},{"parameters":{"content":"place this in a separate workflow named: \n### get database schema","height":280,"width":500,"color":7},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[0,384],"id":"3bd59f58-45c4-4268-9bbc-3f8626c9fec3","name":"Sticky Note1"},{"parameters":{},"id":"ad4fd911-8b5f-4f32-aed3-13c854af6f51","name":"When chat message received","type":"@n8n/n8n-nodes-langchain.manualChatTrigger","typeVersion":1.1,"position":[-1280,80]}],"connections":{"create table query":{"main":[[{"node":"create table","type":"main","index":0}]]},"create insertion query":{"main":[[{"node":"perform insertion","type":"main","index":0}]]},"Google Drive Trigger":{"main":[[{"node":"change_this","type":"main","index":0}]]},"execute_query_tool":{"ai_tool":[[{"node":"AI Agent1","type":"ai_tool","index":0}]]},"Google Gemini Chat Model":{"ai_languageModel":[[{"node":"AI Agent1","type":"ai_languageModel","index":0}]]},"get_postgres_schema":{"ai_tool":[[{"node":"AI Agent1","type":"ai_tool","index":0}]]},"change_this":{"main":[[{"node":"table exists?","type":"main","index":0}]]},"is not in database":{"main":[[{"node":"create table query","type":"main","index":0}],[{"node":"remove table","type":"main","index":0}]]},"table exists?":{"main":[[{"node":"fetch sheet data","type":"main","index":0}]]},"fetch sheet data":{"main":[[{"node":"is not in database","type":"main","index":0}]]},"remove table":{"main":[[{"node":"create table query","type":"main","index":0}]]},"create table":{"main":[[{"node":"create insertion query","type":"main","index":0}]]},"Postgres":{"main":[[{"node":"Edit Fields","type":"main","index":0}]]},"Postgres1":{"main":[[{"node":"Code","type":"main","index":0}]]},"Execute Workflow Trigger":{"main":[[{"node":"Postgres","type":"main","index":0},{"node":"Postgres1","type":"main","index":0}]]},"When chat message received":{"main":[[{"node":"AI Agent1","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"0f302ffb-cbab-4569-b4a6-657bc81f9352","triggerCount":0,"tags":[],"shared":[{"createdAt":"2025-07-21T05:08:20.070Z","updatedAt":"2025-07-21T05:08:20.070Z","role":"workflow:owner","workflowId":"4zCTP7eh891PviAo","projectId":"WbfPHUYYKS2tiNNo","project":{"createdAt":"2025-05-03T06:49:18.088Z","updatedAt":"2025-05-03T06:52:24.837Z","id":"WbfPHUYYKS2tiNNo","name":"charlie phan <scottyphan08@gmail.com>","type":"personal","icon":null,"description":null}}]},{"createdAt":"2025-07-28T07:59:04.093Z","updatedAt":"2025-07-28T08:06:05.212Z","id":"C2D7jht9fctKk3BX","name":"No RAG finance","active":false,"isArchived":false,"nodes":[{"parameters":{"options":{"systemMessage":"=## Role\nYou are a **Database Query Assistant** specializing in generating PostgreSQL queries based on natural language questions. You analyze database schemas, construct appropriate SQL queries, and provide clear explanations of results.\n\n## Tools\n1. `get_postgres_schema`: Retrieves the complete database schema (tables and columns)\n2. `execute_query_tool`: Executes SQL queries with the following input format:\n   ```json\n   {\n     \"sql\": \"Your SQL query here\"\n   }\n   ```\n\n## Process Flow\n\n### 1. Analyze the Question\n- Identify the **data entities** being requested (products, customers, orders, etc.)\n- Determine the **query type** (COUNT, AVG, SUM, SELECT, etc.)\n- Extract any **filters** or **conditions** mentioned\n\n### 2. Fetch and Analyze Schema\n- Call `get_postgres_schema` to retrieve database structure\n- Identify relevant tables and columns that match the entities in the question\n- Prioritize exact matches, then semantic matches\n\n### 3. Query Construction\n- Build case-insensitive queries using `LOWER(column) LIKE LOWER('%value%')`\n- Filter out NULL or empty values with appropriate WHERE clauses\n- Use joins when information spans multiple tables\n- Apply aggregations (COUNT, SUM, AVG) as needed\n\n### 4. Query Execution\n- Execute query using the `execute_query_tool` with proper formatting\n- If results require further processing, perform calculations as needed\n\n### 5. Result Presentation\n- Format results in a conversational, easy-to-understand manner\n- Explain how the data was retrieved and any calculations performed\n- When appropriate, suggest further questions the user might want to ask\n\n## Best Practices\n- Use parameterized queries to prevent SQL injection\n- Implement proper error handling\n- Respond with \"NOT_ENOUGH_INFO\" when the question lacks specificity\n- Always verify table/column existence before attempting queries\n- Use explicit JOINs instead of implicit joins\n- Limit large result sets when appropriate\n\n## Numeric Validation (IMPORTANT)\nWhen validating or filtering numeric values in string columns:\n1. **AVOID** complex regular expressions with `~` operator as they cause syntax errors\n2. Use these safer alternatives instead:\n   ```sql\n   -- Simple numeric check without regex\n   WHERE column_name IS NOT NULL AND trim(column_name) != '' AND column_name NOT LIKE '%[^0-9.]%'\n   \n   -- For type casting with validation\n   WHERE column_name IS NOT NULL AND trim(column_name) != '' AND column_name ~ '[0-9]'\n   \n   -- Safe numeric conversion\n   WHERE CASE WHEN column_name ~ '[0-9]' THEN TRUE ELSE FALSE END\n   ```\n3. For simple pattern matching, use LIKE instead of regex when possible\n4. When CAST is needed, always guard against invalid values:\n   ```sql\n   SELECT SUM(CASE WHEN column_name ~ '[0-9]' THEN CAST(column_name AS NUMERIC) ELSE 0 END) AS total\n   ```\n\n## Response Structure\n1. **Analysis**: Brief mention of how you understood the question\n2. **Query**: The SQL statement used (in code block format)\n3. **Results**: Clear presentation of the data found\n4. **Explanation**: Simple description of how the data was retrieved\n\n## Examples\n\n### Example 1: Basic Counting Query\n**Question**: \"How many products are in the inventory?\"\n\n**Process**:\n1. Analyze schema to find product/inventory tables\n2. Construct a COUNT query on the relevant table\n3. Execute the query\n4. Present the count with context\n\n**SQL**:\n```sql\nSELECT COUNT(*) AS product_count \nFROM products \nWHERE quantity IS NOT NULL;\n```\n\n**Response**:\n\"There are 1,250 products currently in the inventory. This count includes all items with a non-null quantity value in the products table.\"\n\n### Example 2: Filtered Aggregation Query\n**Question**: \"What is the average order value for premium customers?\"\n\n**Process**:\n1. Identify relevant tables (orders, customers)\n2. Determine join conditions\n3. Apply filters for \"premium\" customers\n4. Calculate average\n\n**SQL**:\n```sql\nSELECT AVG(o.total_amount) AS avg_order_value\nFROM orders o\nJOIN customers c ON o.customer_id = c.id\nWHERE LOWER(c.customer_type) = LOWER('premium')\nAND o.total_amount IS NOT NULL;\n```\n\n**Response**:\n\"Premium customers spend an average of $85.42 per order. This was calculated by averaging the total_amount from all orders placed by customers with a 'premium' customer type.\"\n\n### Example 3: Numeric Calculation from String Column\n**Question**: \"What is the total of all ratings?\"\n\n**Process**:\n1. Find the ratings table and column\n2. Use safe numeric validation\n3. Sum the values\n\n**SQL**:\n```sql\nSELECT SUM(CASE WHEN rating ~ '[0-9]' THEN CAST(rating AS NUMERIC) ELSE 0 END) AS total_rating\nFROM ratings\nWHERE rating IS NOT NULL AND trim(rating) != '';\n```\n\n**Response**:\n\"The sum of all ratings is 4,285. This calculation includes all valid numeric ratings from the ratings table.\"\n\n### Example 4: Date Range Aggregation for Revenue  \n**Question**: \"How much did I make last week?\"  \n\n**Process**:  \n1. Identify the sales table and relevant columns (e.g., `sale_date` for dates and `revenue_amount` for revenue).  \n2. Use PostgreSQL date functions (`date_trunc` and interval arithmetic) to calculate the date range for the previous week.  \n3. Sum the revenue within the computed date range.  \n\n**SQL**:  \n```sql\nSELECT SUM(revenue_amount) AS total_revenue\nFROM sales_data\nWHERE sale_date >= date_trunc('week', CURRENT_DATE) - INTERVAL '1 week'\n  AND sale_date < date_trunc('week', CURRENT_DATE);\n```  \n\n**Response**:  \n\"Last week's total revenue is calculated by summing the `revenue_amount` for records where the `sale_date` falls within the previous week. This query uses date functions to dynamically determine the correct date range.\"\n\nToday's date: {{ $now }}","maxIterations":5}},"id":"1a80df63-0897-42b1-b733-e147a1756874","name":"AI Agent1","type":"@n8n/n8n-nodes-langchain.agent","typeVersion":1.7,"position":[-1024,80]},{"parameters":{"jsCode":"// Helper function to check if a string is in MM/DD/YYYY format\nfunction isDateString(value) {\n  const dateRegex = /^\\d{2}\\/\\d{2}\\/\\d{4}$/;\n  if (typeof value !== 'string') return false;\n  if (!dateRegex.test(value)) return false;\n  const [month, day, year] = value.split('/').map(Number);\n  const date = new Date(year, month - 1, day);\n  return !isNaN(date.getTime());\n}\n\nconst tableName = `ai_table_${$('change_this').first().json.sheet_name}`;\nconst rows = $('fetch sheet data').all();\nconst allColumns = new Set();\n\n// Collect column names dynamically\nrows.forEach(row => {\n  Object.keys(row.json).forEach(col => allColumns.add(col));\n});\n\n// Ensure \"ai_table_identifier\" is always the first column\nconst originalColumns = [\"ai_table_identifier\", ...Array.from(allColumns)];\n\n// Function to detect currency type (unchanged)\nfunction detectCurrency(values) {\n  const currencySymbols = {\n    '₹': 'INR', '$': 'USD', '€': 'EUR', '£': 'GBP', '¥': 'JPY',\n    '₩': 'KRW', '฿': 'THB', 'zł': 'PLN', 'kr': 'SEK', 'R$': 'BRL',\n    'C$': 'CAD', 'A$': 'AUD'\n  };\n\n  let detectedCurrency = null;\n  for (const value of values) {\n    if (typeof value === 'string' && value.trim() !== '') {\n      for (const [symbol, code] of Object.entries(currencySymbols)) {\n        if (value.trim().startsWith(symbol)) {\n          detectedCurrency = code;\n          break;\n        }\n      }\n    }\n  }\n  return detectedCurrency;\n}\n\n// Function to generate consistent column names\nfunction generateColumnName(originalName, typeInfo) {\n  if (typeInfo.isCurrency) {\n    return `${originalName}_${typeInfo.currencyCode.toLowerCase()}`;\n  }\n  return originalName;\n}\n\n// Infer column types and transform names\nconst columnMapping = {};\noriginalColumns.forEach(col => {\n  let typeInfo = { type: \"TEXT\" };\n\n  if (col !== \"ai_table_identifier\") {\n    const sampleValues = rows\n      .map(row => row.json[col])\n      .filter(value => value !== undefined && value !== null);\n\n    // Check for currency first\n    const currencyCode = detectCurrency(sampleValues);\n    if (currencyCode) {\n      typeInfo = { type: \"DECIMAL(15,2)\", isCurrency: true, currencyCode };\n    }\n    // If all sample values match MM/DD/YYYY, treat the column as a date\n    else if (sampleValues.length > 0 && sampleValues.every(val => isDateString(val))) {\n      typeInfo = { type: \"TIMESTAMP\" };\n    }\n  }\n\n  const newColumnName = generateColumnName(col, typeInfo);\n  columnMapping[col] = { newName: newColumnName, typeInfo };\n});\n\n// Final column names\nconst mappedColumns = originalColumns.map(col => columnMapping[col]?.newName || col);\n\n// Define SQL columns – note that for simplicity, this example still uses TEXT for non-special types,\n// but you can adjust it so that TIMESTAMP columns are created with a TIMESTAMP type.\nconst columnDefinitions = [`\"ai_table_identifier\" UUID PRIMARY KEY DEFAULT gen_random_uuid()`]\n  .concat(mappedColumns.slice(1).map(col => {\n    // If the column was inferred as TIMESTAMP, use that type in the CREATE TABLE statement.\n    const originalCol = Object.keys(columnMapping).find(key => columnMapping[key].newName === col);\n    const inferredType = columnMapping[originalCol]?.typeInfo?.type;\n    return `\"${col}\" ${inferredType === \"TIMESTAMP\" ? \"TIMESTAMP\" : \"TEXT\"}`;\n  }))\n  .join(\", \");\n\nconst createTableQuery = `CREATE TABLE IF NOT EXISTS ${tableName} (${columnDefinitions});`;\n\nreturn [{ \n  query: createTableQuery,\n  columnMapping: columnMapping \n}];\n"},"id":"0da4f27a-af8a-4e13-9634-c3e2262104cc","name":"create table query","type":"n8n-nodes-base.code","typeVersion":2,"position":[-608,784]},{"parameters":{"jsCode":"const tableName = `ai_table_${$('change_this').first().json.sheet_name}`;\nconst rows = $('fetch sheet data').all();\nconst allColumns = new Set();\n\n// Get column mapping from previous node\nconst columnMapping = $('create table query').first().json.columnMapping || {};\n\n// Collect column names dynamically\nrows.forEach(row => {\n  Object.keys(row.json).forEach(col => allColumns.add(col));\n});\n\nconst originalColumns = Array.from(allColumns);\nconst mappedColumns = originalColumns.map(col => \n  columnMapping[col] ? columnMapping[col].newName : col\n);\n\n// Helper function to check if a string is a valid timestamp\nfunction isValidTimestamp(value) {\n  const date = new Date(value);\n  return !isNaN(date.getTime());\n}\n\n// Helper to detect currency symbol (unchanged)\nfunction getCurrencySymbol(value) {\n  if (typeof value !== 'string') return null;\n  \n  const currencySymbols = ['₹', '$', '€', '£', '¥', '₩', '฿', 'zł', 'kr', 'R$', 'C$', 'A$'];\n  for (const symbol of currencySymbols) {\n    if (value.trim().startsWith(symbol)) {\n      return symbol;\n    }\n  }\n  return null;\n}\n\n// Helper to normalize currency values (unchanged)\nfunction normalizeCurrencyValue(value, currencySymbol) {\n  if (typeof value !== 'string') return null;\n  if (!currencySymbol) return value;\n  \n  const numericPart = value.replace(currencySymbol, '').replace(/,/g, '');\n  return !isNaN(parseFloat(numericPart)) ? parseFloat(numericPart) : null;\n}\n\n// Helper to normalize percentage values (unchanged)\nfunction normalizePercentageValue(value) {\n  if (typeof value !== 'string') return value;\n  if (!value.trim().endsWith('%')) return value;\n  \n  const numericPart = value.replace('%', '');\n  return !isNaN(parseFloat(numericPart)) ? parseFloat(numericPart) / 100 : null;\n}\n\n// Function to parse MM/DD/YYYY strings into ISO format\nfunction parseDateString(value) {\n  const dateRegex = /^\\d{2}\\/\\d{2}\\/\\d{4}$/;\n  if (typeof value === 'string' && dateRegex.test(value)) {\n    const [month, day, year] = value.split('/').map(Number);\n    const date = new Date(year, month - 1, day);\n    return !isNaN(date.getTime()) ? date.toISOString() : null;\n  }\n  return value;\n}\n\n// Format rows properly based on column mappings and types\nconst formattedRows = rows.map(row => {\n  const formattedRow = {};\n\n  originalColumns.forEach((col, index) => {\n    const mappedCol = mappedColumns[index];\n    let value = row.json[col];\n    const typeInfo = columnMapping[col]?.typeInfo || { type: \"TEXT\" };\n\n    if (value === \"\" || value === null || value === undefined) {\n      value = null;\n    } \n    else if (typeInfo.isCurrency) {\n      const symbol = getCurrencySymbol(value);\n      if (symbol) {\n        value = normalizeCurrencyValue(value, symbol);\n      } else {\n        value = null;\n      }\n    }\n    else if (typeInfo.isPercentage) {\n      if (typeof value === 'string' && value.trim().endsWith('%')) {\n        value = normalizePercentageValue(value);\n      } else {\n        value = !isNaN(parseFloat(value)) ? parseFloat(value) / 100 : null;\n      }\n    }\n    else if (typeInfo.type === \"DECIMAL(15,2)\" || typeInfo.type === \"INTEGER\") {\n      if (typeof value === 'string') {\n        const cleanedValue = value.replace(/,/g, '');\n        value = !isNaN(parseFloat(cleanedValue)) ? parseFloat(cleanedValue) : null;\n      } else if (typeof value === 'number') {\n        value = parseFloat(value);\n      } else {\n        value = null;\n      }\n    } \n    else if (typeInfo.type === \"BOOLEAN\") {\n      if (typeof value === 'string') {\n        const lowercased = value.toString().toLowerCase();\n        value = lowercased === \"true\" ? true : \n                lowercased === \"false\" ? false : null;\n      } else {\n        value = Boolean(value);\n      }\n    } \n    else if (typeInfo.type === \"TIMESTAMP\") {\n      // Check if the value is in MM/DD/YYYY format and parse it accordingly.\n      if (/^\\d{2}\\/\\d{2}\\/\\d{4}$/.test(value)) {\n        value = parseDateString(value);\n      } else if (isValidTimestamp(value)) {\n        value = new Date(value).toISOString();\n      } else {\n        value = null;\n      }\n    }\n    else if (typeInfo.type === \"TEXT\") {\n      value = value !== null && value !== undefined ? String(value) : null;\n    }\n\n    formattedRow[mappedCol] = value;\n  });\n\n  return formattedRow;\n});\n\n// Generate SQL placeholders dynamically\nconst valuePlaceholders = formattedRows.map((_, rowIndex) =>\n  `(${mappedColumns.map((_, colIndex) => `$${rowIndex * mappedColumns.length + colIndex + 1}`).join(\", \")})`\n).join(\", \");\n\n// Build the insert query string\nconst insertQuery = `INSERT INTO ${tableName} (${mappedColumns.map(col => `\"${col}\"`).join(\", \")}) VALUES ${valuePlaceholders};`;\n\n// Flatten parameter values for PostgreSQL query\nconst parameters = formattedRows.flatMap(row => mappedColumns.map(col => row[col]));\n\nreturn [\n  {\n    query: insertQuery,\n    parameters: parameters\n  }\n];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-224,784],"id":"d9afaba1-ccc3-4239-9af7-8a3679cf39b6","name":"create insertion query"},{"parameters":{"pollTimes":{"item":[{}]},"triggerOn":"specificFile","fileToWatch":{"__rl":true,"value":"1yGx4ODHYYtPV1WZFAtPcyxGT2brcXM6pl0KJhIM1f_c","mode":"list","cachedResultName":"Spreadsheet","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1yGx4ODHYYtPV1WZFAtPcyxGT2brcXM6pl0KJhIM1f_c/edit?usp=drivesdk"}},"type":"n8n-nodes-base.googleDriveTrigger","typeVersion":1,"position":[-1280,480],"id":"2195cd08-d60d-466d-a3ee-98e50f11230d","name":"Google Drive Trigger","credentials":{"googleDriveOAuth2Api":{"id":"XDqLv6T2wJMb4j1U","name":"Google Drive account pnjp"}}},{"parameters":{"name":"query_executer","description":"Call this tool to execute a query. Remember that it should be in a postgreSQL query structure.","workflowId":{"__rl":true,"value":"oPWJZynrMME45ks4","mode":"list","cachedResultName":"query_executer"},"specifyInputSchema":true,"schemaType":"manual","inputSchema":"{\n\"type\": \"object\",\n\"properties\": {\n\t\"sql\": {\n\t\t\"type\": \"string\",\n\t\t\"description\": \"A SQL query based on the users question and database schema.\"\n\t\t}\n\t}\n}"},"id":"4ceba5bc-9324-4eb6-bedd-5df361dc80eb","name":"execute_query_tool","type":"@n8n/n8n-nodes-langchain.toolWorkflow","typeVersion":1.2,"position":[-576,272]},{"parameters":{"modelName":"models/gemini-2.0-flash","options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatGoogleGemini","typeVersion":1,"position":[-1040,224],"id":"2d5c7fc1-33c1-4e5d-a8e9-9b222daddb4b","name":"Google Gemini Chat Model","credentials":{"googlePalmApi":{"id":"VxuR4Ot4TSiJTVFk","name":"Google Gemini(PaLM) Api account"}}},{"parameters":{"name":"get_postgres_schema","description":"Call this tool to retrieve the schema of all the tables inside of the database. A string will be retrieved with the name of the table and its columns, each table is separated by \\n\\n.","workflowId":{"__rl":true,"value":"iNLPk34SeRGHaeMD","mode":"list","cachedResultName":"get database schema"},"workflowInputs":{"mappingMode":"defineBelow","value":{},"matchingColumns":[],"schema":[],"attemptToConvertTypes":false,"convertFieldsToString":false}},"type":"@n8n/n8n-nodes-langchain.toolWorkflow","typeVersion":2,"position":[-768,272],"id":"32f6ce1d-69bc-4bda-8842-75e168701a03","name":"get_postgres_schema"},{"parameters":{"assignments":{"assignments":[{"id":"908ed843-f848-4290-9cdb-f195d2189d7c","name":"table_url","value":"https://docs.google.com/spreadsheets/d/1yGx4ODHYYtPV1WZFAtPcyxGT2brcXM6pl0KJhIM1f_c/edit?gid=0#gid=0","type":"string"},{"id":"50f8afaf-0a6c-43ee-9157-79408fe3617a","name":"sheet_name","value":"product_list","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-1088,480],"id":"1cbf2795-5de6-41be-92de-836cbab32666","name":"change_this"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"619ce84c-0a50-4f88-8e55-0ce529aea1fc","leftValue":"={{ $('table exists?').item.json.exists }}","rightValue":"true","operator":{"type":"boolean","operation":"false","singleValue":true}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[-496,480],"id":"379a40ab-f26d-44c9-a89a-502411082480","name":"is not in database"},{"parameters":{"operation":"executeQuery","query":"SELECT EXISTS (\n    SELECT 1 \n    FROM information_schema.tables \n    WHERE table_name = 'ai_table_{{ $json.sheet_name }}'\n);\n","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.5,"position":[-880,480],"id":"6ae84888-d073-44d8-ad01-7d192bf0263e","name":"table exists?","credentials":{"postgres":{"id":"lPXyj3Ypf5YeZpp3","name":"Postgres account Local"}}},{"parameters":{"documentId":{"__rl":true,"value":"={{ $('change_this').item.json.table_url }}","mode":"url"},"sheetName":{"__rl":true,"value":"={{ $('change_this').item.json.sheet_name }}","mode":"name"},"options":{}},"type":"n8n-nodes-base.googleSheets","typeVersion":4.5,"position":[-704,480],"id":"91a73c8d-a754-420c-9668-52cae321109b","name":"fetch sheet data","credentials":{"googleSheetsOAuth2Api":{"id":"bdeAZgAgEmqpgnr1","name":"Google Sheets account"}}},{"parameters":{"operation":"executeQuery","query":"DROP TABLE IF EXISTS ai_table_{{ $('change_this').item.json.sheet_name }} CASCADE;","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.5,"position":[-896,784],"id":"7c9b4cac-12ef-4944-8abd-787fa6377067","name":"remove table","credentials":{"postgres":{"id":"lPXyj3Ypf5YeZpp3","name":"Postgres account Local"}}},{"parameters":{"operation":"executeQuery","query":"{{ $json.query }}","options":{}},"id":"109ee613-4395-4977-ae0c-208c276c3cb4","name":"create table","type":"n8n-nodes-base.postgres","typeVersion":2.5,"position":[-416,784],"credentials":{"postgres":{"id":"lPXyj3Ypf5YeZpp3","name":"Postgres account Local"}}},{"parameters":{"operation":"executeQuery","query":"{{$json.query}}","options":{"queryReplacement":"={{$json.parameters}}"}},"id":"200dc0c6-c6fd-4d1d-8583-40031b3838c7","name":"perform insertion","type":"n8n-nodes-base.postgres","typeVersion":2.5,"position":[-16,784],"credentials":{"postgres":{"id":"lPXyj3Ypf5YeZpp3","name":"Postgres account Local"}}},{"parameters":{"operation":"executeQuery","query":"{{ $json.query.sql }}","options":{}},"id":"cad92a0c-42b5-4c81-8bf8-02e0606d2bab","name":"Postgres","type":"n8n-nodes-base.postgres","typeVersion":2.5,"position":[80,80],"credentials":{"postgres":{"id":"lPXyj3Ypf5YeZpp3","name":"Postgres account Local"}}},{"parameters":{"assignments":{"assignments":[{"id":"e2f94fb1-3deb-466a-a36c-e3476511d5f2","name":"response","value":"={{ $json }}","type":"string"}]},"options":{}},"id":"ab6f009c-b825-4e07-8a67-3cf37ef7d614","name":"Edit Fields","type":"n8n-nodes-base.set","typeVersion":3.4,"position":[304,80]},{"parameters":{"jsCode":"function transformSchema(input) {\n    const tables = {};\n    \n    input.forEach(({ json }) => {\n        if (!json) return;\n        \n        const { tablename, schemaname, column_name, data_type } = json;\n        \n        if (!tables[tablename]) {\n            tables[tablename] = { schema: schemaname, columns: [] };\n        }\n        tables[tablename].columns.push(`${column_name} (${data_type})`);\n    });\n    \n    return Object.entries(tables)\n        .map(([tablename, { schema, columns }]) => `Table ${tablename} (Schema: ${schema}) has columns: ${columns.join(\", \")}`)\n        .join(\"\\n\\n\");\n}\n\n// Example usage\nconst input = $input.all();\nconsole.log(input);\nconst transformedSchema = transformSchema(input);\n\nreturn { data: transformedSchema };"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[304,464],"id":"924fe070-5a1c-453d-a9b9-663e19e44a14","name":"Code"},{"parameters":{"operation":"executeQuery","query":"SELECT \n    t.schemaname,\n    t.tablename,\n    c.column_name,\n    c.data_type\nFROM \n    pg_catalog.pg_tables t\nJOIN \n    information_schema.columns c\n    ON t.schemaname = c.table_schema\n    AND t.tablename = c.table_name\nWHERE \n    t.schemaname = 'public'\nORDER BY \n    t.tablename, c.ordinal_position;","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.5,"position":[80,464],"id":"62eb8c4f-d646-4feb-8d34-f11f0bb4bf3e","name":"Postgres1","credentials":{"postgres":{"id":"lPXyj3Ypf5YeZpp3","name":"Postgres account Local"}}},{"parameters":{},"id":"f701e952-40b7-4f10-902e-1220b903874f","name":"Execute Workflow Trigger","type":"n8n-nodes-base.executeWorkflowTrigger","typeVersion":1,"position":[-176,288]},{"parameters":{"content":"Place this in a separate workflow named:\n### query_executer","height":260,"width":500,"color":7},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[0,0],"id":"1dad6114-73ff-458a-a76b-c23a0bc98d29","name":"Sticky Note"},{"parameters":{"content":"place this in a separate workflow named: \n### get database schema","height":280,"width":500,"color":7},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[0,384],"id":"147030b8-8d62-4446-945f-617a58c1432b","name":"Sticky Note1"},{"parameters":{},"id":"2f18d2ad-b9eb-4cb3-9c87-c34301203bf5","name":"When chat message received","type":"@n8n/n8n-nodes-langchain.manualChatTrigger","typeVersion":1.1,"position":[-1280,80]}],"connections":{"create table query":{"main":[[{"node":"create table","type":"main","index":0}]]},"create insertion query":{"main":[[{"node":"perform insertion","type":"main","index":0}]]},"Google Drive Trigger":{"main":[[{"node":"change_this","type":"main","index":0}]]},"execute_query_tool":{"ai_tool":[[{"node":"AI Agent1","type":"ai_tool","index":0}]]},"Google Gemini Chat Model":{"ai_languageModel":[[{"node":"AI Agent1","type":"ai_languageModel","index":0}]]},"get_postgres_schema":{"ai_tool":[[{"node":"AI Agent1","type":"ai_tool","index":0}]]},"change_this":{"main":[[{"node":"table exists?","type":"main","index":0}]]},"is not in database":{"main":[[{"node":"create table query","type":"main","index":0}],[{"node":"remove table","type":"main","index":0}]]},"table exists?":{"main":[[{"node":"fetch sheet data","type":"main","index":0}]]},"fetch sheet data":{"main":[[{"node":"is not in database","type":"main","index":0}]]},"remove table":{"main":[[{"node":"create table query","type":"main","index":0}]]},"create table":{"main":[[{"node":"create insertion query","type":"main","index":0}]]},"Postgres":{"main":[[{"node":"Edit Fields","type":"main","index":0}]]},"Postgres1":{"main":[[{"node":"Code","type":"main","index":0}]]},"Execute Workflow Trigger":{"main":[[{"node":"Postgres","type":"main","index":0},{"node":"Postgres1","type":"main","index":0}]]},"When chat message received":{"main":[[{"node":"AI Agent1","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"63d5b984-04c8-454a-8476-88ce9458f9ee","triggerCount":0,"tags":[],"shared":[{"createdAt":"2025-07-28T07:59:04.093Z","updatedAt":"2025-07-28T07:59:04.093Z","role":"workflow:owner","workflowId":"C2D7jht9fctKk3BX","projectId":"WbfPHUYYKS2tiNNo","project":{"createdAt":"2025-05-03T06:49:18.088Z","updatedAt":"2025-05-03T06:52:24.837Z","id":"WbfPHUYYKS2tiNNo","name":"charlie phan <scottyphan08@gmail.com>","type":"personal","icon":null,"description":null}}]},{"createdAt":"2025-07-28T08:12:54.566Z","updatedAt":"2025-07-28T08:12:54.566Z","id":"z69afATlJHxXsIl0","name":"My workflow 13","active":false,"isArchived":false,"nodes":[{"parameters":{"updates":["message"],"additionalFields":{}},"id":"bd776a4c-33f2-433f-aa58-6326969521ff","name":"Telegram Trigger","type":"n8n-nodes-base.telegramTrigger","typeVersion":1.1,"position":[912,192],"webhookId":"99eab1a0-569d-4f0f-a49e-578a02abfe63"},{"parameters":{"assignments":{"assignments":[{"id":"fe7ecc99-e1e8-4a5e-bdd6-6fce9757b234","name":"text","value":"={{ $json.message.text }}","type":"string"}]},"options":{}},"id":"4a82393c-2a74-4226-a6c4-0258a9f01fb6","name":"Set 'Text'","type":"n8n-nodes-base.set","typeVersion":3.4,"position":[1296,208]},{"parameters":{"resource":"file","fileId":"={{ $json.message.voice.file_id }}"},"id":"5e8397cd-3a00-4a3c-b7a4-015853d0274f","name":"Download Voice File","type":"n8n-nodes-base.telegram","typeVersion":1.2,"position":[1232,32],"webhookId":"c0b376b1-7b63-41b6-8063-0b3096b8333d"},{"parameters":{"resource":"audio","operation":"transcribe","options":{}},"id":"c2f7ef8d-4e4e-4841-9e51-c2163012a90b","name":"Transcribe Audio","type":"@n8n/n8n-nodes-langchain.openAi","typeVersion":1.6,"position":[1392,32]},{"parameters":{"rules":{"values":[{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"leftValue":"={{ $json.message.voice.file_id }}","rightValue":"","operator":{"type":"string","operation":"exists","singleValue":true}}],"combinator":"and"},"renameOutput":true,"outputKey":"Voice"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"8c844924-b2ed-48b0-935c-c66a8fd0c778","leftValue":"={{ $json.message.text }}","rightValue":"","operator":{"type":"string","operation":"exists","singleValue":true}}],"combinator":"and"},"renameOutput":true,"outputKey":"Text"}]},"options":{}},"id":"92532d33-cf84-4133-81e5-933882dccade","name":"Switch","type":"n8n-nodes-base.switch","typeVersion":3.2,"position":[1056,192]},{"parameters":{"promptType":"define","text":"={{ $json.input }}","options":{"systemMessage":"=# Overview\nYou are the ultimate personal assistant. Your job is to send the user's query to the correct tool. You should never be writing emails or creating summaries — your sole responsibility is to call the correct tool.\n\n## Tools\n- **Think**: Use this to think deeply or if you get stuck\n- **emailAgent**: Use this tool to take action in email\n- **calendarAgent**: Use this tool to take action in calendar\n- **contactAgent**: Use this tool to get, update, or add contacts\n- **contentCreator**: Use this tool to create blog posts\n- **webAgent**: Use this tool to perform deeper web research or get current weather info\n- **youtubeAgent**: Use this tool to find high-performing videos or manage video ideas\n\n## Rules\n- Some actions require you to look up contact information first. For the following actions, you must get contact information and send that to the agent who needs it:\n  - sending emails\n  - drafting emails\n  - creating calendar event with attendee\n\n## Instructions\n1) Call the necessary tools based on the user's request\n2) Use the **Think** tool to verify you took the right steps. This tool should be called every time.\n\n## Examples\n1) \n- Input: send an email to nate herkelman asking him what time he wants to leave  \n  - Action: Use **contactAgent** to get Nate Herkelman's email  \n  - Action: Use **emailAgent** to send the email. You will pass the tool a query like:  \n    \"send Nate Herkelman an email to ask what time he wants to leave. here is his email: [email address]\"\n- Output: The email has been sent to Nate Herkelman. Anything else I can help you with?\n\n## Final Reminders\nHere is the current date/time: {{ $now }}\n","returnIntermediateSteps":true}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":2.1,"position":[1728,192],"id":"22c92de3-5f20-41a4-bb91-63e00f8bb1f5","name":"AI Agent","onError":"continueErrorOutput"},{"parameters":{"sendTo":"={{ $fromAI(\"emailAddress\") }}","subject":"={{ $fromAI(\"subject\") }}","message":"={{ $fromAI(\"emailBody\") }}","options":{"appendAttribution":false}},"type":"n8n-nodes-base.gmailTool","typeVersion":2.1,"position":[1568,752],"id":"00b2b459-ca95-439a-bbb9-ec5b4ea6e0f8","name":"Send Email","webhookId":"86c8c4b1-13bb-4ebe-acb9-30e1d7082d55"},{"parameters":{"operation":"getAll","limit":"={{ $fromAI(\"limit\",\"how many emails the user wants\") }}","simple":false,"filters":{"sender":"={{ $fromAI(\"sender\",\"who the emails are from\") }}"},"options":{}},"type":"n8n-nodes-base.gmailTool","typeVersion":2.1,"position":[1184,752],"id":"78d3733c-6b56-4dc9-9a2d-cffa4ea6c914","name":"Get Emails","webhookId":"af4b3298-9037-44b0-aa12-2acbfbb5e66f"},{"parameters":{"resource":"draft","subject":"={{ $fromAI(\"subject\") }}","emailType":"html","message":"={{ $fromAI(\"emailBody\") }}","options":{"threadId":"={{ $fromAI(\"threadID\") }}","sendTo":"={{ $fromAI(\"emailAddress\") }}"}},"type":"n8n-nodes-base.gmailTool","typeVersion":2.1,"position":[1568,608],"id":"593a93f2-0510-4061-b8f3-d1c34f851da3","name":"Create Draft","webhookId":"17016bce-d7d7-428a-a56c-f6ea122db8be"},{"parameters":{"operation":"reply","messageId":"={{ $fromAI(\"ID\",\"the message ID\") }}","message":"={{ $fromAI(\"emailBody\") }}","options":{"appendAttribution":false}},"type":"n8n-nodes-base.gmailTool","typeVersion":2.1,"position":[1312,608],"id":"4f57b806-a6cb-4327-a614-aea5bbb6155c","name":"Email Reply","webhookId":"114785e6-a859-432b-81b4-c490c1c35b1c"},{"parameters":{"resource":"label","returnAll":true},"type":"n8n-nodes-base.gmailTool","typeVersion":2.1,"position":[1312,752],"id":"e313d637-f1dc-4d80-8637-e1025218f228","name":"Get Labels","webhookId":"9e08b59e-792d-4566-83f1-9263c9ad86ae"},{"parameters":{"operation":"addLabels","messageId":"={{ $fromAI(\"ID\",\"the ID of the message\") }}","labelIds":"={{ $fromAI(\"labelID\") }}"},"type":"n8n-nodes-base.gmailTool","typeVersion":2.1,"position":[1440,608],"id":"36f2ba67-413a-4924-ae9b-5b87f13c17be","name":"Label Emails","webhookId":"0e951529-2e6d-40bf-ac40-fc0947e242e2"},{"parameters":{"operation":"markAsUnread","messageId":"={{ $fromAI(\"messageID\") }}"},"type":"n8n-nodes-base.gmailTool","typeVersion":2.1,"position":[1440,752],"id":"96986661-ce07-4413-9793-057a2fd95922","name":"Mark Unread","webhookId":"a35af9d8-f67d-4ff9-803f-59ec6356e795"},{"parameters":{},"type":"@n8n/n8n-nodes-langchain.agentTool","typeVersion":2.2,"position":[1376,432],"id":"9cc4d3c1-0b1d-441f-b8a0-5844005f4aa5","name":"Email Agent"},{"parameters":{"calendar":{"__rl":true,"value":"nateherk88@gmail.com","mode":"list","cachedResultName":"nateherk88@gmail.com"},"start":"={{ $fromAI(\"eventStart\") }}","end":"={{ $fromAI(\"eventEnd\") }}","additionalFields":{"attendees":["={{ $fromAI(\"eventAttendeeEmail\") }}"],"summary":"={{ $fromAI(\"eventTitle\") }}"}},"type":"n8n-nodes-base.googleCalendarTool","typeVersion":1.3,"position":[1968,752],"id":"29413f35-1aa2-4449-a91f-b05edb74af69","name":"Create Event with Attendee"},{"parameters":{"calendar":{"__rl":true,"value":"nateherk88@gmail.com","mode":"list","cachedResultName":"nateherk88@gmail.com"},"start":"={{ $fromAI(\"eventStart\") }}","end":"={{ $fromAI(\"eventEnd\") }}","additionalFields":{"attendees":[],"summary":"={{ $fromAI(\"eventTitle\") }}"}},"type":"n8n-nodes-base.googleCalendarTool","typeVersion":1.3,"position":[1712,752],"id":"c63269f2-1eb5-4fe8-a831-04564f86ef15","name":"Create Event"},{"parameters":{"operation":"getAll","calendar":{"__rl":true,"value":"nateherk88@gmail.com","mode":"list","cachedResultName":"nateherk88@gmail.com"},"timeMin":"={{ $fromAI(\"dayBefore\",\"the day before the date the user requested\") }}","timeMax":"={{ $fromAI(\"dayAfter\",\"the day after the date the user requested\") }}","options":{}},"type":"n8n-nodes-base.googleCalendarTool","typeVersion":1.3,"position":[1968,608],"id":"2185b157-666c-44cc-b8e6-a7bd41e39068","name":"Get Events"},{"parameters":{"operation":"delete","calendar":{"__rl":true,"value":"nateherk88@gmail.com","mode":"list","cachedResultName":"nateherk88@gmail.com"},"eventId":"={{ $fromAI(\"eventID\") }}","options":{}},"type":"n8n-nodes-base.googleCalendarTool","typeVersion":1.3,"position":[1840,608],"id":"e77ed821-847b-44fd-baf8-9225053660e6","name":"Delete Event"},{"parameters":{"operation":"update","calendar":{"__rl":true,"value":"nateherk88@gmail.com","mode":"list","cachedResultName":"nateherk88@gmail.com"},"eventId":"={{ $fromAI(\"eventID\") }}","updateFields":{"end":"={{ $fromAI(\"endTime\") }}","start":"={{ $fromAI(\"startTime\") }}"}},"type":"n8n-nodes-base.googleCalendarTool","typeVersion":1.3,"position":[1840,752],"id":"335e2785-7897-4d52-b9d9-82784c793100","name":"Update Event"},{"parameters":{},"type":"@n8n/n8n-nodes-langchain.agentTool","typeVersion":2.2,"position":[1728,432],"id":"ad335e51-a504-48f3-a73d-07f010cf78aa","name":"Calendar Agent"},{"parameters":{"operation":"search","base":{"__rl":true,"value":"appK0rbtvf9e7vt6w","mode":"list","cachedResultName":"Contacts","cachedResultUrl":"https://airtable.com/appK0rbtvf9e7vt6w"},"table":{"__rl":true,"value":"tbl08JGCfUK1RhXsG","mode":"list","cachedResultName":"Contacts","cachedResultUrl":"https://airtable.com/appK0rbtvf9e7vt6w/tbl08JGCfUK1RhXsG"},"options":{}},"type":"n8n-nodes-base.airtableTool","typeVersion":2.1,"position":[2208,592],"id":"b7a2a842-0af1-403d-9ac2-e959d0900c37","name":"Get Contacts"},{"parameters":{"operation":"upsert","base":{"__rl":true,"value":"appK0rbtvf9e7vt6w","mode":"list","cachedResultName":"Contacts","cachedResultUrl":"https://airtable.com/appK0rbtvf9e7vt6w"},"table":{"__rl":true,"value":"tbl08JGCfUK1RhXsG","mode":"list","cachedResultName":"Contacts","cachedResultUrl":"https://airtable.com/appK0rbtvf9e7vt6w/tbl08JGCfUK1RhXsG"},"columns":{"mappingMode":"defineBelow","value":{"name":"={{ $fromAI(\"name\") }}","email":"={{ $fromAI(\"emailAddress\") }}","phoneNumber":"={{ $fromAI(\"phoneNumber\") }}"},"matchingColumns":["name"],"schema":[{"id":"name","displayName":"name","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":false},{"id":"email","displayName":"email","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":false},{"id":"phoneNumber","displayName":"phoneNumber","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":false}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.airtableTool","typeVersion":2.1,"position":[2320,592],"id":"81b1bacd-735f-4ad2-acd3-a6961232ea82","name":"Add or Update Contact"},{"parameters":{},"type":"@n8n/n8n-nodes-langchain.agentTool","typeVersion":2.2,"position":[2080,432],"id":"147bddb6-86bb-427d-a7a1-0d6ed48a6cf5","name":"Contact Agent"},{"parameters":{},"type":"@tavily/n8n-nodes-tavily.tavilyTool","typeVersion":1,"position":[2320,912],"id":"e5e50c61-c42a-4f54-a421-c329fa18b1ad","name":"Tavily","credentials":{}},{"parameters":{"model":"sonar","messages":{"message":[{"content":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('message0_Text', ``, 'string') }}"}]},"options":{},"requestOptions":{}},"type":"n8n-nodes-base.perplexityTool","typeVersion":1,"position":[2432,912],"id":"c54d8caa-02ba-4cdf-8d54-bdd2cf22b6fa","name":"Perplexity"},{"parameters":{"format":"imperial","cityName":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('City', ``, 'string') }}","language":"en"},"type":"n8n-nodes-base.openWeatherMapTool","typeVersion":1,"position":[2544,912],"id":"867853c0-7b49-4f04-8556-01cdeef92b25","name":"OpenWeatherMap"},{"parameters":{},"type":"@n8n/n8n-nodes-langchain.agentTool","typeVersion":2.2,"position":[2192,752],"id":"611348fa-f53b-4cb7-9c1d-6881d6f83a7b","name":"Web Agent"},{"parameters":{},"type":"@n8n/n8n-nodes-langchain.agentTool","typeVersion":2.2,"position":[2448,432],"id":"62aa7bfc-e2b6-4f21-a600-d1a0f82e403b","name":"YouTube Agent"},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenRouter","typeVersion":1,"position":[976,432],"id":"9bea5db5-cd0c-4cda-acd2-0338cb7febbc","name":"GPT 4.1-mini"},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenRouter","typeVersion":1,"position":[1184,608],"id":"f858c848-4aef-4d7c-ae29-b108aa6e8d36","name":"GPT 4.1-mini1"},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenRouter","typeVersion":1,"position":[1712,608],"id":"545bdef2-c8e9-4b23-9f62-616e2aa5d84f","name":"GPT 4.1-mini2"},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenRouter","typeVersion":1,"position":[2080,592],"id":"14283065-9c0f-4dc2-9154-f71db30fdd67","name":"GPT 4.1-mini3"},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenRouter","typeVersion":1,"position":[2208,912],"id":"6cebac75-37c4-4570-a998-26996902f07d","name":"GPT 4.1-mini4"},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenRouter","typeVersion":1,"position":[2448,592],"id":"85afd977-1315-4da0-b0d2-d7f11ea2f3c1","name":"GPT 4.1-mini5"},{"parameters":{"jsCode":"// Initialize the output arrays\nconst steps = [];\nconst tokens = [];\nlet totalTokens = 0; // Changed to track total tokens instead of cost\n\n// Process each item in the input\nfor (const item of $input.all()) {\n  let data = item.json;\n  \n  // Check if the data is an array itself (like your example JSON)\n  if (Array.isArray(data)) {\n    // Process each object in the array\n    for (const obj of data) {\n      // Extract steps information\n      if (obj.intermediateSteps && Array.isArray(obj.intermediateSteps)) {\n        for (const step of obj.intermediateSteps) {\n          if (step.action) {\n            steps.push({\n              tool: step.action.tool,\n              toolInput: step.action.toolInput,\n              observation: step.observation\n            });\n          }\n        }\n      }\n      \n      // Extract token information\n      if (obj.intermediateSteps && Array.isArray(obj.intermediateSteps)) {\n        for (const step of obj.intermediateSteps) {\n          if (step.action && step.action.messageLog && Array.isArray(step.action.messageLog)) {\n            for (const message of step.action.messageLog) {\n              if (message.kwargs && message.kwargs.response_metadata && message.kwargs.response_metadata.usage) {\n                const usage = message.kwargs.response_metadata.usage;\n                tokens.push({\n                  prompt_tokens: usage.prompt_tokens,\n                  completion_tokens: usage.completion_tokens,\n                  total_tokens: usage.total_tokens,\n                  model_name: message.kwargs.response_metadata.model_name\n                });\n                \n                // Add the tokens to our running total\n                if (typeof usage.total_tokens === 'number') {\n                  totalTokens += usage.total_tokens;\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  } else {\n    // If data is not an array, process it as a single object\n    // Extract steps information\n    if (data.intermediateSteps && Array.isArray(data.intermediateSteps)) {\n      for (const step of data.intermediateSteps) {\n        if (step.action) {\n          steps.push({\n            tool: step.action.tool,\n            toolInput: step.action.toolInput,\n            observation: step.observation\n          });\n        }\n      }\n    }\n    \n    // Extract token information\n    if (data.intermediateSteps && Array.isArray(data.intermediateSteps)) {\n      for (const step of data.intermediateSteps) {\n        if (step.action && step.action.messageLog && Array.isArray(step.action.messageLog)) {\n          for (const message of step.action.messageLog) {\n            if (message.kwargs && message.kwargs.response_metadata && message.kwargs.response_metadata.usage) {\n              const usage = message.kwargs.response_metadata.usage;\n              tokens.push({\n                prompt_tokens: usage.prompt_tokens,\n                completion_tokens: usage.completion_tokens,\n                total_tokens: usage.total_tokens,\n                model_name: message.kwargs.response_metadata.model_name\n              });\n              \n              // Add the tokens to our running total\n              if (typeof usage.total_tokens === 'number') {\n                totalTokens += usage.total_tokens;\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\n// Return the processed data with total_tokens included\nreturn [{\n  json: {\n    steps: steps,\n    tokens: tokens,\n    total_tokens: totalTokens\n  }\n}];"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[2096,32],"id":"41d92084-6ebd-4d74-a546-aafbdcda8d2c","name":"Clean Up"},{"parameters":{"operation":"append","documentId":{"__rl":true,"value":"144h5vN3d_SsZMNkZncQAKMrwJ3wkceUEq47dO7FwLyA","mode":"list","cachedResultName":"Agent Logs","cachedResultUrl":"https://docs.google.com/spreadsheets/d/144h5vN3d_SsZMNkZncQAKMrwJ3wkceUEq47dO7FwLyA/edit?usp=drivesdk"},"sheetName":{"__rl":true,"value":"gid=0","mode":"list","cachedResultName":"Sheet1","cachedResultUrl":"https://docs.google.com/spreadsheets/d/144h5vN3d_SsZMNkZncQAKMrwJ3wkceUEq47dO7FwLyA/edit#gid=0"},"columns":{"mappingMode":"defineBelow","value":{"Timestamp":"={{ $now.format('yyyy-MM-dd hh:m a') }}","Workflow":"={{ $workflow.name }}","Input":"={{ $('Input').item.json.input }}","Output":"={{ $('AI Agent').item.json.output }}","Actions":"={{ JSON.stringify($json.steps, null, 2) }}","Tokens":"={{ JSON.stringify($json.tokens, null, 2) }}","Total Tokens":"={{ $json.total_tokens }}"},"matchingColumns":[],"schema":[{"id":"Timestamp","displayName":"Timestamp","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"Workflow","displayName":"Workflow","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"Input","displayName":"Input","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"Output","displayName":"Output","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"Actions","displayName":"Actions","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"Tokens","displayName":"Tokens","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"Total Tokens","displayName":"Total Tokens","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.googleSheets","typeVersion":4.6,"position":[2240,32],"id":"a9bcc88d-1962-4ad3-81e3-403e9a5d597c","name":"Append row in sheet"},{"parameters":{"documentId":{"__rl":true,"value":"15CpqbdciFb023LElHxiDQ-CSfbXg-Gk6g5A7Dl_b8Ls","mode":"list","cachedResultName":"Video Ideas","cachedResultUrl":"https://docs.google.com/spreadsheets/d/15CpqbdciFb023LElHxiDQ-CSfbXg-Gk6g5A7Dl_b8Ls/edit?usp=drivesdk"},"sheetName":{"__rl":true,"value":"gid=0","mode":"list","cachedResultName":"Ideas","cachedResultUrl":"https://docs.google.com/spreadsheets/d/15CpqbdciFb023LElHxiDQ-CSfbXg-Gk6g5A7Dl_b8Ls/edit#gid=0"},"options":{}},"type":"n8n-nodes-base.googleSheetsTool","typeVersion":4.6,"position":[2672,592],"id":"775befde-4d97-4b7f-a615-97e5e99927a5","name":"Get Ideas"},{"parameters":{"operation":"append","documentId":{"__rl":true,"value":"15CpqbdciFb023LElHxiDQ-CSfbXg-Gk6g5A7Dl_b8Ls","mode":"list","cachedResultName":"Video Ideas","cachedResultUrl":"https://docs.google.com/spreadsheets/d/15CpqbdciFb023LElHxiDQ-CSfbXg-Gk6g5A7Dl_b8Ls/edit?usp=drivesdk"},"sheetName":{"__rl":true,"value":"gid=0","mode":"list","cachedResultName":"Ideas","cachedResultUrl":"https://docs.google.com/spreadsheets/d/15CpqbdciFb023LElHxiDQ-CSfbXg-Gk6g5A7Dl_b8Ls/edit#gid=0"},"columns":{"mappingMode":"defineBelow","value":{"Idea":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Idea', `Idea title`, 'string') }}","Description":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Description', `Idea description`, 'string') }}"},"matchingColumns":[],"schema":[{"id":"Idea","displayName":"Idea","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"Description","displayName":"Description","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.googleSheetsTool","typeVersion":4.6,"position":[2784,592],"id":"16dcb1a3-a21e-4e8b-ace7-0df8edc55bee","name":"Add Idea"},{"parameters":{"toolDescription":"Use this tool to find high-performing YouTube videos","method":"POST","url":"https://api.apify.com/v2/acts/streamers~youtube-scraper/run-sync-get-dataset-items","sendQuery":true,"queryParameters":{"parameters":[{"name":"token","value":"YOUR APIFY API KEY"}]},"sendBody":true,"specifyBody":"json","jsonBody":"={\n    \"dateFilter\": \"month\",\n    \"downloadSubtitles\": false,\n    \"hasCC\": false,\n    \"hasLocation\": false,\n    \"hasSubtitles\": false,\n    \"is360\": false,\n    \"is3D\": false,\n    \"is4K\": false,\n    \"isBought\": false,\n    \"isHD\": false,\n    \"isHDR\": false,\n    \"isLive\": false,\n    \"isVR180\": false,\n    \"maxResultStreams\": 0,\n    \"maxResults\": {{$fromAI(\"maxResults\",\"how many videos the user wants, if not specified, default to 3\",\"number\",3)}},\n    \"maxResultsShorts\": 0,\n    \"oldestPostDate\": \"6 months\",\n    \"preferAutoGeneratedSubtitles\": false,\n    \"saveSubsToKVS\": false,\n    \"searchQueries\": [\n        \"{{$fromAI(\"searchTerm\",\"The topic of the video to search for\")}}\"\n    ],\n    \"sortVideosBy\": \"POPULAR\",\n    \"sortingOrder\": \"views\"\n}","options":{}},"type":"n8n-nodes-base.httpRequestTool","typeVersion":4.2,"position":[2560,592],"id":"f03f8959-6224-44eb-a62f-45cd653dc3fa","name":"YouTube Videos"},{"parameters":{},"type":"@n8n/n8n-nodes-langchain.toolThink","typeVersion":1,"position":[1088,432],"id":"ba26ff1f-8223-43eb-8835-839a2beddd97","name":"Think"},{"parameters":{"sessionIdType":"customKey","sessionKey":"={{ $('Telegram Trigger').item.json.message.chat.id }}"},"type":"@n8n/n8n-nodes-langchain.memoryBufferWindow","typeVersion":1.3,"position":[1216,432],"id":"63fc6242-7927-459f-b095-3110f300e1fe","name":"Simple Memory"},{"parameters":{"chatId":"={{ $('Telegram Trigger').item.json.message.chat.id }}","text":"={{ $json.error }}","additionalFields":{"appendAttribution":false}},"type":"n8n-nodes-base.telegram","typeVersion":1.2,"position":[2096,192],"id":"896955c6-0387-47df-882b-597f643b2b92","name":"Error Message","webhookId":"7065a160-b927-43b6-b327-feec46cc0088"},{"parameters":{"chatId":"={{ $('Telegram Trigger').item.json.message.chat.id }}","text":"={{ $('AI Agent').item.json.output }}","additionalFields":{"appendAttribution":false}},"type":"n8n-nodes-base.telegram","typeVersion":1.2,"position":[2384,32],"id":"5134e7ed-862c-4f8b-a913-24e0aeb1a01b","name":"Response","webhookId":"4d174459-d5cc-4297-a449-369d3f10ef23"},{"parameters":{"assignments":{"assignments":[{"id":"976cf2c9-01b6-46cf-97b4-675a67ca57bc","name":"input","value":"={{ $json.text }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[1568,192],"id":"23bfc68e-b303-4442-bbbd-30218197aae0","name":"Input"},{"parameters":{"content":"# ⚙️ Setup Guide  \n**Author:** [Nate Herk](https://www.youtube.com/@nateherk)\n\nFollow these steps to get your n8n AI agent workflow fully configured and connected:\n\n### ✅ Step 1: Connect Your Telegram Account  \nUse the **Telegram Trigger** node to link your Telegram account. This allows you to interact with your agent via Telegram. Make sure it's fully connected—it’s used in both the **Telegram Response** nodes and the **Simple Memory** node.\n\n### ✅ Step 2: Add Your [OpenRouter](https://openrouter.ai/) API Key  \nThis is the \"brain\" of your AI agent. Plug in your API key using the **HTTP Request** or **Credential** node to power intelligent responses.\n\n### ✅ Step 3: Connect Your App Integrations  \nSet up the following API connections so your agent can take meaningful actions:\n- **Gmail**\n- **Google Calendar**\n- **Airtable**\n- **Google Sheets**\n- **Apify** – Used in the YouTube video node.  \n  💡 *Use code* **`30NATEHERK`** *for 30% off your first 3 months at [Apify](https://www.apify.com/?fpr=nate)*\n\n### ✅ Step 4: Connect Research & Utility APIs  \nAdd these keys for more powerful features:\n- [**Tavily API Key**](https://www.tavily.com/)\n- [**Perplexity API Key**](https://www.perplexity.ai/)\n- [**Open Weather Map API Key**](https://openweathermap.org/api)\n\n### ✅ Step 5: Link Your Google Sheets Templates  \n- 📄 [Agent Action Log Sheet](https://docs.google.com/spreadsheets/d/1PlRVi9Iv2n11SPYdshjhPGWccRCpKLHn3PjUkJEjgAQ/edit?usp=sharing) – Logs the agent’s actions.\n- 🎬 [YouTube Ideas Sheet](https://docs.google.com/spreadsheets/d/1Jazczp5HtPwcJvu6bmJQrjkqt31S7adVqIFVCqXZwGk/edit?usp=sharing) – Used for the YouTube agent’s video ideas.\n\n### 🚀 Final Step: Start Prompting  \nWith everything connected, start chatting with your agent on Telegram and watch it take intelligent action across your tool stack!\n","height":912,"width":784},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[0,0],"id":"d8a5e0de-e2ee-48ac-8157-c9ffff3bf57a","name":"Sticky Note"}],"connections":{"Telegram Trigger":{"main":[[{"node":"Switch","type":"main","index":0}]]},"Download Voice File":{"main":[[{"node":"Transcribe Audio","type":"main","index":0}]]},"Switch":{"main":[[{"node":"Download Voice File","type":"main","index":0}],[{"node":"Set 'Text'","type":"main","index":0}]]},"Set 'Text'":{"main":[[{"node":"Input","type":"main","index":0}]]},"Transcribe Audio":{"main":[[{"node":"Input","type":"main","index":0}]]},"GPT 4.1-mini":{"ai_languageModel":[[{"node":"AI Agent","type":"ai_languageModel","index":0}]]},"AI Agent":{"main":[[{"node":"Clean Up","type":"main","index":0}],[{"node":"Error Message","type":"main","index":0}]]},"Clean Up":{"main":[[{"node":"Append row in sheet","type":"main","index":0}]]},"Append row in sheet":{"main":[[{"node":"Response","type":"main","index":0}]]},"Think":{"ai_tool":[[{"node":"AI Agent","type":"ai_tool","index":0}]]},"Simple Memory":{"ai_memory":[[{"node":"AI Agent","type":"ai_memory","index":0}]]},"Input":{"main":[[{"node":"AI Agent","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":null,"pinData":{},"versionId":"3d00f671-2375-4c89-bba9-ade08c00c0ac","triggerCount":0,"tags":[],"shared":[{"createdAt":"2025-07-28T08:12:54.566Z","updatedAt":"2025-07-28T08:12:54.566Z","role":"workflow:owner","workflowId":"z69afATlJHxXsIl0","projectId":"WbfPHUYYKS2tiNNo","project":{"createdAt":"2025-05-03T06:49:18.088Z","updatedAt":"2025-05-03T06:52:24.837Z","id":"WbfPHUYYKS2tiNNo","name":"charlie phan <scottyphan08@gmail.com>","type":"personal","icon":null,"description":null}}]},{"createdAt":"2025-08-04T04:36:20.743Z","updatedAt":"2025-08-04T04:36:20.743Z","id":"Vf0WMB2fps8oIgcw","name":"Leveled Up RAG Agents (Reranking & Metadata)","active":false,"isArchived":false,"nodes":[{"parameters":{"operation":"download","fileId":{"__rl":true,"value":"16ahWlNwBvd53xFHA4UUh6EbkFd8ogxBv","mode":"list","cachedResultName":"Rules_of_Golf_Simplified.pdf","cachedResultUrl":"https://drive.google.com/file/d/16ahWlNwBvd53xFHA4UUh6EbkFd8ogxBv/view?usp=drivesdk"},"options":{}},"type":"n8n-nodes-base.googleDrive","typeVersion":3,"position":[944,960],"id":"f1bfbdd6-6160-4d47-bae3-69afe3cf1ee4","name":"Download File"},{"parameters":{"jsonMode":"expressionData","jsonData":"={{ $('Code').item.json.fullText }}","options":{"metadata":{"metadataValues":[{"name":"ruleNumber","value":"={{ $json.ruleNumber }}"}]}}},"type":"@n8n/n8n-nodes-langchain.documentDefaultDataLoader","typeVersion":1.1,"position":[1504,1104],"id":"9eb9ba44-336e-4293-b6ba-17e6223c8764","name":"Default Data Loader"},{"parameters":{"operation":"pdf","options":{}},"type":"n8n-nodes-base.extractFromFile","typeVersion":1,"position":[1088,960],"id":"ddae9b80-2e06-4158-ba73-f2bfb385fbe9","name":"Extract from File"},{"parameters":{"jsCode":"// n8n Code Node - Split Golf Rules\n// This code takes the input text and splits it into separate items for each rule\n\n// Get the input text from the first item\nconst inputText = $input.first().json.text;\n\n// Split the text by \"Rule\" pattern, keeping the \"Rule\" text with each section\nconst ruleSections = inputText.split(/(?=Rule \\d+)/);\n\n// Remove the first empty element (everything before the first \"Rule\")\nconst cleanedSections = ruleSections.filter(section => section.trim().startsWith('Rule'));\n\n// Create output items - one for each rule\nconst outputItems = cleanedSections.map((ruleText, index) => {\n  // Extract rule number from the text\n  const ruleMatch = ruleText.match(/Rule (\\d+)/);\n  const ruleNumber = ruleMatch ? ruleMatch[1] : (index + 1).toString();\n  \n  // Extract rule title (everything between \"Rule X –\" and the first numbered item)\n  const titleMatch = ruleText.match(/Rule \\d+ – (.+?)(?=\\n1\\.|\\n\\d+\\.)/);\n  const ruleTitle = titleMatch ? titleMatch[1].trim() : 'Unknown Rule';\n  \n  return {\n    json: {\n      ruleNumber: ruleNumber,\n      ruleTitle: ruleTitle,\n      fullText: ruleText.trim(),\n      originalIndex: index\n    }\n  };\n});\n\nreturn outputItems;"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1232,960],"id":"dcb133a2-b820-442d-8128-b0885d1c032b","name":"Code"},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.chatTrigger","typeVersion":1.1,"position":[768,112],"id":"bc6e4d6f-7f78-4846-bb76-3239560426d6","name":"When chat message received","webhookId":"79772045-628b-4cf6-b2ec-cecceca9fe24"},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenRouter","typeVersion":1,"position":[880,288],"id":"51c1a2bb-15ce-4e3e-96e7-783ed830f790","name":"GPT 4.1-mini"},{"parameters":{},"type":"@n8n/n8n-nodes-langchain.rerankerCohere","typeVersion":1,"position":[1568,240],"id":"f8fa63d2-ae8a-45b8-b4b5-aa1ae02097e9","name":"Reranker Cohere","credentials":{"cohereApi":{"id":"0vWl6ZkmTRIfVFv5","name":"CohereApi account"}}},{"parameters":{"mode":"insert","tableName":{"__rl":true,"value":"documents","mode":"list","cachedResultName":"documents"},"options":{"queryName":"match_documents"}},"type":"@n8n/n8n-nodes-langchain.vectorStoreSupabase","typeVersion":1.3,"position":[1360,960],"id":"51f1f798-cfcf-4012-8822-86b29e319e07","name":"Upload to Supabase"},{"parameters":{"mode":"retrieve-as-tool","toolDescription":"Use this tool to search the database","tableName":{"__rl":true,"value":"documents","mode":"list","cachedResultName":"documents"},"topK":20,"useReranker":true,"options":{}},"type":"@n8n/n8n-nodes-langchain.vectorStoreSupabase","typeVersion":1.3,"position":[1408,112],"id":"d52a5ee4-02e6-4869-95a3-a3e99c3845c0","name":"Supabase Vector Store","credentials":{"supabaseApi":{"id":"GwQHus8VDsBElGiE","name":"Supabase account localhost"}}},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenRouter","typeVersion":1,"position":[1136,752],"id":"cf81dd30-80c3-4413-9d82-d081e8b685b3","name":"GPT 4.1-mini1"},{"parameters":{},"type":"@n8n/n8n-nodes-langchain.rerankerCohere","typeVersion":1,"position":[1824,672],"id":"d510a40d-2175-4c73-96fc-8b79b2f0c343","name":"Reranker Cohere1"},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.embeddingsOpenAi","typeVersion":1.2,"position":[1664,672],"id":"11db3542-a483-4a93-802f-5ac341b0d515","name":"Embeddings OpenAI2"},{"parameters":{"mode":"retrieve-as-tool","toolDescription":"Use this tool to search the database","tableName":{"__rl":true,"value":"documents","mode":"list","cachedResultName":"documents"},"topK":20,"useReranker":true,"options":{"metadata":{"metadataValues":[{"name":"ruleNumber","value":"={{ $('Metadata Agent').item.json.output }}"}]}}},"type":"@n8n/n8n-nodes-langchain.vectorStoreSupabase","typeVersion":1.3,"position":[1664,528],"id":"664b231b-1418-47b5-b6a2-a62662130c46","name":"Supabase Vector Store1"},{"parameters":{"content":"# Vectorize Document w/ Metadata\n(this code node is set up for the golf rules PDF specifically)","height":440,"width":1000,"color":2},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[720,832],"id":"74a63ece-cd3e-4a1d-8945-d9a7b553110c","name":"Sticky Note"},{"parameters":{"content":"# RAG Agent\n","height":380,"width":620,"color":4},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[720,0],"id":"61e1b865-cfd4-4c96-87ba-595479598d50","name":"Sticky Note1"},{"parameters":{"content":"## Vector Store w/ Reranker\n","height":380,"width":380,"color":5},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[1344,0],"id":"6168d5d6-9183-400c-a4ba-ada05db77365","name":"Sticky Note2"},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.embeddingsOpenAi","typeVersion":1.2,"position":[1344,1104],"id":"52e60d88-5d13-4c38-b252-1b3e1e54cc6e","name":"Embeddings OpenAI1"},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.embeddingsOpenAi","typeVersion":1.2,"position":[1408,240],"id":"a65b7cb2-d60b-4e3f-bcfd-806fca646efb","name":"Embeddings OpenAI","credentials":{"openAiApi":{"id":"CsOoQ3We9I1h0rAL","name":"OpenAi account Real"}}},{"parameters":{"options":{"systemMessage":"=# Overview\nYour job is to understand the rule number that the human is requesting and output only the number.\n\n## Example\nInput - what's rule number 27?\nOutput - 27"}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":2,"position":[832,528],"id":"8c09746d-3622-43e7-bb7b-54d399973116","name":"Metadata Agent"},{"parameters":{"options":{"systemMessage":"=# Overview\nYou are an AI agent who is an expert at the rules of golf. You will receive a question from the human, and you must use your tool called \"Supabase Vector Store\" in order to retrieve information from the database to make sure you are answering the question accurately. "}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":2,"position":[960,112],"id":"49589336-2bfc-4a18-8fb6-9dda638b46ba","name":"RAG Agent"},{"parameters":{"promptType":"define","text":"={{ $('When chat message received').item.json.chatInput }}","options":{"systemMessage":"=# Overview\nYou are an AI agent who is an expert at the rules of golf. You will receive a question from the human, and you must use your tool called \"Supabase Vector Store\" in order to retrieve information from the database to make sure you are answering the question accurately. "}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":2,"position":[1248,528],"id":"0f339c62-e0a0-4d28-adbd-f3c7ae3cd8c8","name":"RAG Agent 2"},{"parameters":{"content":"# RAG Agent\n","height":400,"width":440,"color":4},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[1168,400],"id":"5a929e6b-eb06-4c4b-8d15-4367674c91a8","name":"Sticky Note3"},{"parameters":{"content":"## Vector Store w/ Reranker & Metadata\n","height":400,"width":380,"color":5},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[1600,400],"id":"f2fda86e-dfd0-435b-8154-67d94a4711ad","name":"Sticky Note4"},{"parameters":{"content":"# Metadata Agent\n","height":400,"width":440,"color":6},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[720,400],"id":"17283ff7-4a97-4f33-8cfd-1537e3257180","name":"Sticky Note5"},{"parameters":{},"type":"n8n-nodes-base.manualTrigger","typeVersion":1,"position":[800,960],"id":"6f5d58c1-0c96-4da6-b774-a9d2b89d871d","name":"Manual Trigger"},{"parameters":{"content":"# 🛠️ Setup Guide  \n**Author:** [Nate Herk](https://www.youtube.com/@nateherk)\n\nFollow the steps below to get your Retrieval-Augmented Generation (RAG) workflow up and running:\n\n### ✅ Step 1: Connect Your [Supabase](https://supabase.com/) Vector Store  \nEnsure your Supabase instance is ready and accessible. This will store your embedded documents with metadata.\nHere is a [video tutorial](https://youtu.be/JjBofKJnYIU) on setting that up.\n\n### ✅ Step 2: Connect Your [OpenAI](https://platform.openai.com/account/api-keys) Embeddings  \nUse the `text-embedding-3-small` or similar model for embedding your documents. Make sure your API key is active.\n\n### ✅ Step 3: Connect Your [OpenAI API Key](https://platform.openai.com/account/api-keys)  \nThis powers your embedding generation model. Add it via the HTTP Request node or a credential.\n\n### ✅ Step 4: Add Your [OpenRouter](https://openrouter.ai/) API Key  \nUse this for your main RAG agent—add your key via HTTP request or credential node.\n\n### ✅ Step 5: Connect a [Cohere](https://dashboard.cohere.com/api-keys) Re-Ranker  \nThe re-ranker improves answer quality. Add your API key for better relevance ranking on retrieved documents.\n\n### ✅ Step 6: Vectorize Documents with Metadata  \nEnsure your data ingestion process tags documents with meaningful metadata before vectorization. This helps with structured retrieval.\n\n### 💬 Final Step: Start Chatting  \nPrompt your agent and test the RAG flow end-to-end—watch it pull context-rich answers from your vector store.\n","height":800,"width":700},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[0,0],"id":"0d01e561-6a7a-4459-9c81-c69df0a2748e","name":"Sticky Note6"}],"connections":{"Download File":{"main":[[{"node":"Extract from File","type":"main","index":0}]]},"Default Data Loader":{"ai_document":[[{"node":"Upload to Supabase","type":"ai_document","index":0}]]},"Extract from File":{"main":[[{"node":"Code","type":"main","index":0}]]},"Code":{"main":[[{"node":"Upload to Supabase","type":"main","index":0}]]},"When chat message received":{"main":[[{"node":"RAG Agent","type":"main","index":0}]]},"GPT 4.1-mini":{"ai_languageModel":[[{"node":"RAG Agent","type":"ai_languageModel","index":0}]]},"Reranker Cohere":{"ai_reranker":[[{"node":"Supabase Vector Store","type":"ai_reranker","index":0}]]},"Supabase Vector Store":{"ai_tool":[[{"node":"RAG Agent","type":"ai_tool","index":0}]]},"GPT 4.1-mini1":{"ai_languageModel":[[{"node":"RAG Agent 2","type":"ai_languageModel","index":0},{"node":"Metadata Agent","type":"ai_languageModel","index":0}]]},"Reranker Cohere1":{"ai_reranker":[[{"node":"Supabase Vector Store1","type":"ai_reranker","index":0}]]},"Embeddings OpenAI2":{"ai_embedding":[[{"node":"Supabase Vector Store1","type":"ai_embedding","index":0}]]},"Supabase Vector Store1":{"ai_tool":[[{"node":"RAG Agent 2","type":"ai_tool","index":0}]]},"Embeddings OpenAI1":{"ai_embedding":[[{"node":"Upload to Supabase","type":"ai_embedding","index":0}]]},"Embeddings OpenAI":{"ai_embedding":[[{"node":"Supabase Vector Store","type":"ai_embedding","index":0}]]},"Metadata Agent":{"main":[[{"node":"RAG Agent 2","type":"main","index":0}]]},"Manual Trigger":{"main":[[{"node":"Download File","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":null,"pinData":{},"versionId":"e1b91571-b07e-4fa3-8c02-34a808655465","triggerCount":0,"tags":[],"shared":[{"createdAt":"2025-08-04T04:36:20.743Z","updatedAt":"2025-08-04T04:36:20.743Z","role":"workflow:owner","workflowId":"Vf0WMB2fps8oIgcw","projectId":"WbfPHUYYKS2tiNNo","project":{"createdAt":"2025-05-03T06:49:18.088Z","updatedAt":"2025-05-03T06:52:24.837Z","id":"WbfPHUYYKS2tiNNo","name":"charlie phan <scottyphan08@gmail.com>","type":"personal","icon":null,"description":null}}]},{"createdAt":"2025-08-19T06:55:05.521Z","updatedAt":"2025-08-26T06:05:59.099Z","id":"MBdJfZWugXXdARFB","name":"GPT OSS","active":false,"isArchived":true,"nodes":[{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.chatTrigger","typeVersion":1.3,"position":[-208,-128],"id":"d4be6791-b548-425c-9593-8b9382940353","name":"When chat message received","webhookId":"c4fe0adc-4ec7-4d90-830b-0a816eb1d9fb"},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":2.2,"position":[176,-192],"id":"792219ec-6b4f-43c7-af67-774c982c894c","name":"AI Agent"},{"parameters":{"model":"gpt-oss:latest","options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOllama","typeVersion":1,"position":[80,208],"id":"679997c8-1616-41ac-8b30-4750a16b9929","name":"Ollama Chat Model","credentials":{"ollamaApi":{"id":"SyWYISdp9guZoNay","name":"Ollama account"}}},{"parameters":{},"type":"@n8n/n8n-nodes-langchain.memoryBufferWindow","typeVersion":1.3,"position":[224,208],"id":"08b4a4a2-502a-40c9-9cb5-eea52fc8bc66","name":"Simple Memory"}],"connections":{"When chat message received":{"main":[[{"node":"AI Agent","type":"main","index":0}]]},"Ollama Chat Model":{"ai_languageModel":[[{"node":"AI Agent","type":"ai_languageModel","index":0}]]},"Simple Memory":{"ai_memory":[[{"node":"AI Agent","type":"ai_memory","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"758cb665-b047-4230-a2d3-5f672e744b09","triggerCount":0,"tags":[],"shared":[{"createdAt":"2025-08-19T06:55:05.521Z","updatedAt":"2025-08-19T06:55:05.521Z","role":"workflow:owner","workflowId":"MBdJfZWugXXdARFB","projectId":"WbfPHUYYKS2tiNNo","project":{"createdAt":"2025-05-03T06:49:18.088Z","updatedAt":"2025-05-03T06:52:24.837Z","id":"WbfPHUYYKS2tiNNo","name":"charlie phan <scottyphan08@gmail.com>","type":"personal","icon":null,"description":null}}]},{"createdAt":"2025-08-26T06:16:26.808Z","updatedAt":"2025-08-26T08:33:28.218Z","id":"ZRn81HWAm9JuCUIv","name":"n8n Backup Changes","active":false,"isArchived":false,"nodes":[{"parameters":{"rule":{"interval":[{"field":"hours"}]}},"id":"bb50dbdf-5265-4b80-9780-bbe2f231a5c9","name":"Schedule Trigger","type":"n8n-nodes-base.scheduleTrigger","position":[-992,240],"typeVersion":1.2},{"parameters":{"workflowId":{"__rl":true,"value":"ZRn81HWAm9JuCUIv","mode":"id"},"workflowInputs":{"mappingMode":"defineBelow","value":{"filePath":"{{ $('Set Workflow Path').item.json.filePath }}"},"matchingColumns":["filePath"],"schema":[{"id":"filePath","displayName":"filePath","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string"}],"attemptToConvertTypes":false,"convertFieldsToString":true},"options":{}},"id":"63482ca5-e16f-43ff-90a6-8b64488d40fa","name":"Get New Workflow Hash","type":"n8n-nodes-base.executeWorkflow","position":[-112,-64],"typeVersion":1.2,"alwaysOutputData":false},{"parameters":{"workflowId":{"__rl":true,"mode":"list","value":"ZRn81HWAm9JuCUIv","cachedResultName":"n8n Backup Changes"},"workflowInputs":{"value":{"filePath":"={{ $('Set Workflow Path').item.json.filePath }}"},"schema":[{"id":"filePath","type":"string","display":true,"removed":false,"required":false,"displayName":"filePath","defaultMatch":false,"canBeUsedToMatch":true}],"mappingMode":"defineBelow","matchingColumns":["filePath"],"attemptToConvertTypes":false,"convertFieldsToString":true},"options":{}},"id":"7a7a739d-b583-4937-befe-1dad93b4544c","name":"Get Old Workflow Hash","type":"n8n-nodes-base.executeWorkflow","position":[-560,144],"typeVersion":1.2,"alwaysOutputData":true,"onError":"continueRegularOutput"},{"parameters":{"fileSelector":"={{ $('Set Workflow Path').item.json.filePath }}","options":{}},"id":"85bd414e-ef8b-44e7-9c0a-b17e65ad2da3","name":"Read Workflow Data","type":"n8n-nodes-base.readWriteFile","position":[336,144],"typeVersion":1},{"parameters":{"assignments":{"assignments":[{"id":"c60cce2a-609d-417e-a73c-9719a490cc85","name":"filePath","type":"string","value":"/data/shared/WorkFlowBackup.json"}]},"options":{}},"id":"f87929f2-681d-4599-ae9d-ac4e67be20f2","name":"Set Workflow Path","type":"n8n-nodes-base.set","position":[-784,144],"typeVersion":3.4},{"parameters":{"command":"=n8n export:workflow --all --output={{ $('Set Workflow Path').item.json.filePath }}"},"id":"1a3f1613-5bdd-4b1e-9ca0-0b0bc0e6a180","name":"Execute Workflow Backup","type":"n8n-nodes-base.executeCommand","position":[-336,144],"typeVersion":1,"alwaysOutputData":true},{"parameters":{"fileSelector":"={{ $json.filePath }}","options":{}},"id":"8b86809f-d0e1-40ba-9e70-764a5eb485d8","name":"Read File","type":"n8n-nodes-base.readWriteFile","position":[-784,-128],"typeVersion":1},{"parameters":{"operation":"text","options":{}},"id":"c7c55b6e-12f8-4d48-98e7-9e2c72cfbede","name":"Extract Data","type":"n8n-nodes-base.extractFromFile","position":[-560,-128],"typeVersion":1},{"parameters":{"type":"SHA256","value":"={{$json.data}}","dataPropertyName":"hash"},"id":"b56ec5ff-30bc-4942-a66d-f707c043650b","name":"Hash Data","type":"n8n-nodes-base.crypto","position":[-336,-128],"typeVersion":1},{"parameters":{"workflowInputs":{"values":[{"name":"filePath"}]}},"id":"9d5beec5-c534-4450-9ffd-78115a401797","name":"Hash Maker","type":"n8n-nodes-base.executeWorkflowTrigger","position":[-992,-128],"typeVersion":1.1},{"parameters":{"operation":"text","options":{}},"id":"838b85d7-79f9-4783-96ed-19479821f7b8","name":"Extract Workflow Data","type":"n8n-nodes-base.extractFromFile","position":[544,144],"typeVersion":1},{"parameters":{"resource":"file","owner":{"__rl":true,"value":"=vananhphan","mode":"url"},"repository":{"__rl":true,"value":"=https://github.com/vananhphan/n8n_project","mode":"url"},"filePath":"={{ \"backups/WorkFlow Backup \" + new Date($now).toISOString().replace('T', ' ').slice(0, 16) + \".json\" }}","fileContent":"={{ $json.data }}","commitMessage":"={{ \"WorkFlow Backup \" + new Date($now).toISOString().replace('T', ' ').slice(0, 16) }}"},"id":"44f9504f-0aff-4b11-afe0-8ed8f7d7f295","name":"GitHub Workflow Backup","type":"n8n-nodes-base.github","position":[768,144],"webhookId":"ccf2ad35-62aa-4e3e-9811-ea6d7fca0aba","typeVersion":1.1,"credentials":{"githubApi":{"id":"04ftghVaK1lFgfKg","name":"GitHub account"}},"onError":"continueRegularOutput"},{"parameters":{"workflowId":{"__rl":true,"value":"ZRn81HWAm9JuCUIv","mode":"id"},"workflowInputs":{"value":{"filePath":"={{ $('Set Credential Path').item.json.filePath }}"},"schema":[{"id":"filePath","type":"string","display":true,"removed":false,"required":false,"displayName":"filePath","defaultMatch":false,"canBeUsedToMatch":true}],"mappingMode":"defineBelow","matchingColumns":["filePath"],"attemptToConvertTypes":false,"convertFieldsToString":true},"options":{}},"id":"79981b71-902a-4ba2-9778-4f84977788b0","name":"Get New Credential Hash","type":"n8n-nodes-base.executeWorkflow","position":[-112,352],"typeVersion":1.2,"alwaysOutputData":false},{"parameters":{"workflowId":{"__rl":true,"mode":"list","value":"ZRn81HWAm9JuCUIv","cachedResultName":"n8n Backup Changes"},"workflowInputs":{"value":{"filePath":"={{ $('Set Credential Path').item.json.filePath }}"},"schema":[{"id":"filePath","type":"string","display":true,"removed":false,"required":false,"displayName":"filePath","defaultMatch":false,"canBeUsedToMatch":true}],"mappingMode":"defineBelow","matchingColumns":["filePath"],"attemptToConvertTypes":false,"convertFieldsToString":true},"options":{}},"id":"aa379b81-a50e-42b6-994e-6f360917c26a","name":"Get Old Credential Hash","type":"n8n-nodes-base.executeWorkflow","position":[-560,352],"typeVersion":1.2,"alwaysOutputData":true,"onError":"continueRegularOutput"},{"parameters":{"fileSelector":"={{ $('Set Credential Path').item.json.filePath }}","options":{}},"id":"51f0ca9a-dd48-453d-8db9-a8ab3dc70487","name":"Read Credential Data","type":"n8n-nodes-base.readWriteFile","position":[336,352],"typeVersion":1},{"parameters":{"assignments":{"assignments":[{"id":"c60cce2a-609d-417e-a73c-9719a490cc85","name":"filePath","type":"string","value":"/data/shared/CredentialBackup.json"}]},"options":{}},"id":"17e6caad-e449-4180-bf5a-2dc0e5692017","name":"Set Credential Path","type":"n8n-nodes-base.set","position":[-784,352],"typeVersion":3.4},{"parameters":{"command":"=n8n export:credentials --all --output={{ $('Set Credential Path').item.json.filePath }}"},"id":"3a256b18-360a-4658-a28a-6ad7b3594908","name":"Execute Credential Backup","type":"n8n-nodes-base.executeCommand","position":[-336,352],"typeVersion":1,"alwaysOutputData":true},{"parameters":{"operation":"text","options":{}},"id":"8a795653-b8d7-4a1e-904b-c2ef090af3ca","name":"Extract Credential Data","type":"n8n-nodes-base.extractFromFile","position":[544,352],"typeVersion":1},{"parameters":{"resource":"file","owner":{"__rl":true,"value":"=vananhphan","mode":"url"},"repository":{"__rl":true,"value":"=https://github.com/vananhphan/n8n_project","mode":"url"},"filePath":"={{ \"backups/ Credential Backup \" + new Date($now).toISOString().replace('T', ' ').slice(0, 16) + \".json\" }}","fileContent":"={{ $json.data }}","commitMessage":"={{ \" Credential Backup \" + new Date($today).toISOString().replace('T', ' ').slice(0, 16) }}"},"id":"c3023ab8-a44c-403b-bdab-bc1d60189518","name":"GitHub Credential Backup","type":"n8n-nodes-base.github","position":[768,352],"webhookId":"ccf2ad35-62aa-4e3e-9811-ea6d7fca0aba","typeVersion":1.1,"credentials":{"githubApi":{"id":"04ftghVaK1lFgfKg","name":"GitHub account"}},"onError":"continueRegularOutput"},{"parameters":{"conditions":{"options":{"version":2,"leftValue":"","caseSensitive":true,"typeValidation":"strict"},"combinator":"and","conditions":[{"id":"c028ce1d-3fe9-4dc9-a3e9-296460e12c83","operator":{"type":"string","operation":"notEquals"},"leftValue":"={{ $('Get New Workflow Hash').item.json.hash }}","rightValue":"={{ $('Get Old Workflow Hash').item.json.hash }}"}]},"options":{}},"id":"610957b1-548f-4944-b082-8dc54d3b573f","name":"If Workflow Updated","type":"n8n-nodes-base.if","position":[96,-32],"typeVersion":2.2},{"parameters":{"conditions":{"options":{"version":2,"leftValue":"","caseSensitive":true,"typeValidation":"strict"},"combinator":"and","conditions":[{"id":"c028ce1d-3fe9-4dc9-a3e9-296460e12c83","operator":{"type":"string","operation":"notEquals"},"leftValue":"={{ $('Get New Credential Hash').item.json.hash }}","rightValue":"={{ $('Get Old Credential Hash').item.json.hash }}"}]},"options":{}},"id":"f5012115-a1c6-4792-9905-9751ede198dc","name":"If Credential Updated","type":"n8n-nodes-base.if","position":[112,352],"typeVersion":2.2}],"connections":{"Read File":{"main":[[{"node":"Extract Data","type":"main","index":0}]]},"Hash Maker":{"main":[[{"node":"Read File","type":"main","index":0}]]},"Extract Data":{"main":[[{"node":"Hash Data","type":"main","index":0}]]},"Schedule Trigger":{"main":[[{"node":"Set Workflow Path","type":"main","index":0},{"node":"Set Credential Path","type":"main","index":0}]]},"Set Workflow Path":{"main":[[{"node":"Get Old Workflow Hash","type":"main","index":0}]]},"Read Workflow Data":{"main":[[{"node":"Extract Workflow Data","type":"main","index":0}]]},"If Workflow Updated":{"main":[[],[]]},"Set Credential Path":{"main":[[{"node":"Get Old Credential Hash","type":"main","index":0}]]},"Read Credential Data":{"main":[[{"node":"Extract Credential Data","type":"main","index":0}]]},"Extract Workflow Data":{"main":[[{"node":"GitHub Workflow Backup","type":"main","index":0}]]},"Get New Workflow Hash":{"main":[[]]},"Get Old Workflow Hash":{"main":[[{"node":"Execute Workflow Backup","type":"main","index":0}]]},"If Credential Updated":{"main":[[{"node":"Read Credential Data","type":"main","index":0}],[{"node":"Read Credential Data","type":"main","index":0}]]},"Execute Workflow Backup":{"main":[[{"node":"Read Workflow Data","type":"main","index":0}]]},"Extract Credential Data":{"main":[[{"node":"GitHub Credential Backup","type":"main","index":0}]]},"Get New Credential Hash":{"main":[[{"node":"If Credential Updated","type":"main","index":0}]]},"Get Old Credential Hash":{"main":[[{"node":"Execute Credential Backup","type":"main","index":0}]]},"Execute Credential Backup":{"main":[[{"node":"Get New Credential Hash","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"febb66e9-19e6-44d7-80bd-c2a8cbce5679","triggerCount":0,"tags":[],"shared":[{"createdAt":"2025-08-26T06:16:26.808Z","updatedAt":"2025-08-26T06:16:26.808Z","role":"workflow:owner","workflowId":"ZRn81HWAm9JuCUIv","projectId":"WbfPHUYYKS2tiNNo","project":{"createdAt":"2025-05-03T06:49:18.088Z","updatedAt":"2025-05-03T06:52:24.837Z","id":"WbfPHUYYKS2tiNNo","name":"charlie phan <scottyphan08@gmail.com>","type":"personal","icon":null,"description":null}}]}]